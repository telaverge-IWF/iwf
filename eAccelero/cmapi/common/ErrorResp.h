/* ********************************-*-C-*-************************************
 * *                                                                          *
 * *          Copyright 2012 Diametriq, LLC All Rights Reserved.              *
 * *            Manufactured in the United States of America.                 *
 * *      1990 W. New Haven Ste. 303, Melbourne, Florida, 32904 U.S.A.        *
 * *                                                                          *
 * *   This product and related documentation is protected by copyright and   *
 * *   distributed under licenses restricting its use, copying, distribution  *
 * *   and decompilation.  No part of this product or related documentation   *
 * *   may be reproduced in any form by any means without prior written       *
 * *   authorization of Diametriq and its licensors, if any.                  *
 * *                                                                          *
 * *   RESTRICTED RIGHTS LEGEND:  Use, duplication, or disclosure by the      *
 * *   government is subject to restrictions as set forth in subparagraph     *
 * *   (c)(1)(ii) of the Rights in Technical Data and Computer Software       *
 * *   clause at DFARS 252.227-7013 and FAR 52.227-19.                        *
 * *                                                                          *
 * ****************************************************************************/

#ifndef __ERROR_RESP_H__
#define __ERROR_RESP_H__

#define ERR_START_PEER_CONFIG 1
#define MAX_ERROR_PEER_CONFIG 10
#define ERR_START_MOD_PEER MAX_ERROR_PEER_CONFIG+1
#define MAX_ERROR_MOD_PEER 20
#define ERR_START_SET_PEER MAX_ERROR_MOD_PEER+1
#define MAX_ERROR_SET_PEER 30
#define ERR_START_ADD_DICTID MAX_ERROR_SET_PEER+1
#define MAX_ERROR_ADD_DICTID 40
#define ERR_START_SET_PEERSTATUS MAX_ERROR_ADD_DICTID+1
#define MAX_ERROR_SET_PEERSTATUS 50
#define ERR_START_MOD_HOST MAX_ERROR_SET_PEERSTATUS+1
#define MAX_ERROR_MOD_HOST 60
#define ERR_START_SET_AUTHTIMERS MAX_ERROR_MOD_HOST+1
#define MAX_ERROR_SET_AUTHTIMERS 70
#define ERR_START_SET_HOSTIP MAX_ERROR_SET_AUTHTIMERS+1
#define MAX_ERROR_SET_HOSTIP 80
#define ERR_START_SET_ACCTTIMERS MAX_ERROR_SET_HOSTIP+1
#define MAX_ERROR_SET_ACCTTIMERS 90
#define ERR_START_SET_HOST MAX_ERROR_SET_ACCTTIMERS+1
#define MAX_ERROR_SET_HOST 100
#define ERR_START_DEL_PEER MAX_ERROR_SET_HOST+1
#define MAX_ERROR_DEL_PEER 110
#define ERR_START_DEL_DICTID MAX_ERROR_DEL_PEER+1
#define MAX_ERROR_DEL_DICTID 120
#define ERR_START_DEL_ALTPEER MAX_ERROR_DEL_DICTID+1
#define MAX_ERROR_DEL_ALTPEER 130
#define ERR_START_MOD_REALM MAX_ERROR_DEL_ALTPEER+1
#define MAX_ERROR_MOD_REALM 140
#define ERR_START_SET_REALM MAX_ERROR_MOD_REALM+1
#define MAX_ERROR_SET_REALM 150
#define ERR_START_SET_DEST MAX_ERROR_SET_REALM+1
#define MAX_ERROR_SET_DEST 160
#define ERR_START_MOD_DEST MAX_ERROR_SET_DEST+1
#define MAX_ERROR_MOD_DEST 170
#define ERR_START_ENBPXYIAVP MAX_ERROR_MOD_DEST+1
#define MAX_ERROR_ENBPXYIAVP 180
#define ERR_START_DISPXYIAVP MAX_ERROR_ENBPXYIAVP+1
#define MAX_ERROR_DISPXYIAVP 190
#define ERR_START_MOD_DEFROUTE MAX_ERROR_DISPXYIAVP+1
#define MAX_ERROR_MOD_DEFROUTE 200
#define ERR_START_SET_DEFROUTE MAX_ERROR_MOD_DEFROUTE+1
#define MAX_ERROR_SET_DEFROUTE 210
#define ERR_START_DEL_REALM MAX_ERROR_SET_DEFROUTE+1
#define MAX_ERROR_DEL_REALM 220
#define ERR_START_DEL_DEST MAX_ERROR_DEL_REALM+1
#define MAX_ERROR_DEL_DEST 230
#define ERR_START_DEL_DEFROUTE MAX_ERROR_DEL_DEST+1
#define MAX_ERROR_DEL_DEFROUTE 240
#define ERR_START_ADD_PEERGROUP MAX_ERROR_DEL_DEFROUTE+1
#define MAX_ERROR_ADD_PEERGROUP 250
#define ERR_START_MOD_PEERGROUP MAX_ERROR_ADD_PEERGROUP+1
#define MAX_ERROR_MOD_PEERGROUP 260
#define ERR_START_DEL_PEERGROUP MAX_ERROR_MOD_PEERGROUP+1
#define MAX_ERROR_DEL_PEERGROUP 270
#define ERR_START_ADD_PEERCONFIG MAX_ERROR_DEL_PEERGROUP+1
#define MAX_ERROR_ADD_PEERCONFIG 280
#define ERR_START_MOD_PEERCONFIG MAX_ERROR_ADD_PEERCONFIG+1
#define MAX_ERROR_MOD_PEERCONFIG 290
#define ERR_START_DEL_PEERCONFIG MAX_ERROR_MOD_PEERCONFIG+1
#define MAX_ERROR_DEL_PEERCONFIG 300
#define ERR_START_GET_PEERGROUP MAX_ERROR_DEL_PEERCONFIG+1
#define MAX_ERROR_GET_PEERGROUP 310
#define ERR_START_GET_PEERCONFIG MAX_ERROR_GET_PEERGROUP+1
#define MAX_ERROR_GET_PEERCONFIG 320
#define ERR_START_GET_LBALGO MAX_ERROR_GET_PEERCONFIG+1
#define MAX_ERROR_GET_LBALGO 330
#define ERR_START_GET_PEER MAX_ERROR_GET_LBALGO+1
#define MAX_ERROR_GET_PEER 340
#define ERR_START_GET_REALMOFPEER MAX_ERROR_GET_PEER+1
#define MAX_ERROR_GET_REALMOFPEER 350
#define ERR_START_GET_REALM MAX_ERROR_GET_REALMOFPEER+1
#define MAX_ERROR_GET_REALM 360
#define ERR_START_GET_DEST MAX_ERROR_GET_REALM+1
#define MAX_ERROR_GET_DEST 370
#define ERR_START_GET_DEFROUTE MAX_ERROR_GET_DEST+1
#define MAX_ERROR_GET_DEFROUTE 380
#define ERR_START_GET_HOST MAX_ERROR_GET_DEFROUTE+1
#define MAX_ERROR_GET_HOST 390
#define ERR_START_CONFIG_COMMON_ERROR MAX_ERROR_GET_HOST+1
#define MAX_ERROR_CONFIG_COMMON_ERROR 430
#define ERR_START_DEFROUTE MAX_ERROR_CONFIG_COMMON_ERROR+1
#define MAX_ERROR_DEFROUTE 440
#define ERR_START_HOST MAX_ERROR_DEFROUTE+1
#define MAX_ERROR_HOST 450
#define ERR_START_DEST ERR_START_HOST+1
#define MAX_ERROR_DEST 460
#define ERR_START_REALM MAX_ERROR_DEST+1
#define MAX_ERROR_REALM 470
#define ERR_START_USER_AUTHENTICATION MAX_ERROR_REALM+1
#define MAX_ERROR_USER_AUTHENTICATION 480
#define ERR_START_ADDLBALGO MAX_ERROR_USER_AUTHENTICATION+1
#define MAX_ERROR_ADDLBALGO 490
#define ERR_START_MODLBALGO MAX_ERROR_ADDLBALGO+1
#define MAX_ERROR_MODLBALGO 500
#define ERR_START_LBALGO MAX_ERROR_MODLBALGO+1
#define MAX_ERROR_LBALGO 510
#define ERR_START_PEERGROUP MAX_ERROR_LBALGO+1
#define MAX_ERROR_PEERGROUP 520
#define ERR_START_PEERCONFIG MAX_ERROR_PEERGROUP+1
#define MAX_ERROR_PEERCONFIG 530
#define ERR_START_DELLBALGO MAX_ERROR_PEERCONFIG+1
#define MAX_ERROR_DELLBALGO 540
#define ERR_START_GET_AVAMGR MAX_ERROR_DELLBALGO+1
#define MAX_ERROR_GET_AVAMGR 550
#define ERR_START_SET_AVAMGR MAX_ERROR_GET_AVAMGR+1
#define MAX_ERROR_SET_AVAMGR 560
#define ERR_START_GET_LOGCONFIG MAX_ERROR_SET_AVAMGR+1
#define MAX_ERROR_GET_LOGCONFIG 570
#define ERR_START_SET_LOGCONFIG MAX_ERROR_GET_LOGCONFIG+1
#define MAX_ERROR_SET_LOGCONFIG 580
#define ERR_START_MOD_LOGCONFIG MAX_ERROR_SET_LOGCONFIG+1
#define MAX_ERROR_MOD_LOGCONFIG 590
#define ERR_START_GET_DICTID MAX_ERROR_MOD_LOGCONFIG+1
#define MAX_ERROR_GET_DICTID 600
#define ERR_START_DEL_HOST MAX_ERROR_GET_DICTID+1
#define MAX_ERROR_DEL_HOST 610
#define ERR_START_GET_USER MAX_ERROR_DEL_HOST+1
#define MAX_ERROR_GET_USER 620
#define ERR_START_ADD_USER MAX_ERROR_GET_USER+1
#define MAX_ERROR_ADD_USER 630
#define ERR_START_MOD_USER MAX_ERROR_ADD_USER+1
#define MAX_ERROR_MOD_USER 640
#define ERR_START_DEL_USER MAX_ERROR_MOD_USER+1
#define MAX_ERROR_DEL_USER 650
#define ERR_START_DEL_TRACING MAX_ERROR_DEL_USER+1
#define MAX_ERROR_DEL_TRACING 660
#define ERR_START_MOD_TRACING MAX_ERROR_DEL_TRACING+1
#define MAX_ERROR_MOD_TRACING 670
#define ERR_START_SET_TRACING MAX_ERROR_MOD_TRACING+1
#define MAX_ERROR_SET_TRACING 680
#define ERR_START_GET_TRACING MAX_ERROR_SET_TRACING+1
#define MAX_ERROR_GET_TRACING 690
#define ERR_START_ENABLE_TRACING MAX_ERROR_GET_TRACING+1
#define MAX_ERROR_ENABLE_TRACING 700
#define ERR_START_SET_TRASNPORTCONFIG MAX_ERROR_ENABLE_TRACING+1
#define MAX_ERROR_SET_TRASNPORTCONFIG 710
#define ERR_START_ERROR_TRASNPORTCONFIG MAX_ERROR_SET_TRASNPORTCONFIG+1
#define MAX_ERROR_ERROR_TRASNPORTCONFIG 720
#define ERR_START_DEL_TRASNPORTCONFIG MAX_ERROR_ERROR_TRASNPORTCONFIG+1
#define MAX_ERROR_DEL_TRASNPORTCONFIG 730
#define ERR_START_SET_ASFCONFIG MAX_ERROR_DEL_TRASNPORTCONFIG+1
#define MAX_ERROR_SET_ASFCONFIG 740
#define ERR_START_MOD_ASFCONFIG MAX_ERROR_SET_ASFCONFIG+1
#define MAX_ERROR_MOD_ASFCONFIG 750
#define ERR_START_GET_ASFCONFIG MAX_ERROR_MOD_ASFCONFIG+1
#define MAX_ERROR_GET_ASFCONFIG 760
#define ERR_START_ERROR_ASFCONFIG MAX_ERROR_GET_ASFCONFIG+1
#define MAX_ERROR_ERROR_ASFCONFIG 770
#define ERR_START_DEL_ASFCONFIG MAX_ERROR_ERROR_ASFCONFIG+1
#define MAX_ERROR_DEL_ASFCONFIG 780
#define ERR_START_SET_ASFRESPTIME MAX_ERROR_DEL_ASFCONFIG+1
#define MAX_ERROR_SET_ASFRESPTIME 790
#define ERR_START_GET_ASFRESPTIME MAX_ERROR_SET_ASFRESPTIME+1
#define MAX_ERROR_GET_ASFRESPTIME 800
#define ERR_START_GET_SCTPCONFIG MAX_ERROR_GET_ASFRESPTIME+1
#define MAX_ERROR_GET_SCTPCONFIG 810
#define ERR_START_TRACING_CONFIG MAX_ERROR_GET_SCTPCONFIG+1
#define MAX_ERROR_TRACING_CONFIG 810
#define ERR_START_GET_TRUSTEDCA MAX_ERROR_TRACING_CONFIG+1
#define MAX_ERROR_GET_TRUSTEDCA 820
#define ERR_START_GET_STACKGENERAL MAX_ERROR_GET_TRUSTEDCA+1
#define MAX_ERROR_GET_STACKGENERAL 830
#define ERR_START_GET_TLSCONFIG MAX_ERROR_GET_STACKGENERAL+1
#define MAX_ERROR_GET_TLSCONFIG 840
#define ERR_START_GET_CIPHERSUITE MAX_ERROR_GET_TLSCONFIG+1
#define MAX_ERROR_GET_CIPHERSUITE 850
#define ERR_START_SET_SCTPCONFIG MAX_ERROR_GET_CIPHERSUITE+1
#define MAX_ERROR_SET_SCTPCONFIG 860
#define ERR_START_SET_STACKGENERAL MAX_ERROR_SET_SCTPCONFIG+1
#define MAX_ERROR_SET_STACKGENERAL 860
#define ERR_START_SET_TLSCONFIG MAX_ERROR_SET_STACKGENERAL+1
#define MAX_ERROR_SET_TLSCONFIG 870
#define ERR_START_ADD_TRUSTEDCA MAX_ERROR_SET_TLSCONFIG+1
#define MAX_ERROR_ADD_TRUSTEDCA 880
#define ERR_START_MOD_TRUSTEDCA MAX_ERROR_ADD_TRUSTEDCA+1
#define MAX_ERROR_MOD_TRUSTEDCA 890
#define ERR_START_DEL_TRUSTEDCA MAX_ERROR_MOD_TRUSTEDCA+1
#define MAX_ERROR_DEL_TRUSTEDCA 900
#define ERR_START_MOD_CIPHERSUITE MAX_ERROR_DEL_TRUSTEDCA+1
#define MAX_ERROR_MOD_CIPHERSUITE 910
#define ERR_START_ERR_TRUSTEDCA MAX_ERROR_MOD_CIPHERSUITE+1
#define MAX_ERROR_ERR_TRUSTEDCA 920
#define ERR_START_DEL_HOSTMULTIHOMINGCONFIG MAX_ERROR_ERR_TRUSTEDCA+1
#define MAX_ERROR_DEL_HOSTMULTIHOMINGCONFIG 930
#define ERR_START_ADD_HOSTMULTIHOMINGCONFIG MAX_ERROR_DEL_HOSTMULTIHOMINGCONFIG+1
#define MAX_ERROR_ADD_HOSTMULTIHOMINGCONFIG 940
#define ERR_START_INTERFACE_STATS MAX_ERROR_ERR_TRUSTEDCA+1
#define MAX_ERROR_INTERFACE_STATS 950
#define ERR_START_PEER_ADD_MULTIHOMINGCONFIG MAX_ERROR_INTERFACE_STATS+1
#define MAX_ERROR_PEER_ADD_MULTIHOMINGCONFIG 960
#define ERR_START_PEER_DEL_MULTIHOMINGCONFIG MAX_ERROR_PEER_ADD_MULTIHOMINGCONFIG+1
#define MAX_ERROR_PEER_DEL_MULTIHOMINGCONFIG 970
#define ERR_START_AVAMGR_SWITCHOVER MAX_ERROR_PEER_DEL_MULTIHOMINGCONFIG+1
#define MAX_ERROR_AVAMGR_SWITCHOVER 980
#define ERR_START_GET_STATIC_ROUTING MAX_ERROR_AVAMGR_SWITCHOVER+1
#define MAX_ERROR_GET_STATIC_ROUTING 990
#define ERR_START_MOD_STATIC_ROUTING MAX_ERROR_GET_STATIC_ROUTING+1
#define MAX_ERROR_MOD_STATIC_ROUTING 1000
#define ERR_START_ADD_STATIC_ROUTING MAX_ERROR_MOD_STATIC_ROUTING+1
#define MAX_ERROR_ADD_STATIC_ROUTING 1010
#define ERR_START_DEL_STATIC_ROUTING MAX_ERROR_ADD_STATIC_ROUTING+1
#define MAX_ERROR_DEL_STATIC_ROUTING 1020
#define ERR_START_ERR_STATIC_ROUTING MAX_ERROR_DEL_STATIC_ROUTING+1
#define MAX_ERROR_ERR_STATIC_ROUTING 1030
#define ERR_START_ERR_REALM_TEMPLATE MAX_ERROR_ERR_STATIC_ROUTING+1
#define MAX_ERROR_ERR_REALM_TEMPLATE 1040
#define ERR_START_ADD_REALM_TEMPLATE MAX_ERROR_ERR_REALM_TEMPLATE +1
#define MAX_ERROR_ADD_REALM_TEMPLATE 1050
#define ERR_START_MOD_REALM_TEMPLATE MAX_ERROR_ADD_REALM_TEMPLATE +1
#define MAX_ERROR_MOD_REALM_TEMPLATE 1060
#define ERR_START_DEL_REALM_TEMPLATE MAX_ERROR_MOD_REALM_TEMPLATE +1
#define MAX_ERROR_DEL_REALM_TEMPLATE 1070
#define ERR_START_ERR_PEER_TEMPLATE MAX_ERROR_DEL_REALM_TEMPLATE +1
#define MAX_ERROR_ERR_PEER_TEMPLATE 1080
#define ERR_START_ADD_PEER_TEMPLATE MAX_ERROR_ERR_PEER_TEMPLATE +1
#define MAX_ERROR_ADD_PEER_TEMPLATE 1090
#define ERR_START_MOD_PEER_TEMPLATE MAX_ERROR_ADD_PEER_TEMPLATE +1
#define MAX_ERROR_MOD_PEER_TEMPLATE 1100
#define ERR_START_DEL_PEER_TEMPLATE MAX_ERROR_MOD_PEER_TEMPLATE +1
#define MAX_ERROR_DEL_PEER_TEMPLATE 1110
#define ERR_START_GET_PEER_TEMPLATE MAX_ERROR_DEL_PEER_TEMPLATE +1
#define MAX_ERROR_GET_PEER_TEMPLATE 1120
#define ERR_START_GET_REALM_TEMPLATE MAX_ERROR_GET_PEER_TEMPLATE +1
#define MAX_ERROR_GET_REALM_TEMPLATE 1130
#define ERR_START_GET_THF MAX_ERROR_GET_REALM_TEMPLATE +1
#define MAX_ERROR_GET_THF 1140
#define ERR_START_GET_THF_REALM MAX_ERROR_GET_THF+1
#define MAX_ERROR_GET_THF_REALM 1150
#define ERR_START_GET_THF_VHOST MAX_ERROR_GET_THF_REALM+1
#define MAX_ERROR_GET_THF_VHOST 1160
#define ERR_START_ADD_THF_VHOST MAX_ERROR_GET_THF_VHOST+1
#define MAX_ERROR_ADD_THF_VHOST 1170
#define ERR_START_DEL_THF_VHOST MAX_ERROR_ADD_THF_VHOST+1
#define MAX_ERROR_DEL_THF_VHOST 1180
#define ERR_START_ADD_THF_REALM MAX_ERROR_DEL_THF_VHOST+1
#define MAX_ERROR_ADD_THF_REALM 1190
#define ERR_START_DEL_THF_REALM MAX_ERROR_ADD_THF_REALM+1
#define MAX_ERROR_DEL_THF_REALM 1200
#define ERR_START_SET_THF MAX_ERROR_DEL_THF_REALM+1
#define MAX_ERROR_SET_THF 1210
#define ERR_START_MOD_PEER_EXT MAX_ERROR_SET_THF+1
#define MAX_ERROR_MOD_PEER_EXT 1230
#define ERR_START_MYSQL_TABLE_LOCK MAX_ERROR_MOD_PEER_EXT+1
#define MAX_ERROR_MYSQL_TABLE_LOCK 1240
#define ERR_START_ADD_ROLE MAX_ERROR_MYSQL_TABLE_LOCK+1
#define MAX_ERROR_ADD_ROLE 1250
#define ERR_START_ADD_ROLEPRIVILEGE_MAPPING MAX_ERROR_ADD_ROLE+1
#define MAX_ERROR_ADD_ROLEPRIVILEGE_MAPPING 1260
#define ERR_START_MOD_ROLE MAX_ERROR_ADD_ROLEPRIVILEGE_MAPPING+1
#define MAX_ERROR_MOD_ROLE 1270
#define ERR_START_DEL_ROLEPRIVILEGE_MAPPING MAX_ERROR_MOD_ROLE+1
#define MAX_ERROR_DEL_ROLEPRIVILEGE_MAPPING 1280
#define ERR_START_DEL_ROLE MAX_ERROR_DEL_ROLEPRIVILEGE_MAPPING+1
#define MAX_ERROR_DEL_ROLE 1290
#define ERR_START_MOD_EMAILCONTENT MAX_ERROR_DEL_ROLE+1
#define MAX_ERROR_MOD_EMAILCONTENT 1300
#define ERR_START_MOD_EMAILSERVER MAX_ERROR_MOD_EMAILCONTENT+1
#define MAX_ERROR_MOD_EMAILSERVER 1310
#define ERR_START_DEL_EMAILSERVER MAX_ERROR_MOD_EMAILSERVER+1
#define MAX_ERROR_DEL_EMAILSERVER 1320
#define ERR_START_GET_EMAILCONTENT MAX_ERROR_DEL_EMAILSERVER+1
#define MAX_ERROR_GET_EMAILCONTENT 1330
#define ERR_START_GET_EMAILSERVER MAX_ERROR_GET_EMAILCONTENT+1
#define MAX_ERROR_GET_EMAILSERVER 1340
#define ERR_START_GET_ROLE MAX_ERROR_GET_EMAILSERVER+1
#define MAX_ERROR_GET_ROLE 1350
#define ERR_START_GET_PREVILEGE MAX_ERROR_GET_ROLE+1
#define MAX_ERROR_GET_PREVILEGE 1360
#define ERR_START_GET_PREVILEGE_MAPPING MAX_ERROR_GET_PREVILEGE+1
#define MAX_ERROR_GET_PREVILEGE_MAPPING 1370
#define ERR_START_SET_PEER_EXTENDED MAX_ERROR_GET_PREVILEGE_MAPPING+1
#define MAX_ERROR_SET_PEER_EXTENDED 1380
#define ERR_PEER_ERRORS_EXT2 MAX_ERROR_SET_PEER_EXTENDED+1
#define MAX_ERROR_ERRORS_EXT2 1390
#define ERR_START_DYNAMIC_PLUGINS MAX_ERROR_ERRORS_EXT2+1
#define MAX_DYNAMIC_PLUGINS_ERRORS 1400
#define ERR_START_SET_DYN_DICTIONARY_PROVISIONING MAX_DYNAMIC_PLUGINS_ERRORS+1
#define MAX_ERROR_SET_DYN_DICTIONARY_PROVISIONING 1410
#define ERR_START_SET_TRANSFORM_PLUGIN MAX_ERROR_SET_DYN_DICTIONARY_PROVISIONING +1
#define MAX_ERROR_SET_TRANSFORM_PLUGIN 1420
#define ERR_START_GET_TRANSFORM_PLUGIN MAX_ERROR_SET_TRANSFORM_PLUGIN+1
#define MAX_ERROR_GET_TRANSFORM_PLUGIN 1430
#define ERR_START_CONFIG_COMMON_ERROR_EXT2 MAX_ERROR_GET_TRANSFORM_PLUGIN+1
#define MAX_ERROR_CONFIG_COMMON_ERROR_EXT2 1440
#define ERR_START_CONFIG_COMMON_ERROR_EXT MAX_ERROR_GET_TRANSFORM_PLUGIN+1
#define MAX_ERROR_CONFIG_COMMON_ERROR_EXT 1450
#define ERR_START_GET_ACTION_TRIGGER MAX_ERROR_CONFIG_COMMON_ERROR_EXT+1
#define MAX_ERROR_GET_ACTION_TRIGGER 1460
#define ERR_START_GET_CMFLEVEL MAX_ERROR_GET_ACTION_TRIGGER+1
#define MAX_ERROR_GET_CMFLEVEL 1470
#define ERR_START_GET_CMFRULE MAX_ERROR_GET_CMFLEVEL+1
#define MAX_ERROR_GET_CMFRULE 1480
#define ERR_START_ADD_CMFRULE MAX_ERROR_GET_CMFRULE+1
#define MAX_ERROR_ADD_CMFRULE 1490
#define ERR_START_MOD_CMFRULE MAX_ERROR_ADD_CMFRULE+1
#define MAX_ERROR_MOD_CMFRULE 1500
#define ERR_START_DEL_CMFRULE MAX_ERROR_MOD_CMFRULE+1
#define MAX_ERROR_DEL_CMFRULE 1510
#define ERR_START_SET_CMD_PRIORITY MAX_ERROR_DEL_CMFRULE+1
#define MAX_ERROR_SET_CMD_PRIORITY 1520
#define ERR_START_SET_APP_PRIORITY MAX_ERROR_SET_CMD_PRIORITY+1
#define MAX_ERROR_SET_APP_PRIORITY 1530
#define ERR_START_GET_CMFTRIGGER MAX_ERROR_SET_APP_PRIORITY+1
#define MAX_ERROR_GET_CMFTRIGGER 1540
#define ERR_START_GET_CMFACTION MAX_ERROR_GET_CMFTRIGGER+1
#define MAX_ERROR_GET_CMFACTION 1550
#define ERR_START_GET_ALARM_INFO MAX_ERROR_GET_CMFACTION+1
#define MAX_ERROR_GET_ALARM_INFO 1560
#define ERR_START_ADD_DIA_PRIORITY MAX_ERROR_GET_CMFACTION+1
#define MAX_ERROR_ADD_DIA_PRIORITY 1570
#define ERR_START_MOD_DIA_PRIORITY MAX_ERROR_ADD_DIA_PRIORITY+1
#define MAX_ERROR_MOD_DIA_PRIORITY 1580
#define ERR_START_DEL_DIA_PRIORITY MAX_ERROR_MOD_DIA_PRIORITY+1
#define MAX_ERROR_DEL_DIA_PRIORITY 1590
#define ERR_START_GET_DIA_PRIORITY MAX_ERROR_DEL_DIA_PRIORITY+1
#define MAX_ERROR_GET_DIA_PRIORITY 1600
#define ERR_START_GET_CMF_TRIGGER_STATES MAX_ERROR_GET_DIA_PRIORITY+1
#define MAX_ERR_GET_CMF_TRIGGER_STATES 1610
#define ERR_START_DEL_PEER_EXT MAX_ERR_GET_CMF_TRIGGER_STATES+1
#define MAX_ERR_DEL_PEER_EXT 1620
#define ERR_START_GET_SDTF_RULES MAX_ERR_DEL_PEER_EXT+1
#define MAX_ERROR_GET_SDTF_RULES 1630
#define ERR_START_ADD_SDTF_RULES MAX_ERROR_GET_SDTF_RULES+1
#define MAX_ERROR_ADD_SDTF_RULES 1640
#define ERR_START_MOD_SDTF_RULES MAX_ERROR_ADD_SDTF_RULES+1
#define MAX_ERROR_MOD_SDTF_RULES 1650
#define ERR_START_DEL_SDTF_RULES MAX_ERROR_MOD_SDTF_RULES+1
#define MAX_ERROR_DEL_SDTF_RULES 1660
#define ERR_START_SET_SDTF_RULE_STATUS MAX_ERROR_DEL_SDTF_RULES+1
#define MAX_ERROR_SET_SDTF_RULE_STATUS 1670
#define ERR_START_SDTF_RULES_GEN_ERR MAX_ERROR_SET_SDTF_RULE_STATUS+1
#define MAX_ERROR_SDTF_RULES_GEN_ERR 1680
#define ERR_START_GET_SDTF_FEATURE_STATUS MAX_ERROR_SDTF_RULES_GEN_ERR+1
#define MAX_ERROR_GET_SDTF_FEATURE_STATUS 1690
#define ERR_START_SET_SDTF_FEATURE_STATUS MAX_ERROR_GET_SDTF_FEATURE_STATUS+1
#define MAX_ERROR_SET_SDTF_FEATURE_STATUS 1700
#define ERR_START_GET_LOCAL_TRANSPORTTAG MAX_ERROR_SET_SDTF_FEATURE_STATUS+1
#define MAX_ERROR_GET_LOCAL_TRANSPORTTAG 1800
#define ERR_START_SET_LOCAL_TRANSPORTTAG MAX_ERROR_GET_LOCAL_TRANSPORTTAG+1
#define MAX_ERROR_SET_LOCAL_TRANSPORTTAG 1900

enum MYSQL_AQUIRE_TABLE_LOCK_ERROR{
	GET_LOCK_ERR_TABLE_MAP_NOT_CREATED = ERR_START_MYSQL_TABLE_LOCK,
	GET_LOCK_ERR_DB_ERROR,
	GET_LOCK_ERR_RESOURSE_BUSY,

    //Add any other errors in between as required.
	MYSQL_AQUIRE_TABLE_LOCK_MAX_ERROR = MAX_ERROR_MYSQL_TABLE_LOCK
};

enum CONFIG_COMMON_ERRORS {
    CONFIG_COMMON_ERR_NO_INPUT_PARAMS = ERR_START_CONFIG_COMMON_ERROR,
    CONFIG_COMMON_ERR_GENERIC_ERROR,
    CONFIG_COMMON_ERR_DB_CONNECTION_FAILED,
    CONFIG_COMMON_ERR_DB_CONNECTION_REESTABLISH,
    CONFIG_COMMON_ERR_RESPONSE_HAS_NO_PARAMS,
    CONFIG_COMMON_ERR_STATS_GENERIC_ERROR,
    CONFIG_COMMON_ERR_STATS_RESET_GENERIC_ERROR,
    CONFIG_COMMON_ERR_FAIL_TO_GET_CONN_FROM_CONN_POOL,
    CONFIG_COMMON_ERR_CMAPI_CONDVAR_TIMEOUT,
    //Warning: Don't add any more error here
    CONFIG_COMMON_ERR_MAX_ERROR = MAX_ERROR_CONFIG_COMMON_ERROR
};

enum CONFIG_COMMON_ERRORS_EXT2 {
    CONFIG_COMMON_MESS_NOT_READY,
    CONFIG_COMMON_ERR_HOSTNAME_NOT_SET,
    CONFIG_COMMON_ERR_REQUEST_ID_NOT_SET,
    CONFIG_COMMON_ERR_REQUEST_ID_NOT_DEFINED,
    CONFIG_COMMON_ERR_NODE_STATUS_NOT_AVAILABLE,
    CONFIG_COMMON_NOT_ALLOWED_IN_STANDBY,
    //warning : Dont add any more error here
    CONFIG_COMMON_ERR_MAX_ERROR_EXT2 = MAX_ERROR_CONFIG_COMMON_ERROR_EXT2
};

enum PEER_CONFIG_ERRORS {
    ERR_MANDATORY_PARAM_PEERNAME_MISSING=ERR_START_PEER_CONFIG,
    ERR_MANDATORY_PARAM_REALMNAME_MISSING,
    //Add any other errors in between as required.
    PEER_CONFIG_ERR_MAX_ERROR = MAX_ERROR_PEER_CONFIG
};

enum MOD_PEER_ERRORS {
    MOD_PEER_ERR_PEER_REALM_NOT_PRESENT = ERR_START_MOD_PEER,
    MOD_PEER_ERR_PEER_NOT_PRESENT,
    MOD_PEER_ERR_TIMERS_NOT_PRESENT,
    MOD_PEER_ERR_NO_INPUT_PARAMS_PROVIDED,
    MOD_PEER_ERR_DB_ERROR,
    MOD_PEER_ERR_TIMERS_FAILED_DB_ERROR,
    MOD_PEER_ERR_PEER_STATICALLY_CONFIGURED,
    MOD_PEER_ERR_PEER_IN_OPEN_STATE,
    MOD_PEER_ERR_PEER_MAX_SEC_IPS_CONFIGURED,
    //Warning: Don't add any more error here
    MOD_PEER_ERR_MAX_ERROR = MAX_ERROR_MOD_PEER
};

enum MOD_PEER_ERRORS_EXT {
    MOD_PEER_CONFIGURED_ALL_THE_TRANSPORTS_DURING_STARTUP = ERR_START_MOD_PEER_EXT,
    MOD_PEER_SECURE_PORT_NOT_SUPPORTED_FOR_SCTP,
    MOD_PEER_ERR_PEER_TEMPLATE_NOT_PRESENT,
    MOD_PEER_ERR_PEER_STATE_IS_ENABLED,
    MOD_PEER_ERR_IP_AND_PORT_ALREADY_PRESENT,
    MOD_PEER_ERR_IP_AND_SECUREPORT_ALREADY_PRESENT,
    MOD_PEER_ERR_PRIMARYIP_CONFLICT_WITH_SECONDARYIP,
    MOD_PEER_ERR_ALT_PEER_NOT_PRESENT,
    MOD_PEER_ERR_ALT_PEER_SAME_AS_CONFIGURED_PEER,
    //Warning: Don't add any more error here
    MOD_PEER_ERRORS_MAX_EXT = MAX_ERROR_MOD_PEER_EXT
};
enum MOD_PEER_ERRORS_EXT2{
    MOD_PEER_ERR_PEER_SOURCEPORT_CONFLICTING_WITH_LOCALHOST_PORT_OR_SECUREPORT = ERR_PEER_ERRORS_EXT2,
    MOD_PEER_ERR_PEER_DICTIONARY_IS_DISABLED,
    MOD_PEER_ERR_MORE_THAN_ONE_DICTIONARY_VERSION_FOR_INTERFACE,
    MOD_PEER_ERR_SECURE_PORT_TLS_NOT_ENABLED,
    MOD_PEER_CONFIG_PEER_IN_CLOSING_STATE,
    MOD_PEER_ERR_TRANSPORT_TAG_NOT_PRESENT,

    //Add any other errors in between as required.
    MOD_PEER_ERRORS_MAX_EXT2 = MAX_ERROR_ERRORS_EXT2
};

enum SET_PEER_ERRORS {
    SET_PEER_ERR_PEER_REALM_ALREADY_EXISTS = ERR_START_SET_PEER,
    SET_PEER_ERR_TIMERS_FAILED_DB_ERROR,
    SET_PEER_ERR_IP_AND_PORT_ALREADY_PRESENT,
    SET_PEER_ERR_DB_ERROR,
    SET_PEER_ERR_ALT_PEER_NOT_PRESENT,
    SET_PEER_ERR_ALT_PEER_FIRST_PEER,
    SET_PEER_ERR_MAX_TRANSPORTS_REACHED,
    SET_PEER_SECURE_PORT_NOT_SUPPORTED_FOR_SCTP,
    SET_PEER_ERR_IP_AND_SECUREPORT_ALREADY_PRESENT,
    //Add any other errors in between as required.
    SET_PEER_ERR_MAX_ERROR = MAX_ERROR_SET_PEER
};

enum SET_PEER_ERRORS_EXTENDED{
    SET_PEER_SECURE_PORT_TLS_NOT_ENABLED = ERR_START_SET_PEER_EXTENDED,
    SET_PEER_ERR_PEER_TEMPLATE_NOT_PRESENT,
    SET_PEER_ERR_TRANSPORT_TAG_NOT_PRESENT,
    SET_PEER_ERR_ALT_PEER_SAME_AS_CONFIGURED_PEER,
    SET_PEER_ERR_IP_ALREADY_CONFIGURED_WITHOUT_PORT,
    SET_PEER_ERR_PEER_SOURCEPORT_CONFLICTING_WITH_LOCALHOST_PORT_OR_SECUREPORT,
    SET_PEER_ERR_PEER_DICTIONARY_IS_DISABLED,
    SET_PEER_ERR_MORE_THAN_ONE_DICTIONARY_VERSION_FOR_INTERFACE,
    //Add any other errors in between as required.
    SET_PEER_ERR_EXTENDED_MAX_ERROR = MAX_ERROR_SET_PEER_EXTENDED
};

enum ADD_SECONDARYIP_ERRORS {
    ADD_SECONDARY_ERR_IP_ALREADY_ASSOCIATED = ERR_START_PEER_ADD_MULTIHOMINGCONFIG,
    ADD_SECONDARYIP_ERR_DB_ERROR,
    ADD_SECONDARYIP_ERR_PEER_NOT_PRESENT,
    ADD_SECONDARY_ERR_IP_MAX_COUNT_REACHED,
    ADD_SECONDARY_ERR_IP_CONFLICT_WITH_PEERIP
};
enum ADD_DICTID_ERRORS {
    ADD_DICTID_ERR_MANDATORY_PARAM_DICT_NAME_MISSING=ERR_START_ADD_DICTID,
    ADD_DICTID_ERR_DICTNAME_ALREADY_ASSOCIATED,
    ADD_DICTID_ERR_DB_ERROR,
    ADD_DICTID_ERR_INVALID_DICTNAME,
    ADD_DICTID_ERR_DICTNAME_MAX_COUNT_REACHED,
    ADD_DICTID_ERR_LOAD_DICTIONARY_FAILED,
    ADD_DICTID_ERR_INVALID_DICT_COUNT,
    ADD_DICTID_ERR_PEER_NOT_PRESENT,
    //Add any other errors in between as required.
    ADD_DICTID_ERR_MAX_ERROR = MAX_ERROR_ADD_DICTID
};

enum SET_PEERSTATUS_ERRORS {
    SET_PEERSTATUS_ERR_MANDATORY_PARAM_PEERNAME_MISSING = ERR_START_SET_PEERSTATUS,
    SET_PEERSTATUS_ERR_MANDATORY_PARAM_REALMNAME_MISSING,
    SET_PEERSTATUS_ERR_PEER_NOT_PRESENT,
    SET_PEERSTATUS_ERR_DB_ERROR,
    SET_PEERSTATUS_ERR_PEER_NOT_IN_CLOSED_STATE,
    SET_PEERSTATUS_ERR_DISC_FAIL_SENDING_DPR_FAILED,
    SET_PEERSTATUS_ERR_DISC_FAIL_PEER_IN_CLOSED_STATE,
    //Add any other errors in between as required.
    SET_PEERSTATUS_ERR_MAX_ERROR = MAX_ERROR_SET_PEERSTATUS
};

enum MOD_HOST_ERRORS {
    MOD_HOST_ERR_MANDATORY_PARAM_REALMNAME_MISSING = ERR_START_MOD_HOST,
    MOD_HOST_ERR_MANDATORY_PARAM_HOSTNAME_MISSING,
    MOD_HOST_ERR_HOST_NOT_PRESENT,
    MOD_HOST_ERR_DB_ERROR,
    //Add any other errors in between as required.
    MOD_HOST_ERR_MAX_ERROR= MAX_ERROR_MOD_HOST
};

enum SET_AUTHTIMERS_ERRORS {
};

enum SET_HOSTIP_ERRORS {
};

enum SET_ACCTTIMERS_ERRORS {
};

enum SET_HOST_ERRORS {
    SET_HOST_ERR_MANDATORY_PARAM_REALMNAME_MISSING = ERR_START_SET_HOST,
    SET_HOST_ERR_MANDATORY_PARAM_HOSTNAME_MISSING,
    SET_HOST_ERR_HOST_ALREADY_PRESENT,
    SET_HOST_ERR_DB_ERROR,
    //Add any other errors in between as required.
    SET_HOST_ERR_MAX_ERROR= MAX_ERROR_SET_HOST
};

enum HOST_CONFIG_ERRORS {
    ERR_HOST_MANDATORY_PARAM_REALMNAME_MISSING = ERR_START_HOST,
    ERR_HOST_MANDATORY_PARAM_HOSTNAME_MISSING,
    ERR_HOST_DB_ERROR,
    //Add any other errors in between as required.
    ERR_HOST_MAX_ERROR= MAX_ERROR_HOST
};



enum DEL_PEER_ERRORS {
    DEL_PEER_ERR_PEER_NOT_IN_CLOSED_STATE=ERR_START_DEL_PEER,
    DEL_PEER_ERR_PEER_CONFIGURED_IN_FILE,
    DEL_PEER_ERR_PEER_NOT_PRESENT,
    DEL_PEER_ERR_TIMER_NOT_PRESENT,
    DEL_PEER_ERR_PEER_IN_REALM_AS_DESTINATION,
    DEL_PEER_ERR_DB_ERROR,
    DEL_PEER_ERR_TIMERS_FAILED_DB_ERROR,
    DEL_PEER_ERR_USED_AS_ALTERNATE_PEER,
    DEL_PEER_ERR_PEER_STATE_IS_ENABLED,
    //Dont add any new error.
    DEL_PEER_ERR_MAX_ERROR= MAX_ERROR_DEL_PEER
};

enum DEL_PEER_ERR_EXT {
    DEL_PEER_ERR_PEER_PRESENT_IN_PEER_GROUP = ERR_START_DEL_PEER_EXT,
    //Add any other errors in between as required.
    DEL_PEER_ERR_EXT_MAX_ERROR = MAX_ERR_DEL_PEER_EXT
};

enum DEL_DICTID_ERRORS {
    DEL_DICTID_ERR_NOT_ASSOCIATED_WITH_PEER = ERR_START_DEL_DICTID,
    DEL_DICTID_ERR_DB_ERROR,
    DEL_DICTID_ERR_INVALID_DICTNAME,
    DEL_DICTID_ERR_PEER_NOT_PRESENT,
    DEL_DICTID_LAST_DICTIONARY_ENTRY,
    DEL_DICTID_ERR_MAX_ERROR = MAX_ERROR_DEL_DICTID
};

enum DEL_SECONDARYIP_ERRORS {
    DEL_SECONDARYIP_ERR_NOT_ASSOCIATED_WITH_PEER = ERR_START_PEER_DEL_MULTIHOMINGCONFIG,
    DEL_SECONDARYIP_ERR_DB_ERROR,
    DEL_SECONDARYIP_ERR_PEER_NOT_IN_CLOSED_STATE,
    DEL_SECONDARYIP_ERR_UNKNOWN_PEER,
    DEL_SECONDARYIP_ERR_NOT_ALL_PARAMETERS_PRESENT
};

enum DEL_HOST_ERRORS {
    DEL_HOST_ERR_DB_ERROR = ERR_START_DEL_HOST,
    DEL_HOST_LAST_TRANSPORT_ENTRY,
    DEL_HOST_ERR_DEFAULT_ROW,
    DEL_HOST_ERR_MAX_ERROR = MAX_ERROR_DEL_HOST
};


enum DEL_ALTPEER_ERRORS {
	DEL_ALTPEER_ERR_PEER_NOT_PRESENT = ERR_START_DEL_ALTPEER,
	DEL_ALTPEER_ERR_DB_ERROR,
	DEL_ALTPEER_ERR_ALTPEER_NOT_CONFIGURED,
	DEL_ALTPEER_ERR_MANDATORY_PARAMS_MISSING,
    DEL_ALTPEER_ERR_PEER_STATUS_IS_ENABLED,
	DEL_ALTPEER_ERR_MAX_ERROR = MAX_ERROR_DEL_ALTPEER
};

enum MOD_REALM_ERRORS {
	MOD_REALM_ERR_CANNOT_MODIFY_REALM = ERR_START_MOD_REALM,
	MOD_REALM_ERR_REALM_NOT_PRESENT,
	MOD_REALM_ERR_INVALID_REALM_NAME,
	MOD_REALM_ERR_DB_ERROR,
	MOD_REALM_ERR_MANDATORY_PARAM_MISSING,
	MOD_REALM_ERR_NO_PARAMS_PASSED,
	MOD_REALM_ERR_REALM_IS_NOT_PRESENT,
	MOD_REALM_ERR_REALM_TEMPLATE_NOT_PRESENT,
	MOD_REALM_ERR_MAX_ERROR = MAX_ERROR_MOD_REALM
};

enum SET_REALM_ERRORS {
	SET_REALM_ERR_INVALID_REALM = ERR_START_SET_REALM,
	SET_REALM_ERR_REALM_ALREADY_ADDED,
	SET_REALM_ERR_DB_ERROR,
	SET_REALM_ERR_MANDATORY_PARAM_REALMNAME_MISSING,
	SET_REALM_ERR_REALM_ALREADY_PRESENT,
    SET_REALM_ERR_REALM_TEMPLATE_NOT_PRESENT,
	SET_REALM_ERR_MAX_ERROR = MAX_ERROR_SET_REALM
};


enum REALM_CONFIG_ERRORS {
	ERR_REALM_INVALID_REALM = ERR_START_REALM,
	ERR_REALM_REALM_ALREADY_ADDED,
	ERR_REALM_DB_ERROR,
	ERR_REALM_MANDATORY_PARAM_REALMNAME_MISSING,
	ERR_REALM_REALM_ALREADY_PRESENT,
	ERR_REALM_MAX_ERROR = MAX_ERROR_REALM
};


enum SET_DEST {
	SET_DEST_ERR_REALM_NOT_PRESENT = ERR_START_SET_DEST,
    SET_DEST_ERR_PEER_NOT_PRESENT,
	SET_DEST_ERR_MAX_NO_OF_DEST_PER_REALM_REACHED,
	SET_DEST_ERR_DEST_ALREADY_EXISTS,
	SET_DEST_ERR_INVALID_PEER_NAME,
	SET_DEST_ERR_DB_ERROR,
	SET_DEST_ERR_MANDATORY_PARAM_REALMNAME_MISSING,
	SET_DEST_ERR_MANDATORY_PARAM_APPID_MISSING,
	SET_DEST_ERR_MANDATORY_PARAM_PEERNAME_MISSING,
	SET_DEST_ERR_MAX_ERROR = MAX_ERROR_SET_DEST
};


enum ERR_DEST {
	ERR_DEST_REALM_NOT_PRESENT = ERR_START_DEST,
	ERR_DEST_MAX_NO_OF_DEST_PER_REALM_REACHED,
	ERR_DEST_DEST_ALREADY_EXISTS,
	ERR_DEST_INVALID_PEER_NAME,
	ERR_DEST_DB_ERROR,
	ERR_DEST_MANDATORY_PARAM_REALMNAME_MISSING,
	ERR_DEST_MANDATORY_PARAM_APPID_MISSING,
	ERR_DEST_MANDATORY_PARAM_PEERNAME_MISSING,
	ERR_DEST_MAX_ERROR = MAX_ERROR_DEST
};

enum MOD_DEST {
	MOD_DEST_ERR_MANDATORY_PARAM_MISSING = ERR_START_MOD_DEST,
	MOD_DEST_ERR_NO_PARAMS_PASSED,
	MOD_DEST_ERR_DEST_TO_MODIFY_NOT_PRESENT,
	MOD_DEST_ERR_DB_ERROR,
    MOD_DEST_ERR_REALM_NOT_PRESENT,
    MOD_DEST_ERR_PEER_NOT_PRESENT,
	MOD_DEST_ERR_MAX_ERROR = MAX_ERROR_MOD_DEST
};

enum ENBPXYIAVP {
    ENBPXYIAVP_ERR_CANNOT_CHANGE_PROXY_INFO = ERR_START_ENBPXYIAVP,
    ENBPXYIAVP_ERR_REALM_ENTRY_NOT_FOUND,
    ENBPXYIAVP_ERR_DB_ERROR,
    ENBPXYIAVP_ERR_MAX_ERROR = MAX_ERROR_ENBPXYIAVP
};

enum DISPXYIAVP {
    DISPXYIAVP_ERR_CANNOT_CHANGE_PROXY_INFO = ERR_START_DISPXYIAVP,
    DISPXYIAVP_ERR_REALM_ENTRY_NOT_FOUND,
    DISPXYIAVP_ERR_DB_ERROR,
    DISPXYIAVP_ERR_MAX_ERROR = MAX_ERROR_DISPXYIAVP
};

enum MOD_DEFROUTE {
    MOD_DEFROUTE_ERR_REALM_DEST_ALREADY_EXISTS = ERR_START_MOD_DEFROUTE,
    MOD_DEFROUTE_ERR_DB_ERROR,
    MOD_DEFROUTE_ERR_MANDATORY_PARAM_MISSING,
    MOD_DEFROUTE_ERR_NO_FIELD_IS_SET_FOR_MODIFICATION,
    MOD_DEFROUTE_ERR_RECORD_NOT_PRESENT,
    MOD_DEFROUTE_ERR_MAX_ERROR = MAX_ERROR_MOD_DEFROUTE
};

enum SET_DEFROUTE {
    SET_DEFROUTE_ERR_REALM_DEST_ALREADY_EXISTS = ERR_START_SET_DEFROUTE,
    SET_DEFROUTE_ERR_DB_ERROR,
    SET_DEFROUTE_ERR_REALM_NOT_PRESENT,
    SET_DEFROUTE_ERR_PEER_NOT_PRESENT,
    SET_DEFROUTE_ERR_MANDATORY_PARAM_REALMNAME_MISSING,
    SET_DEFROUTE_ERR_MAX_ERROR = MAX_ERROR_SET_DEFROUTE
};


enum ERR_DEFROUTE {
    ERR_DEFROUTE_REALM_DEST_ALREADY_EXISTS = ERR_START_DEFROUTE,
    ERR_DEFROUTE_DB_ERROR,
    ERR_DEFROUTE_MANDATORY_PARAM_REALMNAME_MISSING,
    ERR_DEFROUTE_MANDATORY_PARAM_HOSTNAME_MISSING,
    ERR_DEFROUTE_MAX_ERROR = MAX_ERROR_DEFROUTE
};

enum DEL_REALM {
    DEL_REALM_ERR_CANNOT_MODIFY_REALM_IN_XML = ERR_START_DEL_REALM,
    DEL_REALM_ERR_REALM_NOT_PRESENT,
    DEL_REALM_ERR_DB_ERROR,
    DEL_REALM_ERR_PART_OF_DCCA_CONFIG,
    DEL_REALM_ERR_CANNOT_DEL_SINCE_DESTS_PRESENT,
    DEL_REALM_ERR_REALM_IS_NOT_PRESENT,
    DEL_REALM_ERR_REALM_USED_AS_OTHERREALM_IN_TOPOLOGY,
    DEL_REALM_ERR_REALM_USED_AS_TARGETREALM_IN_TOPOLOGY,
    DEL_REALM_ERR_PART_OF_TRANSLATOR_RULE_CONFIG,
    DEL_REALM_ERR_MAX_ERROR = MAX_ERROR_DEL_REALM
};

enum DEL_DEST {
    DEL_DEST_ERR_INVALID_REALM_NAME = ERR_START_DEL_DEST,
    DEL_DEST_ERR_DB_ERROR,
    DEL_DEST_ERR_DEST_IS_NOT_IN_REALM,
    DEL_DEST_ERR_COMB_APPID_VENDID_PRIORITY_NOT_FOUND,
    DEL_DEST_ERR_REALM_NOT_PRESENT,
    DEL_DEST_ERR_PEER_NOT_PRESENT,
    DEL_DEST_ERR_MAX_ERROR = MAX_ERROR_DEL_DEST
};

enum DEL_DEFROUTE {
    DEL_DEFROUTE_ERR_DB_ERROR = ERR_START_DEL_DEFROUTE,
    DEL_DEFROUTE_ERR_DEF_ROUTE_NOT_PRESENT,
    DEL_DEFROUTE_ERR_MAX_ERROR = MAX_ERROR_DEL_DEFROUTE
};

enum ADD_PEERGROUP {
    ADD_PEERGROUP_ERR_DB_ERROR = ERR_START_ADD_PEERGROUP,
    ADD_PEERGROUP_ERR_LBALGO_INVALID,
    ADD_PEERGROUP_ERR_MANDATORY_PEERGROUPNAME_MISSING,
    ADD_PEERGROUP_ERR_PEER_GROUP_ALREADY_PRESENT,
    ADD_PEERGROUP_ERR_RESULT_CODE_NOT_PRESENT,
    ADD_PEERGROUP_ERR_RESULT_CODE_NOT_ALLOWED,
    ADD_PEERGROUP_ERR_LBALGO_NOT_PROVIDED,
    ADD_PEERGROUP_ERR_MAX_ERROR = MAX_ERROR_ADD_PEERGROUP
};


enum ERR_PEERGROUP {
    ERR_PEERGROUP_DB_ERROR = ERR_START_PEERGROUP,
    ERR_PEERGROUP_MANDATORY_PEERGROUPNAME_MISSING,
    ERR_PEERGROUP_PEER_GROUP_ALREADY_PRESENT,
    ERR_PEERGROUP_MAX_ERROR = MAX_ERROR_PEERGROUP
};


enum DEL_LBALGO{
    DEL_LBALGO_ERR_DB_ERROR = ERR_START_DELLBALGO,
    DEL_LBALGO_ERR_LBMETHOD_DOESNT_EXIST,
    DEL_LBALGO_ERR_MAX_ERROR = MAX_ERROR_DELLBALGO
};

enum ADD_LBALGO {
    ADD_LBALGO_ERR_DB_ERROR = ERR_START_ADDLBALGO,
    ADD_LBALGO_ERR_MANDATORY_LBMETHOD_MISSING,
    ADD_LBALGO_ERR_LBALGO_ALREADY_PRESENT,
    ADD_LBALGO_ERR_MAX_ERROR = MAX_ERROR_ADDLBALGO
};

enum MOD_LBALGO {
    MOD_LBALGO_ERR_DB_ERROR = ERR_START_MODLBALGO,
    MOD_LBALGO_ERR_MANDATORY_LBMETHOD_MISSING,
    MOD_LBALGO_ERR_LBALGO_NOT_PRESENT,
    MOD_LBALGO_ERR_MAX_ERROR = MAX_ERROR_MODLBALGO
};

enum ERR_LBALGO {
    ERR_LBALGO_DB_ERROR = ERR_START_LBALGO,
    ERR_LBALGO_MANDATORY_LBMETHOD_MISSING,
    ERR_LBALGO_PEER_GROUP_NOT_PRESENT,
    ERR_LBALGO_MAX_ERROR = MAX_ERROR_LBALGO
};

enum MOD_PEERGROUP {
    MOD_PEERGROUP_ERR_DB_ERROR = ERR_START_MOD_PEERGROUP,
    MOD_PEERGROUP_ERR_LBALGO_INVALID,
    MOD_PEERGROUP_ERR_MANDATORY_PARAM_MISSING,
    MOD_PEERGROUP_ERR_PEER_GROUP_DOESNT_EXIST,
    MOD_PEERGROUP_ERR_RESULT_CODE_NOT_PRESENT,
    MOD_PEERGROUP_ERR_RESULT_CODE_NOT_ALLOWED,
    MOD_PEERGROUP_EN_REJECT_ERR_PEERS_ARE_ASSOCIATED_WITH_PEER_GROUP,
    MOD_PEERGROUP_ERR_MAX_ERROR = MAX_ERROR_MOD_PEERGROUP
};

enum DEL_PEERGROUP {
    DEL_PEERGROUP_ERR_DB_ERROR = ERR_START_DEL_PEERGROUP,
    DEL_PEERGROUP_ERR_LBALGO_INVALID,
    DEL_PEERGROUP_ERR_PEER_GROUP_DOESNT_EXIST,
    DEL_PEERGROUP_ERR_MAX_ERROR = MAX_ERROR_DEL_PEERGROUP
};

enum ADD_PEERCONFIG {
    ADD_PEERCONFIG_ERR_PEER_GROUP_DOESNT_EXIST = ERR_START_ADD_PEERCONFIG,
    ADD_PEERCONFIG_ERR_PEER_DOESNT_EXIST,
    ADD_PEERCONFIG_ERR_MANDATORY_PARAM_MISSING,
    ADD_PEERCONFIG_ERR_DB_ERROR,
    ADD_PEERCONFIG_ERR_PEER_WITH_REALM_ALREADY_PRESENT_IN_GROUP,
    ADD_PEERCONFIG_ERR_CONFLICT_WITH_SOURCEPORT_TRANSPORT_TYPE,
    ADD_PEERCONFIG_ERR_REJECT_REQUEST_IS_ENABLED,
    ADD_PEERCONFIG_ERR_MAX_ERROR = MAX_ERROR_ADD_PEERCONFIG
};

enum MOD_PEERCONFIG {
    MOD_PEERCONFIG_ERR_PEER_GROUP_DOESNT_EXIST = ERR_START_MOD_PEERCONFIG,
    MOD_PEERCONFIG_ERR_PEER_DOESNT_EXIST,
    MOD_PEERCONFIG_ERR_MANDATORY_PARAM_MISSING,
    MOD_PEERCONFIG_ERR_DB_ERROR,
    MOD_PEERCONFIG_ERR_PEER_WITH_REALM_NOT_PRESENT_IN_GROUP,
    MOD_PEERCONFIG_ERR_CONFLICT_WITH_SOURCEPORT_TRANSPORT_TYPE,
    MOD_PEERCONFIG_ERR_MAX_ERROR = MAX_ERROR_MOD_PEERCONFIG
};


enum ERR_PEERCONFIG {
    ERR_PEERCONFIG_PEER_GROUP_DOESNT_EXIST = ERR_START_PEERCONFIG,
    ERR_PEERCONFIG_PEER_DOESNT_EXIST,
    ERR_PEERCONFIG_MANDATORY_PEERGROUP_MISSING,
    ERR_PEERCONFIG_MANDATORY_PEER_MISSING,
    ERR_PEERCONFIG_MANDATORY_REALM_MISSING,
    ERR_PEERCONFIG_DB_ERROR,
    ERR_PEERCONFIG_PEER_WITH_REALM_NOT_PRESENT_IN_GROUP,
    ERR_PEERCONFIG_MAX_ERROR = MAX_ERROR_PEERCONFIG
};


enum DEL_PEERCONFIG {
    DEL_PEERCONFIG_ERR_PEER_GROUP_DOESNT_EXIST = ERR_START_DEL_PEERCONFIG,
    DEL_PEERCONFIG_ERR_PEER_DOESNT_EXIST,
    DEL_PEERCONFIG_ERR_MANDATORY_PARAM_MISSING,
    DEL_PEERCONFIG_ERR_DB_ERROR,
    DEL_PEERCONFIG_ERR_PEER_WITH_REALM_NOT_PRESENT_IN_GROUP,
    DEL_PEERCONFIG_ERR_MAX_ERROR = MAX_ERROR_DEL_PEERCONFIG
};

enum GET_PEERGROUP {
    GET_PEERGROUP_ERR_DB_ERROR = ERR_START_GET_PEERGROUP,
    GET_PEERGROUP_ERR_NO_DATA_PRESENT,
    GET_PEERGROUP_ERR_NO_PEERGROUP_PRESENT,
    GET_PEERGROUP_ERR_MAX_ERROR = MAX_ERROR_GET_PEERGROUP
};

enum GET_DICTID {
    GET_DICTID_ERR_DB_ERROR = ERR_START_GET_DICTID,
    GET_DICTID_ERR_NO_DATA_PRESENT,
    GET_DICTID_ERR_MAX_ERROR = MAX_ERROR_GET_DICTID
};

enum GET_PEERCONFIG {
    GET_PEERCONFIG_ERR_DB_ERROR = ERR_START_GET_PEERCONFIG,
    GET_PEERCONFIG_ERR_NO_DATA_PRESENT,
    GET_PEERCONFIG_ERR_NO_PEERCONFIG_PRESENT,
    GET_PEERCONFIG_ERR_MAX_ERROR = MAX_ERROR_GET_PEERCONFIG
};

enum GET_LBALGO {
    GET_LBALGO_ERR_DB_ERROR = ERR_START_GET_LBALGO,
    GET_LBALGO_ERR_NO_DATA_PRESENT,
    GET_LBALGO_ERR_MAX_ERROR = MAX_ERROR_GET_LBALGO
};

enum GET_PEER {
    GET_PEER_ERR_DB_ERROR = ERR_START_GET_PEER,
    GET_PEER_ERR_NO_DATA_PRESENT,
    GET_PEER_ERR_NO_PEER_PRESENT,
    GET_PEER_ERR_MAX_ERROR = MAX_ERROR_GET_PEER
};

enum GET_REALMOFPEER {
    GET_REALMOFPEER_ERR_DB_ERROR = ERR_START_GET_REALMOFPEER,
    GET_REALMOFPEER_ERR_NO_DATA_PRESENT,
    GET_REALMOFPEER_ERR_MAX_ERROR = MAX_ERROR_GET_REALMOFPEER
};

enum GET_REALM {
    GET_REALM_ERR_DB_ERROR = ERR_START_GET_REALM,
    GET_REALM_ERR_NO_DATA_PRESENT,
    GET_REALM_ERR_NO_REALM_PRESENT,
    GET_REALM_ERR_MAX_ERROR = MAX_ERROR_GET_REALM
};

enum GET_DEST {
    GET_DEST_ERR_DB_ERROR = ERR_START_GET_DEST,
    GET_DEST_ERR_NO_DATA_PRESENT,
    GET_DEST_ERR_REALM_NOT_PRESENT,
    GET_DEST_ERR_PEER_NOT_PRESENT,
    GET_DEST_ERR_MAX_ERROR = MAX_ERROR_GET_DEST
};

enum GET_DEFROUTE {
    GET_DEFROUTE_ERR_DB_ERROR = ERR_START_GET_DEFROUTE,
    GET_DEFROUTE_ERR_NO_DATA_PRESENT,
    GET_DEFROUTE_ERR_REALM_NOT_PRESENT,
    GET_DEFROUTE_ERR_PEER_NOT_PRESENT,
    GET_DEFROUTE_ERR_MAX_ERROR = MAX_ERROR_GET_DEFROUTE
};

enum GET_HOST {
    GET_HOST_ERR_DB_ERROR = ERR_START_GET_HOST,
    GET_HOST_ERR_NO_DATA_PRESENT,
    GET_HOST_ERR_MAX_ERROR = MAX_ERROR_GET_HOST
};

enum USER_AUTHENTICATION {
    USER_AUTHENTICATION_ERR_INVALID_USERNAME = ERR_START_USER_AUTHENTICATION,
    USER_AUTHENTICATION_ERR_INVALID_PASSWORD,
    USER_AUTHENTICATION_ERR_MAX_ERROR = MAX_ERROR_USER_AUTHENTICATION
};

enum GET_USER {
    GET_USER_ERR_DB_ERROR = ERR_START_GET_USER,
    GET_USER_ERR_NO_DATA_PRESENT,
    GET_USER_ERR_MAX_ERROR = MAX_ERROR_GET_USER
};

enum ADD_USER {
    ADD_USER_ERR_DB_ERROR = ERR_START_ADD_USER,
    ADD_USER_ERR_INVALID_ROLE,
    ADD_USER_ERR_NO_DATA_PRESENT,
    ADD_USER_ERR_PRIVILEGE_NOT_CONFIGURED,
    ADD_USER_ERR_USERNAME_ALREADY_PRESENT,
    ADD_USER_ERR_MAX_ALLOWED_USER_COUNT_ALREADY_REACHED,
    ADD_USER_ERR_EMAIL_ALREADY_PRESENT,
    ADD_USER_ERR_MAX_ERROR = MAX_ERROR_ADD_USER
};

enum MOD_USER {
    MOD_USER_ERR_DB_ERROR = ERR_START_MOD_USER,
    MOD_USER_ERR_USERNAME_NOT_PRESENT,
    MOD_USER_ERR_INVALID_ROLE,
    MOD_USER_ERR_PRIVILEGE_NOT_CONFIGURED,
    MOD_USER_ERR_NO_DATA_PRESENT,
    MOD_USER_ERR_USERNAME_ALREADY_PRESENT,
    MOD_USER_ERR_EMAIL_ALREADY_PRESENT,
    MOD_USER_ERR_MAX_ERROR = MAX_ERROR_MOD_USER
};

enum DEL_USER {
    DEL_USER_ERR_DB_ERROR = ERR_START_DEL_USER,
    DEL_USER_ERR_USERNAME_NOT_PRESENT,
    DEL_USER_ERR_INVALID_ROLE,
    DEL_USER_ERR_NO_DATA_PRESENT,
    DEL_USER_ERR_MAX_ERROR = MAX_ERROR_DEL_USER
};

enum GET_AVAMGR {
    GET_AVAMGR_ERR_DB_ERROR = ERR_START_GET_AVAMGR,
    GET_AVAMGR_ERR_NO_DATA_PRESENT,
    GET_AVAMGR_ERR_MAX_ERROR = MAX_ERROR_GET_AVAMGR
};

enum SET_AVAMGR {
    SET_AVAMGR_ERR_DB_ERROR = ERR_START_SET_AVAMGR,
    SET_AVAMGR_ERR_MAX_ERROR = MAX_ERROR_SET_AVAMGR
};

enum GET_LOGCONFIG {
    GET_LOGCONFIG_ERR_DB_ERROR = ERR_START_GET_LOGCONFIG,
    GET_LOGCONFIG_ERR_NO_DATA_PRESENT,
    GET_LOGCONFIG_ERR_MAX_ERROR = MAX_ERROR_GET_LOGCONFIG
};

enum SET_LOGCONFIG {
    SET_LOGCONFIG_ERR_DB_ERROR = ERR_START_SET_LOGCONFIG,
    SET_LOGCONFIG_ERR_MANDATORY_PARAM_COMPONENT_MISSING,
    SET_LOGCONFIG_ERR_COMPONENT_ALREADY_PRESENT,
    SET_LOGCONFIG_ERR_MAX_ERROR = MAX_ERROR_SET_LOGCONFIG
};

enum MOD_LOGCONFIG {
    MOD_LOGCONFIG_ERR_DB_ERROR = ERR_START_MOD_LOGCONFIG,
    MOD_LOGCONFIG_ERR_MANDATORY_PARAM_COMPONENT_MISSING,
    MOD_LOGCONFIG_ERR_COMPONENT_NOT_PRESENT,
    MOD_LOGCONFIG_ERR_MAX_ERROR = MAX_ERROR_MOD_LOGCONFIG
};

enum GET_TRACECONFIG {
    GET_TRACECONFIG_ERR_DB_ERROR = ERR_START_GET_TRACING,
    GET_TRACECONFIG_ERR_NO_DATA_PRESENT,
    GET_TRACECONFIG_ERR_MAX_ERROR = MAX_ERROR_GET_TRACING
};

enum SET_TRACECONFIG{
    SET_TRACECONFIG_ERR_DB_ERROR = ERR_START_SET_TRACING,
    SET_TRACECONFIG_ERR_MANDATORY_PARAM_FILTERNAME_MISSING,
    SET_TRACECONFIG_ERR_MANDATORY_PARAM_MISSING,
    SET_TRACECONFIG_ERR_PARSING_RULE_FAILED,
    SET_TRACECONFIG_ERR_FILTER_ALREADY_PRESENT,
    SET_TRACECONFIG_ERR_REACHED_MAX_FILTER,
    SET_TRACECONFIG_ERR_RULE_ALREADY_ASSOCIATED_FOR_FILTER,
    SET_TRACECONFIG_ERR_MAX_ERROR = MAX_ERROR_SET_TRACING
};

enum MOD_TRACECONFIG{
    MOD_TRACECONFIG_ERR_DB_ERROR = ERR_START_MOD_TRACING,
    MOD_TRACECONFIG_ERR_MANDATORY_PARAM_FILTERNAME_MISSING,
    MOD_TRACECONFIG_ERR_FILTER_WITH_FILTER_NAME_NOT_PRESENT,
    MOD_TRACECONFIG_ERR_FILTER_NOT_PRESENT,
    MOD_TRACECONFIG_ERR_RULE_ALREADY_ASSOCIATED_FOR_FILTER,
    MOD_TRACECONFIG_ERR_MAX_ERROR = MAX_ERROR_MOD_TRACING
};

enum ENABLE_TRACECONFIG{
    ENABLE_TRACECONFIG_ERR_DB_ERROR = ERR_START_ENABLE_TRACING,
    ENABLE_TRACECONFIG_ERR_MANDATORY_PARAM_ENABLE_MISSING,
    ENABLE_TRACECONFIG_ERR_MAX_ERROR = MAX_ERROR_ENABLE_TRACING
};

enum DEL_TRACECONFIG{
    DEL_TRACECONFIG_ERR_DB_ERROR = ERR_START_DEL_TRACING,
    DEL_TRACECONFIG_ERR_FILTER_WITH_FILTER_NAME_NOT_PRESENT,
    DEL_TRACECONFIG_ERR_MANDATORY_PARAM_FILTERNAME_MISSING,
    DEL_TRACECONFIG_ERR_FILTER_NOT_PRESENT,
    DEL_TRACECONFIG_ERR_MAX_ERROR = MAX_ERROR_DEL_TRACING
};

enum ERROR_TRACECONFIG{
    ERROR_TRACECONFIG_DB_ERROR = ERR_START_TRACING_CONFIG,
    ERROR_TRACECONFIG_MANDATORY_PARAM_ENABLE_MISSING,
    ERROR_TRACECONFIG_MAX_ERROR = MAX_ERROR_TRACING_CONFIG
};

enum ERROR_INTERFACE_STATS{
    GET_INTERFACE_STATS_INVALID_PARAM = ERR_START_INTERFACE_STATS,
    GET_INTERFACE_STATS_INVALID_INTERFACE_NAME,
    RESET_INTERFACE_STATS_INVALID_INTERFACE_NAME,
    RESET_INTERFACE_STATS_INVALID_PARAM = MAX_ERROR_INTERFACE_STATS

};
enum SET_TRASNPORTCONFIG{
    SET_HOST_TRANSPORT_ERR_DB_ERROR = ERR_START_SET_TRASNPORTCONFIG,
    SET_HOST_TRANSPORT_ERR_INVALID_LOCALHOST,
    SET_HOST_TRANSPORT_ERR_INVALID_COMBINATION_OF_TYPE_AND_PORT,
    SET_HOST_TRANSPORT_ERR_IP_PORT_MANDATORY,
    SET_HOST_TRANSPORT_ERR_DUPLICATE_ENTRY_OF_TRANSPORT_CONFIG,
    SET_HOST_TRANSPORT_ERR_TRANSPORT_NAME_ALREADY_PRESENT,
    SET_HOST_TRANSPORT_ERR_PORT_OR_SECUREPORT_CONFLICTING_WITH_PEER_SOURCEPORT,
    SET_HOST_TRANSPORT_ERR_TRANSPORT_ID_TRANSPORTNAME_NOT_PRESENT,
    SET_HOST_TRANSPORT_ERR_PORT_OR_SECUREPORT_IS_MANDATORY,
    SET_HOST_TRANSPORT_MAX_ERROR = MAX_ERROR_SET_TRASNPORTCONFIG
};

enum ERROR_TRASNPORTCONFIG{
    ERR_HOST_TRANSPORT_DB_ERROR = ERR_START_ERROR_TRASNPORTCONFIG,
    ERR_HOST_MANDATORY_PARAM_TRANSPORT_SLOT_MISSING,
    ERR_HOST_TRANSPORT_MAX_ERROR = MAX_ERROR_ERROR_TRASNPORTCONFIG
};

enum DEL_TRASNPORTCONFIG{
    DEL_HOST_TRANSPORT_ERR_DB_ERROR = ERR_START_DEL_TRASNPORTCONFIG,
    DEL_HOST_ERR_TRANSPORT_NOT_PRESENT,
    DEL_HOST_ERR_TRANSPORT_TAG_ALREADY_ASSOC,
    DEL_HOST_TRANSPORT_ERR_INVALID_LOCALHOST,
    DEL_HOST_ERR_NOT_PRESENT,
    DEL_HOST_TRANSPORT_MAX_ERROR = MAX_ERROR_DEL_TRASNPORTCONFIG
};


enum DEL_HOSTMULTIHOMINGCONFIG{
    DEL_HOST_MULTIHOMING_ERR_DB_ERROR = ERR_START_DEL_HOSTMULTIHOMINGCONFIG,
    DEL_HOST_MULTIHOMING_INVALID_LOCALHOST,
    DEL_HOST_MULTIHOMING_SECONDARY_IP_NOT_PRESENT,
    DEL_HOST_MULTIHOMING_MAX_ERROR = MAX_ERROR_DEL_HOSTMULTIHOMINGCONFIG
};


enum ADD_HOSTMULTIHOMINGCONFIG{
    ADD_HOST_MULTIHOMING_ERR_DB_ERROR = ERR_START_SET_TRASNPORTCONFIG,
    ADD_HOST_MULTIHOMING_INVALID_LOCALHOST,
    ADD_HOST_MULTIHOMING_SECONDARY_IP_ALREADY_PRESENT,
    ADD_HOST_MULTIHOMING_SECONDARY_IP_REACHED_MAX_LIMIT,
    ADD_HOST_MULTIHOMING_MAX_ERROR = MAX_ERROR_SET_TRASNPORTCONFIG
};



enum SET_ASFCONFIG{
    SET_ASFCONFIG_ERR_DB_ERROR = ERR_START_SET_ASFCONFIG,
    SET_ASFCONFIG_ERR_COMPONENT_ALREADY_PRESENT,
    SET_ASFCONFIG_ERR_LBMETHOD_NOT_SUPPORTED,
    SET_ASFCONFIG_ERR_MAX_APPGROUP_REACHED,
    SET_ASFCONFIG_MAX_ERROR = MAX_ERROR_SET_ASFCONFIG
};
enum MOD_ASFCONFIG{
    MOD_ASFCONFIG_ERR_DB_ERROR = ERR_START_MOD_ASFCONFIG,
    MOD_ASFCONFIG_ERR_COMPONENT_NOT_PRESENT,
    MOD_ASFCONFIG_ERR_LBMETHOD_NOT_SUPPORTED,
    MOD_ASFCONFIG_MAX_ERROR = MAX_ERROR_MOD_ASFCONFIG
};
enum GET_ASFCONFIG{
    GET_ASFCONFIG_ERR_NO_DATA_PRESENT = ERR_START_GET_ASFCONFIG,
    GET_ASFCONFIG_ERR_DB_ERROR,
    GET_ASFCONFIG_ERR_NO_LB_ALGORITHM,
    GET_ASFCONFIG_MAX_ERROR = MAX_ERROR_GET_ASFCONFIG
};
enum ERROR_ASFCONFIG{
    ERR_ASFGROUP_DB_ERROR = ERR_START_ERROR_ASFCONFIG,
    ERR_ASFGROUP_MANDATORY_PARAM_GROUPNAME_MISSING,
    ERR_ASFGROUP_MAX_ERROR = MAX_ERROR_ERROR_ASFCONFIG
};
enum DEL_ASFCONFIG{
    DEL_ASFCONFIG_ERR_DB_ERROR  = ERR_START_DEL_ASFCONFIG,
    DEL_ASFCONFIG_ERR_FILTER_NOT_PRESENT,
    DEL_ASFCONFIG_ERR_LBMETHOD_NOT_SUPPORTED,
    DEL_ASFCONFIG_MAX_ERROR = MAX_ERROR_DEL_ASFCONFIG
};
enum SET_ASFRESPTIME{
    SET_ASFRESPTIME_ERR_DB_ERROR = ERR_START_SET_ASFRESPTIME,
    SET_ASF_ERR_RESPTIME_ALREADY_PRESENT,
    SET_ASF_ERR_MAX_ERROR = MAX_ERROR_SET_ASFRESPTIME
};
enum GET_ASFRESPTIME{
    GET_ASFRESPTIME_ERR_DB_ERROR = ERR_START_GET_ASFRESPTIME,
    GET_ASFRESPTIME_ERR_NO_DATA_PRESENT,
    GET_ASFRESPTIME_ERR_MAX_ERROR = MAX_ERROR_GET_ASFRESPTIME
};
enum GET_SCTPCONFIG{
    GET_SCTPCONFIG_ERR_DB_ERROR = ERR_START_GET_SCTPCONFIG,
    GET_SCTPCONFIG_ERR_NO_DATA_PRESENT,
    GET_SCTPCONFIG_ERR_MAX_ERROR = MAX_ERROR_GET_SCTPCONFIG
};
enum GET_TRUSTEDCA{
    GET_TRUSTEDCA_ERR_DB_ERROR = ERR_START_GET_TRUSTEDCA,
    GET_TRUSTEDCA_ERR_NO_DATA_PRESENT,
    GET_TRUSTEDCA_ERR_MAX_ERROR = MAX_ERROR_GET_TRUSTEDCA
};
enum GET_STACKGENERAL{
    GET_STACKGENERAL_ERR_DB_ERROR = ERR_START_GET_STACKGENERAL,
    GET_STACKGENERAL_ERR_NO_DATA_PRESENT,
    GET_STACKGENERAL_ERR_MAX_ERROR = MAX_ERROR_GET_STACKGENERAL
};
enum GET_TLSCONFIG{
    GET_TLSCONFIG_ERR_DB_ERROR = ERR_START_GET_TLSCONFIG,
    GET_TLSCONFIG_ERR_NO_DATA_PRESENT,
    GET_TLSCONFIG_ERR_MAX_ERROR = MAX_ERROR_GET_TLSCONFIG
};
enum GET_CIPHERSUITE{
    GET_CIPHERSUITE_ERR_DB_ERROR = ERR_START_GET_CIPHERSUITE,
    GET_CIPHERSUITE_ERR_NO_DATA_PRESENT,
    GET_CIPHERSUITE_ERR_MAX_ERROR = MAX_ERROR_GET_CIPHERSUITE
};
enum SET_SCTPCONFIG{
    SET_SCTPCONFIG_ERR_DB_ERROR = ERR_START_SET_SCTPCONFIG,
    SET_SCTPCONFIG_ERR_MAX_ERROR = MAX_ERROR_SET_SCTPCONFIG
};
enum SET_STACKGENERAL{
    SET_STACKGENERAL_ERR_DB_ERROR = ERR_START_SET_STACKGENERAL,
    SET_STACKGENERAL_ERR_MAX_ERROR = MAX_ERROR_SET_STACKGENERAL
};
enum SET_TLSCONFIG{
    SET_TLSCONFIG_ERR_DB_ERROR = ERR_START_SET_TLSCONFIG,
    SET_TLSCONFIG_ERR_MAX_ERROR = MAX_ERROR_SET_TLSCONFIG
};
enum ADD_TRUSTEDCA{
    ADD_TRUSTEDCA_ERR_DB_ERROR = ERR_START_ADD_TRUSTEDCA,
    ADD_TRUSTEDCA_MANDATORY_PARAM_CAFILE_MISSING,
    ADD_TRUSTEDCA_ERR_CAFILE_ALREADY_PRESENT,
    ADD_TRUSTEDCA_ERR_CRLFILE_ALREADY_PRESENT,
    ADD_TRUSTEDCA_ERR_MAX_ERROR = MAX_ERROR_ADD_TRUSTEDCA
};
enum MOD_TRUSTEDCA{
    MOD_TRUSTEDCA_ERR_DB_ERROR = ERR_START_MOD_TRUSTEDCA,
    MOD_TRUSTEDCA_MANDATORY_PARAM_CAFILE_MISSING,
    MOD_TRUSTEDCA_ERR_CAFILE_NOT_PRESENT,
    MOD_TRUSTEDCA_ERR_CRLFILE_ALREADY_PRESENT,
    MOD_TRUSTEDCA_ERR_MAX_ERROR = MAX_ERROR_MOD_TRUSTEDCA
};
enum DEL_TRUSTEDCA{
    DEL_TRUSTEDCA_ERR_DB_ERROR = ERR_START_DEL_TRUSTEDCA,
    DEL_TRUSTEDCA_MANDATORY_PARAM_CAFILE_MISSING,
    DEL_ASSOCTRUSTEDCA_ERR_DB_ERROR,
    DEL_ASSOCTRUSTEDCA_ERR_CAFILE_NOT_PRESENT,
    DEL_TRUSTEDCA_ERR_CAFILE_NOT_PRESENT,
    DEL_TRUSTEDCA_ERR_MAX_ERROR = MAX_ERROR_DEL_TRUSTEDCA
};
enum ERR_TRUSTEDCA{
    ERR_TRUSTEDCA_ERR_DB_ERROR = ERR_START_ERR_TRUSTEDCA,
    ERR_TRUSTEDCA_MANDATORY_PARAM_CAFILE_MISSING,
    ERR_TRUSTEDCA_ERR_MAX_ERROR = MAX_ERROR_ERR_TRUSTEDCA
};
enum MOD_CIPHERSUITE{
    MOD_CIPHERSUITE_ERR_DB_ERROR = ERR_START_MOD_CIPHERSUITE,
    MOD_CIPHERSUITE_ERR_CIPHER_NOT_PRESENT,
    MOD_CIPHERSUITE_ERR_MAX_ERROR = MAX_ERROR_MOD_CIPHERSUITE
};

enum AVAMGR_SWITCHOVER{
    AVAMGR_SWITCHOVER_ERR_IS_STANDALONE = ERR_START_AVAMGR_SWITCHOVER,
    AVAMGR_SWITCHOVER_ERR_STANDBY_NOT_AVAILABLE = MAX_ERROR_AVAMGR_SWITCHOVER
};

enum GET_STATIC_ROUTING{
    GET_STATIC_ROUTING_ERR_DB_ERROR = ERR_START_GET_STATIC_ROUTING,
    GET_STATIC_ROUTING_CONFIG_ERR_DB_ERROR,
    GET_STATIC_ROUTING_ERR_NO_DATA_PRESENT,
    GET_STATIC_ROUTING_ERR_NO_STATIC_ROUTE_PRESENT,
    GET_STATIC_ROUTING_ERR_MAX_ERROR = MAX_ERROR_GET_STATIC_ROUTING
};

enum MOD_STATIC_ROUTING{
    MOD_STATIC_ROUTING_ERR_DB_ERROR = ERR_START_MOD_STATIC_ROUTING,
    MOD_STATIC_ROUTING_ERR_PEER_NOT_CONFIGURED,
    MOD_STATIC_ROUTING_ERR_ROUTE_NOT_PRESENT,
    MOD_STATIC_ROUTING_MANDATORY_DESTHOST_PEERNAME_MISSING,
    MOD_STATIC_ROUTING_ERR_MAX_ERROR = MAX_ERROR_MOD_STATIC_ROUTING
};

enum ADD_STATIC_ROUTING{
    ADD_STATIC_ROUTING_ERR_DB_ERROR = ERR_START_ADD_STATIC_ROUTING,
    ADD_STATIC_ROUTING_ERR_PEER_NOT_CONFIGURED,
    ADD_STATIC_ROUTING_ERR_ROUTE_ALREADY_PRESENT,
    ADD_STATIC_ROUTING_MANDATORY_PARAMETERS_MISSING,
    ADD_STATIC_ROUTING_ERR_MAX_ERROR = MAX_ERROR_ADD_STATIC_ROUTING
};

enum DEL_STATIC_ROUTING{
    DEL_STATIC_ROUTING_ERR_DB_ERROR = ERR_START_DEL_STATIC_ROUTING,
    DEL_STATIC_ROUTING_ERR_PEER_NOT_CONFIGURED,
    DEL_STATIC_ROUTING_ERR_ROUTE_DOESNT_EXIST,
    DEL_STATIC_ROUTING_MANDATORY_DESTHOST_PEERNAME_MISSING,
    DEL_STATIC_ROUTING_ERR_MAX_ERROR = MAX_ERROR_DEL_STATIC_ROUTING
};

enum ERR_STATIC_ROUTING{
    ERR_STATIC_ROUTING_MANDATORY_PARAM_PEERNAME_MISSING = ERR_START_ERR_STATIC_ROUTING,
    ERR_STATIC_ROUTING_MANDATORY_PARAM_REALMNAME_MISSING,
    ERR_STATIC_ROUTING_MANDATORY_PARAM_DESTINATION_HOST_MISSING,
    ERR_STATIC_ROUTING_MANDATORY_PARAM_DESTINATION_REALM_MISSING,
    ERR_STATIC_ROUTING_ERR_MAX_ERROR = MAX_ERROR_ERR_STATIC_ROUTING
};

enum ERR_REALM_TEMPLATE{
    ERR_REALM_TEMPLATE_ERR_DB_ERROR = ERR_START_ERR_REALM_TEMPLATE,
    ERR_REALM_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_ERR_REALM_TEMPLATE,

};

enum ADD_REALM_TEMPLATE{
    ADD_REALM_TEMPLATE_ERR_DB_ERROR = ERR_START_ADD_REALM_TEMPLATE,
    ADD_REALM_TEMPLATE_ERR_ALREADY_PRESENT,
    ADD_REALM_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_ADD_REALM_TEMPLATE,

};

enum MOD_REALM_TEMPLATE{
    MOD_REALM_TEMPLATE_ERR_DB_ERROR = ERR_START_MOD_REALM_TEMPLATE,
    MOD_REALM_TEMPLATE_ERR_NOT_PRESENT,
    MOD_REALM_TEMPLATE_ERR_ALREADY_ASSOCIATED,
    MOD_REALM_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_MOD_REALM_TEMPLATE,

};

enum DEL_REALM_TEMPLATE{
    DEL_REALM_TEMPLATE_ERR_DB_ERROR = ERR_START_DEL_REALM_TEMPLATE,
    DEL_REALM_TEMPLATE_ERR_NOT_PRESENT,
    DEL_REALM_TEMPLATE_ERR_REALM_NOT_PRESENT,
    DEL_REALM_TEMPLATE_ERR_USED_IN_REALM,
    DEL_REALM_TEMPLATE_ERR_NOT_ASSOCIATED,
    DEL_REALM_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_DEL_REALM_TEMPLATE,

};

enum GET_REALM_TEMPLATE{
    GET_REALM_TEMPLATE_ERR_DB_ERROR = ERR_START_GET_REALM_TEMPLATE,
    GET_REALM_TEMPLATE_ERR_NO_DATA_PRESENT,
    GET_REALM_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_GET_REALM_TEMPLATE,

};

enum ERR_PEER_TEMPLATE{
    ERR_PEER_TEMPLATE_ERR_DB_ERROR = ERR_START_ERR_PEER_TEMPLATE,
    ERR_PEER_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_ERR_PEER_TEMPLATE,

};

enum ADD_PEER_TEMPLATE{
    ADD_PEER_TEMPLATE_ERR_DB_ERROR = ERR_START_ADD_PEER_TEMPLATE,
    ADD_PEER_TEMPLATE_ERR_ALREADY_PRESENT,
    ADD_PEER_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_ADD_PEER_TEMPLATE,
};

enum MOD_PEER_TEMPLATE{
    MOD_PEER_TEMPLATE_ERR_DB_ERROR = ERR_START_MOD_PEER_TEMPLATE,
    MOD_PEER_TEMPLATE_ERR_NOT_PRESENT,
    MOD_PEER_TEMPLATE_ERR_ALREADY_ASSOCIATED,
    MOD_PEER_TEMPLATE_ERR_DEFAULT_ENTRY,
    MOD_PEER_CONFIG_PEER_IN_DISABLED_STATE,
    MOD_PEER_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_MOD_PEER_TEMPLATE,

};

enum DEL_PEER_TEMPLATE{
    DEL_PEER_TEMPLATE_ERR_DB_ERROR = ERR_START_DEL_PEER_TEMPLATE,
    DEL_PEER_TEMPLATE_ERR_NOT_PRESENT,
    DEL_PEER_TEMPLATE_ERR_NOT_ASSOCIATED,
    DEL_PEER_TEMPLATE_ERR_USED_IN_PEER,
    DEL_PEER_TEMPLATE_ERR_PEER_NOT_PRESENT,
    DEL_PEER_TEMPLATE_ERR_DEFAULT_ENTRY,
    DEL_PEER_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_DEL_PEER_TEMPLATE,

};

enum GET_PEER_TEMPLATE{
    GET_PEER_TEMPLATE_ERR_DB_ERROR = ERR_START_GET_PEER_TEMPLATE,
    GET_PEER_TEMPLATE_ERR_NO_DATA_PRESENT,
    GET_PEER_TEMPLATE_ERR_MAX_ERROR = MAX_ERROR_GET_PEER_TEMPLATE,

};

enum GET_THF {
    GET_THF_ERR_DB_ERROR = ERR_START_GET_THF,
    GET_THF_ERR_NO_DATA_PRESENT,
    GET_THF_ERR_MAX_ERROR = MAX_ERROR_GET_THF
};

enum GET_THF_REALM {
    GET_THF_REALM_ERR_DB_ERROR = ERR_START_GET_THF_REALM,
    GET_THF_REALM_ERR_NO_DATA_PRESENT,
    GET_THF_REALM_MAX_ERROR = MAX_ERROR_GET_THF_REALM
};

enum GET_THF_VHOST {
    GET_THF_VHOST_ERR_DB_ERROR = ERR_START_GET_THF_VHOST,
    GET_THF_VHOST_ERR_NO_DATA_PRESENT,
    GET_THF_VHOST_MAX_ERROR = MAX_ERROR_GET_THF_VHOST
};

enum ADD_THF_VHOST {
    ADD_THF_VHOST_ERR_DB_ERROR = ERR_START_ADD_THF_VHOST,
    ADD_THF_VHOST_ERR_MAX_COUNT_REACHED,
    ADD_THF_VHOST_ERR_ALREADY_PRESENT,
    ADD_THF_VHOST_MAX_ERROR = MAX_ERROR_ADD_THF_VHOST
};

enum DEL_THF_VHOST {
    DEL_THF_VHOST_ERR_DB_ERROR = ERR_START_DEL_THF_VHOST,
    DEL_THF_VHOST_ERR_NO_DATA_PRESENT,
    DEL_THF_VHOST_MAX_ERROR = MAX_ERROR_DEL_THF_VHOST
};

enum ADD_THF_REALM {
    ADD_THF_REALM_ERR_DB_ERROR = ERR_START_ADD_THF_REALM,
    ADD_THF_REALM_REALM_NOT_PRESENT,
    ADD_THF_REALM_OTHER_REALM_NOT_PRESENT,
    ADD_THF_REALM_ERR_ALREADY_PRESENT,
    ADD_THF_REALM_ERR_MIXED_ACTION_NOT_POSSIBLE,
    ADD_THF_REALM_ERR_TARGET_AND_OTHER_REALM_NAME_IS_SAME,
    ADD_THF_REALM_MAX_ERROR = MAX_ERROR_ADD_THF_REALM
};

enum DEL_THF_REALM {
    DEL_THF_REALM_ERR_DB_ERROR = ERR_START_DEL_THF_REALM,
    DEL_THF_REALM_ERR_NO_DATA_PRESENT,
    DEL_THF_REALM_MAX_ERROR = MAX_ERROR_DEL_THF_REALM
};

enum SET_THF {
    SET_THF_ERR_DB_ERROR = ERR_START_SET_THF,
    SET_THF_DEFAULT_BEHAV_ERR_DB_ERROR,
    SET_THF_ERR_MAX_ERROR = MAX_ERROR_SET_THF
};

enum GET_PREVILEGE_MAPPING {
    GET_PREVILEGE_MAPPING_ERR_DB_ERROR = ERR_START_GET_ROLE,
    GET_PREVILEGE_MAPPING_NO_DATA_PRESENT,
    GET_PREVILEGE_MAPPING_ERR_MAX_ERROR = MAX_ERROR_GET_ROLE
};

enum GET_PREVILEGE {
    GET_PREVILEGE_ERR_DB_ERROR = ERR_START_GET_PREVILEGE,
    GET_PREVILEGE_NO_DATA_PRESENT,
    GET_PREVILEGE_ERR_MAX_ERROR = MAX_ERROR_GET_PREVILEGE
};

enum GET_ROLE {
    GET_ROLE_ERR_DB_ERROR = ERR_START_GET_ROLE,
    GET_ROLE_NO_DATA_PRESENT,
    GET_ROLE_DATA_NOT_PRESENT,
    GET_ROLE_ERR_MAX_ERROR = MAX_ERROR_GET_ROLE
};

enum DEL_ROLE {
    DEL_ROLE_ERR_DB_ERROR = ERR_START_DEL_ROLE,
    DEL_ROLE_NO_DATA_PRESENT,
    DEL_ROLE_ERR_NOT_PRESENT,
    DEL_ROLE_ERR_USED_IN_USER,
    DEL_ROLE_ERR_MAX_ERROR = MAX_ERROR_DEL_ROLE
};

enum GET_EMAILCONTENT {
    GET_EMAILCONTENT_ERR_DB_ERROR = ERR_START_GET_EMAILCONTENT,
    GET_EMAILCONTENT_NO_DATA_PRESENT,
    GET_EMAILCONTENT_DATA_NOT_PRESENT,
    GET_EMAILCONTENT_ERR_MAX_ERROR = MAX_ERROR_GET_EMAILCONTENT
};


enum MOD_EMAILCONTENT {
    MOD_EMAILCONTENT_ERR_DB_ERROR = ERR_START_MOD_EMAILCONTENT,
    MOD_EMAILCONTENT_NO_DATA_PRESENT,
    MOD_EMAILCONTENT_ERR_NOT_PRESENT,
    MOD_EMAILCONTENT_ERR_MAX_ERROR = MAX_ERROR_MOD_EMAILCONTENT
};

enum GET_EMAILSERVER{
    GET_EMAILSERVER_ERR_DB_ERROR = ERR_START_GET_EMAILSERVER,
    GET_EMAILSERVER_NO_DATA_PRESENT,
    GET_EMAILSERVER_ERR_MAX_ERROR = MAX_ERROR_GET_EMAILSERVER
};

enum DEL_EMAILSERVER{
    DEL_EMAILSERVER_ERR_DB_ERROR = ERR_START_DEL_EMAILSERVER,
    DEL_EMAILSERVER_NO_DATA_PRESENT,
    DEL_EMAILSERVER_ERR_NOT_PRESENT,
    DEL_EMAILSERVER_ERR_MAX_ERROR = MAX_ERROR_DEL_EMAILSERVER
};


enum MOD_EMAILSERVER{
    MOD_EMAILSERVER_ERR_DB_ERROR = ERR_START_MOD_EMAILSERVER,
    MOD_EMAILSERVER_NO_DATA_PRESENT,
    MOD_EMAILSERVER_ERR_NOT_PRESENT,
    MOD_EMAILSERVER_ERR_MAX_ERROR = MAX_ERROR_MOD_EMAILSERVER
};


enum MOD_ROLE {
    MOD_ROLE_ERR_DB_ERROR = ERR_START_MOD_ROLE,
    MOD_ROLE_NO_DATA_PRESENT,
    MOD_ROLE_ERR_NOT_PRESENT,
    MOD_ROLE_ERR_ROLNAME_ALREADY_PRESENT,
    MOD_ROLE_ERR_DEL_ALL_PREVILAGE_IN_USE,
    MOD_ROLE_ERR_SAME_PREVILEGE_SET_ALREADY_PRESENT,
    MOD_ROLE_ERR_MAX_ERROR = MAX_ERROR_MOD_ROLE
};

enum ADD_ROLE {
    ADD_ROLE_ERR_DB_ERROR = ERR_START_ADD_ROLE,
    ADD_ROLE_NO_DATA_PRESENT,
    ADD_ROLE_ERR_ALREADY_PRESENT,
    ADD_ROLE_ERR_SAME_PREVILEGE_SET_ALREADY_PRESENT,
    ADD_ROLE_ERR_MAX_ERROR = MAX_ERROR_ADD_ROLE
};

enum DEL_ROLEPRIVILEGE_MAPPING {
    DEL_ROLEPRIVILEGE_MAPPING_ERR_DB_ERROR = ERR_START_DEL_ROLEPRIVILEGE_MAPPING,
    DEL_ROLEPRIVILEGE_MAPPING_NO_DATA_PRESENT,
    DEL_ROLEPRIVILEGE_MAPPING_NOT_PRESENT,
    DEL_ROLEPRIVILEGE_MAPPING_ERR_MAX_ERROR = MAX_ERROR_DEL_ROLEPRIVILEGE_MAPPING
};

enum ADD_ROLEPRIVILEGE_MAPPING {
    ADD_ROLEPRIVILEGE_MAPPING_ERR_DB_ERROR = ERR_START_ADD_ROLEPRIVILEGE_MAPPING,
    ADD_ROLEPRIVILEGE_MAPPING_NO_DATA_PRESENT,
    ADD_ROLEPRIVILEGE_MAPPING_ALREADY_PRESENT,
    ADD_ROLEPRIVILEGE_MAPPING_ERR_MAX_ERROR = MAX_ERROR_ADD_ROLEPRIVILEGE_MAPPING
};

enum SET_DYN_DICIONARY_PROVISIONING {
    MOD_DICTID_ERR_DB_ERROR = ERR_START_SET_DYN_DICTIONARY_PROVISIONING,
    MOD_DICTID_ERR_DICTIONARY_NOT_PRESENT,
    MOD_DICTID_ERR_ITS_DEFAULT_DICTIONARY,
    MOD_DICTID_ERR_ITS_ASSOCIATED_WITH_ONE_OR_MORE_PEER,
    MOD_DICTID_ERR_DICTIONARY_IS_ALREADY_ENABLED,
    MOD_DICTID_ERR_DICTIONARY_IS_ALREADY_DISABLED,
    MOD_DICTID_ERR_DICTIONARY_ASSOCIATED_WITH_ENABLED_TRANSFORM_PLUGIN,

    MOD_DICTID_ERR_MAX_ERROR = MAX_ERROR_SET_DYN_DICTIONARY_PROVISIONING
};

enum SET_TRANSFORM_PLUGIN {
    MOD_TRANSFORM_PLUGIN_ERR_DB_ERROR = ERR_START_SET_TRANSFORM_PLUGIN,
    MOD_TRANSFORM_PLUGIN_ERR_PLUGIN_NOT_PRESENT,
    MOD_TRANSFORM_PLUGIN_ERR_CONFIG_FILE_NOT_PRESENT,
    MOD_TRANSFORM_PLUGIN_ERR_PLUGIN_ALREADY_ENABLED,
    MOD_TRANSFORM_PLUGIN_ERR_PLUGIN_ALREADY_DISABLED,
    MOD_TRANSFORM_PLUGIN_LOAD_ERR_ASSOCIATED_DICTIONARY_NOT_ENABLED,
    MOD_TRANSFORM_PLUGIN_RELOAD_ERR_ASSOCIATED_DICTIONARY_NOT_ENABLED,
    MOD_TRANSFORM_PLUGIN_RELOAD_ERR_PLUGIN_NOT_PRESENT,
    MOD_TRANSFORM_PLUGIN_RELOAD_ERR_PLUGIN_NOT_ENABLED,

    MOD_TRANSFORM_PLUGIN_MAX_ERROR = MAX_ERROR_SET_TRANSFORM_PLUGIN
};

enum GET_TRANSFORM_PLUGIN {
    GET_TRANSFORM_PLUGIN_ERR_DB_ERROR = ERR_START_GET_TRANSFORM_PLUGIN,
    GET_TRANSFORM_PLUGIN_ERR_NO_DATA_PRESENT,

    GET_TRANSFORM_PLUGIN_MAX_ERROR = MAX_ERROR_GET_TRANSFORM_PLUGIN
};

enum ADD_DYNAMIC_PLUGIN_ERRORS {
    DYN_DICT_NOT_ENABLED = ERR_START_DYNAMIC_PLUGINS,
    DYN_UNABLE_TO_UNLOAD_ENABLED_DICT,
    DYN_DICT_REQUIRED_BY_TR_PLUGIN_NOT_LOADED,
    DYN_ENABLE_DTF_AND_PLUGIN,
    DYN_PLUGIN_EXCEPTION,

    ADD_DYNAMIC_MAX_PLUGIN_ERROR = MAX_DYNAMIC_PLUGINS_ERRORS
};

enum GET_ACTION_FOR_TRIGGER_ERRORS {
    GET_ACTION_FOR_TRIGGER_ERR_DB_ERROR = ERR_START_GET_ACTION_TRIGGER,
    GET_ACTION_FOR_TRIGGER_ERR_NO_MAPPING_PRESENT,
    GET_ACTION_FOR_TRIGGER_MAX_ERROR = MAX_ERROR_GET_ACTION_TRIGGER
};

enum GET_CMFLEVEL_ERRORS {
    GET_CMFLEVEL_ERR_DB_ERROR = ERR_START_GET_CMFLEVEL,
    GET_CMFLEVEL_ERR_NO_DATA_PRESENT,
    GET_CMFLEVEL_MAX_ERROR = MAX_ERROR_GET_CMFLEVEL
};

enum GET_CMFRULE_ERRORS {
    GET_CMFRULE_ERR_DB_ERROR = ERR_START_GET_CMFRULE,
    GET_CMFRULE_ERR_NO_DATA_PRESENT,
    GET_CMFRULE_MAX_ERROR = MAX_ERROR_GET_CMFRULE
};

enum ADD_CMFRULE_ERRORS {
    ADD_CMFRULE_ERR_DB_ERROR = ERR_START_ADD_CMFRULE,
    ADD_CMFRULE_ERR_RULE_ALREADY_PRESENT,
    ADD_CMFRULE_MAX_ERROR = MAX_ERROR_ADD_CMFRULE
};

enum MOD_CMFRULE_ERRORS {
    MOD_CMFRULE_ERR_DB_ERROR = ERR_START_MOD_CMFRULE,
    MOD_CMFRULE_ERR_RULE_NOT_PRESENT,
    MOD_CMFRULE_STATUS_ERR_RULE_NOT_PRESENT,
    MOD_CMFRULE_MAX_ERROR = MAX_ERROR_MOD_CMFRULE
};

enum DEL_CMFRULE_ERRORS {
    DEL_CMFRULE_ERR_DB_ERROR = ERR_START_DEL_CMFRULE,
    DEL_CMFRULE_ERR_RULE_NOT_PRESENT,
    DEL_CMFRULE_MAX_ERROR = MAX_ERROR_DEL_CMFRULE
};

enum SET_CMD_PRIORITY_ERRORS {
    SET_CMD_PRIORITY_ERR_DB_ERROR = ERR_START_SET_CMD_PRIORITY,
    SET_CMD_PRIORITY_MAX_ERROR = MAX_ERROR_SET_CMD_PRIORITY
};

enum SET_APP_PRIORITY_ERRORS {
    SET_APP_PRIORITY_ERR_DB_ERROR = ERR_START_SET_APP_PRIORITY,
    SET_APP_PRIORITY_MAX_ERROR = MAX_ERROR_SET_APP_PRIORITY
};

enum GET_CMF_TRIGGER_ERRORS {
    GET_CMF_TRIGGER_ERR_DB_ERROR= ERR_START_GET_CMFTRIGGER,
    GET_CMF_TRIGGER_ERR_NO_DATA_PRESENT,
    GET_CMF_TRIGGER_MAX_ERROR = MAX_ERROR_GET_CMFTRIGGER
};

enum GET_CMF_ACTION_ERRORS {
    GET_CMF_ACTION_DB_ERROR = ERR_START_GET_CMFACTION,
    GET_CMF_ACTION_ERR_NO_DATA_PRESENT,
    GET_CMF_ACTION_MAX_ERROR = MAX_ERROR_GET_CMFACTION
};

enum GET_ALARM_INFO_ERRORS {
    GET_ALARM_INFO_QUEUE_EMPTY_ERROR = ERR_START_GET_ALARM_INFO,
    GET_ALARM_INFO_MAX_ERROR = MAX_ERROR_GET_ALARM_INFO
};

enum ADD_CMF_DIA_PRIORITY_ERROR {
    ADD_CMF_DIA_PRIORITY_ERR_DB_ERROR = ERR_START_ADD_DIA_PRIORITY,
    ADD_CMF_DIA_PRIORITY_ERR_CC_ALREADY_PRESENT,
    ADD_CMF_DIA_PRIORITY_ERR_APPID_ALREADY_PRESENT,
    ADD_CMF_DIA_PRIORITY_MAX_ERROR = MAX_ERROR_ADD_DIA_PRIORITY
};

enum MOD_CMF_DIA_PRIORITY_ERROR {
    MOD_CMF_DIA_PRIORITY_ERR_DB_ERROR = ERR_START_MOD_DIA_PRIORITY,
    MOD_CMF_DIA_PRIORITY_ERR_CC_NOT_CONFIGURED,
    MOD_CMF_DIA_PRIORITY_ERR_APPID_NOT_CONFIGURED,
    MOD_CMF_DIA_PRIORITY_MAX_ERROR = MAX_ERROR_MOD_DIA_PRIORITY
};

enum DEL_CMF_DIA_PRIORITY_ERROR {
    DEL_CMF_DIA_PRIORITY_ERR_DB_ERROR = ERR_START_DEL_DIA_PRIORITY,
    DEL_CMF_DIA_PRIORITY_ERR_CC_NOT_CONFIGURED,
    DEL_CMF_DIA_PRIORITY_ERR_APPID_NOT_CONFIGURED,
    DEL_CMF_DIA_PRIORITY_MAX_ERROR = MAX_ERROR_DEL_DIA_PRIORITY
};

enum GET_CMF_DIA_PRIORITY_ERROR {
    GET_CMF_DIA_PRIORITY_ERR_DB_ERROR = ERR_START_GET_DIA_PRIORITY,
    GET_CMF_DIA_PRIORITY_ERR_NO_DATA_PRESENT,
    GET_CMF_DIA_PRIORITY_MAX_ERROR = MAX_ERROR_GET_DIA_PRIORITY
};

enum GET_CMF_TRIGGER_STATES_ERROR {
    GET_CMF_TRIGGER_STATES_ERROR_PEER_NOT_FOUND = ERR_START_GET_CMF_TRIGGER_STATES,
    GET_CMF_TRIGGER_STATES_ERROR_REALM_NOT_FOUND,
    GET_CMF_TRIGGER_STATES_ERROR_FEATURE_NOT_ENABLED,
    GET_CMF_TRIGGER_STATES_MAX_ERROR = MAX_ERR_GET_CMF_TRIGGER_STATES
};

enum GET_SDTF_RULES_ERROR {
    GET_SDTF_RULES_DB_ERROR = ERR_START_GET_SDTF_RULES,
    GET_SDTF_RULES_ERR_NO_DATA_PRESENT,
    //Add any other errors in between as required.
    GET_SDTF_RULES_MAX_ERROR = MAX_ERROR_GET_SDTF_RULES
};

enum ADD_SDTF_RULES_ERROR {
    ADD_SDTF_RULES_DB_ERROR = ERR_START_ADD_SDTF_RULES,
    ADD_SDTF_RULES_ERR_RULE_ALREADY_PRESENT,
    //Add any other errors in between as required.
    ADD_SDTF_RULES_MAX_ERROR = MAX_ERROR_ADD_SDTF_RULES
};

enum MOD_SDTF_RULES_ERROR {
    MOD_SDTF_RULES_DB_ERROR = ERR_START_MOD_SDTF_RULES,
    MOD_SDTF_RULES_ERR_RULE_NOT_CONFIGURED,
    //Add any other errors in between as required.
    MOD_SDTF_RULES_MAX_ERROR = MAX_ERROR_MOD_SDTF_RULES
};

enum DEL_SDTF_RULES_ERROR {
    DEL_SDTF_RULES_DB_ERROR = ERR_START_DEL_SDTF_RULES,
    DEL_SDTF_RULES_ERR_RULE_NOT_PRESENT,
    //Add any other errors in between as required.
    DEL_SDTF_RULES_MAX_ERROR = MAX_ERROR_DEL_SDTF_RULES
};

enum SET_SDTF_RULE_STATUS_ERROR {
    SET_SDTF_RULE_STATUS_DB_ERROR = ERR_START_SET_SDTF_RULE_STATUS,
    SET_SDTF_RULE_STATUS_ERR_RULE_NOT_PRESENT,
    //Add any other errors in between as required.
    SET_SDTF_RULE_STATUS_MAX_ERROR = MAX_ERROR_SET_SDTF_RULE_STATUS
};

enum GEN_SDTF_RULE_STATUS_ERROR {
    GEN_MUTIPLE_SDTF_RULES_OPT_NOT_ALLOWED = ERR_START_SDTF_RULES_GEN_ERR,
    GEN_NO_SDTF_RULES_PASSED,
    GEN_FETCH_FAILED,
    //Add any other errors in between as required.
    GEN_SDTF_RULE_STATUS_MAX_ERROR = MAX_ERROR_SDTF_RULES_GEN_ERR
};

enum GET_SDTF_FEATURE_STATUS_ERROR {
    GET_SDTF_FEATURE_STATUS_DB_ERROR = ERR_START_GET_SDTF_FEATURE_STATUS,
    GET_SDTF_FEATURE_STATUS_ERR_NO_DATA_PRESENT,
    //Add any other errors in between as required.
    GET_SDTF_FEATURE_STATUS_MAX_ERROR = MAX_ERROR_GET_SDTF_FEATURE_STATUS
};

enum SET_SDTF_FEATURE_STATUS_ERROR {
    SET_SDTF_FEATURE_STATUS_DB_ERROR = ERR_START_SET_SDTF_FEATURE_STATUS,
    SET_SDTF_FEATURE_STATUS_ERR_RULE_NOT_PRESENT,
    //Add any other errors in between as required.
    SET_SDTF_FEATURE_STATUS_MAX_ERROR = MAX_ERROR_SET_SDTF_RULE_STATUS
};

enum GET_LOCAL_TRANSPORTTAG_ERROR {
    GET_LOCAL_TRANSPORTTAG_DB_ERROR = ERR_START_GET_LOCAL_TRANSPORTTAG,
    GET_LOCAL_TRANSPORTTAG_ERR_NO_DATA_PRESENT,
    //Add any other errors in between as required.
    GET_LOCAL_TRANSPORTTAG_MAX_ERROR = MAX_ERROR_GET_LOCAL_TRANSPORTTAG
};

enum SET_LOCAL_TRANSPORTTAG_ERROR {
    SET_LOCAL_TRANSPORTTAG_ERR_DB_ERROR = ERR_START_SET_LOCAL_TRANSPORTTAG,
    SET_LOCAL_TRANSPORTTAG_ERR_TAG_ALREADY_PRESENT,
    SET_LOCAL_TRANSPORTTAG_ERR_TAG_ALREADY_ADDED,
    SET_LOCAL_TRANSPORTTAG_ERR_TAG_ALREADY_SET,
    //Add any other errors in between as required.
    SET_LOCAL_TRANSPORTTAG_MAX_ERROR = MAX_ERROR_SET_LOCAL_TRANSPORTTAG
};




#endif // #ifndef __ERROR_RESP_H__
