/* ********************************-*-C-*-************************************
 * *                                                                          *
 * *          Copyright 2012 Diametriq, LLC All Rights Reserved.              *
 * *            Manufactured in the United States of America.                 *
 * *      1990 W. New Haven Ste. 303, Melbourne, Florida, 32904 U.S.A.        *
 * *                                                                          *
 * *   This product and related documentation is protected by copyright and   *
 * *   distributed under licenses restricting its use, copying, distribution  *
 * *   and decompilation.  No part of this product or related documentation   *
 * *   may be reproduced in any form by any means without prior written       *
 * *   authorization of Diametriq and its licensors, if any.                  *
 * *                                                                          *
 * *   RESTRICTED RIGHTS LEGEND:  Use, duplication, or disclosure by the      *
 * *   government is subject to restrictions as set forth in subparagraph     *
 * *   (c)(1)(ii) of the Rights in Technical Data and Computer Software       *
 * *   clause at DFARS 252.227-7013 and FAR 52.227-19.                        *
 * *                                                                          *
 * ****************************************************************************/

#ifndef __IWF_ERROR_RESP_H__
#define __IWF_ERROR_RESP_H__

#define ERR_START_FROM 5000

#define ERR_START_LOCAL_CONFIG ERR_START_FROM+1
#define MAX_ERROR_LOCAL_CONFIG ERR_START_FROM+20
#define ERR_START_MOD_LOCAL MAX_ERROR_LOCAL_CONFIG+1
#define MAX_ERROR_MOD_LOCAL ERR_START_FROM+30
#define ERR_START_SET_LOCAL MAX_ERROR_MOD_LOCAL+1
#define MAX_ERROR_SET_LOCAL ERR_START_FROM+50
#define ERR_START_DEL_LOCAL MAX_ERROR_SET_LOCAL+1
#define MAX_ERROR_DEL_LOCAL ERR_START_FROM+70

#define ERR_START_GET_IWF_DEST MAX_ERROR_DEL_LOCAL+1
#define MAX_ERROR_GET_IWF_DEST ERR_START_FROM+90
#define ERR_START_ADD_IWF_DEST MAX_ERROR_GET_IWF_DEST+1
#define MAX_ERROR_ADD_IWF_DEST ERR_START_FROM+110
#define ERR_START_MOD_IWF_DEST MAX_ERROR_ADD_IWF_DEST+1
#define MAX_ERROR_MOD_IWF_DEST ERR_START_FROM+130
#define ERR_START_DEL_IWF_DEST MAX_ERROR_MOD_IWF_DEST+1
#define MAX_ERROR_DEL_IWF_DEST ERR_START_FROM+150

#define ERR_START_GET_REMOTE_ROUTE MAX_ERROR_DEL_IWF_DEST+1
#define MAX_ERROR_GET_REMOTE_ROUTE ERR_START_FROM+170
#define ERR_START_ADD_REMOTE_ROUTE MAX_ERROR_GET_REMOTE_ROUTE+1
#define MAX_ERROR_ADD_REMOTE_ROUTE ERR_START_FROM+190
#define ERR_START_MOD_REMOTE_ROUTE MAX_ERROR_ADD_REMOTE_ROUTE+1
#define MAX_ERROR_MOD_REMOTE_ROUTE ERR_START_FROM+210
#define ERR_START_DEL_REMOTE_ROUTE MAX_ERROR_MOD_REMOTE_ROUTE+1
#define MAX_ERROR_DEL_REMOTE_ROUTE ERR_START_FROM+230

#define ERR_START_GET_ASSOC MAX_ERROR_DEL_REMOTE_ROUTE+1
#define MAX_ERROR_GET_ASSOC ERR_START_FROM+250
#define ERR_START_ADD_ASSOC MAX_ERROR_GET_ASSOC+1
#define MAX_ERROR_ADD_ASSOC ERR_START_FROM+272
#define ERR_START_MOD_ASSOC MAX_ERROR_ADD_ASSOC+1
#define MAX_ERROR_MOD_ASSOC ERR_START_FROM+290
#define ERR_START_DEL_ASSOC MAX_ERROR_MOD_ASSOC+1
#define MAX_ERROR_DEL_ASSOC ERR_START_FROM+310

#define ERR_START_GET_SCTP_ENDPOINT MAX_ERROR_DEL_ASSOC+1
#define MAX_ERROR_GET_SCTP_ENDPOINT ERR_START_FROM+330
#define ERR_START_ADD_SCTP_ENDPOINT MAX_ERROR_GET_SCTP_ENDPOINT+1
#define MAX_ERROR_ADD_SCTP_ENDPOINT ERR_START_FROM+350
#define ERR_START_MOD_SCTP_ENDPOINT MAX_ERROR_ADD_SCTP_ENDPOINT+1
#define MAX_ERROR_MOD_SCTP_ENDPOINT ERR_START_FROM+370
#define ERR_START_DEL_SCTP_ENDPOINT MAX_ERROR_MOD_SCTP_ENDPOINT+1
#define MAX_ERROR_DEL_SCTP_ENDPOINT ERR_START_FROM+390


#define ERR_START_GET_SCTP_PROFILE MAX_ERROR_DEL_SCTP_ENDPOINT+1
#define MAX_ERROR_GET_SCTP_PROFILE ERR_START_FROM+410
#define ERR_START_ADD_SCTP_PROFILE MAX_ERROR_GET_SCTP_PROFILE+1
#define MAX_ERROR_ADD_SCTP_PROFILE ERR_START_FROM+430
#define ERR_START_MOD_SCTP_PROFILE MAX_ERROR_ADD_SCTP_PROFILE+1
#define MAX_ERROR_MOD_SCTP_PROFILE ERR_START_FROM+450
#define ERR_START_DEL_SCTP_PROFILE MAX_ERROR_MOD_SCTP_PROFILE+1
#define MAX_ERROR_DEL_SCTP_PROFILE ERR_START_FROM+470

#define ERR_START_GET_SIG_MULTIHOMING MAX_ERROR_DEL_SCTP_PROFILE+1
#define MAX_ERROR_GET_SIG_MULTIHOMING ERR_START_FROM+490
#define ERR_START_ADD_SIG_MULTIHOMING MAX_ERROR_GET_SIG_MULTIHOMING+1
#define MAX_ERROR_ADD_SIG_MULTIHOMING ERR_START_FROM+510
#define ERR_START_MOD_SIG_MULTIHOMING MAX_ERROR_ADD_SIG_MULTIHOMING+1
#define MAX_ERROR_MOD_SIG_MULTIHOMING ERR_START_FROM+530
#define ERR_START_DEL_SIG_MULTIHOMING MAX_ERROR_MOD_SIG_MULTIHOMING+1
#define MAX_ERROR_DEL_SIG_MULTIHOMING ERR_START_FROM+550

#define ERR_START_GET_ASSOC_SET MAX_ERROR_DEL_SIG_MULTIHOMING+1
#define MAX_ERROR_GET_ASSOC_SET ERR_START_FROM+570
#define ERR_START_ADD_ASSOC_SET MAX_ERROR_GET_ASSOC_SET+1
#define MAX_ERROR_ADD_ASSOC_SET ERR_START_FROM+590
#define ERR_START_MOD_ASSOC_SET MAX_ERROR_ADD_ASSOC_SET+1
#define MAX_ERROR_MOD_ASSOC_SET ERR_START_FROM+610
#define ERR_START_DEL_ASSOC_SET MAX_ERROR_MOD_ASSOC_SET+1
#define MAX_ERROR_DEL_ASSOC_SET ERR_START_FROM+630

#define ERR_START_GET_TRANS_RULES MAX_ERROR_DEL_ASSOC_SET+1
#define MAX_ERROR_GET_TRANS_RULES ERR_START_FROM+650
#define ERR_START_ADD_TRANS_RULES MAX_ERROR_GET_TRANS_RULES+1
#define MAX_ERROR_ADD_TRANS_RULES ERR_START_FROM+670
#define ERR_START_MOD_TRANS_RULES MAX_ERROR_ADD_TRANS_RULES+1
#define MAX_ERROR_MOD_TRANS_RULES ERR_START_FROM+690
#define ERR_START_DEL_TRANS_RULES MAX_ERROR_MOD_TRANS_RULES+1
#define MAX_ERROR_DEL_TRANS_RULES ERR_START_FROM+710

#define ERR_START_GET_TRANS_DATA MAX_ERROR_DEL_TRANS_RULES+1
#define MAX_ERROR_GET_TRANS_DATA ERR_START_FROM+730
#define ERR_START_ADD_TRANS_DATA MAX_ERROR_GET_TRANS_DATA+1
#define MAX_ERROR_ADD_TRANS_DATA ERR_START_FROM+750
#define ERR_START_MOD_TRANS_DATA MAX_ERROR_ADD_TRANS_DATA+1
#define MAX_ERROR_MOD_TRANS_DATA ERR_START_FROM+770
#define ERR_START_DEL_TRANS_DATA MAX_ERROR_MOD_TRANS_DATA+1
#define MAX_ERROR_DEL_TRANS_DATA ERR_START_FROM+790

#define ERR_START_GET_S6AMAP_DATA MAX_ERROR_DEL_TRANS_DATA+1
#define MAX_ERROR_GET_S6AMAP_DATA ERR_START_FROM+810
#define ERR_START_ADD_S6AMAP_DATA MAX_ERROR_GET_S6AMAP_DATA+1
#define MAX_ERROR_ADD_S6AMAP_DATA ERR_START_FROM+830
#define ERR_START_MOD_S6AMAP_DATA MAX_ERROR_ADD_S6AMAP_DATA+1
#define MAX_ERROR_MOD_S6AMAP_DATA ERR_START_FROM+850
#define ERR_START_DEL_S6AMAP_DATA MAX_ERROR_MOD_S6AMAP_DATA+1
#define MAX_ERROR_DEL_S6AMAP_DATA ERR_START_FROM+870

#define ERR_START_GET_MAPS6A_DATA MAX_ERROR_DEL_S6AMAP_DATA+1
#define MAX_ERROR_GET_MAPS6A_DATA ERR_START_FROM+890
#define ERR_START_ADD_MAPS6A_DATA MAX_ERROR_GET_MAPS6A_DATA+1
#define MAX_ERROR_ADD_MAPS6A_DATA ERR_START_FROM+910
#define ERR_START_MOD_MAPS6A_DATA MAX_ERROR_ADD_MAPS6A_DATA+1
#define MAX_ERROR_MOD_MAPS6A_DATA ERR_START_FROM+930
#define ERR_START_DEL_MAPS6A_DATA MAX_ERROR_MOD_MAPS6A_DATA+1
#define MAX_ERROR_DEL_MAPS6A_DATA ERR_START_FROM+950

#define ERR_START_GET_CAPRO_DATA MAX_ERROR_DEL_MAPS6A_DATA+1
#define MAX_ERROR_GET_CAPRO_DATA ERR_START_FROM+970
#define ERR_START_ADD_CAPRO_DATA MAX_ERROR_GET_CAPRO_DATA+1
#define MAX_ERROR_ADD_CAPRO_DATA ERR_START_FROM+990
#define ERR_START_MOD_CAPRO_DATA MAX_ERROR_ADD_CAPRO_DATA+1
#define MAX_ERROR_MOD_CAPRO_DATA ERR_START_FROM+1010
#define ERR_START_DEL_CAPRO_DATA MAX_ERROR_MOD_CAPRO_DATA+1
#define MAX_ERROR_DEL_CAPRO_DATA ERR_START_FROM+1030

#define ERR_START_DEL_SSN MAX_ERROR_DEL_CAPRO_DATA+1
#define MAX_ERROR_DEL_SSN ERR_START_FROM+1050

#define ERR_START_GET_LOCALHOST  MAX_ERROR_DEL_SSN+1
#define MAX_ERROR_GET_LOCALHOST ERR_START_FROM+1070
#define ERR_START_GET_SCTPENDPOINT MAX_ERROR_GET_LOCALHOST+1
#define MAX_ERROR_GET_SCTPENDPOINT ERR_START_FROM+1090
#define ERR_START_GET_SCTPPROFILE MAX_ERROR_GET_SCTPENDPOINT+1
#define MAX_ERROR_GET_SCTPPROFILE ERR_START_FROM+1110
#define ERR_START_GET_ASSOCIATIONSET MAX_ERROR_GET_SCTPPROFILE+1
#define MAX_ERROR_GET_ASSOCIATIONSET ERR_START_FROM+1130
#define ERR_START_GET_ASSOCIATION MAX_ERROR_GET_ASSOCIATIONSET+1
#define MAX_ERROR_GET_ASSOCIATION ERR_START_FROM+1150
#define ERR_START_GET_DESTINATION MAX_ERROR_GET_ASSOCIATION+1
#define MAX_ERROR_GET_DESTINATION ERR_START_FROM+1170
#define ERR_START_GET_ROUTE MAX_ERROR_GET_DESTINATION+1
#define MAX_ERROR_GET_ROUTE ERR_START_FROM+1190
#define ERR_START_GET_TRANSRULES MAX_ERROR_GET_ROUTE+1
#define MAX_ERROR_GET_TRANSRULES ERR_START_FROM+1210
#define ERR_START_GET_S6AMAPCONFIG MAX_ERROR_GET_TRANSRULES+1
#define MAX_ERROR_GET_S6AMAPCONFIG ERR_START_FROM+1230

#define ERR_START_DEL_CAPROIDPSMS MAX_ERROR_GET_S6AMAPCONFIG+1
#define MAX_ERROR_DEL_CAPROIDPSMS ERR_START_FROM+1250
#define ERR_START_MOD_CAPROIDPSMS MAX_ERROR_DEL_CAPROIDPSMS+1
#define MAX_ERROR_MOD_CAPROIDPSMS ERR_START_FROM+1270
#define ERR_START_ADD_CAPROIDPSMS MAX_ERROR_MOD_CAPROIDPSMS+1
#define MAX_ERROR_ADD_CAPROIDPSMS ERR_START_FROM+1290
#define ERR_START_GET_CAPROIDPSMS MAX_ERROR_ADD_CAPROIDPSMS+1
#define MAX_ERROR_GET_CAPROIDPSMS ERR_START_FROM+1310

#define ERR_START_DEL_CAPROIDP MAX_ERROR_GET_CAPROIDPSMS+1
#define MAX_ERROR_DEL_CAPROIDP ERR_START_FROM+1330
#define ERR_START_MOD_CAPROIDP MAX_ERROR_DEL_CAPROIDP+1
#define MAX_ERROR_MOD_CAPROIDP ERR_START_FROM+1350
#define ERR_START_ADD_CAPROIDP MAX_ERROR_MOD_CAPROIDP+1
#define MAX_ERROR_ADD_CAPROIDP ERR_START_FROM+1370
#define ERR_START_GET_CAPROIDP MAX_ERROR_ADD_CAPROIDP+1
#define MAX_ERROR_GET_CAPROIDP ERR_START_FROM+1390

#define ERR_START_GET_MAPS6ACONFIG MAX_ERROR_GET_CAPROIDP+1
#define MAX_ERROR_GET_MAPS6ACONFIG ERR_START_FROM+1410

#define ERR_START_ADD_CAPROCONFIG MAX_ERROR_GET_MAPS6ACONFIG+1
#define MAX_ERROR_ADD_CAPROCONFIG ERR_START_FROM+1430

#define ERR_START_GENERIC_ERROR MAX_ERROR_ADD_CAPROCONFIG+1
#define MAX_ERROR_GENERIC_ERROR ERR_START_FROM+1450

#define ERR_START_DEL_TIMER MAX_ERROR_GENERIC_ERROR+1
#define MAX_ERROR_DEL_TIMER ERR_START_FROM+1470
#define ERR_START_MOD_TIMER MAX_ERROR_DEL_TIMER+1
#define MAX_ERROR_MOD_TIMER ERR_START_FROM+1490
#define ERR_START_ADD_TIMER MAX_ERROR_MOD_TIMER+1
#define MAX_ERROR_ADD_TIMER ERR_START_FROM+1510
#define ERR_START_GET_TIMER MAX_ERROR_ADD_TIMER+1
#define MAX_ERROR_GET_TIMER ERR_START_FROM+1530

#define ERR_START_ADD_UAL_CONFIG MAX_ERROR_GET_TIMER+1
#define MAX_ERROR_ADD_UAL_CONFIG ERR_START_FROM+1540
#define ERR_START_MOD_UAL_CONFIG MAX_ERROR_ADD_UAL_CONFIG+1
#define MAX_ERROR_MOD_UAL_CONFIG ERR_START_FROM+1550
#define ERR_START_DEL_UAL_CONFIG MAX_ERROR_MOD_UAL_CONFIG+1
#define MAX_ERROR_DEL_UAL_CONFIG ERR_START_FROM+1560
#define ERR_START_GET_UAL_CONFIG MAX_ERROR_DEL_UAL_CONFIG+1
#define MAX_ERROR_GET_UAL_CONFIG ERR_START_FROM+1570

#define ERR_START_DEL_CAPROIDPEXTTELESERVICECONFIG MAX_ERROR_GET_UAL_CONFIG+1
#define MAX_ERROR_DEL_CAPROIDPEXTTELESERVICECONFIG ERR_START_FROM+1590
#define ERR_START_MOD_CAPROIDPEXTTELESERVICECONFIG MAX_ERROR_DEL_CAPROIDPEXTTELESERVICECONFIG+1
#define MAX_ERROR_MOD_CAPROIDPEXTTELESERVICECONFIG ERR_START_FROM+1610
#define ERR_START_ADD_CAPROIDPEXTTELESERVICECONFIG MAX_ERROR_MOD_CAPROIDPEXTTELESERVICECONFIG+1
#define MAX_ERROR_ADD_CAPROIDPEXTTELESERVICECONFIG ERR_START_FROM+1630

#define ERR_START_DEL_CAPROIDPEXTBEARERSERVICECONFIG MAX_ERROR_ADD_CAPROIDPEXTTELESERVICECONFIG+1
#define MAX_ERROR_DEL_CAPROIDPEXTBEARERSERVICECONFIG ERR_START_FROM+1650
#define ERR_START_MOD_CAPROIDPEXTBEARERSERVICECONFIG MAX_ERROR_DEL_CAPROIDPEXTBEARERSERVICECONFIG+1
#define MAX_ERROR_MOD_CAPROIDPEXTBEARERSERVICECONFIG ERR_START_FROM+1670
#define ERR_START_ADD_CAPROIDPEXTBEARERSERVICECONFIG MAX_ERROR_MOD_CAPROIDPEXTBEARERSERVICECONFIG+1
#define MAX_ERROR_ADD_CAPROIDPEXTBEARERSERVICECONFIG ERR_START_FROM+1690

#define ERR_START_DEL_FEATURE MAX_ERROR_ADD_CAPROIDPEXTBEARERSERVICECONFIG+1
#define MAX_ERROR_DEL_FEATURE ERR_START_FROM+1710
#define ERR_START_MOD_FEATURE MAX_ERROR_DEL_FEATURE+1
#define MAX_ERROR_MOD_FEATURE ERR_START_FROM+1730
#define ERR_START_ADD_FEATURE MAX_ERROR_MOD_FEATURE+1
#define MAX_ERROR_ADD_FEATURE ERR_START_FROM+1750
#define ERR_START_GET_FEATURE MAX_ERROR_ADD_FEATURE+1
#define MAX_ERROR_GET_FEATURE ERR_START_FROM+1770

#define ERR_START_DEL_DCCA_FEATURE MAX_ERROR_GET_FEATURE+1
#define MAX_ERROR_DEL_DCCA_FEATURE ERR_START_FROM+1790
#define ERR_START_MOD_DCCA_FEATURE MAX_ERROR_DEL_DCCA_FEATURE+1
#define MAX_ERROR_MOD_DCCA_FEATURE ERR_START_FROM+1810
#define ERR_START_ADD_DCCA_FEATURE MAX_ERROR_MOD_DCCA_FEATURE+1
#define MAX_ERROR_ADD_DCCA_FEATURE ERR_START_FROM+1830
#define ERR_START_GET_DCCA_FEATURE MAX_ERROR_ADD_DCCA_FEATURE+1
#define MAX_ERROR_GET_DCCA_FEATURE ERR_START_FROM+1850

#define ERR_START_DEL_DCCA_DEST MAX_ERROR_GET_DCCA_FEATURE+1
#define MAX_ERROR_DEL_DCCA_DEST ERR_START_FROM+1870
#define ERR_START_MOD_DCCA_DEST MAX_ERROR_DEL_DCCA_DEST+1
#define MAX_ERROR_MOD_DCCA_DEST ERR_START_FROM+1890
#define ERR_START_ADD_DCCA_DEST MAX_ERROR_MOD_DCCA_DEST+1
#define MAX_ERROR_ADD_DCCA_DEST ERR_START_FROM+1910
#define ERR_START_GET_DCCA_DEST MAX_ERROR_ADD_DCCA_DEST+1
#define MAX_ERROR_GET_DCCA_DEST ERR_START_FROM+1930

#define ERR_START_DEL_VPLMN_ID MAX_ERROR_GET_DCCA_DEST+1
#define MAX_ERROR_DEL_VPLMN_ID ERR_START_DEL_VPLMN_ID+1710
#define ERR_START_GET_VPLMN_ID MAX_ERROR_DEL_VPLMN_ID+1
#define MAX_ERROR_GET_VPLMN_ID ERR_START_GET_VPLMN_ID+1730
#define ERR_IWF_START_MYSQL_TABLE_LOCK MAX_ERROR_GET_VPLMN_ID+1
#define MAX_IWF_ERROR_MYSQL_TABLE_LOCK ERR_START_FROM+1750

#define ERR_START_ADD_PROTOCOL_ACTION MAX_IWF_ERROR_MYSQL_TABLE_LOCK+1
#define MAX_ERR_ADD_PROTOCOL_ACTION ERR_START_FROM+1950
#define ERR_START_MOD_PROTOCOL_ACTION MAX_ERR_ADD_PROTOCOL_ACTION+1
#define MAX_ERR_MOD_PROTOCOL_ACTION ERR_START_FROM+1970
#define ERR_START_DEL_PROTOCOL_ACTION MAX_ERR_MOD_PROTOCOL_ACTION+1
#define MAX_ERR_DEL_PROTOCOL_ACTION ERR_START_FROM+1990
#define ERR_START_GET_PROTOCOL_ACTION MAX_ERR_DEL_PROTOCOL_ACTION+1
#define MAX_ERR_GET_PROTOCOL_ACTION ERR_START_FROM+2010

#define ERR_START_ADD_TRANS_RULES_EXT MAX_ERR_GET_PROTOCOL_ACTION+1
#define MAX_ERROR_ADD_TRANS_RULES_EXT ERR_START_FROM+2030

enum ADD_PROTOCOL_ACTION_ERRORS {
    ADD_PROTOCOL_ACTION_ERR_DATA_NOT_SET = ERR_START_ADD_PROTOCOL_ACTION,
    ADD_PROTOCOL_ACTION_ERR_DB_ERROR,
    ADD_PROTOCOL_ACTION_ERR_ALREADY_PRESENT,
    ADD_PROTOCOL_ACTION_ERR_CALL_SCENARIO_ALREADY_PRESENT,
    ADD_PROTOCOL_ACTION_ERR_CALL_SCENARIO_EVENT_TYPE_ALREADY_PRESENT,
    ADD_PROTOCOL_ACTION_ERR_CALL_SCENARIO_EVENT_TYPE_DETAILS_ALREADY_PRESENT,
    ADD_PROTOCOL_ACTION_ERR_PROTACTCFG_MANDATORY_PARAM_MISSING,
    ADD_PROTOCOL_ACTION_ERR_PROTACTCFG_NOT_PRESENT,
    ADD_PROTOCOL_ACTION_ERR_MSGDET_NOT_PRESENT,
    ADD_PROTOCOL_ACTION_ERR_CALL_SCENARIO_MANDATORY_PARAM_MISSING,
    ADD_PROTOCOL_ACTION_ERR_ARM_DATA_MANDATORY_PARAM_MISSING,   
    ADD_PROTOCOL_ACTION_ERR_EVENT_TYPE_MANDATORY_PARAM_MISSING,
    ADD_PROTOCOL_ACTION_ERR_CALL_SCENARIO_NOT_PRESENT,
    ADD_PROTOCOL_ACTION_ERR_CALL_TYPE_NOT_PRESENT

};

enum MOD_PROTOCOL_ACTION_ERRORS {
    MOD_PROTOCOL_ACTION_ERR_DATA_NOT_SET = ERR_START_MOD_PROTOCOL_ACTION,
    MOD_PROTOCOL_ACTION_ERR_DB_ERROR,
    MOD_PROTOCOL_ACTION_ERR_RULE_NOT_PRESENT,
    MOD_PROTOCOL_ACTION_ERR_CALL_SCENARIO_EVENT_TYPE_DETAILS_ALREADY_PRESENT

};

enum DEL_PROTOCOL_ACTION_ERRORS {
    DEL_PROTOCOL_ACTION_ERR_DATA_NOT_SET = ERR_START_DEL_PROTOCOL_ACTION,
    DEL_PROTOCOL_ACTION_ERR_DB_ERROR,
    DEL_PROTOCOL_ACTION_ERR_RULE_NOT_PRESENT,
    DEL_PROTOCOL_ACTION_ERR_CALL_SCENARIO_NOT_PRESENT,
    DEL_PROTOCOL_ACTION_ERR_EVENT_TYPE_NOT_PRESENT,
    DEL_PROTOCOL_ACTION_ERR_EVENT_TYPE_DETAILS_NOT_PRESENT,
    DEL_PROTOCOL_ACTION_ERR_RULE_PART_OF_TRANSLATOR_RULE,
    DEL_PROTOCOL_ACTION_ERR_DEFAULT_RRB_RULE_NOT_ALLOWED_TO_DELETE,
    DEL_PROTOCOL_ACTION_ERR_LAST_EVENT_TYPE_NOT_ALLOWED_TO_DELETE,
    DEL_PROTOCOL_ACTION_ERR_LAST_CALL_SCENARIO_NOT_ALLOWED_TO_DELETE
};

enum GET_PROTOCOL_ACTION_ERRORS {
    GET_PROTOCOL_ACTION_ERR_DB_ERROR,
    GET_PROTOCOL_ACTION_ERR_NO_DATA,

};

enum MYSQL_IWF_AQUIRE_TABLE_LOCK_ERROR{
    GET_IWF_LOCK_ERR_TABLE_MAP_NOT_CREATED = ERR_IWF_START_MYSQL_TABLE_LOCK,
    GET_IWF_LOCK_ERR_DB_ERROR,
    GET_IWF_LOCK_ERR_RESOURSE_BUSY,

    //Add any other errors in between as required.
    MYSQL_IWF_AQUIRE_TABLE_LOCK_MAX_ERROR = MAX_IWF_ERROR_MYSQL_TABLE_LOCK
};


enum GENERIC_CONFIG_ERRORS {
    GENERIC_ERR_USED_IN_ASSOCIATION = ERR_START_GENERIC_ERROR,
    GENERIC_ERR_USED_IN_ASSOCIATION_IN_MULTIHOMING_IP,
    GENERIC_ERR_DB_ERROR,
    GENERIC_ERR_ASSOCIATIONSET_IN_ACTIVE_STATE,
    GENERIC_ASSOCIATION_ERR_MULTIHOMING_IP_MAXCOUNT,
    GENERIC_SCTPENDPOINT_ERR_MULTIHOMING_IP_MAXCOUNT,
    GENERIC_ERR_USED_IN_SCTPENDPOINT_IN_MULTIHOMING_IP,
    GENERIC_SCTPENDPOINT_ERR_MULTIHOMING_IP_SAMEAS_PRIMARY_IP,

    //Add any other errors in between as required.
    GENERIC_CONFIG_ERR_MAX_ERROR = MAX_ERROR_GENERIC_ERROR
};

enum LOCALHOST_CONFIG_ERRORS {
    ERR_MANDATORY_PARAM_POINTCODE_MISSING=ERR_START_LOCAL_CONFIG,
    ERR_MANDATORY_PARAM_SSN_MISSING,
    //Add any other errors in between as required.
    LOCALHOST_CONFIG_ERR_MAX_ERROR = MAX_ERROR_LOCAL_CONFIG
};

enum MOD_LOCALHOST_ERRORS {
    MOD_LOCALHOST_ERR_LOCALHOST_NOT_PRESENT = ERR_START_MOD_LOCAL,
    MOD_LOCALHOST_ERR_SSN_NOT_PRESENT,
    MOD_LOCALHOST_ERR_DATA_NOT_SET,
    MOD_LOCALHOST_ERR_SSN_MAX_COUNT_REACHED,
    MOD_LOCALHOST_ERR_SSN_HOSTID_ALREADY_MAPPED,
    MOD_LOCALHOST_ERR_DB_ERROR,
    MOD_LOCALHOST_ERR_ASP_ID_ALREADY_PRESENT,

    //Add any other errors in between as required.
    MOD_LOCAL_ERR_MAX_ERROR = MAX_ERROR_MOD_LOCAL
};

enum SET_LOCALHOST_ERRORS {
    SET_LOCALHOST_ERR_LOCALHOST_ALREADY_EXISTS = ERR_START_SET_LOCAL,
    SET_LOCALHOST_ERR_MISSING_MANDATORY_PARAM,
    SET_LOCALHOST_ERR_SSN_NOT_PRESENT,
    SET_LOCALHOST_ERR_DATA_NOT_SET,
    SET_LOCALHOST_ERR_SSN_HOSTID_ALREADY_MAPPED,
    SET_LOCALHOST_ERR_SSN_MAX_COUNT_REACHED,
    SET_LOCALHOST_ERR_DB_ERROR,
    SET_LOCALSSN_ERR_DB_ERROR,
    SET_LOCALSSNMAPPING_ERR_DB_ERROR,

    //Add any other errors in between as required.
    SET_LOCALHOST_ERR_MAX_ERROR = MAX_ERROR_SET_LOCAL
};

enum DEL_LOCALHOST_SSN_ERRORS {
    DEL_LOCALHOST_ERR_SSN_NOT_MAPPED = ERR_START_DEL_SSN,
    DEL_LOCALHOST_ERR_SSN_NOT_PRESENT,
    DEL_LOCALHOST_ERR_DATA_NOT_SET,
    DEL_LOCALHOST_ERR_DB_ERROR,
    DEL_LOCALSSNMAPPING_ERR_DB_ERROR,
    DEL_LOCALHOST_ERR_LAST_SSN_NOT_ALLOWED_TO_DELETE,

    //Add any other errors in between as required.
    DEL_LOCALHOST_ERR_MAX_ERROR = MAX_ERROR_DEL_SSN
};

enum GET_LOCALHOST_ERRORS {
    GET_LOCALHOST_ERR_DB_ERROR = ERR_START_GET_LOCALHOST,
    GET_LOCALHOST_ERR_NO_DATA,
    GET_PROTOCOL_ERR_NO_DATA,
    GET_SSN_MAPPING_ERR_NO_DATA,
    GET_LOCALHOST_ERR_MAX_ERROR = MAX_ERROR_GET_LOCALHOST
};

enum DEL_SCTPENDPOINT_ERRORS {
    DEL_SCTPENDPOINT_ERR_NOT_PRESENT = ERR_START_DEL_SCTP_ENDPOINT,
    DEL_SCTPENDPOINT_ERR_USED_IN_ASSOCIATION,
    DEL_SCTPENDPOINT_ERR_USED_IN_ASSOCIATION_AND_ASSOCIATION_IN_MULTIHOMING_IP,
    DEL_SCTPENDPOINT_ERR_DATA_NOT_SET,
    DEL_SCTPENDPOINT_ERR_DB_ERROR,
    DEL_SCTPENDPOINT_NOT_SUPPORTED,
    DEL_SCTPENDPOINT_ERR_USED_IN_MULTIHOMING_IP,
    DEL_SCTPPROFILE_ERR_DEFAULT_PROFILE_NOT_ALLOWED,

    //Add any other errors in between as required.
    DEL_SCTPENDPOINT_ERR_MAX_ERROR = MAX_ERROR_DEL_SCTP_ENDPOINT
};

enum MOD_SCTPENDPOINT_ERRORS {
    MOD_SCTPENDPOINT_ERR_NOT_PRESENT = ERR_START_MOD_SCTP_ENDPOINT,
    MOD_SCTPENDPOINT_ERR_IP_PORT_ALREADY_PRESENT,
    MOD_SCTPENDPOINT_ERR_ASSOCIATION_IN_ACTIVE_STATE,
    MOD_SCTPENDPOINT_ERR_DB_ERROR,
    MOD_SCTPENDPOINT_ERR_DATA_NOT_SET,
    MOD_SCTPENDPOINT_NOT_SUPPORTED,
    MOD_SCTPENDPOINT_ERR_USED_IN_ASSOCIATION,
    MOD_SCTPENDPOINT_ERR_MAX_MULTIHOMING_IP,
    MOD_SCTPENDPOINT_ERR_MULTIHOMING_IP_ALREADY_PRESENT,
    MOD_SCTPENDPOINT_ERR_MULTIHOMING_IP_SAMEAS_PRIMARY_IP,
    MOD_SCTPENDPOINT_ERR_FAILED_INVALID_LOCAL_ENDPOINT_IP,

    //Add any other errors in between as required.
    MOD_SCTPENDPOINT_ERR_MAX_ERROR = MAX_ERROR_MOD_SCTP_ENDPOINT
};

enum ADD_SCTPENDPOINT_ERRORS {
    ADD_SCTPENDPOINT_ERR_ALREADY_PRESENT = ERR_START_ADD_SCTP_ENDPOINT,
    ADD_SCTPENDPOINT_ERR_IP_PORT_ALREADY_PRESENT,
    ADD_SCTPENDPOINT_ERR_DB_ERROR,
    ADD_SCTPENDPOINT_ERR_DATA_NOT_SET,
    ADD_SCTPENDPOINT_ERR_MAX_MULTIHOMING_IP,
    ADD_SCTPENDPOINT_ERR_MULTIHOMING_IP_ALREADY_PRESENT,
    ADD_SCTPENDPOINT_ERR_MULTIHOMING_IP_SAMEAS_PRIMARY_IP,

    //Add any other errors in between as required.
    ADD_SCTPENDPOINT_ERR_MAX_ERROR = MAX_ERROR_ADD_SCTP_ENDPOINT
};

enum GET_SCTPENDPOINT_ERRORS {
    GET_SCTPENDPOINT_ERR_DB_ERROR = ERR_START_GET_SCTPENDPOINT,
    GET_SCTPENDPOINT_ERR_NO_DATA,
    GET_SCTPENDPOINT_MULTIHOMING_ERR_NO_DATA,
    GET_SCTPENDPOINT_ERR_MAX_ERROR = MAX_ERROR_GET_SCTPENDPOINT
};

enum DEL_SCTPPROFILE_ERRORS {
    DEL_SCTPPROFILE_ERR_NOT_PRESENT = ERR_START_DEL_SCTP_PROFILE,
    DEL_SCTPPROFILE_ERR_USER_CANNOT_DELETE_DEFAULT_CONFIGURATION,
    DEL_SCTPPROFILE_ERR_USED_IN_ASSOCIATION,
    DEL_SCTPPROFILE_ERR_USED_IN_ASSOCIATION_AND_ASSOCIATION_IN_MUTIHOMING_IP,
    DEL_SCTPPROFILE_ERR_DATA_NOT_SET,
    DEL_SCTPPROFILE_ERR_DB_ERROR,
    DEL_SCTPPROFILE_NOT_SUPPORTED,
	
    //Add any other errors in between as required.
    DEL_SCTPPROFILE_ERR_MAX_ERROR = MAX_ERROR_DEL_SCTP_PROFILE
};

enum MOD_SCTPPROFILE_ERRORS {
    MOD_SCTPPROFILE_ERR_NOT_PRESENT = ERR_START_MOD_SCTP_PROFILE,
    MOD_SCTPPROFILE_ERR_ASSOCIATION_IN_ACTIVE_STATE,
    MOD_SCTPPROFILE_ERR_DB_ERROR,
    MOD_SCTPPROFILE_ERR_DATA_NOT_SET,
    MOD_SCTPPROFILE_NOT_SUPPORTED,
	
    //Add any other errors in between as required.
    MOD_SCTPPROFILE_ERR_MAX_ERROR = MAX_ERROR_MOD_SCTP_PROFILE
};

enum ADD_SCTPPROFILE_ERRORS {
    ADD_SCTPPROFILE_ERR_ALREADY_PRESENT = ERR_START_ADD_SCTP_PROFILE,
    ADD_SCTPPROFILE_ERR_DB_ERROR,
    ADD_SCTPPROFILE_ERR_DATA_NOT_SET,
	
    //Add any other errors in between as required.
    ADD_SCTPPROFILE_ERR_MAX_ERROR = MAX_ERROR_ADD_SCTP_PROFILE
};

enum GET_SCTPPROFILE_ERRORS {
    GET_SCTPPROFILE_ERR_DB_ERROR = ERR_START_GET_SCTPPROFILE,
    GET_SCTPPROFILE_ERR_NO_DATA,
    GET_SCTPPROFILE_ERR_MAX_ERROR = MAX_ERROR_GET_SCTPPROFILE
};


enum DEL_ASSOCIATIONSET_ERRORS {
    DEL_ASSOCIATIONSET_ERR_NO_PRESENT = ERR_START_DEL_ASSOC_SET,
    DEL_ASSOCIATIONSET_ERR_ASSOCIATIONSET_IN_ACTIVE_STATE,
    DEL_ASSOCIATIONSET_ERR_USED_IN_ROUTE,
    DEL_ASSOCIATIONSET_ERR_IS_ASSOCIATED,
    DEL_ASSOCIATIONSET_ERR_DB_ERROR,
    DEL_ASSOCIATIONSET_ERR_DATA_NOT_SET,
    DEL_ASSOCIATIONSET_ERR_LINKS_EXIST,
    DEL_ASSOCIATIONSET_ERR_FAILED_AT_BACKEND,
    DEL_ASSOCIATIONSET_NOT_SUPPORTED,

    //Add any other errors in between as required.
    DEL_ASSOCIATIONSET_ERR_MAX_ERROR = MAX_ERROR_DEL_ASSOC_SET
};

enum MOD_ASSOCIATIONSET_ERRORS {
    MOD_ASSOCIATIONSET_ERR_NO_PRESENT = ERR_START_MOD_ASSOC_SET,
    MOD_ASSOCIATIONSET_ERR_ASSOCIATIONSET_IN_ACTIVE_STATE,
    MOD_ASSOCIATIONSET_ERR_ALREADY_ENABLED,
    MOD_ASSOCIATIONSET_ERR_NOT_CONTAIN_ANY_ASSOCIATION,
    MOD_ASSOCIATIONSET_ERR_DB_ERROR,
    MOD_ASSOCIATIONSET_ERR_DATA_NOT_SET,
    MOD_ASSOCIATIONSET_NOT_SUPPORTED,
    MOD_ASSOCIATIONSET_ERR_ADJPOINTCODE_ALREADY_PRESENT,
    MOD_ASSOCIATIONSET_ERR_FAILED_AT_BACKEND,
    MOD_ASSOCIATIONSET_ERR_GENERIC_ERROR,
    MOD_ASSOCIATIONSET_ERR_NI_NOT_SAME_AS_LOCAL_NI,

    //Add any other errors in between as required.
    MOD_ASSOCIATIONSET_ERR_MAX_ERROR = MAX_ERROR_MOD_ASSOC_SET
};

enum ADD_ASSOCIATIONSET_ERRORS {
    ADD_ASSOCIATIONSET_ERR_ALREADY_PRESENT = ERR_START_ADD_ASSOC_SET,
    ADD_ASSOCIATIONSET_ERR_DB_ERROR,
    ADD_ASSOCIATIONSET_ERR_DATA_NOT_SET,
    ADD_ASSOCIATIONSET_ERR_MISSING_MANDATORY_PARAM,
    ADD_ASSOCIATIONSET_ERR_FAILED_AT_BACKEND,
    ADD_ROUTINGKEYROUTE_ERR_FAILED_AT_BACKEND,
    ADD_ASSOCIATIONSET_ERR_INVALID_TRAFFIC_MODE,
    ADD_ASSOCIATIONSET_ERR_COULD_NOT_OBTAIN_ROUTINGKEYINFO,
    ADD_ASSOCIATIONSET_ERR_UNABLE_TO_CREATE_APPLICATION_SERVER,
    ADD_ASSOCIATIONSET_ERR_CREATE_APPLICATION_SERVER_FAILED_TO_ADD_LINKSET_AND_DESTINATION,
    ADD_ASSOCIATIONSET_ERR_CREATE_APPLICATION_SERVER_PROCESS_FAILED,
    ADD_ASSOCIATIONSET_ERR_ADJPOINTCODE_ALREADY_PRESENT,
    ADD_ASSOCIATIONSET_ERR_NI_NOT_SAME_AS_LOCAL_NI,

    //Add any other errors in between as required.
    ADD_ASSOCIATIONSET_ERR_MAX_ERROR = MAX_ERROR_ADD_ASSOC_SET
};

enum GET_ASSOCIATIONSET_ERRORS {
    GET_ASSOCIATIONSET_ERR_DB_ERROR = ERR_START_GET_ASSOCIATIONSET,
    GET_ASSOCIATIONSET_ERR_NO_DATA,
    GET_ASSOCIATIONSET_MAPPING_ERR_NO_DATA,
    GET_ASSOCIATIONSET_ERR_MAX_ERROR = MAX_ERROR_GET_ASSOCIATIONSET
};
#if 0
enum ADD_UAL_CONFIG_ERRORS {
    ADD_UALCONFIG_ERR_FAILED_TO_ADD_GENERAL_CONFIG = ERR_START_ADD_UAL_CONFIG,
    ADD_UALCONFIG_ERR_MISSING_MANDATORY_PARAM,
    ADD_UALCONFIG_ERR_INVALID_TRAFFIC_MODE,
    ADD_UALCONFIG_ERR_COULD_NOT_OBTAIN_ROUTINGKEYINFO,
    ADD_UALCONFIG_ERR_UNABLE_TO_CREATE_APPLICATION_SERVER,
    ADD_UALCONFIG_ERR_CREATE_APPLICATION_SERVER_FAILED_TO_ADD_LINKSET_AND_DESTINATION,
    ADD_UALCONFIG_ERR_CREATE_APPLICATION_SERVER_PROCESS_FAILED,

    //Add any other errors in between as required.
    ADD_UAL_CONFIG_ERR_MAX_ERROR = MAX_ERROR_ADD_UAL_CONFIG
};
#endif
enum DEL_ASSOCIATION_ERRORS {
    DEL_ASSOCIATION_ERR_NOT_PRESENT = ERR_START_DEL_ASSOC,
    DEL_ASSOCIATION_ERR_ASSOCIATION_IN_ACTIVE_STATE,
    DEL_ASSOCIATION_ERR_USED_IN_MULTIHOMING_IP,
    DEL_ASSOCIATION_ERR_DB_ERROR,
    DEL_ASSOCIATION_ERR_DATA_NOT_SET,
    DEL_ASSOCIATION_NOT_SUPPORTED,
    DEL_ASSOCIATION_ERR_ASSOCIATED_TO_ASSOCIATION_SET_PART_OF_ROUTE,
    
    //Add any other errors in between as required.
    DEL_ASSOCIATION_ERR_MAX_ERROR = MAX_ERROR_DEL_ASSOC
};

enum MOD_ASSOCIATION_ERRORS {
    MOD_ASSOCIATION_ERR_NOT_PRESENT = ERR_START_MOD_ASSOC,
    MOD_ASSOCIATION_ERR_ASSOCIATION_IN_ACTIVE_STATE,
    MOD_ASSOCIATION_ERR_SCTP_PROFILE_NOT_PRESENT,
    MOD_ASSOCIATION_ERR_SCTP_END_POINT_NOT_PRESENT,
    MOD_ASSOCIATION_ERR_MAX_MULTIHOMING_IP,
    MOD_ASSOCIATION_ERR_ALREADY_ENABLED,
    MOD_ASSOCIATION_ERR_NOT_ASSOCIATED_TO_ANY_ASSOCIATIONSET,
    MOD_ASSOCIATION_ERR_DB_ERROR,
    MOD_ASSOCIATION_ERR_DATA_NOT_SET,
    MOD_ASSOCIATION_ERR_MULTIHOMING_IP_ALREADY_PRESENT,
    MOD_ASSOCIATION_ERR_ASSOCIATION_SET_NOT_PRESENT,
    MOD_ASSOCIATION_NOT_SUPPORTED,
    MOD_ASSOCIATION_ERR_LOCALENDPOINT_ALREADY_USED_IN_ASSOCIATION,
    MOD_ASSOCIATION_ERR_REMOTEENDPOINT_ALREADY_USED_IN_ASSOCIATION,
    MOD_ASSOCIATION_ERR_SCTP_END_POINTS_ARE_SAME_IN_ASSOCIATION,
    MOD_ASSOCIATION_ERR_ASP_ID_NOT_PRESENT,
	
    //Add any other errors in between as required.
    MOD_ASSOCIATION_ERR_MAX_ERROR = MAX_ERROR_MOD_ASSOC
};

enum ADD_ASSOCIATION_ERRORS {
    ADD_ASSOCIATION_ERR_ALREADY_PRESENT = ERR_START_ADD_ASSOC,
    ADD_ASSOCIATION_ERR_SCTP_PROFILE_NOT_PRESENT,
    ADD_ASSOCIATION_ERR_SCTP_END_POINT_NOT_PRESENT,
    ADD_ASSOCIATION_ERR_ASSOCIATION_SET_NOT_PRESENT,
    ADD_ASSOCIATION_ERR_MAX_MULTIHOMING_IP,
    ADD_ASSOCIATION_ERR_MULTIHOMING_IP_ALREADY_PRESENT,
    ADD_ASSOCIATION_ERR_DB_ERROR,
    ADD_ASSOCIATION_ERR_DATA_NOT_SET,
    ADD_ASSOCIATION_ERR_ALREADY_ASSOCIATED_TO_ASSOCIATIONSET,
    ADD_ASSOCIATION_ERR_FAILED_TO_ADD_LOCAL_ENDPOINT,
    ADD_ASSOCIATION_ERR_FAILED_INVALID_LOCAL_ENDPOINT_IP,
    ADD_ASSOCIATION_ERR_FAILED_TO_ADD_REMOTE_ENDPOINT,
    ADD_ASSOCIATION_ERR_TRANSPORT_INSTANCE_NOT_FOUND,
    ADD_ASSOCIATION_ERR_LINKSET_NOT_FOUND,
    ADD_ASSOCIATION_ERR_ASSOCIATION_NOT_FOUND_IN_ASSOCIATIONSET_AFTER_ADDITION,
	ADD_ASSOCIATION_ERR_MISSING_MANDATORY_PARAM,
    ADD_ASSOCIATION_ERR_LOCALENDPOINT_ALREADY_USED_IN_ASSOCIATION,
    ADD_ASSOCIATION_ERR_REMOTEENDPOINT_ALREADY_USED_IN_ASSOCIATION,
    ADD_ASSOCIATION_ERR_SCTP_END_POINTS_ARE_SAME_IN_ASSOCIATION,
    ADD_ASSOCIATION_MAPPING_ERR_REACHED_MAX_LIMIT,

    ADD_ASSOCIATION_ERR_ASP_ID_NOT_PRESENT,
    ADD_ASSOCIATION_ERR_FAILED_AT_BACKEND,
    //Add any other errors in between as required.
    ADD_ASSOCIATION_ERR_MAX_ERROR = MAX_ERROR_ADD_ASSOC
};

enum GET_ASSOCIATION_ERRORS {
    GET_ASSOCIATION_ERR_DB_ERROR = ERR_START_GET_ASSOCIATION,
    GET_ASSOCIATION_ERR_NO_DATA,
    GET_ASSOCIATION_MULTIHOMING_ERR_NO_DATA,
    GET_ASSOCIATION_ERR_MAX_ERROR = MAX_ERROR_GET_ASSOCIATION
};

enum GET_MULTIHOMINGIP_ERRORS {
    GET_MULTIHOMINGIP_ERR_NOT_PRESENT = ERR_START_GET_SIG_MULTIHOMING,
    GET_MULTIHOMINGIP_ERR_NO_DATA,
    GET_MULTIHOMINGIP_ERR_MAX_ERROR = MAX_ERROR_GET_SIG_MULTIHOMING
};

enum DEL_MULTIHOMINGIP_ERRORS {
    DEL_MULTIHOMINGIP_ERR_NOT_PRESENT = ERR_START_DEL_SIG_MULTIHOMING,
    DEL_MULTIHOMINGIP_ERR_ASSOCIATION_IN_ACTIVE_STATE,
    DEL_MULTIHOMINGIP_ERR_DB_ERROR,
    DEL_MULTIHOMINGIP_ERR_NOT_SET,
    DEL_MULTIHOMINGIP_ERR_ENDPOINT_NOT_PRESENT,
    	
    //Add any other errors in between as required.
    DEL_MULTIHOMINGIP_ERR_MAX_ERROR = MAX_ERROR_DEL_SIG_MULTIHOMING
};

enum DEL_DESTINATION_ERRORS {
    DEL_DESTINATION_ERR_NOT_PRESENT = ERR_START_DEL_IWF_DEST,
    DEL_DESTINATION_ERR_USED_IN_ROUTE,
    DEL_DESTINATION_ERR_USED_IN_TRANSLATOR_RULE,
    DEL_DESTINATION_ERR_DB_ERROR,
    DEL_DESTINATION_ERR_DATA_NOT_SET,
    DEL_DESTINATION_NOT_SUPPORTED,

    //Add any other errors in between as required.
    DEL_DESTINATION_ERR_MAX_ERROR = MAX_ERROR_DEL_IWF_DEST
};

enum MOD_DESTINATION_ERRORS {
    MOD_DESTINATION_ERR_NOT_PRESENT = ERR_START_MOD_IWF_DEST,
    MOD_DESTINATION_ERR_DB_ERROR,
    MOD_DESTINATION_ERR_DATA_NOT_SET,
    MOD_DESTINATION_NOT_SUPPORTED,
    MOD_DESTINATION_ERR_USED_IN_ROUTE,
    MOD_DESTINATION_ERR_USED_IN_TRANSLATOR_RULE,	
    //Add any other errors in between as required.
    MOD_DESTINATION_ERR_MAX_ERROR = MAX_ERROR_MOD_IWF_DEST
};

enum ADD_DESTINATION_ERRORS {
    ADD_DESTINATION_ERR_ALREADY_PRESENT = ERR_START_ADD_IWF_DEST,
    ADD_DESTINATION_ERR_DB_ERROR,
    ADD_DESTINATION_ERR_DATA_NOT_SET,
    ADD_DESTINATION_ERR_MISSING_MANDATORY_PARAM,

	
    //Add any other errors in between as required.
    ADD_DESTINATION_ERR_MAX_ERROR = MAX_ERROR_ADD_IWF_DEST
};

enum GET_DESTINATION_ERRORS {
    GET_DESTINATION_ERR_DB_ERROR = ERR_START_GET_DESTINATION,
    GET_DESTINATION_ERR_NO_DATA,
    GET_DESTINATION_ERR_MAX_ERROR = MAX_ERROR_GET_DESTINATION
};


enum DEL_ROUTE_ERRORS {
    DEL_ROUTE_ERR_ROUTE_NOT_PRESENT = ERR_START_DEL_REMOTE_ROUTE,
    DEL_ROUTE_ERR_ASSOCIATION_SET_NOT_PRESENT,
    DEL_ROUTE_ERR_DESTINATION_NOT_PRESENT,
    DEL_ROUTE_ERR_PRIORITY_NOT_PRESENT,
    DEL_ROUTE_ERR_ASSOCIATION_SET_IN_ACTIVE_STATE,
    DEL_ROUTE_ERR_DB_ERROR,
    DEL_ROUTE_ERR_DATA_NOT_SET,
    DEL_ROUTE_NOT_SUPPORTED,
    DEL_ROUTE_ERR_POINTCODE_OR_SSN_NOT_PRESENT_IN_DEST_INFO,

    //Add any other errors in between as required.
    DEL_ROUTE_ERR_MAX_ERROR = MAX_ERROR_DEL_REMOTE_ROUTE
};

enum MOD_ROUTE_ERRORS {
    MOD_ROUTE_ERR_ROUTE_NOT_PRESENT = ERR_START_MOD_REMOTE_ROUTE,
    MOD_ROUTE_ERR_ASSOCIATION_SET_NOT_PRESENT,
    MOD_ROUTE_ERR_ASSOCIATION_NOT_PRESENT,
    MOD_ROUTE_ERR_DESTINATION_NOT_PRESENT,
    MOD_ROUTE_ERR_ASSOCIATION_SET_ALREADY_HAVE_ROUTE,
    MOD_ROUTE_ERR_DESTINATION_ALREADY_USED_IN_ROUTE,
    MOD_ROUTE_ERR_ASSOCIATION_SET_IN_ACTIVE_STATE,
    MOD_ROUTE_ERR_DB_ERROR,
    MOD_ROUTE_ERR_DATA_NOT_SET,
    MOD_ROUTE_NOT_SUPPORTED,
    MOD_ROUTE_ERR_MISSING_MANDATORY_PARAMETER,
    MOD_ROUTE_ERR_MISSING_DEST_INFO,
    MOD_ROUTE_ERR_FAILED_TO_MODIFY_ROUTE,
    MOD_ROUTE_ERR_GENERIC_ERROR,

    //Add any other errors in between as required.
    MOD_ROUTE_ERR_MAX_ERROR = MAX_ERROR_MOD_REMOTE_ROUTE
};


enum ADD_ROUTE_ERRORS {
    ADD_ROUTE_ERR_ROUTE_ALREADY_PRESENT = ERR_START_ADD_REMOTE_ROUTE,
    ADD_ROUTE_ERR_ASSOCIATION_SET_NOT_PRESENT,
    ADD_ROUTE_ERR_DESTINATION_NOT_PRESENT,
    ADD_ROUTE_ERR_DESTINATION_ALREADY_USED_IN_ROUTE,
    ADD_ROUTE_ERR_DATA_NOT_SET,
    ADD_ROUTE_ERR_ASSOCIATION_SET_ALREADY_HAVE_ROUTE,
    ADD_ROUTE_ERR_DB_ERROR,
    ADD_ROUTE_ERR_MISSING_MANDATORY_PARAM,
    ADD_ROUTE_ERR_ASSOCIATION_NOT_PRESENT,
    ADD_ROUTE_ERR_GENERIC_ERROR,
	
    //Add any other errors in between as required.
    ADD_ROUTE_ERR_MAX_ERROR = MAX_ERROR_ADD_REMOTE_ROUTE
};

enum GET_ROUTE_ERRORS {
    GET_ROUTE_ERR_DB_ERROR = ERR_START_GET_ROUTE,
    GET_ROUTE_ERR_NO_DATA,
    GET_ROUTE_ERR_MAX_ERROR = MAX_ERROR_GET_ROUTE
};


enum DEL_TRANSRULES_ERRORS {
    DEL_TRANSRULES_ERR_TRANS_RULE_NOT_PRESENT = ERR_START_DEL_TRANS_RULES,
    DEL_TRANSRULES_ERR_TRANSLATOR_NOT_PRESENT,
    DEL_TRANSRULES_ERR_TRANSLATORTYPE_NOT_PRESENT,
    DEL_TRANSRULES_ERR_MISSING_MANDATORY_PARAM,
    DEL_TRANSRULES_ERR_DB_ERROR,
    
    DEL_TRANSRULES_ERR_DATA_NOT_PRESENT,
    //Add any other errors in between as required.
    DEL_TRANSRULES_ERR_MAX_ERROR = MAX_ERROR_DEL_TRANS_RULES
};

enum MOD_TRANSRULES_ERRORS {
    MOD_TRANSRULES_ERR_TRANS_RULE_NOT_PRESENT = ERR_START_MOD_TRANS_RULES,
    MOD_TRANSRULES_ERR_TRANSLATOR_NOT_PRESENT,
    MOD_TRANSRULES_ERR_TRANSLATORTYPE_NOT_PRESENT,
    MOD_TRANSRULES_ERR_MISSING_MANDATORY_PARAM,
    MOD_TRANSRULES_ERR_DB_ERROR,
    MOD_TRANSRULES_ERR_DESTINATION_NOT_PRESENT,
    MOD_TRANSRULES_NOT_SUPPORTED,
    MOD_TRANSRULES_ERR_MCC_MNC_APPID_COMBINATION_ALREADY_PRESENT,
    MOD_TRANSRULES_ERR_DATA_NOT_PRESENT,
    MOD_TRANSRULES_ERR_IMSI_PREFIX_AND_SERVICE_KEY_ALREADY_PRESENT,
    MOD_TRANSRULES_ERR_PROTOCOL_ACTION_NOT_PRESENT,

    MOD_TRANSRULES_ERR_MAX_VPLMN_ID,
    MOD_TRANSRULES_ERR_VPLMN_ID_ALREADY_PRESENT,
    MOD_TRANSRULES_ERR_SERVICE_KEY_ALREADY_PRESENT,
    MOD_TRANSRULES_ERR_DESTINATION_HOST_NOT_PRESENT,
    MOD_TRANSRULES_ERR_ALTERNATE_HOST_NOT_PRESENT,
    MOD_TRANSRULES_ERR_DEST_NOT_PART_OF_REMOTE_ROUTE,
    //Add any other errors in between as required.
    MOD_TRANSRULES_ERR_MAX_ERROR = MAX_ERROR_MOD_TRANS_RULES
};

enum ADD_TRANSRULES_ERRORS {
    ADD_TRANSRULES_ERR_TRANS_RULE_NOT_PRESENT = ERR_START_ADD_TRANS_RULES,
    ADD_TRANSRULES_ERR_TRANS_RULE_ALREADY_PRESENT, 
    ADD_TRANSRULES_ERR_TRANSLATOR_NOT_PRESENT,
    ADD_TRANSRULES_ERR_TRANSLATORTYPE_NOT_PRESENT,
    ADD_TRANSRULES_ERR_MISSING_MANDATORY_PARAM,
    ADD_TRANSRULES_ERR_DB_ERROR,
    ADD_TRANSRULES_ERR_DESTINATION_NOT_PRESENT,
    ADD_TRANSRULES_ERR_MCC_MNC_APPID_COMBINATION_ALREADY_PRESENT,
    ADD_TRANSRULES_ERR_MISSING_MANDATORY_PARAM_SERVICE_KEY_FOR_SS7,
    ADD_TRANSRULES_ERR_MISSING_MANDATORY_PARAM_MCC_MNC_FOR_SS7,
    ADD_TRANSRULES_ERR_MISSING_MANDATORY_PARAM_IMSIPREFIX_OR_SERVICEKEY_FOR_SS7,
    ADD_TRANSRULES_ERR_IMSI_PREFIX_AND_SERVICE_KEY_ALREADY_PRESENT,
    ADD_TRANSRULES_ERR_PROTOCOL_ACTION_NOT_PRESENT,
    ADD_TRANSRULES_ERR_MISSING_MANDATORY_PARAM_PROACTIONRULE_FOR_SS7,

    ADD_TRANSRULES_ERR_DATA_NOT_PRESENT,
    ADD_TRANSRULES_ERR_MAX_VPLMN_ID,
    ADD_TRANSRULES_ERR_VPLMN_ID_ALREADY_PRESENT,

    ADD_TRANSRULES_ERR_SERVICE_KEY_ALREADY_PRESENT,
    ADD_TRANSRULES_ERR_DESTINATION_HOST_NOT_PRESENT,
    //Dont add new error's here.
    ADD_TRANSRULES_ERR_MAX_ERROR = MAX_ERROR_ADD_TRANS_RULES
};

enum ADD_TRANSRULES_ERRORS_EXT {
    ADD_TRANSRULES_ERR_ALTERNATE_HOST_NOT_PRESENT = ERR_START_ADD_TRANS_RULES_EXT,
    //Add any other errors in between as required.
    ADD_TRANSRULES_ERR_DEST_NOT_PART_OF_REMOTE_ROUTE,
    MOD_TRANSRULES_ERR_ALT_DEST_NOT_PART_OF_REMOTE_ROUTE,
    MOD_TRANSRULES_ERR_ALT_DESTINATION_NOT_PRESENT,
    ADD_TRANSRULES_ERR_ALT_DEST_NOT_PART_OF_REMOTE_ROUTE,
    ADD_TRANSRULES_ERR_ALT_DESTINATION_NOT_PRESENT,
    ADD_TRANSRULES_ERR_MAX_ERROR_EXT =  MAX_ERROR_ADD_TRANS_RULES_EXT
};

enum GET_TRANSRULES_ERRORS {
    GET_TRANSRULES_ERR_DB_ERROR = ERR_START_GET_TRANSRULES,
    GET_TRANSRULES_ERR_NO_DATA,
    GET_TRANSLATOR_TYPE_ERR_NO_DATA,
    GET_TRANSLATOR_ERR_NO_DATA,
    GET_TRANSRULES_ERR_MAX_ERROR = MAX_ERROR_GET_TRANSRULES
};


enum DEL_MAPS6ACONFIG_ERRORS {
    DEL_MAPS6ACONFIG_ERR_TRANSLATOR_MAPPING_NOT_PRESENT = ERR_START_DEL_MAPS6A_DATA,
    DEL_MAPS6ACONFIG_ERR_TRANSLATOR_NOT_PRESENT,
    DEL_MAPS6ACONFIG_ERR_DB_ERROR,
    DEL_MAPS6ACONFIG_ERR_ALLOWED_VPLMN_ID_NOT_PRESENT,
    DEL_MAPS6ACONFIG_ERR_DATA_NOT_PRESENT,
    DEL_MAPS6ACONFIG_ERR_ALLOWED_VPLMN_ID_SGSN_MAP_NOT_PRESENT,

    //Add any other errors in between as required.
    DEL_MAPS6ACONFIG_ERR_MAX_ERROR = MAX_ERROR_DEL_MAPS6A_DATA
};

enum MOD_MAPS6ACONFIG_ERRORS {
    MOD_MAPS6ACONFIG_ERR_TRANSLATOR_MAPPING_NOT_PRESENT = ERR_START_MOD_MAPS6A_DATA,
    MOD_MAPS6ACONFIG_ERR_TRANSLATOR_NOT_PRESENT,
    MOD_MAPS6ACONFIG_ERR_DB_ERROR,
    MOD_MAPS6ACONFIG_ERR_DATA_NOT_PRESENT,
    MOD_MAPS6ACONFIG_ERR_ALLOWED_VPLMN_ID_SGSN_MAP_ALREADY_PRESENT,
    MOD_MAPS6ACONFIG_ERR_SGSN_CONFIG_ALREADY_PRESENT,

    //Add any other errors in between as required.
    MOD_MAPS6ACONFIG_ERR_MAX_ERROR = MAX_ERROR_MOD_MAPS6A_DATA
};

enum ADD_MAPS6ACONFIG_ERRORS {
    ADD_MAPS6ACONFIG_ERR_TRANSLATOR_MAPPING_ALREADY_PRESENT = ERR_START_ADD_MAPS6A_DATA,
    ADD_MAPS6ACONFIG_ERR_TRANSLATOR_NOT_PRESENT,
    ADD_MAPS6ACONFIG_ERR_DB_ERROR,
    ADD_MAPS6ACONFIG_ERR_DATA_NOT_PRESENT,
    ADD_MAPS6ACONFIG_ERR_ALLOWED_VPLMN_ID_ALREADY_PRESENT,
    ADD_MAPS6ACONFIG_ERR_ALLOWED_VPLMN_ID_SGSN_MAP_ALREADY_PRESENT,
    ADD_MAPS6ACONFIG_ERR_SGSN_CONFIG_ALREADY_PRESENT,

    //Add any other errors in between as required.
    ADD_MAPS6ACONFIG_ERR_MAX_ERROR = MAX_ERROR_ADD_MAPS6A_DATA
};

enum GET_MAPS6ACONFIG_ERRORS {
    GET_MAPS6ACONFIG_ERR_DB_ERROR = ERR_START_GET_MAPS6ACONFIG,
    GET_MAPS6ACONFIG_ERR_NO_DATA,

    //Add any other errors in between as required.
    GET_MAPS6ACONFIG_ERR_MAX_ERROR = MAX_ERROR_GET_MAPS6ACONFIG
};


enum DEL_S6AMAPCONFIG_ERRORS {
    DEL_S6AMAPCONFIG_ERR_TRANSLATOR_MAPPING_NOT_PRESENT = ERR_START_DEL_S6AMAP_DATA,
    DEL_S6AMAPCONFIG_ERR_TRANSLATOR_NOT_PRESENT,
    DEL_S6AMAPCONFIG_ERR_S6AMAP_SGSN_NOT_PRESENT,
    DEL_S6AMAPCONFIG_ERR_S6AMAP_SGSN_ALREADY_PRESENT,
    DEL_S6AMAPCONFIG_ERR_DB_ERROR,
    DEL_S6AMAPCONFIG_ERR_S6AMAP_SGSN_PREFIX_NOT_PRESENT,
    
    DEL_S6AMAPCONFIG_ERR_DATA_NOT_PRESENT,
    //Add any other errors in between as required.
    DEL_S6AMAPCONFIG_ERR_MAX_ERROR = MAX_ERROR_DEL_S6AMAP_DATA
};

enum MOD_S6AMAPCONFIG_ERRORS {
    MOD_S6AMAPCONFIG_ERR_TRANSLATOR_MAPPING_NOT_PRESENT = ERR_START_MOD_S6AMAP_DATA,
    MOD_S6AMAPCONFIG_ERR_TRANSLATOR_NOT_PRESENT,
    MOD_S6AMAPCONFIG_ERR_S6AMAP_SGSN_ALREADY_PRESENT,
    MOD_S6AMAPCONFIG_ERR_DB_ERROR,
    MOD_S6AMAPCONFIG_ERR_S6AMAP_SGSN_PREFIX_ALREADY_PRESENT,

    MOD_S6AMAPCONFIG_ERR_DATA_NOT_PRESENT,
    //Add any other errors in between as required.
    MOD_S6AMAPCONFIG_ERR_MAX_ERROR = MAX_ERROR_MOD_S6AMAP_DATA
};

enum ADD_S6AMAPCONFIG_ERRORS {
    ADD_S6AMAPCONFIG_ERR_TRANSLATOR_MAPPING_ALREADY_PRESENT = ERR_START_ADD_S6AMAP_DATA,
    ADD_S6AMAPCONFIG_ERR_TRANSLATOR_NOT_PRESENT,
    ADD_S6AMAPCONFIG_ERR_S6AMAP_SGSN_ALREADY_PRESENT,
    ADD_S6AMAPCONFIG_ERR_DB_ERROR,
    ADD_S6AMAPCONFIG_ERR_S6AMAP_SGSN_PREFIX_ALREADY_PRESENT,

    ADD_S6AMAPCONFIG_ERR_DATA_NOT_PRESENT,
    //Add any other errors in between as required.
    ADD_S6AMAPCONFIG_ERR_MAX_ERROR = MAX_ERROR_ADD_S6AMAP_DATA
};

enum GET_S6AMAPCONFIG_ERRORS {
    GET_S6AMAPCONFIG_ERR_DB_ERROR = ERR_START_GET_S6AMAPCONFIG,
    GET_S6AMAPCONFIG_ERR_NO_DATA,
    GET_S6AMAP_SGSNADDR_CONFIG_ERR_NO_DATA,

    //Add any other errors in between as required.
    GET_S6AMAPCONFIG_ERR_MAX_ERROR = MAX_ERROR_GET_S6AMAPCONFIG
};

enum DEL_CAPROIDPSMSCONFIG_ERRORS {
    DEL_CAPROIDPSMSCONFIG_ERR_CONFIG_NOT_PRESENT = ERR_START_DEL_CAPROIDPSMS,
    DEL_CAPROIDPSMSCONFIG_ERR_DB_ERROR,

    //Add any other errors in between as required.
    DEL_CAPROIDPSMSCONFIG_ERR_MAX_ERROR = MAX_ERROR_DEL_CAPROIDPSMS

};

enum MOD_CAPROIDPSMSCONFIG_ERRORS {
    MOD_CAPROIDPSMSCONFIG_ERR_CONFIG_NOT_PRESENT = ERR_START_MOD_CAPROIDPSMS,
    MOD_CAPROIDPSMSCONFIG_ERR_DB_ERROR,

    //Add any other errors in between as required.
    MOD_CAPROIDPSMSCONFIG_ERR_MAX_ERROR = MAX_ERROR_MOD_CAPROIDPSMS
};

enum ADD_CAPROIDPSMSCONFIG_ERRORS {
    ADD_CAPROIDPSMSCONFIG_ERR_CONFIG_ALREADY_PRESENT = ERR_START_ADD_CAPROIDPSMS,
    ADD_CAPROIDPSMSCONFIG_ERR_DB_ERROR,

    //Add any other errors in between as required.
    ADD_CAPROIDPSMSCONFIG_ERR_MAX_ERROR = MAX_ERROR_ADD_CAPROIDPSMS
};

enum GET_CAPROIDPSMSCONFIG_ERRORS {

    GET_CAPROIDPSMSCONFIG_ERR_DB_ERROR = ERR_START_GET_CAPROIDPSMS,
    GET_CAPROIDPSMSCONFIG_ERR_NO_DATA,
    GET_CAPROCONFIG_ERR_NO_DATA,
    GET_CAPROIDPSMSCONFIG_ERR_MAX_ERROR = MAX_ERROR_GET_CAPROIDPSMS
};

enum DEL_CAPROIDPCONFIG_ERRORS {
    DEL_CAPROIDPCONFIG_ERR_CONFIG_NOT_PRESENT = ERR_START_DEL_CAPROIDP,
    DEL_CAPROIDPCONFIG_ERR_DB_ERROR,

    //Add any other errors in between as required.
    DEL_CAPROIDPCONFIG_ERR_MAX_ERROR = MAX_ERROR_DEL_CAPROIDP
};

enum MOD_CAPROIDPCONFIG_ERRORS {
    MOD_CAPROIDPCONFIG_ERR_CONFIG_NOT_PRESENT = ERR_START_MOD_CAPROIDP,
    MOD_CAPROIDPCONFIG_ERR_DB_ERROR,

    //Add any other errors in between as required.
    MOD_CAPROIDPCONFIG_ERR_MAX_ERROR = MAX_ERROR_MOD_CAPROIDP
};

enum ADD_CAPROIDPCONFIG_ERRORS {
    ADD_CAPROIDPCONFIG_ERR_CONFIG_NOT_PRESENT = ERR_START_ADD_CAPROIDP,
    ADD_CAPROIDPCONFIG_ERR_DB_ERROR,
    
    ADD_CAPROIDPCONFIG_ERR_CONFIG_ALREADY_PRESENT,
    //Add any other errors in between as required.
    ADD_CAPROIDPCONFIG_ERR_MAX_ERROR = MAX_ERROR_ADD_CAPROIDP

};

enum GET_CAPROIDPCONFIG_ERRORS {

    GET_CAPROIDPCONFIG_ERR_DB_ERROR = ERR_START_GET_CAPROIDP,
    GET_CAPROIDPCONFIG_ERR_NO_DATA,
    GET_TELESERVICE_TO_SERVICE_ERR_NO_DATA,
    GET_BEARERSERVICE_TO_SERVICE_ERR_NO_DATA,
    GET_CAPROIDPCONFIG_ERR_MAX_ERROR = MAX_ERROR_GET_CAPROIDP
};

enum ADD_CAPROCONFIG_ERRORS {
    ADD_CAPROCONFIG_ERR_CONFIG_NOT_PRESENT = ERR_START_ADD_CAPROCONFIG,
    ADD_CAPROCONFIG_ERR_DB_ERROR,
    ADD_CAPROCONFIG_ERR_TRANSLATOR_NOT_PRESENT,

    ADD_CAPROCONFIG_ERR_DATA_NOT_PRESENT,
    //Add any other errors in between as required.
    ADD_CAPROCONFIG_ERR_MAX_ERROR = MAX_ERROR_ADD_CAPROCONFIG
};

enum GET_CAPROCONFIG_ERRORS {
    GET_CAPROCONFIG_ERR_DB_ERROR = ERR_START_GET_CAPRO_DATA, 
    GET_CAPROCONFIG_ERR_MAX_ERROR  = MAX_ERROR_GET_CAPRO_DATA
};
enum MOD_CAPROCONFIG_ERRORS {
    MOD_CAPROCONFIG_ERR_CONFIG_NOT_PRESENT = ERR_START_MOD_CAPRO_DATA,
    MOD_CAPROCONFIG_ERR_DB_ERROR,
    MOD_CAPROCONFIG_ERR_TRANSLATOR_NOT_PRESENT,

    MOD_CAPROCONFIG_ERR_DATA_NOT_PRESENT = MAX_ERROR_MOD_CAPRO_DATA
    //Add any other errors in between as required.
    //ADD_CAPROIDP_ERR_MAX_ERROR = MAX_ERROR_ADD_CAPROCONFIG
};
enum DEL_CAPROCONFIG_ERRORS {
    DEL_CAPROCONFIG_ERR_CONFIG_NOT_PRESENT = ERR_START_DEL_CAPRO_DATA,
    DEL_CAPROCONFIG_ERR_DB_ERROR,
    DEL_CAPROCONFIG_ERR_TRANSLATOR_NOT_PRESENT,

    DEL_CAPROCONFIG_ERR_DATA_NOT_PRESENT = MAX_ERROR_DEL_CAPRO_DATA
    //Add any other errors in between as required.
};
enum MOD_CAPROIDPEXTTELESERVICECONFIG_ERRORS {
    MOD_CAPROIDPEXTTELESERVICECONFIG_ERR_DB_ERROR = ERR_START_MOD_CAPROIDPEXTTELESERVICECONFIG,
    MOD_CAPROIDPEXTTELESERVICECONFIG_ERR_CONFIG_ALREADY_PRESENT,
    //Add any other errors in between as required.
    MOD_CAPROIDPEXTTELESERVICECONFIG_ERR_MAX_ERROR = MAX_ERROR_MOD_CAPROIDPEXTTELESERVICECONFIG
};

enum MOD_CAPROIDPEXTBEARERSERVICECONFIG_ERRORS {
    MOD_CAPROIDPEXTBEARERSERVICECONFIG_ERR_DB_ERROR = ERR_START_MOD_CAPROIDPEXTBEARERSERVICECONFIG,
    MOD_CAPROIDPEXTBEARERSERVICECONFIG_ERR_CONFIG_ALREADY_PRESENT,
    //Add any other errors in between as required.
    MOD_CAPROIDPEXTBEARERSERVICECONFIG_ERR_MAX_ERROR = MAX_ERROR_MOD_CAPROIDPEXTBEARERSERVICECONFIG
};
enum DEL_CAPROIDPEXTTELESERVICECONFIG_ERRORS {
    DEL_CAPROIDPEXTTELESERVICECONFIG_ERR_DB_ERROR = ERR_START_DEL_CAPROIDPEXTTELESERVICECONFIG,
    DEL_CAPROIDPEXTTELESERVICECONFIG_ERR_CONFIG_NOT_PRESENT,
    //Add any other errors in between as required.
    DEL_CAPROIDPEXTTELESERVICECONFIG_ERR_MAX_ERROR = MAX_ERROR_DEL_CAPROIDPEXTTELESERVICECONFIG
};

enum DEL_CAPROIDPEXTBEARERSERVICECONFIG_ERRORS {
    DEL_CAPROIDPEXTBEARERSERVICECONFIG_ERR_DB_ERROR = ERR_START_DEL_CAPROIDPEXTBEARERSERVICECONFIG,
    DEL_CAPROIDPEXTBEARERSERVICECONFIG_ERR_CONFIG_NOT_PRESENT,
    //Add any other errors in between as required.
    DEL_CAPROIDPEXTBEARERSERVICECONFIG_ERR_MAX_ERROR = MAX_ERROR_DEL_CAPROIDPEXTBEARERSERVICECONFIG
};
enum ADD_CAPROIDPEXTTELESERVICECONFIG_ERRORS {
    ADD_CAPROIDPEXTTELESERVICECONFIG_ERR_DB_ERROR = ERR_START_ADD_CAPROIDPEXTTELESERVICECONFIG,
    ADD_CAPROIDPEXTTELESERVICECONFIG_ERR_CONFIG_ALREADY_PRESENT,
    //Add any other errors in between as required.
    ADD_CAPROIDPEXTTELESERVICECONFIG_ERR_MAX_ERROR = MAX_ERROR_ADD_CAPROIDPEXTTELESERVICECONFIG
};

enum ADD_CAPROIDPEXTBEARERSERVICECONFIG_ERRORS {
    ADD_CAPROIDPEXTBEARERSERVICECONFIG_ERR_DB_ERROR = ERR_START_ADD_CAPROIDPEXTBEARERSERVICECONFIG,
    ADD_CAPROIDPEXTBEARERSERVICECONFIG_ERR_CONFIG_ALREADY_PRESENT,
    //Add any other errors in between as required.
    ADD_CAPROIDPEXTBEARERSERVICECONFIG_ERR_MAX_ERROR = MAX_ERROR_ADD_CAPROIDPEXTBEARERSERVICECONFIG
};

enum ADD_TIMER_ERRORS {
    ADD_TIMER_ERR_CONFIG_NOT_PRESENT = ERR_START_ADD_TIMER,
    ADD_TIMER_ERR_DATA_NOT_SET,
    ADD_TIMER_ERR_ALREADY_PRESENT,
    ADD_TIMER_ERR_DB_ERROR,
    //Add any other errors in between as required.
    ADD_TIMER_ERR_MAX_ERROR = MAX_ERROR_ADD_TIMER
};
enum GET_TIMER_ERRORS {
    GET_TIMER_ERR_DB_ERROR = ERR_START_GET_TIMER,
    GET_TIMER_ERR_NO_DATA,
    //Add any other errors in between as required.
    GET_TIMER_ERR_MAX_ERROR = MAX_ERROR_GET_TIMER
};
enum MOD_TIMER_ERRORS {

    MOD_TIMER_ERR_DATA_NOT_PRESENT = ERR_START_MOD_TIMER,
    MOD_TIMER_ERR_DATA_NOT_SET,
    MOD_TIMER_ERR_NOT_PRESENT,
    MOD_TIMER_ERR_DB_ERROR,
    //Add any other errors in between as required.
    MOD_TIMER_ERR_MAX_ERROR = MAX_ERROR_MOD_TIMER
};
enum DEL_TIMER_ERRORS {

    DEL_TIMER_ERR_DATA_NOT_PRESENT = ERR_START_DEL_TIMER,
    DEL_TIMER_ERR_DATA_NOT_SET,
    DEL_TIMER_ERR_DB_ERROR,
    DEL_TIMER_ERR_NOT_PRESENT,
    //Add any other errors in between as required.
    DEL_TIMER_ERR_MAX_ERROR = MAX_ERROR_DEL_TIMER
};

enum ADD_UAL_ERRORS {
    ADD_UAL_ERR_CONFIG_NOT_PRESENT = ERR_START_ADD_UAL_CONFIG,
    ADD_UAL_ERR_ALREADY_PRESENT,
    ADD_UAL_ERR_DB_ERROR,
    ADD_UALCONFIG_ERR_MISSING_MANDATORY_PARAM,
    ADD_UALCONFIG_ERR_ADD_GENERAL_CONFIG_FAILED_AT_BACKEND,
    //Add any other errors in between as required.
    ADD_UAL_ERR_MAX_ERROR = MAX_ERROR_ADD_UAL_CONFIG
};
enum GET_UAL_ERRORS {
    GET_UAL_ERR_DB_ERROR = ERR_START_GET_UAL_CONFIG,
    GET_UAL_ERR_NO_DATA,
    //Add any other errors in between as required.
    GET_UAL_ERR_MAX_ERROR = MAX_ERROR_GET_UAL_CONFIG
};
enum MOD_UAL_ERRORS {

    MOD_UAL_ERR_DATA_NOT_PRESENT = ERR_START_MOD_UAL_CONFIG,
    MOD_UAL_ERR_DATA_NOT_SET,
    MOD_UAL_ERR_NOT_PRESENT,
    MOD_UAL_ERR_DB_ERROR,
    //Add any other errors in between as required.
    MOD_UAL_ERR_MAX_ERROR = MAX_ERROR_MOD_UAL_CONFIG
};


enum DEL_VPLMN_ID_ERRORS {
    DEL_VPLMN_ID_ERR_NOT_PRESENT = ERR_START_DEL_VPLMN_ID,
    DEL_VPLMN_ID_ERR_DB_ERROR,
    DEL_VPLMN_ID_ERR_NOT_SET,
    DEL_VPLMN_ID_ERR_TRANSRULE_NOT_PRESENT,
    	
    //Add any other errors in between as required.
    DEL_VPLMN_ID_ERR_MAX_ERROR = MAX_ERROR_DEL_VPLMN_ID
};

enum GET_VPLMN_ID_ERRORS {
    GET_VPLMN_ID_ERR_NOT_PRESENT = ERR_START_GET_VPLMN_ID,
    GET_VPLMN_ID_ERR_NO_DATA,
    GET_VPLMN_ID_ERR_DB_ERROR,

    //Add any other errors in between as required.
    GET_VPLMN_ID_ERR_MAX_ERROR = MAX_ERROR_GET_VPLMN_ID
};



enum ADD_FEATURE_ERRORS {
    ADD_FEATURE_ERR_CONFIG_NOT_PRESENT = ERR_START_ADD_FEATURE,
    ADD_FEATURE_ERR_DATA_NOT_SET,
    ADD_FEATURE_ERR_ALREADY_PRESENT,
    ADD_FEATURE_ERR_DB_ERROR,
    //Add any other errors in between as required.
    ADD_FEATURE_ERR_MAX_ERROR = MAX_ERROR_ADD_FEATURE
};
enum GET_FEATURE_ERRORS {
    GET_FEATURE_ERR_DB_ERROR = ERR_START_GET_FEATURE,
    GET_FEATURE_ERR_NO_DATA,
    //Add any other errors in between as required.
    GET_FEATURE_ERR_MAX_ERROR = MAX_ERROR_GET_FEATURE
};
enum MOD_FEATURE_ERRORS {

    MOD_FEATURE_ERR_DATA_NOT_PRESENT = ERR_START_MOD_FEATURE,
    MOD_FEATURE_ERR_DATA_NOT_SET,
    MOD_FEATURE_ERR_NOT_PRESENT,
    MOD_FEATURE_ERR_DB_ERROR,
    //Add any other errors in between as required.
    MOD_FEATURE_ERR_MAX_ERROR = MAX_ERROR_MOD_FEATURE
};
enum DEL_FEATURE_ERRORS {

    DEL_FEATURE_ERR_DATA_NOT_PRESENT = ERR_START_DEL_FEATURE,
    DEL_FEATURE_ERR_DATA_NOT_SET,
    DEL_FEATURE_ERR_DB_ERROR,
    DEL_FEATURE_ERR_NOT_PRESENT,
    //Add any other errors in between as required.
    DEL_FEATURE_ERR_MAX_ERROR = MAX_ERROR_DEL_FEATURE
};

enum ADD_DCCA_FEATURE_ERRORS {
    ADD_DCCA_FEATURE_ERR_CONFIG_NOT_PRESENT = ERR_START_ADD_DCCA_FEATURE,
    ADD_DCCA_FEATURE_ERR_DATA_NOT_SET,
    ADD_DCCA_FEATURE_ERR_ALREADY_PRESENT,
    ADD_DCCA_FEATURE_ERR_DB_ERROR,
    //Add any other errors in between as required.
    ADD_DCCA_FEATURE_ERR_MAX_ERROR = MAX_ERROR_ADD_DCCA_FEATURE
};
enum GET_DCCA_FEATURE_ERRORS {
    GET_DCCA_FEATURE_ERR_DB_ERROR = ERR_START_GET_DCCA_FEATURE,
    GET_DCCA_FEATURE_ERR_NO_DATA,
    //Add any other errors in between as required.
    GET_DCCA_FEATURE_ERR_MAX_ERROR = MAX_ERROR_GET_DCCA_FEATURE
};
enum MOD_DCCA_FEATURE_ERRORS {

    MOD_DCCA_FEATURE_ERR_DATA_NOT_PRESENT = ERR_START_MOD_DCCA_FEATURE,
    MOD_DCCA_FEATURE_ERR_DATA_NOT_SET,
    MOD_DCCA_FEATURE_ERR_NOT_PRESENT,
    MOD_DCCA_FEATURE_ERR_DB_ERROR,
    //Add any other errors in between as required.
    MOD_DCCA_FEATURE_ERR_MAX_ERROR = MAX_ERROR_MOD_DCCA_FEATURE
};
enum DEL_DCCA_FEATURE_ERRORS {

    DEL_DCCA_FEATURE_ERR_DATA_NOT_PRESENT = ERR_START_DEL_DCCA_FEATURE,
    DEL_DCCA_FEATURE_ERR_DATA_NOT_SET,
    DEL_DCCA_FEATURE_ERR_DB_ERROR,
    DEL_DCCA_FEATURE_ERR_NOT_PRESENT,
    //Add any other errors in between as required.
    DEL_DCCA_FEATURE_ERR_MAX_ERROR = MAX_ERROR_DEL_DCCA_FEATURE
};

enum ADD_DCCA_DEST_ERRORS {
    ADD_DCCA_DEST_ERR_CONFIG_NOT_PRESENT = ERR_START_ADD_DCCA_DEST,
    ADD_DCCA_DEST_ERR_DATA_NOT_SET,
    ADD_DCCA_DEST_ERR_ALREADY_PRESENT,
    ADD_DCCA_DEST_ERR_REALM_NOT_PRESENT,
    ADD_DCCA_DEST_ERR_ENDPOINT_ALREADY_PRESENT,
    ADD_DCCA_DEST_ERR_DB_ERROR,
    ADD_DCCA_DEST_ERR_MAX_ENDPOINTS_REACHED,
    //Add any other errors in between as required.
    ADD_DCCA_DEST_ERR_MAX_ERROR = MAX_ERROR_ADD_DCCA_DEST
};
enum GET_DCCA_DEST_ERRORS {
    GET_DCCA_DEST_ERR_DB_ERROR = ERR_START_GET_DCCA_DEST,
    GET_DCCA_DEST_ERR_NO_DATA,
    //Add any other errors in between as required.
    GET_DCCA_DEST_ERR_MAX_ERROR = MAX_ERROR_GET_DCCA_DEST
};
enum MOD_DCCA_DEST_ERRORS {

    MOD_DCCA_DEST_ERR_DATA_NOT_PRESENT = ERR_START_MOD_DCCA_DEST,
    MOD_DCCA_DEST_ERR_DATA_NOT_SET,
    MOD_DCCA_DEST_ERR_NOT_PRESENT,
    MOD_DCCA_DEST_ERR_DB_ERROR,
    //Add any other errors in between as required.
    MOD_DCCA_DEST_ERR_MAX_ERROR = MAX_ERROR_MOD_DCCA_DEST
};
enum DEL_DCCA_DEST_ERRORS {

    DEL_DCCA_DEST_ERR_DATA_NOT_PRESENT = ERR_START_DEL_DCCA_DEST,
    DEL_DCCA_DEST_ERR_DATA_NOT_SET,
    DEL_DCCA_DEST_ERR_DB_ERROR,
    DEL_DCCA_DEST_ERR_NOT_PRESENT,
    DEL_DCCA_DEST_ERR_DESTREALM_NOT_PRESENT,
    DEL_DCCA_DEST_ERR_ENDPOINT_NOT_PRESENT,
    DEL_DCCA_DEST_ERR_REALM_NOT_PRESENT,
    //Add any other errors in between as required.
    DEL_DCCA_DEST_ERR_MAX_ERROR = MAX_ERROR_DEL_DCCA_DEST
};
#endif // #ifndef __ERROR_RESP_H__
