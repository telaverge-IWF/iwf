#ifndef __COMMON_H__
#define __COMMON_H__


#define CONFIG_LOGLEVEL_DEBUG  1
#define CONFIG_LOGLEVEL_INFO   2
#define CONFIG_LOGLEVEL_NOTICE     3
#define CONFIG_LOGLEVEL_CRITICAL   4
#define CONFIG_LOGLEVEL_FATAL  5  


const unsigned I_REPMGR_ID = 100;

// Wanna add more methods, add it immediately before REPMGR_INVALIDMETHOD 
enum RepMgrMethods { M_REPMGR_CACHE_DREBINDINFO = 1, M_REPMGR_UPDATE_DREBINDINFO,
    M_REPMGR_DELETE_DREBINDINFO, M_REPMGR_REPLFLAG, M_REPMGR_LOGLEVEL,
    M_REPMGR_CHANGESTATE, M_REPMGR_INVALIDMETHOD };



//const unsigned I_AVAILABILITY_MANAGER = 101;

// Wanna add more methods, add it immediately before REPMGR_INVALIDMETHOD 
enum AvaMgrMethods {
    M_SHOW_CONFIG_AVAMGR = 1,
    M_AVAMGR_LOGLEVEL,
    M_AVAMGR_LOGCHANNEL,
    M_MAKE_NODE_STATUS,
    M_CONFIG_PING_PERIODICITY,
    M_CONFIG_PING_PERIODICITY_ARBITRATOR,
    M_CONFIG_VIRTUAL_INTERFACE_ACTIVATION_TIME,
    M_CONFIG_PEER_PINGACK_RECEIVE_FAILURES,
    M_CONFIG_ARBITRATOR_PINGACK_RECEIVE_FAILURES,
    M_CONFIG_PROCESS_RESTART_MAX_INTERVAL,
    M_CONFIG_PROCESS_RESTART_MAX_COUNT,
    M_CONFIG_IPV6,
    M_CONFIG_PRIMARY_VIRTUAL_IP_ADDRESS,
    M_CONFIG_SECONDARY_VIRTUAL_IP_ADDRESS,
    M_CONFIG_GATEWAY_IP_ADDRESS,
    M_RESTART_COMPONENT,
    M_SHOW_PROCESS,
};

#endif
