#!/bin/ksh
########################################################################
#
# Copyright 2006 IntelliNet Technologies, Inc. All Rights Reserved.
#          Manufactured in the United States of America.
#   1990 W. New Haven Ste. 312, Melbourne, Florida, 32904 U.S.A.
#
########################################################################

umask 022

# Make sure this is a Solaris 2.x system
if [ "`uname -r |sed 's/./&#/'|sed 's/#.*//'`" != "5" ]
then
    echo ""
    echo "This program can be executed on Solaris 2.x systems only"
    echo ""
    exit 1
fi

# Make sure user is root.
if [ "`id |nawk '{print $1}'| grep root`" = "" ]
then
    echo ""
    echo "You must be root to execute this program"
    echo ""
    exit 1
fi

# DIRNAME where results will be logged
DIRNAME="collectinfo.`hostname`-`date '+%Y.%m.%d'`"
export DIRNAME

# Start with a clean slate in case we had a bad run. This will also
# eliminate a security hole.
rm -rf "$DIRNAME"
rm -f "$DIRNAME"-tar.Z


# create working dir and make sure root was able to create it
mkdir  "$DIRNAME"  2>/dev/null
STATUS=$?
if [ $STATUS -ne 0 ]
then
    # Exit if directory was not created successfully.
    echo ""
    echo "Root must have write permission to the current directory"
    echo ""
    exit 1
fi

cd $DIRNAME

#
# Create the README header information and user info.
#
../Info/gen.readme.head

../Info/gen.readme.1

../Info/gen.readme.2

echo ""
echo ""
echo "Gathering information, please wait... "
echo ""

#
#IMS information
#
echo "Getting IMS information"
../Info/copyinfo 1>/dev/null 2>&1

#
# Getting network information
#
echo "Getting network information"
../Info/netinfo

#
# Get patch and pkginfo listing
#
echo "Getting patch and pkgs information"
mkdir patch+pkg
../Info/patch
../Info/pkg

#
# Get system configuration
#
echo "Getting system configuration"
mkdir sysconfig
../Info/sysconfig

#
# Getting messages information
#
echo "Getting messages information"
mkdir messages
cp -p    /var/adm/messages ./messages 1>/dev/null 2>&1
cp -p    /var/adm/messages.[0-9] ./messages 1>/dev/null 2>&1
dmesg > ./messages/dmesg.out

#
# Tar and compress the info, and clean up 
#
cd ..

tar cf - "$DIRNAME" | compress > "$DIRNAME"-tar.Z
rm -rf "$DIRNAME"
clear
cat << EOF

Done gathering system information

You can extract the data by:

# zcat $DIRNAME-tar.Z | tar xvf -

Output file name is:
$DIRNAME-tar.Z

EOF
