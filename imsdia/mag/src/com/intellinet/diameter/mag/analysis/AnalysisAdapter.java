/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.intellinet.diameter.mag.analysis;

import java.util.*;
import com.intellinet.diameter.mag.node.*;

public class AnalysisAdapter implements Analysis
{
    private Hashtable in;
    private Hashtable out;

    public Object getIn(Node node)
    {
        if(in == null)
        {
            return null;
        }

        return in.get(node);
    }

    public void setIn(Node node, Object in)
    {
        if(this.in == null)
        {
            this.in = new Hashtable(1);
        }

        if(in != null)
        {
            this.in.put(node, in);
        }
        else
        {
            this.in.remove(node);
        }
    }

    public Object getOut(Node node)
    {
        if(out == null)
        {
            return null;
        }

        return out.get(node);
    }

    public void setOut(Node node, Object out)
    {
        if(this.out == null)
        {
            this.out = new Hashtable(1);
        }

        if(out != null)
        {
            this.out.put(node, out);
        }
        else
        {
            this.out.remove(node);
        }
    }
    public void caseStart(Start node)
    {
        defaultCase(node);
    }

    public void caseAGrammar(AGrammar node)
    {
        defaultCase(node);
    }

    public void caseADerivedDefinition(ADerivedDefinition node)
    {
        defaultCase(node);
    }

    public void caseAEnumDefinition(AEnumDefinition node)
    {
        defaultCase(node);
    }

    public void caseAGroupedDefinition(AGroupedDefinition node)
    {
        defaultCase(node);
    }

    public void caseACommandDefinition(ACommandDefinition node)
    {
        defaultCase(node);
    }

    public void caseAOctetStringAvpType(AOctetStringAvpType node)
    {
        defaultCase(node);
    }

    public void caseAInteger32AvpType(AInteger32AvpType node)
    {
        defaultCase(node);
    }

    public void caseAInteger64AvpType(AInteger64AvpType node)
    {
        defaultCase(node);
    }

    public void caseAUnsigned32AvpType(AUnsigned32AvpType node)
    {
        defaultCase(node);
    }

    public void caseAUnsigned64AvpType(AUnsigned64AvpType node)
    {
        defaultCase(node);
    }

    public void caseAFloat32AvpType(AFloat32AvpType node)
    {
        defaultCase(node);
    }

    public void caseAFloat64AvpType(AFloat64AvpType node)
    {
        defaultCase(node);
    }

    public void caseAGroupedAvpType(AGroupedAvpType node)
    {
        defaultCase(node);
    }

    public void caseAAddressAvpType(AAddressAvpType node)
    {
        defaultCase(node);
    }

    public void caseATimeAvpType(ATimeAvpType node)
    {
        defaultCase(node);
    }

    public void caseAUtf8StringAvpType(AUtf8StringAvpType node)
    {
        defaultCase(node);
    }

    public void caseADiameterIdAvpType(ADiameterIdAvpType node)
    {
        defaultCase(node);
    }

    public void caseADiameterUriAvpType(ADiameterUriAvpType node)
    {
        defaultCase(node);
    }

    public void caseAEnumeratedAvpType(AEnumeratedAvpType node)
    {
        defaultCase(node);
    }

    public void caseAIpFilterRuleAvpType(AIpFilterRuleAvpType node)
    {
        defaultCase(node);
    }

    public void caseAQosFilterRuleAvpType(AQosFilterRuleAvpType node)
    {
        defaultCase(node);
    }

    public void caseAEnumerator(AEnumerator node)
    {
        defaultCase(node);
    }

    public void caseAAvpFlagRules(AAvpFlagRules node)
    {
        defaultCase(node);
    }

    public void caseAMandatoryAvpFlag(AMandatoryAvpFlag node)
    {
        defaultCase(node);
    }

    public void caseAPrivateAvpFlag(APrivateAvpFlag node)
    {
        defaultCase(node);
    }

    public void caseAVendorAvpFlag(AVendorAvpFlag node)
    {
        defaultCase(node);
    }

    public void caseAYesEncryptable(AYesEncryptable node)
    {
        defaultCase(node);
    }

    public void caseANotEncryptable(ANotEncryptable node)
    {
        defaultCase(node);
    }

    public void caseAGroupedHeader(AGroupedHeader node)
    {
        defaultCase(node);
    }

    public void caseAGroupedBody(AGroupedBody node)
    {
        defaultCase(node);
    }

    public void caseACommandHeader(ACommandHeader node)
    {
        defaultCase(node);
    }

    public void caseACommandBody(ACommandBody node)
    {
        defaultCase(node);
    }

    public void caseANamedAvpRef(ANamedAvpRef node)
    {
        defaultCase(node);
    }

    public void caseAGeneralAvpRef(AGeneralAvpRef node)
    {
        defaultCase(node);
    }

    public void caseAQualifier(AQualifier node)
    {
        defaultCase(node);
    }

    public void caseANamedAvpSpec(ANamedAvpSpec node)
    {
        defaultCase(node);
    }

    public void caseAAnyAvpSpec(AAnyAvpSpec node)
    {
        defaultCase(node);
    }

    public void caseTWhiteSpace(TWhiteSpace node)
    {
        defaultCase(node);
    }

    public void caseTBlockComment(TBlockComment node)
    {
        defaultCase(node);
    }

    public void caseTLineComment(TLineComment node)
    {
        defaultCase(node);
    }

    public void caseTDocumentation(TDocumentation node)
    {
        defaultCase(node);
    }

    public void caseTStringLiteral(TStringLiteral node)
    {
        defaultCase(node);
    }

    public void caseTDefinedAs(TDefinedAs node)
    {
        defaultCase(node);
    }

    public void caseTLBrace(TLBrace node)
    {
        defaultCase(node);
    }

    public void caseTRBrace(TRBrace node)
    {
        defaultCase(node);
    }

    public void caseTLBracket(TLBracket node)
    {
        defaultCase(node);
    }

    public void caseTRBracket(TRBracket node)
    {
        defaultCase(node);
    }

    public void caseTLAngle(TLAngle node)
    {
        defaultCase(node);
    }

    public void caseTRAngle(TRAngle node)
    {
        defaultCase(node);
    }

    public void caseTLParen(TLParen node)
    {
        defaultCase(node);
    }

    public void caseTRParen(TRParen node)
    {
        defaultCase(node);
    }

    public void caseTColon(TColon node)
    {
        defaultCase(node);
    }

    public void caseTSemiColon(TSemiColon node)
    {
        defaultCase(node);
    }

    public void caseTAsterisk(TAsterisk node)
    {
        defaultCase(node);
    }

    public void caseTComma(TComma node)
    {
        defaultCase(node);
    }

    public void caseTPeriod(TPeriod node)
    {
        defaultCase(node);
    }

    public void caseTVbar(TVbar node)
    {
        defaultCase(node);
    }

    public void caseTMandatoryFlag(TMandatoryFlag node)
    {
        defaultCase(node);
    }

    public void caseTPrivateFlag(TPrivateFlag node)
    {
        defaultCase(node);
    }

    public void caseTVendorFlag(TVendorFlag node)
    {
        defaultCase(node);
    }

    public void caseTYes(TYes node)
    {
        defaultCase(node);
    }

    public void caseTNo(TNo node)
    {
        defaultCase(node);
    }

    public void caseTBase(TBase node)
    {
        defaultCase(node);
    }

    public void caseTProtocol(TProtocol node)
    {
        defaultCase(node);
    }

    public void caseTDictId(TDictId node)
    {
        defaultCase(node);
    }

    public void caseTReq(TReq node)
    {
        defaultCase(node);
    }

    public void caseTPxy(TPxy node)
    {
        defaultCase(node);
    }

    public void caseTErr(TErr node)
    {
        defaultCase(node);
    }

    public void caseTDiameter(TDiameter node)
    {
        defaultCase(node);
    }

    public void caseTAvp(TAvp node)
    {
        defaultCase(node);
    }

    public void caseTHeader(THeader node)
    {
        defaultCase(node);
    }

    public void caseTOctetString(TOctetString node)
    {
        defaultCase(node);
    }

    public void caseTInteger32(TInteger32 node)
    {
        defaultCase(node);
    }

    public void caseTInteger64(TInteger64 node)
    {
        defaultCase(node);
    }

    public void caseTUnsigned32(TUnsigned32 node)
    {
        defaultCase(node);
    }

    public void caseTUnsigned64(TUnsigned64 node)
    {
        defaultCase(node);
    }

    public void caseTFloat32(TFloat32 node)
    {
        defaultCase(node);
    }

    public void caseTFloat64(TFloat64 node)
    {
        defaultCase(node);
    }

    public void caseTGrouped(TGrouped node)
    {
        defaultCase(node);
    }

    public void caseTAddress(TAddress node)
    {
        defaultCase(node);
    }

    public void caseTTime(TTime node)
    {
        defaultCase(node);
    }

    public void caseTUtf8String(TUtf8String node)
    {
        defaultCase(node);
    }

    public void caseTDiameterId(TDiameterId node)
    {
        defaultCase(node);
    }

    public void caseTDiameterUri(TDiameterUri node)
    {
        defaultCase(node);
    }

    public void caseTEnumerated(TEnumerated node)
    {
        defaultCase(node);
    }

    public void caseTIpFilterRule(TIpFilterRule node)
    {
        defaultCase(node);
    }

    public void caseTQosFilterRule(TQosFilterRule node)
    {
        defaultCase(node);
    }

    public void caseTInteger(TInteger node)
    {
        defaultCase(node);
    }

    public void caseTIdentifier(TIdentifier node)
    {
        defaultCase(node);
    }

    public void caseEOF(EOF node)
    {
        defaultCase(node);
    }

    public void defaultCase(Node node)
    {
    }
}
