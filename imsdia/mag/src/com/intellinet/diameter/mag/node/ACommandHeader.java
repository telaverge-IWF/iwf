/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.intellinet.diameter.mag.node;

import java.util.*;
import com.intellinet.diameter.mag.analysis.*;

public final class ACommandHeader extends PCommandHeader
{
    private TInteger _commandId_;
    private TReq _req_;
    private TPxy _pxy_;
    private TErr _err_;
    private TInteger _applicationId_;

    public ACommandHeader()
    {
    }

    public ACommandHeader(
        TInteger _commandId_,
        TReq _req_,
        TPxy _pxy_,
        TErr _err_,
        TInteger _applicationId_)
    {
        setCommandId(_commandId_);

        setReq(_req_);

        setPxy(_pxy_);

        setErr(_err_);

        setApplicationId(_applicationId_);

    }
    public Object clone()
    {
        return new ACommandHeader(
            (TInteger) cloneNode(_commandId_),
            (TReq) cloneNode(_req_),
            (TPxy) cloneNode(_pxy_),
            (TErr) cloneNode(_err_),
            (TInteger) cloneNode(_applicationId_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseACommandHeader(this);
    }

    public TInteger getCommandId()
    {
        return _commandId_;
    }

    public void setCommandId(TInteger node)
    {
        if(_commandId_ != null)
        {
            _commandId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _commandId_ = node;
    }

    public TReq getReq()
    {
        return _req_;
    }

    public void setReq(TReq node)
    {
        if(_req_ != null)
        {
            _req_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _req_ = node;
    }

    public TPxy getPxy()
    {
        return _pxy_;
    }

    public void setPxy(TPxy node)
    {
        if(_pxy_ != null)
        {
            _pxy_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _pxy_ = node;
    }

    public TErr getErr()
    {
        return _err_;
    }

    public void setErr(TErr node)
    {
        if(_err_ != null)
        {
            _err_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _err_ = node;
    }

    public TInteger getApplicationId()
    {
        return _applicationId_;
    }

    public void setApplicationId(TInteger node)
    {
        if(_applicationId_ != null)
        {
            _applicationId_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _applicationId_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_commandId_)
            + toString(_req_)
            + toString(_pxy_)
            + toString(_err_)
            + toString(_applicationId_);
    }

    void removeChild(Node child)
    {
        if(_commandId_ == child)
        {
            _commandId_ = null;
            return;
        }

        if(_req_ == child)
        {
            _req_ = null;
            return;
        }

        if(_pxy_ == child)
        {
            _pxy_ = null;
            return;
        }

        if(_err_ == child)
        {
            _err_ = null;
            return;
        }

        if(_applicationId_ == child)
        {
            _applicationId_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_commandId_ == oldChild)
        {
            setCommandId((TInteger) newChild);
            return;
        }

        if(_req_ == oldChild)
        {
            setReq((TReq) newChild);
            return;
        }

        if(_pxy_ == oldChild)
        {
            setPxy((TPxy) newChild);
            return;
        }

        if(_err_ == oldChild)
        {
            setErr((TErr) newChild);
            return;
        }

        if(_applicationId_ == oldChild)
        {
            setApplicationId((TInteger) newChild);
            return;
        }

    }
}
