/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.intellinet.diameter.mag.node;

import java.util.*;
import com.intellinet.diameter.mag.analysis.*;

public final class AEnumerator extends PEnumerator
{
    private TDocumentation _documentation_;
    private TIdentifier _name_;
    private TInteger _value_;

    public AEnumerator()
    {
    }

    public AEnumerator(
        TDocumentation _documentation_,
        TIdentifier _name_,
        TInteger _value_)
    {
        setDocumentation(_documentation_);

        setName(_name_);

        setValue(_value_);

    }
    public Object clone()
    {
        return new AEnumerator(
            (TDocumentation) cloneNode(_documentation_),
            (TIdentifier) cloneNode(_name_),
            (TInteger) cloneNode(_value_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAEnumerator(this);
    }

    public TDocumentation getDocumentation()
    {
        return _documentation_;
    }

    public void setDocumentation(TDocumentation node)
    {
        if(_documentation_ != null)
        {
            _documentation_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _documentation_ = node;
    }

    public TIdentifier getName()
    {
        return _name_;
    }

    public void setName(TIdentifier node)
    {
        if(_name_ != null)
        {
            _name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _name_ = node;
    }

    public TInteger getValue()
    {
        return _value_;
    }

    public void setValue(TInteger node)
    {
        if(_value_ != null)
        {
            _value_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _value_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_documentation_)
            + toString(_name_)
            + toString(_value_);
    }

    void removeChild(Node child)
    {
        if(_documentation_ == child)
        {
            _documentation_ = null;
            return;
        }

        if(_name_ == child)
        {
            _name_ = null;
            return;
        }

        if(_value_ == child)
        {
            _value_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_documentation_ == oldChild)
        {
            setDocumentation((TDocumentation) newChild);
            return;
        }

        if(_name_ == oldChild)
        {
            setName((TIdentifier) newChild);
            return;
        }

        if(_value_ == oldChild)
        {
            setValue((TInteger) newChild);
            return;
        }

    }
}
