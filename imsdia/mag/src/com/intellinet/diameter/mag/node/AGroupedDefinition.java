/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.intellinet.diameter.mag.node;

import java.util.*;
import com.intellinet.diameter.mag.analysis.*;

public final class AGroupedDefinition extends PDefinition
{
    private TDocumentation _documentation_;
    private TIdentifier _name_;
    private PGroupedHeader _groupedHeader_;
    private PGroupedBody _groupedBody_;

    public AGroupedDefinition()
    {
    }

    public AGroupedDefinition(
        TDocumentation _documentation_,
        TIdentifier _name_,
        PGroupedHeader _groupedHeader_,
        PGroupedBody _groupedBody_)
    {
        setDocumentation(_documentation_);

        setName(_name_);

        setGroupedHeader(_groupedHeader_);

        setGroupedBody(_groupedBody_);

    }
    public Object clone()
    {
        return new AGroupedDefinition(
            (TDocumentation) cloneNode(_documentation_),
            (TIdentifier) cloneNode(_name_),
            (PGroupedHeader) cloneNode(_groupedHeader_),
            (PGroupedBody) cloneNode(_groupedBody_));
    }

    public void apply(Switch sw)
    {
        ((Analysis) sw).caseAGroupedDefinition(this);
    }

    public TDocumentation getDocumentation()
    {
        return _documentation_;
    }

    public void setDocumentation(TDocumentation node)
    {
        if(_documentation_ != null)
        {
            _documentation_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _documentation_ = node;
    }

    public TIdentifier getName()
    {
        return _name_;
    }

    public void setName(TIdentifier node)
    {
        if(_name_ != null)
        {
            _name_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _name_ = node;
    }

    public PGroupedHeader getGroupedHeader()
    {
        return _groupedHeader_;
    }

    public void setGroupedHeader(PGroupedHeader node)
    {
        if(_groupedHeader_ != null)
        {
            _groupedHeader_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _groupedHeader_ = node;
    }

    public PGroupedBody getGroupedBody()
    {
        return _groupedBody_;
    }

    public void setGroupedBody(PGroupedBody node)
    {
        if(_groupedBody_ != null)
        {
            _groupedBody_.parent(null);
        }

        if(node != null)
        {
            if(node.parent() != null)
            {
                node.parent().removeChild(node);
            }

            node.parent(this);
        }

        _groupedBody_ = node;
    }

    public String toString()
    {
        return ""
            + toString(_documentation_)
            + toString(_name_)
            + toString(_groupedHeader_)
            + toString(_groupedBody_);
    }

    void removeChild(Node child)
    {
        if(_documentation_ == child)
        {
            _documentation_ = null;
            return;
        }

        if(_name_ == child)
        {
            _name_ = null;
            return;
        }

        if(_groupedHeader_ == child)
        {
            _groupedHeader_ = null;
            return;
        }

        if(_groupedBody_ == child)
        {
            _groupedBody_ = null;
            return;
        }

    }

    void replaceChild(Node oldChild, Node newChild)
    {
        if(_documentation_ == oldChild)
        {
            setDocumentation((TDocumentation) newChild);
            return;
        }

        if(_name_ == oldChild)
        {
            setName((TIdentifier) newChild);
            return;
        }

        if(_groupedHeader_ == oldChild)
        {
            setGroupedHeader((PGroupedHeader) newChild);
            return;
        }

        if(_groupedBody_ == oldChild)
        {
            setGroupedBody((PGroupedBody) newChild);
            return;
        }

    }
}
