/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.intellinet.diameter.mag.parser;

import com.intellinet.diameter.mag.node.*;
import com.intellinet.diameter.mag.analysis.*;

class TokenIndex extends AnalysisAdapter
{
    int index;

    public void caseTDocumentation(TDocumentation node)
    {
        index = 0;
    }

    public void caseTStringLiteral(TStringLiteral node)
    {
        index = 1;
    }

    public void caseTDefinedAs(TDefinedAs node)
    {
        index = 2;
    }

    public void caseTLBrace(TLBrace node)
    {
        index = 3;
    }

    public void caseTRBrace(TRBrace node)
    {
        index = 4;
    }

    public void caseTLBracket(TLBracket node)
    {
        index = 5;
    }

    public void caseTRBracket(TRBracket node)
    {
        index = 6;
    }

    public void caseTLAngle(TLAngle node)
    {
        index = 7;
    }

    public void caseTRAngle(TRAngle node)
    {
        index = 8;
    }

    public void caseTLParen(TLParen node)
    {
        index = 9;
    }

    public void caseTRParen(TRParen node)
    {
        index = 10;
    }

    public void caseTColon(TColon node)
    {
        index = 11;
    }

    public void caseTSemiColon(TSemiColon node)
    {
        index = 12;
    }

    public void caseTAsterisk(TAsterisk node)
    {
        index = 13;
    }

    public void caseTComma(TComma node)
    {
        index = 14;
    }

    public void caseTPeriod(TPeriod node)
    {
        index = 15;
    }

    public void caseTVbar(TVbar node)
    {
        index = 16;
    }

    public void caseTMandatoryFlag(TMandatoryFlag node)
    {
        index = 17;
    }

    public void caseTPrivateFlag(TPrivateFlag node)
    {
        index = 18;
    }

    public void caseTVendorFlag(TVendorFlag node)
    {
        index = 19;
    }

    public void caseTYes(TYes node)
    {
        index = 20;
    }

    public void caseTNo(TNo node)
    {
        index = 21;
    }

    public void caseTBase(TBase node)
    {
        index = 22;
    }

    public void caseTProtocol(TProtocol node)
    {
        index = 23;
    }

    public void caseTDictId(TDictId node)
    {
        index = 24;
    }

    public void caseTReq(TReq node)
    {
        index = 25;
    }

    public void caseTPxy(TPxy node)
    {
        index = 26;
    }

    public void caseTErr(TErr node)
    {
        index = 27;
    }

    public void caseTDiameter(TDiameter node)
    {
        index = 28;
    }

    public void caseTAvp(TAvp node)
    {
        index = 29;
    }

    public void caseTHeader(THeader node)
    {
        index = 30;
    }

    public void caseTOctetString(TOctetString node)
    {
        index = 31;
    }

    public void caseTInteger32(TInteger32 node)
    {
        index = 32;
    }

    public void caseTInteger64(TInteger64 node)
    {
        index = 33;
    }

    public void caseTUnsigned32(TUnsigned32 node)
    {
        index = 34;
    }

    public void caseTUnsigned64(TUnsigned64 node)
    {
        index = 35;
    }

    public void caseTFloat32(TFloat32 node)
    {
        index = 36;
    }

    public void caseTFloat64(TFloat64 node)
    {
        index = 37;
    }

    public void caseTGrouped(TGrouped node)
    {
        index = 38;
    }

    public void caseTAddress(TAddress node)
    {
        index = 39;
    }

    public void caseTTime(TTime node)
    {
        index = 40;
    }

    public void caseTUtf8String(TUtf8String node)
    {
        index = 41;
    }

    public void caseTDiameterId(TDiameterId node)
    {
        index = 42;
    }

    public void caseTDiameterUri(TDiameterUri node)
    {
        index = 43;
    }

    public void caseTEnumerated(TEnumerated node)
    {
        index = 44;
    }

    public void caseTIpFilterRule(TIpFilterRule node)
    {
        index = 45;
    }

    public void caseTQosFilterRule(TQosFilterRule node)
    {
        index = 46;
    }

    public void caseTInteger(TInteger node)
    {
        index = 47;
    }

    public void caseTIdentifier(TIdentifier node)
    {
        index = 48;
    }

    public void caseEOF(EOF node)
    {
        index = 49;
    }
}
