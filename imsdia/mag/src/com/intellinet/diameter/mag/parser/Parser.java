/* This file was generated by SableCC (http://www.sablecc.org/). */

package com.intellinet.diameter.mag.parser;

import com.intellinet.diameter.mag.lexer.*;
import com.intellinet.diameter.mag.node.*;
import com.intellinet.diameter.mag.analysis.*;
import java.util.*;

import java.io.DataInputStream;
import java.io.BufferedInputStream;
import java.io.IOException;

public class Parser
{
    public final Analysis ignoredTokens = new AnalysisAdapter();

    protected ArrayList nodeList;

    private final Lexer lexer;
    private final ListIterator stack = new LinkedList().listIterator();
    private int last_shift;
    private int last_pos;
    private int last_line;
    private Token last_token;
    private final TokenIndex converter = new TokenIndex();
    private final int[] action = new int[2];

    private final static int SHIFT = 0;
    private final static int REDUCE = 1;
    private final static int ACCEPT = 2;
    private final static int ERROR = 3;

    public Parser(Lexer lexer)
    {
        this.lexer = lexer;
    }

    private void push(int numstate, ArrayList listNode) throws ParserException, LexerException, IOException
    {
	this.nodeList = listNode;

        if(!stack.hasNext())
        {
            stack.add(new State(numstate, this.nodeList));
            return;
        }

        State s = (State) stack.next();
        s.state = numstate;
        s.nodes = this.nodeList;
    }

    private int goTo(int index)
    {
        int state = state();
        int low = 1;
        int high = gotoTable[index].length - 1;
        int value = gotoTable[index][0][1];

        while(low <= high)
        {
            int middle = (low + high) / 2;

            if(state < gotoTable[index][middle][0])
            {
                high = middle - 1;
            }
            else if(state > gotoTable[index][middle][0])
            {
                low = middle + 1;
            }
            else
            {
                value = gotoTable[index][middle][1];
                break;
            }
        }

        return value;
    }

    private int state()
    {
        State s = (State) stack.previous();
        stack.next();
        return s.state;
    }

    private ArrayList pop()
    {
        return (ArrayList) ((State) stack.previous()).nodes;
    }

    private int index(Switchable token)
    {
        converter.index = -1;
        token.apply(converter);
        return converter.index;
    }

    public Start parse() throws ParserException, LexerException, IOException
    {
        push(0, null);
        List ign = null;
        while(true)
        {
            while(index(lexer.peek()) == -1)
            {
                if(ign == null)
                {
                    ign = new TypedLinkedList(NodeCast.instance);
                }

                ign.add(lexer.next());
            }

            if(ign != null)
            {
                ignoredTokens.setIn(lexer.peek(), ign);
                ign = null;
            }

            last_pos = lexer.peek().getPos();
            last_line = lexer.peek().getLine();
            last_token = lexer.peek();

            int index = index(lexer.peek());
            action[0] = actionTable[state()][0][1];
            action[1] = actionTable[state()][0][2];

            int low = 1;
            int high = actionTable[state()].length - 1;

            while(low <= high)
            {
                int middle = (low + high) / 2;

                if(index < actionTable[state()][middle][0])
                {
                    high = middle - 1;
                }
                else if(index > actionTable[state()][middle][0])
                {
                    low = middle + 1;
                }
                else
                {
                    action[0] = actionTable[state()][middle][1];
                    action[1] = actionTable[state()][middle][2];
                    break;
                }
            }

            switch(action[0])
            {
                case SHIFT:
		    {
		        ArrayList list = new ArrayList();
		        list.add(lexer.next());
                        push(action[1], list);
                        last_shift = action[1];
                    }
		    break;
                case REDUCE:
                    switch(action[1])
                    {
                    case 0: /* reduce AAgrammar1Grammar */
		    {
			ArrayList list = new0();
			push(goTo(0), list);
		    }
		    break;
                    case 1: /* reduce AAgrammar2Grammar */
		    {
			ArrayList list = new1();
			push(goTo(0), list);
		    }
		    break;
                    case 2: /* reduce AAgrammar3Grammar */
		    {
			ArrayList list = new2();
			push(goTo(0), list);
		    }
		    break;
                    case 3: /* reduce AAgrammar4Grammar */
		    {
			ArrayList list = new3();
			push(goTo(0), list);
		    }
		    break;
                    case 4: /* reduce AAgrammar5Grammar */
		    {
			ArrayList list = new4();
			push(goTo(0), list);
		    }
		    break;
                    case 5: /* reduce AAgrammar6Grammar */
		    {
			ArrayList list = new5();
			push(goTo(0), list);
		    }
		    break;
                    case 6: /* reduce AAgrammar7Grammar */
		    {
			ArrayList list = new6();
			push(goTo(0), list);
		    }
		    break;
                    case 7: /* reduce AAgrammar8Grammar */
		    {
			ArrayList list = new7();
			push(goTo(0), list);
		    }
		    break;
                    case 8: /* reduce AAgrammar9Grammar */
		    {
			ArrayList list = new8();
			push(goTo(0), list);
		    }
		    break;
                    case 9: /* reduce AAgrammar10Grammar */
		    {
			ArrayList list = new9();
			push(goTo(0), list);
		    }
		    break;
                    case 10: /* reduce AAgrammar11Grammar */
		    {
			ArrayList list = new10();
			push(goTo(0), list);
		    }
		    break;
                    case 11: /* reduce AAgrammar12Grammar */
		    {
			ArrayList list = new11();
			push(goTo(0), list);
		    }
		    break;
                    case 12: /* reduce AAgrammar13Grammar */
		    {
			ArrayList list = new12();
			push(goTo(0), list);
		    }
		    break;
                    case 13: /* reduce AAgrammar14Grammar */
		    {
			ArrayList list = new13();
			push(goTo(0), list);
		    }
		    break;
                    case 14: /* reduce AAgrammar15Grammar */
		    {
			ArrayList list = new14();
			push(goTo(0), list);
		    }
		    break;
                    case 15: /* reduce AAgrammar16Grammar */
		    {
			ArrayList list = new15();
			push(goTo(0), list);
		    }
		    break;
                    case 16: /* reduce AAdictiddef1DictIdDef */
		    {
			ArrayList list = new16();
			push(goTo(1), list);
		    }
		    break;
                    case 17: /* reduce AAdictiddef2DictIdDef */
		    {
			ArrayList list = new17();
			push(goTo(1), list);
		    }
		    break;
                    case 18: /* reduce ASingleNamespace */
		    {
			ArrayList list = new18();
			push(goTo(2), list);
		    }
		    break;
                    case 19: /* reduce AMultipleNamespace */
		    {
			ArrayList list = new19();
			push(goTo(2), list);
		    }
		    break;
                    case 20: /* reduce AProtocolId */
		    {
			ArrayList list = new20();
			push(goTo(3), list);
		    }
		    break;
                    case 21: /* reduce AProtocolUrl */
		    {
			ArrayList list = new21();
			push(goTo(4), list);
		    }
		    break;
                    case 22: /* reduce AAderiveddefinition1$1Definition */
		    {
			ArrayList list = new22();
			push(goTo(5), list);
		    }
		    break;
                    case 23: /* reduce AAderiveddefinition2$1Definition */
		    {
			ArrayList list = new23();
			push(goTo(5), list);
		    }
		    break;
                    case 24: /* reduce AAderiveddefinition3$1Definition */
		    {
			ArrayList list = new24();
			push(goTo(5), list);
		    }
		    break;
                    case 25: /* reduce AAderiveddefinition4$1Definition */
		    {
			ArrayList list = new25();
			push(goTo(5), list);
		    }
		    break;
                    case 26: /* reduce AAenumdefinition1$1Definition */
		    {
			ArrayList list = new26();
			push(goTo(5), list);
		    }
		    break;
                    case 27: /* reduce AAenumdefinition2$1Definition */
		    {
			ArrayList list = new27();
			push(goTo(5), list);
		    }
		    break;
                    case 28: /* reduce AAgroupeddefinition1$1Definition */
		    {
			ArrayList list = new28();
			push(goTo(5), list);
		    }
		    break;
                    case 29: /* reduce AAgroupeddefinition2$1Definition */
		    {
			ArrayList list = new29();
			push(goTo(5), list);
		    }
		    break;
                    case 30: /* reduce AAcommanddefinition1Definition */
		    {
			ArrayList list = new30();
			push(goTo(5), list);
		    }
		    break;
                    case 31: /* reduce AAcommanddefinition2Definition */
		    {
			ArrayList list = new31();
			push(goTo(5), list);
		    }
		    break;
                    case 32: /* reduce AAcommanddefinition3Definition */
		    {
			ArrayList list = new32();
			push(goTo(5), list);
		    }
		    break;
                    case 33: /* reduce AAcommanddefinition4Definition */
		    {
			ArrayList list = new33();
			push(goTo(5), list);
		    }
		    break;
                    case 34: /* reduce AOctetStringAvpType */
		    {
			ArrayList list = new34();
			push(goTo(6), list);
		    }
		    break;
                    case 35: /* reduce AInteger32AvpType */
		    {
			ArrayList list = new35();
			push(goTo(6), list);
		    }
		    break;
                    case 36: /* reduce AInteger64AvpType */
		    {
			ArrayList list = new36();
			push(goTo(6), list);
		    }
		    break;
                    case 37: /* reduce AUnsigned32AvpType */
		    {
			ArrayList list = new37();
			push(goTo(6), list);
		    }
		    break;
                    case 38: /* reduce AUnsigned64AvpType */
		    {
			ArrayList list = new38();
			push(goTo(6), list);
		    }
		    break;
                    case 39: /* reduce AFloat32AvpType */
		    {
			ArrayList list = new39();
			push(goTo(6), list);
		    }
		    break;
                    case 40: /* reduce AFloat64AvpType */
		    {
			ArrayList list = new40();
			push(goTo(6), list);
		    }
		    break;
                    case 41: /* reduce AGroupedAvpType */
		    {
			ArrayList list = new41();
			push(goTo(6), list);
		    }
		    break;
                    case 42: /* reduce AAddressAvpType */
		    {
			ArrayList list = new42();
			push(goTo(6), list);
		    }
		    break;
                    case 43: /* reduce ATimeAvpType */
		    {
			ArrayList list = new43();
			push(goTo(6), list);
		    }
		    break;
                    case 44: /* reduce AUtf8StringAvpType */
		    {
			ArrayList list = new44();
			push(goTo(6), list);
		    }
		    break;
                    case 45: /* reduce ADiameterIdAvpType */
		    {
			ArrayList list = new45();
			push(goTo(6), list);
		    }
		    break;
                    case 46: /* reduce ADiameterUriAvpType */
		    {
			ArrayList list = new46();
			push(goTo(6), list);
		    }
		    break;
                    case 47: /* reduce AEnumeratedAvpType */
		    {
			ArrayList list = new47();
			push(goTo(6), list);
		    }
		    break;
                    case 48: /* reduce AIpFilterRuleAvpType */
		    {
			ArrayList list = new48();
			push(goTo(6), list);
		    }
		    break;
                    case 49: /* reduce AQosFilterRuleAvpType */
		    {
			ArrayList list = new49();
			push(goTo(6), list);
		    }
		    break;
                    case 50: /* reduce AAvpFlagRules */
		    {
			ArrayList list = new50();
			push(goTo(7), list);
		    }
		    break;
                    case 51: /* reduce AEmptyAvpFlags */
		    {
			ArrayList list = new51();
			push(goTo(8), list);
		    }
		    break;
                    case 52: /* reduce ASingleAvpFlags */
		    {
			ArrayList list = new52();
			push(goTo(8), list);
		    }
		    break;
                    case 53: /* reduce AMultipleAvpFlags */
		    {
			ArrayList list = new53();
			push(goTo(8), list);
		    }
		    break;
                    case 54: /* reduce AMandatoryAvpFlag */
		    {
			ArrayList list = new54();
			push(goTo(9), list);
		    }
		    break;
                    case 55: /* reduce APrivateAvpFlag */
		    {
			ArrayList list = new55();
			push(goTo(9), list);
		    }
		    break;
                    case 56: /* reduce AVendorAvpFlag */
		    {
			ArrayList list = new56();
			push(goTo(9), list);
		    }
		    break;
                    case 57: /* reduce AYesEncryptable */
		    {
			ArrayList list = new57();
			push(goTo(10), list);
		    }
		    break;
                    case 58: /* reduce ANotEncryptable */
		    {
			ArrayList list = new58();
			push(goTo(10), list);
		    }
		    break;
                    case 59: /* reduce AEnumHeader */
		    {
			ArrayList list = new59();
			push(goTo(11), list);
		    }
		    break;
                    case 60: /* reduce AEnumBody */
		    {
			ArrayList list = new60();
			push(goTo(12), list);
		    }
		    break;
                    case 61: /* reduce AAenumerator1Enumerator */
		    {
			ArrayList list = new61();
			push(goTo(13), list);
		    }
		    break;
                    case 62: /* reduce AAenumerator2Enumerator */
		    {
			ArrayList list = new62();
			push(goTo(13), list);
		    }
		    break;
                    case 63: /* reduce AAgroupedheader1GroupedHeader */
		    {
			ArrayList list = new63();
			push(goTo(14), list);
		    }
		    break;
                    case 64: /* reduce AAgroupedheader2GroupedHeader */
		    {
			ArrayList list = new64();
			push(goTo(14), list);
		    }
		    break;
                    case 65: /* reduce AAgroupedbody1GroupedBody */
		    {
			ArrayList list = new65();
			push(goTo(15), list);
		    }
		    break;
                    case 66: /* reduce AAgroupedbody2GroupedBody */
		    {
			ArrayList list = new66();
			push(goTo(15), list);
		    }
		    break;
                    case 67: /* reduce AAgroupedbody3GroupedBody */
		    {
			ArrayList list = new67();
			push(goTo(15), list);
		    }
		    break;
                    case 68: /* reduce AAgroupedbody4GroupedBody */
		    {
			ArrayList list = new68();
			push(goTo(15), list);
		    }
		    break;
                    case 69: /* reduce AAgroupedbody5GroupedBody */
		    {
			ArrayList list = new69();
			push(goTo(15), list);
		    }
		    break;
                    case 70: /* reduce AAgroupedbody6GroupedBody */
		    {
			ArrayList list = new70();
			push(goTo(15), list);
		    }
		    break;
                    case 71: /* reduce AAgroupedbody7GroupedBody */
		    {
			ArrayList list = new71();
			push(goTo(15), list);
		    }
		    break;
                    case 72: /* reduce AAgroupedbody8GroupedBody */
		    {
			ArrayList list = new72();
			push(goTo(15), list);
		    }
		    break;
                    case 73: /* reduce AAvpCode */
		    {
			ArrayList list = new73();
			push(goTo(16), list);
		    }
		    break;
                    case 74: /* reduce AVendorId */
		    {
			ArrayList list = new74();
			push(goTo(17), list);
		    }
		    break;
                    case 75: /* reduce ACommandAcronym */
		    {
			ArrayList list = new75();
			push(goTo(18), list);
		    }
		    break;
                    case 76: /* reduce AAcommandheader1CommandHeader */
		    {
			ArrayList list = new76();
			push(goTo(19), list);
		    }
		    break;
                    case 77: /* reduce AAcommandheader2CommandHeader */
		    {
			ArrayList list = new77();
			push(goTo(19), list);
		    }
		    break;
                    case 78: /* reduce AAcommandheader3CommandHeader */
		    {
			ArrayList list = new78();
			push(goTo(19), list);
		    }
		    break;
                    case 79: /* reduce AAcommandheader4CommandHeader */
		    {
			ArrayList list = new79();
			push(goTo(19), list);
		    }
		    break;
                    case 80: /* reduce AAcommandheader5CommandHeader */
		    {
			ArrayList list = new80();
			push(goTo(19), list);
		    }
		    break;
                    case 81: /* reduce AAcommandheader6CommandHeader */
		    {
			ArrayList list = new81();
			push(goTo(19), list);
		    }
		    break;
                    case 82: /* reduce AAcommandheader7CommandHeader */
		    {
			ArrayList list = new82();
			push(goTo(19), list);
		    }
		    break;
                    case 83: /* reduce AAcommandheader8CommandHeader */
		    {
			ArrayList list = new83();
			push(goTo(19), list);
		    }
		    break;
                    case 84: /* reduce AAcommandheader9CommandHeader */
		    {
			ArrayList list = new84();
			push(goTo(19), list);
		    }
		    break;
                    case 85: /* reduce AAcommandheader10CommandHeader */
		    {
			ArrayList list = new85();
			push(goTo(19), list);
		    }
		    break;
                    case 86: /* reduce AAcommandheader11CommandHeader */
		    {
			ArrayList list = new86();
			push(goTo(19), list);
		    }
		    break;
                    case 87: /* reduce AAcommandheader12CommandHeader */
		    {
			ArrayList list = new87();
			push(goTo(19), list);
		    }
		    break;
                    case 88: /* reduce AAcommandheader13CommandHeader */
		    {
			ArrayList list = new88();
			push(goTo(19), list);
		    }
		    break;
                    case 89: /* reduce AAcommandheader14CommandHeader */
		    {
			ArrayList list = new89();
			push(goTo(19), list);
		    }
		    break;
                    case 90: /* reduce AAcommandheader15CommandHeader */
		    {
			ArrayList list = new90();
			push(goTo(19), list);
		    }
		    break;
                    case 91: /* reduce AAcommandheader16CommandHeader */
		    {
			ArrayList list = new91();
			push(goTo(19), list);
		    }
		    break;
                    case 92: /* reduce AAcommandbody1CommandBody */
		    {
			ArrayList list = new92();
			push(goTo(20), list);
		    }
		    break;
                    case 93: /* reduce AAcommandbody2CommandBody */
		    {
			ArrayList list = new93();
			push(goTo(20), list);
		    }
		    break;
                    case 94: /* reduce AAcommandbody3CommandBody */
		    {
			ArrayList list = new94();
			push(goTo(20), list);
		    }
		    break;
                    case 95: /* reduce AAcommandbody4CommandBody */
		    {
			ArrayList list = new95();
			push(goTo(20), list);
		    }
		    break;
                    case 96: /* reduce AAcommandbody5CommandBody */
		    {
			ArrayList list = new96();
			push(goTo(20), list);
		    }
		    break;
                    case 97: /* reduce AAcommandbody6CommandBody */
		    {
			ArrayList list = new97();
			push(goTo(20), list);
		    }
		    break;
                    case 98: /* reduce AAcommandbody7CommandBody */
		    {
			ArrayList list = new98();
			push(goTo(20), list);
		    }
		    break;
                    case 99: /* reduce AAcommandbody8CommandBody */
		    {
			ArrayList list = new99();
			push(goTo(20), list);
		    }
		    break;
                    case 100: /* reduce ACommandId */
		    {
			ArrayList list = new100();
			push(goTo(21), list);
		    }
		    break;
                    case 101: /* reduce ARBit */
		    {
			ArrayList list = new101();
			push(goTo(22), list);
		    }
		    break;
                    case 102: /* reduce APBit */
		    {
			ArrayList list = new102();
			push(goTo(23), list);
		    }
		    break;
                    case 103: /* reduce AEBit */
		    {
			ArrayList list = new103();
			push(goTo(24), list);
		    }
		    break;
                    case 104: /* reduce AApplicationId */
		    {
			ArrayList list = new104();
			push(goTo(25), list);
		    }
		    break;
                    case 105: /* reduce AAfixed1$1Fixed */
		    {
			ArrayList list = new105();
			push(goTo(26), list);
		    }
		    break;
                    case 106: /* reduce AAfixed2$1Fixed */
		    {
			ArrayList list = new106();
			push(goTo(26), list);
		    }
		    break;
                    case 107: /* reduce AArequired1$1Required */
		    {
			ArrayList list = new107();
			push(goTo(27), list);
		    }
		    break;
                    case 108: /* reduce AArequired2$1Required */
		    {
			ArrayList list = new108();
			push(goTo(27), list);
		    }
		    break;
                    case 109: /* reduce AArequiredavp1RequiredAvp */
		    {
			ArrayList list = new109();
			push(goTo(28), list);
		    }
		    break;
                    case 110: /* reduce AArequiredavp2RequiredAvp */
		    {
			ArrayList list = new110();
			push(goTo(28), list);
		    }
		    break;
                    case 111: /* reduce AAoptional1Optional */
		    {
			ArrayList list = new111();
			push(goTo(29), list);
		    }
		    break;
                    case 112: /* reduce AAoptional2Optional */
		    {
			ArrayList list = new112();
			push(goTo(29), list);
		    }
		    break;
                    case 113: /* reduce AAqualifier1Qualifier */
		    {
			ArrayList list = new113();
			push(goTo(30), list);
		    }
		    break;
                    case 114: /* reduce AAqualifier2Qualifier */
		    {
			ArrayList list = new114();
			push(goTo(30), list);
		    }
		    break;
                    case 115: /* reduce AAqualifier3Qualifier */
		    {
			ArrayList list = new115();
			push(goTo(30), list);
		    }
		    break;
                    case 116: /* reduce AAqualifier4Qualifier */
		    {
			ArrayList list = new116();
			push(goTo(30), list);
		    }
		    break;
                    case 117: /* reduce ANamed$1AvpSpec */
		    {
			ArrayList list = new117();
			push(goTo(31), list);
		    }
		    break;
                    case 118: /* reduce AAnyAvpSpec */
		    {
			ArrayList list = new118();
			push(goTo(31), list);
		    }
		    break;
                    case 119: /* reduce ATerminal$Definition */
		    {
			ArrayList list = new119();
			push(goTo(32), list);
		    }
		    break;
                    case 120: /* reduce ANonTerminal$Definition */
		    {
			ArrayList list = new120();
			push(goTo(32), list);
		    }
		    break;
                    case 121: /* reduce ATerminal$Enumerator */
		    {
			ArrayList list = new121();
			push(goTo(33), list);
		    }
		    break;
                    case 122: /* reduce ANonTerminal$Enumerator */
		    {
			ArrayList list = new122();
			push(goTo(33), list);
		    }
		    break;
                    case 123: /* reduce ATerminal$Fixed */
		    {
			ArrayList list = new123();
			push(goTo(34), list);
		    }
		    break;
                    case 124: /* reduce ANonTerminal$Fixed */
		    {
			ArrayList list = new124();
			push(goTo(34), list);
		    }
		    break;
                    case 125: /* reduce ATerminal$RequiredAvp */
		    {
			ArrayList list = new125();
			push(goTo(35), list);
		    }
		    break;
                    case 126: /* reduce ANonTerminal$RequiredAvp */
		    {
			ArrayList list = new126();
			push(goTo(35), list);
		    }
		    break;
                    case 127: /* reduce ATerminal$Optional */
		    {
			ArrayList list = new127();
			push(goTo(36), list);
		    }
		    break;
                    case 128: /* reduce ANonTerminal$Optional */
		    {
			ArrayList list = new128();
			push(goTo(36), list);
		    }
		    break;
                    case 129: /* reduce ATerminal$Required */
		    {
			ArrayList list = new129();
			push(goTo(37), list);
		    }
		    break;
                    case 130: /* reduce ANonTerminal$Required */
		    {
			ArrayList list = new130();
			push(goTo(37), list);
		    }
		    break;
                    }
                    break;
                case ACCEPT:
                    {
                        EOF node2 = (EOF) lexer.next();
                        PGrammar node1 = (PGrammar) ((ArrayList)pop()).get(0);
                        Start node = new Start(node1, node2);
                        return node;
                    }
                case ERROR:
                    throw new ParserException(last_token,
                        "[" + last_line + "," + last_pos + "] " +
                        errorMessages[errors[action[1]]]);
            }
        }
    }



    ArrayList new0() /* reduce AAgrammar1Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        Object nullNode2 = null;
        Object nullNode3 = null;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        Object nullNode7 = null;
        TStringLiteral tstringliteralNode8;
        Object nullNode9 = null;
        TypedLinkedList listNode11 = new TypedLinkedList();
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList4.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList6.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList9.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(null, null, listNode5, tintegerNode6, null, tstringliteralNode8, null, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new1() /* reduce AAgrammar2Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        TDocumentation tdocumentationNode2;
        Object nullNode3 = null;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        Object nullNode7 = null;
        TStringLiteral tstringliteralNode8;
        Object nullNode9 = null;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList5.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList7.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList10.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(tdocumentationNode2, null, listNode5, tintegerNode6, null, tstringliteralNode8, null, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new2() /* reduce AAgrammar3Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        Object nullNode2 = null;
        TBase tbaseNode3;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        Object nullNode7 = null;
        TStringLiteral tstringliteralNode8;
        Object nullNode9 = null;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tbaseNode3 = (TBase)nodeArrayList1.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList5.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList7.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList10.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(null, tbaseNode3, listNode5, tintegerNode6, null, tstringliteralNode8, null, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new3() /* reduce AAgrammar4Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        TDocumentation tdocumentationNode2;
        TBase tbaseNode3;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        Object nullNode7 = null;
        TStringLiteral tstringliteralNode8;
        Object nullNode9 = null;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tbaseNode3 = (TBase)nodeArrayList2.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList6.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList8.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList11.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(tdocumentationNode2, tbaseNode3, listNode5, tintegerNode6, null, tstringliteralNode8, null, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new4() /* reduce AAgrammar5Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        Object nullNode2 = null;
        Object nullNode3 = null;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        TInteger tintegerNode7;
        TStringLiteral tstringliteralNode8;
        Object nullNode9 = null;
        TypedLinkedList listNode11 = new TypedLinkedList();
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList4.get(0);
        tintegerNode7 = (TInteger)nodeArrayList5.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList7.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList10.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(null, null, listNode5, tintegerNode6, tintegerNode7, tstringliteralNode8, null, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new5() /* reduce AAgrammar6Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        TDocumentation tdocumentationNode2;
        Object nullNode3 = null;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        TInteger tintegerNode7;
        TStringLiteral tstringliteralNode8;
        Object nullNode9 = null;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList5.get(0);
        tintegerNode7 = (TInteger)nodeArrayList6.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList8.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList11.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(tdocumentationNode2, null, listNode5, tintegerNode6, tintegerNode7, tstringliteralNode8, null, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new6() /* reduce AAgrammar7Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        Object nullNode2 = null;
        TBase tbaseNode3;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        TInteger tintegerNode7;
        TStringLiteral tstringliteralNode8;
        Object nullNode9 = null;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tbaseNode3 = (TBase)nodeArrayList1.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList5.get(0);
        tintegerNode7 = (TInteger)nodeArrayList6.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList8.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList11.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(null, tbaseNode3, listNode5, tintegerNode6, tintegerNode7, tstringliteralNode8, null, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new7() /* reduce AAgrammar8Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList12 = (ArrayList) pop();
        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        TDocumentation tdocumentationNode2;
        TBase tbaseNode3;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        TInteger tintegerNode7;
        TStringLiteral tstringliteralNode8;
        Object nullNode9 = null;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tbaseNode3 = (TBase)nodeArrayList2.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList6.get(0);
        tintegerNode7 = (TInteger)nodeArrayList7.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList9.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList12.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(tdocumentationNode2, tbaseNode3, listNode5, tintegerNode6, tintegerNode7, tstringliteralNode8, null, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new8() /* reduce AAgrammar9Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        Object nullNode2 = null;
        Object nullNode3 = null;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        Object nullNode7 = null;
        TStringLiteral tstringliteralNode8;
        TInteger tintegerNode9;
        TypedLinkedList listNode11 = new TypedLinkedList();
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList4.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList6.get(0);
        tintegerNode9 = (TInteger)nodeArrayList9.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList10.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(null, null, listNode5, tintegerNode6, null, tstringliteralNode8, tintegerNode9, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new9() /* reduce AAgrammar10Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        TDocumentation tdocumentationNode2;
        Object nullNode3 = null;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        Object nullNode7 = null;
        TStringLiteral tstringliteralNode8;
        TInteger tintegerNode9;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList5.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList7.get(0);
        tintegerNode9 = (TInteger)nodeArrayList10.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList11.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(tdocumentationNode2, null, listNode5, tintegerNode6, null, tstringliteralNode8, tintegerNode9, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new10() /* reduce AAgrammar11Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        Object nullNode2 = null;
        TBase tbaseNode3;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        Object nullNode7 = null;
        TStringLiteral tstringliteralNode8;
        TInteger tintegerNode9;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tbaseNode3 = (TBase)nodeArrayList1.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList5.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList7.get(0);
        tintegerNode9 = (TInteger)nodeArrayList10.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList11.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(null, tbaseNode3, listNode5, tintegerNode6, null, tstringliteralNode8, tintegerNode9, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new11() /* reduce AAgrammar12Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList12 = (ArrayList) pop();
        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        TDocumentation tdocumentationNode2;
        TBase tbaseNode3;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        Object nullNode7 = null;
        TStringLiteral tstringliteralNode8;
        TInteger tintegerNode9;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tbaseNode3 = (TBase)nodeArrayList2.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList6.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList8.get(0);
        tintegerNode9 = (TInteger)nodeArrayList11.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList12.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(tdocumentationNode2, tbaseNode3, listNode5, tintegerNode6, null, tstringliteralNode8, tintegerNode9, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new12() /* reduce AAgrammar13Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        Object nullNode2 = null;
        Object nullNode3 = null;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        TInteger tintegerNode7;
        TStringLiteral tstringliteralNode8;
        TInteger tintegerNode9;
        TypedLinkedList listNode11 = new TypedLinkedList();
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList4.get(0);
        tintegerNode7 = (TInteger)nodeArrayList5.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList7.get(0);
        tintegerNode9 = (TInteger)nodeArrayList10.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList11.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(null, null, listNode5, tintegerNode6, tintegerNode7, tstringliteralNode8, tintegerNode9, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new13() /* reduce AAgrammar14Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList12 = (ArrayList) pop();
        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        TDocumentation tdocumentationNode2;
        Object nullNode3 = null;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        TInteger tintegerNode7;
        TStringLiteral tstringliteralNode8;
        TInteger tintegerNode9;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList5.get(0);
        tintegerNode7 = (TInteger)nodeArrayList6.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList8.get(0);
        tintegerNode9 = (TInteger)nodeArrayList11.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList12.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(tdocumentationNode2, null, listNode5, tintegerNode6, tintegerNode7, tstringliteralNode8, tintegerNode9, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new14() /* reduce AAgrammar15Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList12 = (ArrayList) pop();
        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        Object nullNode2 = null;
        TBase tbaseNode3;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        TInteger tintegerNode7;
        TStringLiteral tstringliteralNode8;
        TInteger tintegerNode9;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tbaseNode3 = (TBase)nodeArrayList1.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList5.get(0);
        tintegerNode7 = (TInteger)nodeArrayList6.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList8.get(0);
        tintegerNode9 = (TInteger)nodeArrayList11.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList12.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(null, tbaseNode3, listNode5, tintegerNode6, tintegerNode7, tstringliteralNode8, tintegerNode9, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new15() /* reduce AAgrammar16Grammar */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList13 = (ArrayList) pop();
        ArrayList nodeArrayList12 = (ArrayList) pop();
        ArrayList nodeArrayList11 = (ArrayList) pop();
        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGrammar pgrammarNode1;
        {
        TDocumentation tdocumentationNode2;
        TBase tbaseNode3;
        TypedLinkedList listNode5 = new TypedLinkedList();
        TInteger tintegerNode6;
        TInteger tintegerNode7;
        TStringLiteral tstringliteralNode8;
        TInteger tintegerNode9;
        TypedLinkedList listNode11 = new TypedLinkedList();
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tbaseNode3 = (TBase)nodeArrayList2.get(0);
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList4.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        tintegerNode6 = (TInteger)nodeArrayList6.get(0);
        tintegerNode7 = (TInteger)nodeArrayList7.get(0);
        tstringliteralNode8 = (TStringLiteral)nodeArrayList9.get(0);
        tintegerNode9 = (TInteger)nodeArrayList12.get(0);
        {
        TypedLinkedList listNode10 = new TypedLinkedList();
        listNode10 = (TypedLinkedList)nodeArrayList13.get(0);
	if(listNode10 != null)
	{
	  listNode11.addAll(listNode10);
	}
        }

        pgrammarNode1 = new AGrammar(tdocumentationNode2, tbaseNode3, listNode5, tintegerNode6, tintegerNode7, tstringliteralNode8, tintegerNode9, listNode11);
        }
	nodeList.add(pgrammarNode1);
        return nodeList;
    }



    ArrayList new16() /* reduce AAdictiddef1DictIdDef */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TInteger tintegerNode1;
        tintegerNode1 = (TInteger)nodeArrayList2.get(0);
	nodeList.add(tintegerNode1);
        return nodeList;
    }



    ArrayList new17() /* reduce AAdictiddef2DictIdDef */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TInteger tintegerNode1;
        tintegerNode1 = (TInteger)nodeArrayList3.get(0);
	nodeList.add(tintegerNode1);
        return nodeList;
    }



    ArrayList new18() /* reduce ASingleNamespace */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        {
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode2.add(tidentifierNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    ArrayList new19() /* reduce AMultipleNamespace */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        {
        TIdentifier tidentifierNode1;
        TypedLinkedList listNode2 = new TypedLinkedList();
        tidentifierNode1 = (TIdentifier)nodeArrayList1.get(0);
        listNode2 = (TypedLinkedList)nodeArrayList3.get(0);
	if(tidentifierNode1 != null)
	{
	  listNode3.add(tidentifierNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    ArrayList new20() /* reduce AProtocolId */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TInteger tintegerNode1;
        tintegerNode1 = (TInteger)nodeArrayList1.get(0);
	nodeList.add(tintegerNode1);
        return nodeList;
    }



    ArrayList new21() /* reduce AProtocolUrl */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TStringLiteral tstringliteralNode1;
        tstringliteralNode1 = (TStringLiteral)nodeArrayList1.get(0);
	nodeList.add(tstringliteralNode1);
        return nodeList;
    }



    ArrayList new22() /* reduce AAderiveddefinition1$1Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TInteger tintegerNode4;
        Object nullNode5 = null;
        PAvpType pavptypeNode6;
        PAvpFlagRules pavpflagrulesNode7;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tintegerNode4 = (TInteger)nodeArrayList3.get(0);
        pavptypeNode6 = (PAvpType)nodeArrayList4.get(0);
        pavpflagrulesNode7 = (PAvpFlagRules)nodeArrayList5.get(0);

        pdefinitionNode1 = new ADerivedDefinition(null, tidentifierNode3, tintegerNode4, null, pavptypeNode6, pavpflagrulesNode7);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new23() /* reduce AAderiveddefinition2$1Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        TDocumentation tdocumentationNode2;
        TIdentifier tidentifierNode3;
        TInteger tintegerNode4;
        Object nullNode5 = null;
        PAvpType pavptypeNode6;
        PAvpFlagRules pavpflagrulesNode7;
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tintegerNode4 = (TInteger)nodeArrayList4.get(0);
        pavptypeNode6 = (PAvpType)nodeArrayList5.get(0);
        pavpflagrulesNode7 = (PAvpFlagRules)nodeArrayList6.get(0);

        pdefinitionNode1 = new ADerivedDefinition(tdocumentationNode2, tidentifierNode3, tintegerNode4, null, pavptypeNode6, pavpflagrulesNode7);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new24() /* reduce AAderiveddefinition3$1Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TInteger tintegerNode4;
        TInteger tintegerNode5;
        PAvpType pavptypeNode6;
        PAvpFlagRules pavpflagrulesNode7;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tintegerNode4 = (TInteger)nodeArrayList3.get(0);
        tintegerNode5 = (TInteger)nodeArrayList4.get(0);
        pavptypeNode6 = (PAvpType)nodeArrayList5.get(0);
        pavpflagrulesNode7 = (PAvpFlagRules)nodeArrayList6.get(0);

        pdefinitionNode1 = new ADerivedDefinition(null, tidentifierNode3, tintegerNode4, tintegerNode5, pavptypeNode6, pavpflagrulesNode7);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new25() /* reduce AAderiveddefinition4$1Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        TDocumentation tdocumentationNode2;
        TIdentifier tidentifierNode3;
        TInteger tintegerNode4;
        TInteger tintegerNode5;
        PAvpType pavptypeNode6;
        PAvpFlagRules pavpflagrulesNode7;
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tintegerNode4 = (TInteger)nodeArrayList4.get(0);
        tintegerNode5 = (TInteger)nodeArrayList5.get(0);
        pavptypeNode6 = (PAvpType)nodeArrayList6.get(0);
        pavpflagrulesNode7 = (PAvpFlagRules)nodeArrayList7.get(0);

        pdefinitionNode1 = new ADerivedDefinition(tdocumentationNode2, tidentifierNode3, tintegerNode4, tintegerNode5, pavptypeNode6, pavpflagrulesNode7);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new26() /* reduce AAenumdefinition1$1Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TInteger tintegerNode4;
        TypedLinkedList listNode6 = new TypedLinkedList();
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tintegerNode4 = (TInteger)nodeArrayList3.get(0);
        {
        TypedLinkedList listNode5 = new TypedLinkedList();
        listNode5 = (TypedLinkedList)nodeArrayList4.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pdefinitionNode1 = new AEnumDefinition(null, tidentifierNode3, tintegerNode4, listNode6);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new27() /* reduce AAenumdefinition2$1Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        TDocumentation tdocumentationNode2;
        TIdentifier tidentifierNode3;
        TInteger tintegerNode4;
        TypedLinkedList listNode6 = new TypedLinkedList();
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tintegerNode4 = (TInteger)nodeArrayList4.get(0);
        {
        TypedLinkedList listNode5 = new TypedLinkedList();
        listNode5 = (TypedLinkedList)nodeArrayList5.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pdefinitionNode1 = new AEnumDefinition(tdocumentationNode2, tidentifierNode3, tintegerNode4, listNode6);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new28() /* reduce AAgroupeddefinition1$1Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        PGroupedHeader pgroupedheaderNode4;
        PGroupedBody pgroupedbodyNode5;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        pgroupedheaderNode4 = (PGroupedHeader)nodeArrayList3.get(0);
        pgroupedbodyNode5 = (PGroupedBody)nodeArrayList4.get(0);

        pdefinitionNode1 = new AGroupedDefinition(null, tidentifierNode3, pgroupedheaderNode4, pgroupedbodyNode5);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new29() /* reduce AAgroupeddefinition2$1Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        TDocumentation tdocumentationNode2;
        TIdentifier tidentifierNode3;
        PGroupedHeader pgroupedheaderNode4;
        PGroupedBody pgroupedbodyNode5;
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pgroupedheaderNode4 = (PGroupedHeader)nodeArrayList4.get(0);
        pgroupedbodyNode5 = (PGroupedBody)nodeArrayList5.get(0);

        pdefinitionNode1 = new AGroupedDefinition(tdocumentationNode2, tidentifierNode3, pgroupedheaderNode4, pgroupedbodyNode5);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new30() /* reduce AAcommanddefinition1Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        Object nullNode4 = null;
        PCommandHeader pcommandheaderNode5;
        PCommandBody pcommandbodyNode6;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        pcommandheaderNode5 = (PCommandHeader)nodeArrayList3.get(0);
        pcommandbodyNode6 = (PCommandBody)nodeArrayList4.get(0);

        pdefinitionNode1 = new ACommandDefinition(null, tidentifierNode3, null, pcommandheaderNode5, pcommandbodyNode6);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new31() /* reduce AAcommanddefinition2Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        TDocumentation tdocumentationNode2;
        TIdentifier tidentifierNode3;
        Object nullNode4 = null;
        PCommandHeader pcommandheaderNode5;
        PCommandBody pcommandbodyNode6;
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        pcommandheaderNode5 = (PCommandHeader)nodeArrayList4.get(0);
        pcommandbodyNode6 = (PCommandBody)nodeArrayList5.get(0);

        pdefinitionNode1 = new ACommandDefinition(tdocumentationNode2, tidentifierNode3, null, pcommandheaderNode5, pcommandbodyNode6);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new32() /* reduce AAcommanddefinition3Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TIdentifier tidentifierNode4;
        PCommandHeader pcommandheaderNode5;
        PCommandBody pcommandbodyNode6;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList2.get(0);
        pcommandheaderNode5 = (PCommandHeader)nodeArrayList4.get(0);
        pcommandbodyNode6 = (PCommandBody)nodeArrayList5.get(0);

        pdefinitionNode1 = new ACommandDefinition(null, tidentifierNode3, tidentifierNode4, pcommandheaderNode5, pcommandbodyNode6);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new33() /* reduce AAcommanddefinition4Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PDefinition pdefinitionNode1;
        {
        TDocumentation tdocumentationNode2;
        TIdentifier tidentifierNode3;
        TIdentifier tidentifierNode4;
        PCommandHeader pcommandheaderNode5;
        PCommandBody pcommandbodyNode6;
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tidentifierNode4 = (TIdentifier)nodeArrayList3.get(0);
        pcommandheaderNode5 = (PCommandHeader)nodeArrayList5.get(0);
        pcommandbodyNode6 = (PCommandBody)nodeArrayList6.get(0);

        pdefinitionNode1 = new ACommandDefinition(tdocumentationNode2, tidentifierNode3, tidentifierNode4, pcommandheaderNode5, pcommandbodyNode6);
        }
	nodeList.add(pdefinitionNode1);
        return nodeList;
    }



    ArrayList new34() /* reduce AOctetStringAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AOctetStringAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new35() /* reduce AInteger32AvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AInteger32AvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new36() /* reduce AInteger64AvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AInteger64AvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new37() /* reduce AUnsigned32AvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AUnsigned32AvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new38() /* reduce AUnsigned64AvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AUnsigned64AvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new39() /* reduce AFloat32AvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AFloat32AvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new40() /* reduce AFloat64AvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AFloat64AvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new41() /* reduce AGroupedAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AGroupedAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new42() /* reduce AAddressAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AAddressAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new43() /* reduce ATimeAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new ATimeAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new44() /* reduce AUtf8StringAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AUtf8StringAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new45() /* reduce ADiameterIdAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new ADiameterIdAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new46() /* reduce ADiameterUriAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new ADiameterUriAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new47() /* reduce AEnumeratedAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AEnumeratedAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new48() /* reduce AIpFilterRuleAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AIpFilterRuleAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new49() /* reduce AQosFilterRuleAvpType */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpType pavptypeNode1;
        {

        pavptypeNode1 = new AQosFilterRuleAvpType();
        }
	nodeList.add(pavptypeNode1);
        return nodeList;
    }



    ArrayList new50() /* reduce AAvpFlagRules */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpFlagRules pavpflagrulesNode1;
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode7 = new TypedLinkedList();
        TypedLinkedList listNode9 = new TypedLinkedList();
        PEncryptable pencryptableNode10;
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
        TypedLinkedList listNode6 = new TypedLinkedList();
        listNode6 = (TypedLinkedList)nodeArrayList5.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }
        {
        TypedLinkedList listNode8 = new TypedLinkedList();
        listNode8 = (TypedLinkedList)nodeArrayList7.get(0);
	if(listNode8 != null)
	{
	  listNode9.addAll(listNode8);
	}
        }
        pencryptableNode10 = (PEncryptable)nodeArrayList9.get(0);

        pavpflagrulesNode1 = new AAvpFlagRules(listNode3, listNode5, listNode7, listNode9, pencryptableNode10);
        }
	nodeList.add(pavpflagrulesNode1);
        return nodeList;
    }



    ArrayList new51() /* reduce AEmptyAvpFlags */
    {
        ArrayList nodeList = new ArrayList();

        TypedLinkedList listNode1 = new TypedLinkedList();
        {
        }
	nodeList.add(listNode1);
        return nodeList;
    }



    ArrayList new52() /* reduce ASingleAvpFlags */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        {
        PAvpFlag pavpflagNode1;
        pavpflagNode1 = (PAvpFlag)nodeArrayList1.get(0);
	if(pavpflagNode1 != null)
	{
	  listNode2.add(pavpflagNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    ArrayList new53() /* reduce AMultipleAvpFlags */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        {
        PAvpFlag pavpflagNode1;
        TypedLinkedList listNode2 = new TypedLinkedList();
        pavpflagNode1 = (PAvpFlag)nodeArrayList1.get(0);
        listNode2 = (TypedLinkedList)nodeArrayList3.get(0);
	if(pavpflagNode1 != null)
	{
	  listNode3.add(pavpflagNode1);
	}
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    ArrayList new54() /* reduce AMandatoryAvpFlag */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpFlag pavpflagNode1;
        {

        pavpflagNode1 = new AMandatoryAvpFlag();
        }
	nodeList.add(pavpflagNode1);
        return nodeList;
    }



    ArrayList new55() /* reduce APrivateAvpFlag */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpFlag pavpflagNode1;
        {

        pavpflagNode1 = new APrivateAvpFlag();
        }
	nodeList.add(pavpflagNode1);
        return nodeList;
    }



    ArrayList new56() /* reduce AVendorAvpFlag */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpFlag pavpflagNode1;
        {

        pavpflagNode1 = new AVendorAvpFlag();
        }
	nodeList.add(pavpflagNode1);
        return nodeList;
    }



    ArrayList new57() /* reduce AYesEncryptable */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PEncryptable pencryptableNode1;
        {

        pencryptableNode1 = new AYesEncryptable();
        }
	nodeList.add(pencryptableNode1);
        return nodeList;
    }



    ArrayList new58() /* reduce ANotEncryptable */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PEncryptable pencryptableNode1;
        {

        pencryptableNode1 = new ANotEncryptable();
        }
	nodeList.add(pencryptableNode1);
        return nodeList;
    }



    ArrayList new59() /* reduce AEnumHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TInteger tintegerNode1;
        tintegerNode1 = (TInteger)nodeArrayList4.get(0);
	nodeList.add(tintegerNode1);
        return nodeList;
    }



    ArrayList new60() /* reduce AEnumBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        {
        TypedLinkedList listNode1 = new TypedLinkedList();
        listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode1 != null)
	{
	  listNode2.addAll(listNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    ArrayList new61() /* reduce AAenumerator1Enumerator */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PEnumerator penumeratorNode1;
        {
        Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        TInteger tintegerNode4;
        tidentifierNode3 = (TIdentifier)nodeArrayList1.get(0);
        tintegerNode4 = (TInteger)nodeArrayList2.get(0);

        penumeratorNode1 = new AEnumerator(null, tidentifierNode3, tintegerNode4);
        }
	nodeList.add(penumeratorNode1);
        return nodeList;
    }



    ArrayList new62() /* reduce AAenumerator2Enumerator */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PEnumerator penumeratorNode1;
        {
        TDocumentation tdocumentationNode2;
        TIdentifier tidentifierNode3;
        TInteger tintegerNode4;
        tdocumentationNode2 = (TDocumentation)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);
        tintegerNode4 = (TInteger)nodeArrayList3.get(0);

        penumeratorNode1 = new AEnumerator(tdocumentationNode2, tidentifierNode3, tintegerNode4);
        }
	nodeList.add(penumeratorNode1);
        return nodeList;
    }



    ArrayList new63() /* reduce AAgroupedheader1GroupedHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGroupedHeader pgroupedheaderNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);

        pgroupedheaderNode1 = new AGroupedHeader(tintegerNode2, null);
        }
	nodeList.add(pgroupedheaderNode1);
        return nodeList;
    }



    ArrayList new64() /* reduce AAgroupedheader2GroupedHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGroupedHeader pgroupedheaderNode1;
        {
        TInteger tintegerNode2;
        TInteger tintegerNode3;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        tintegerNode3 = (TInteger)nodeArrayList6.get(0);

        pgroupedheaderNode1 = new AGroupedHeader(tintegerNode2, tintegerNode3);
        }
	nodeList.add(pgroupedheaderNode1);
        return nodeList;
    }



    ArrayList new65() /* reduce AAgroupedbody1GroupedBody */
    {
        ArrayList nodeList = new ArrayList();

        PGroupedBody pgroupedbodyNode1;
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        {
        }
        {
        }
        {
        }

        pgroupedbodyNode1 = new AGroupedBody(listNode2, listNode3, listNode4);
        }
	nodeList.add(pgroupedbodyNode1);
        return nodeList;
    }



    ArrayList new66() /* reduce AAgroupedbody2GroupedBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGroupedBody pgroupedbodyNode1;
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
        }
        {
        }

        pgroupedbodyNode1 = new AGroupedBody(listNode3, listNode4, listNode5);
        }
	nodeList.add(pgroupedbodyNode1);
        return nodeList;
    }



    ArrayList new67() /* reduce AAgroupedbody3GroupedBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGroupedBody pgroupedbodyNode1;
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        {
        }
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
        }

        pgroupedbodyNode1 = new AGroupedBody(listNode2, listNode4, listNode5);
        }
	nodeList.add(pgroupedbodyNode1);
        return nodeList;
    }



    ArrayList new68() /* reduce AAgroupedbody4GroupedBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGroupedBody pgroupedbodyNode1;
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
        }

        pgroupedbodyNode1 = new AGroupedBody(listNode3, listNode5, listNode6);
        }
	nodeList.add(pgroupedbodyNode1);
        return nodeList;
    }



    ArrayList new69() /* reduce AAgroupedbody5GroupedBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGroupedBody pgroupedbodyNode1;
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        {
        }
        {
        }
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pgroupedbodyNode1 = new AGroupedBody(listNode2, listNode3, listNode5);
        }
	nodeList.add(pgroupedbodyNode1);
        return nodeList;
    }



    ArrayList new70() /* reduce AAgroupedbody6GroupedBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGroupedBody pgroupedbodyNode1;
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
        }
        {
        TypedLinkedList listNode5 = new TypedLinkedList();
        listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pgroupedbodyNode1 = new AGroupedBody(listNode3, listNode4, listNode6);
        }
	nodeList.add(pgroupedbodyNode1);
        return nodeList;
    }



    ArrayList new71() /* reduce AAgroupedbody7GroupedBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGroupedBody pgroupedbodyNode1;
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        {
        }
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
        TypedLinkedList listNode5 = new TypedLinkedList();
        listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pgroupedbodyNode1 = new AGroupedBody(listNode2, listNode4, listNode6);
        }
	nodeList.add(pgroupedbodyNode1);
        return nodeList;
    }



    ArrayList new72() /* reduce AAgroupedbody8GroupedBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGroupedBody pgroupedbodyNode1;
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode7 = new TypedLinkedList();
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
        TypedLinkedList listNode6 = new TypedLinkedList();
        listNode6 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pgroupedbodyNode1 = new AGroupedBody(listNode3, listNode5, listNode7);
        }
	nodeList.add(pgroupedbodyNode1);
        return nodeList;
    }



    ArrayList new73() /* reduce AAvpCode */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TInteger tintegerNode1;
        tintegerNode1 = (TInteger)nodeArrayList1.get(0);
	nodeList.add(tintegerNode1);
        return nodeList;
    }



    ArrayList new74() /* reduce AVendorId */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TInteger tintegerNode1;
        tintegerNode1 = (TInteger)nodeArrayList1.get(0);
	nodeList.add(tintegerNode1);
        return nodeList;
    }



    ArrayList new75() /* reduce ACommandAcronym */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TIdentifier tidentifierNode1;
        tidentifierNode1 = (TIdentifier)nodeArrayList2.get(0);
	nodeList.add(tidentifierNode1);
        return nodeList;
    }



    ArrayList new76() /* reduce AAcommandheader1CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        Object nullNode4 = null;
        Object nullNode5 = null;
        Object nullNode6 = null;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, null, null, null, null);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new77() /* reduce AAcommandheader2CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        TReq treqNode3;
        Object nullNode4 = null;
        Object nullNode5 = null;
        Object nullNode6 = null;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        treqNode3 = (TReq)nodeArrayList6.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, treqNode3, null, null, null);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new78() /* reduce AAcommandheader3CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        TPxy tpxyNode4;
        Object nullNode5 = null;
        Object nullNode6 = null;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        tpxyNode4 = (TPxy)nodeArrayList6.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, null, tpxyNode4, null, null);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new79() /* reduce AAcommandheader4CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        TReq treqNode3;
        TPxy tpxyNode4;
        Object nullNode5 = null;
        Object nullNode6 = null;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        treqNode3 = (TReq)nodeArrayList6.get(0);
        tpxyNode4 = (TPxy)nodeArrayList7.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, treqNode3, tpxyNode4, null, null);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new80() /* reduce AAcommandheader5CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        Object nullNode4 = null;
        TErr terrNode5;
        Object nullNode6 = null;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        terrNode5 = (TErr)nodeArrayList6.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, null, null, terrNode5, null);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new81() /* reduce AAcommandheader6CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        TReq treqNode3;
        Object nullNode4 = null;
        TErr terrNode5;
        Object nullNode6 = null;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        treqNode3 = (TReq)nodeArrayList6.get(0);
        terrNode5 = (TErr)nodeArrayList7.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, treqNode3, null, terrNode5, null);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new82() /* reduce AAcommandheader7CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        TPxy tpxyNode4;
        TErr terrNode5;
        Object nullNode6 = null;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        tpxyNode4 = (TPxy)nodeArrayList6.get(0);
        terrNode5 = (TErr)nodeArrayList7.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, null, tpxyNode4, terrNode5, null);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new83() /* reduce AAcommandheader8CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        TReq treqNode3;
        TPxy tpxyNode4;
        TErr terrNode5;
        Object nullNode6 = null;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        treqNode3 = (TReq)nodeArrayList6.get(0);
        tpxyNode4 = (TPxy)nodeArrayList7.get(0);
        terrNode5 = (TErr)nodeArrayList8.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, treqNode3, tpxyNode4, terrNode5, null);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new84() /* reduce AAcommandheader9CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        Object nullNode4 = null;
        Object nullNode5 = null;
        TInteger tintegerNode6;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        tintegerNode6 = (TInteger)nodeArrayList6.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, null, null, null, tintegerNode6);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new85() /* reduce AAcommandheader10CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        TReq treqNode3;
        Object nullNode4 = null;
        Object nullNode5 = null;
        TInteger tintegerNode6;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        treqNode3 = (TReq)nodeArrayList6.get(0);
        tintegerNode6 = (TInteger)nodeArrayList7.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, treqNode3, null, null, tintegerNode6);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new86() /* reduce AAcommandheader11CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        TPxy tpxyNode4;
        Object nullNode5 = null;
        TInteger tintegerNode6;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        tpxyNode4 = (TPxy)nodeArrayList6.get(0);
        tintegerNode6 = (TInteger)nodeArrayList7.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, null, tpxyNode4, null, tintegerNode6);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new87() /* reduce AAcommandheader12CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        TReq treqNode3;
        TPxy tpxyNode4;
        Object nullNode5 = null;
        TInteger tintegerNode6;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        treqNode3 = (TReq)nodeArrayList6.get(0);
        tpxyNode4 = (TPxy)nodeArrayList7.get(0);
        tintegerNode6 = (TInteger)nodeArrayList8.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, treqNode3, tpxyNode4, null, tintegerNode6);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new88() /* reduce AAcommandheader13CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        Object nullNode4 = null;
        TErr terrNode5;
        TInteger tintegerNode6;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        terrNode5 = (TErr)nodeArrayList6.get(0);
        tintegerNode6 = (TInteger)nodeArrayList7.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, null, null, terrNode5, tintegerNode6);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new89() /* reduce AAcommandheader14CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        TReq treqNode3;
        Object nullNode4 = null;
        TErr terrNode5;
        TInteger tintegerNode6;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        treqNode3 = (TReq)nodeArrayList6.get(0);
        terrNode5 = (TErr)nodeArrayList7.get(0);
        tintegerNode6 = (TInteger)nodeArrayList8.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, treqNode3, null, terrNode5, tintegerNode6);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new90() /* reduce AAcommandheader15CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        TPxy tpxyNode4;
        TErr terrNode5;
        TInteger tintegerNode6;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        tpxyNode4 = (TPxy)nodeArrayList6.get(0);
        terrNode5 = (TErr)nodeArrayList7.get(0);
        tintegerNode6 = (TInteger)nodeArrayList8.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, null, tpxyNode4, terrNode5, tintegerNode6);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new91() /* reduce AAcommandheader16CommandHeader */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList10 = (ArrayList) pop();
        ArrayList nodeArrayList9 = (ArrayList) pop();
        ArrayList nodeArrayList8 = (ArrayList) pop();
        ArrayList nodeArrayList7 = (ArrayList) pop();
        ArrayList nodeArrayList6 = (ArrayList) pop();
        ArrayList nodeArrayList5 = (ArrayList) pop();
        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandHeader pcommandheaderNode1;
        {
        TInteger tintegerNode2;
        TReq treqNode3;
        TPxy tpxyNode4;
        TErr terrNode5;
        TInteger tintegerNode6;
        tintegerNode2 = (TInteger)nodeArrayList5.get(0);
        treqNode3 = (TReq)nodeArrayList6.get(0);
        tpxyNode4 = (TPxy)nodeArrayList7.get(0);
        terrNode5 = (TErr)nodeArrayList8.get(0);
        tintegerNode6 = (TInteger)nodeArrayList9.get(0);

        pcommandheaderNode1 = new ACommandHeader(tintegerNode2, treqNode3, tpxyNode4, terrNode5, tintegerNode6);
        }
	nodeList.add(pcommandheaderNode1);
        return nodeList;
    }



    ArrayList new92() /* reduce AAcommandbody1CommandBody */
    {
        ArrayList nodeList = new ArrayList();

        PCommandBody pcommandbodyNode1;
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        {
        }
        {
        }
        {
        }

        pcommandbodyNode1 = new ACommandBody(listNode2, listNode3, listNode4);
        }
	nodeList.add(pcommandbodyNode1);
        return nodeList;
    }



    ArrayList new93() /* reduce AAcommandbody2CommandBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandBody pcommandbodyNode1;
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
        }
        {
        }

        pcommandbodyNode1 = new ACommandBody(listNode3, listNode4, listNode5);
        }
	nodeList.add(pcommandbodyNode1);
        return nodeList;
    }



    ArrayList new94() /* reduce AAcommandbody3CommandBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandBody pcommandbodyNode1;
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        {
        }
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
        }

        pcommandbodyNode1 = new ACommandBody(listNode2, listNode4, listNode5);
        }
	nodeList.add(pcommandbodyNode1);
        return nodeList;
    }



    ArrayList new95() /* reduce AAcommandbody4CommandBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandBody pcommandbodyNode1;
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
        }

        pcommandbodyNode1 = new ACommandBody(listNode3, listNode5, listNode6);
        }
	nodeList.add(pcommandbodyNode1);
        return nodeList;
    }



    ArrayList new96() /* reduce AAcommandbody5CommandBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandBody pcommandbodyNode1;
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        {
        }
        {
        }
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }

        pcommandbodyNode1 = new ACommandBody(listNode2, listNode3, listNode5);
        }
	nodeList.add(pcommandbodyNode1);
        return nodeList;
    }



    ArrayList new97() /* reduce AAcommandbody6CommandBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandBody pcommandbodyNode1;
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
        }
        {
        TypedLinkedList listNode5 = new TypedLinkedList();
        listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pcommandbodyNode1 = new ACommandBody(listNode3, listNode4, listNode6);
        }
	nodeList.add(pcommandbodyNode1);
        return nodeList;
    }



    ArrayList new98() /* reduce AAcommandbody7CommandBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandBody pcommandbodyNode1;
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        TypedLinkedList listNode4 = new TypedLinkedList();
        TypedLinkedList listNode6 = new TypedLinkedList();
        {
        }
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        listNode3 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode3 != null)
	{
	  listNode4.addAll(listNode3);
	}
        }
        {
        TypedLinkedList listNode5 = new TypedLinkedList();
        listNode5 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode5 != null)
	{
	  listNode6.addAll(listNode5);
	}
        }

        pcommandbodyNode1 = new ACommandBody(listNode2, listNode4, listNode6);
        }
	nodeList.add(pcommandbodyNode1);
        return nodeList;
    }



    ArrayList new99() /* reduce AAcommandbody8CommandBody */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PCommandBody pcommandbodyNode1;
        {
        TypedLinkedList listNode3 = new TypedLinkedList();
        TypedLinkedList listNode5 = new TypedLinkedList();
        TypedLinkedList listNode7 = new TypedLinkedList();
        {
        TypedLinkedList listNode2 = new TypedLinkedList();
        listNode2 = (TypedLinkedList)nodeArrayList1.get(0);
	if(listNode2 != null)
	{
	  listNode3.addAll(listNode2);
	}
        }
        {
        TypedLinkedList listNode4 = new TypedLinkedList();
        listNode4 = (TypedLinkedList)nodeArrayList2.get(0);
	if(listNode4 != null)
	{
	  listNode5.addAll(listNode4);
	}
        }
        {
        TypedLinkedList listNode6 = new TypedLinkedList();
        listNode6 = (TypedLinkedList)nodeArrayList3.get(0);
	if(listNode6 != null)
	{
	  listNode7.addAll(listNode6);
	}
        }

        pcommandbodyNode1 = new ACommandBody(listNode3, listNode5, listNode7);
        }
	nodeList.add(pcommandbodyNode1);
        return nodeList;
    }



    ArrayList new100() /* reduce ACommandId */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TInteger tintegerNode1;
        tintegerNode1 = (TInteger)nodeArrayList1.get(0);
	nodeList.add(tintegerNode1);
        return nodeList;
    }



    ArrayList new101() /* reduce ARBit */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TReq treqNode1;
        treqNode1 = (TReq)nodeArrayList2.get(0);
	nodeList.add(treqNode1);
        return nodeList;
    }



    ArrayList new102() /* reduce APBit */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TPxy tpxyNode1;
        tpxyNode1 = (TPxy)nodeArrayList2.get(0);
	nodeList.add(tpxyNode1);
        return nodeList;
    }



    ArrayList new103() /* reduce AEBit */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TErr terrNode1;
        terrNode1 = (TErr)nodeArrayList2.get(0);
	nodeList.add(terrNode1);
        return nodeList;
    }



    ArrayList new104() /* reduce AApplicationId */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TInteger tintegerNode1;
        tintegerNode1 = (TInteger)nodeArrayList2.get(0);
	nodeList.add(tintegerNode1);
        return nodeList;
    }



    ArrayList new105() /* reduce AAfixed1$1Fixed */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PNamedAvpRef pnamedavprefNode1;
        {
        Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);

        pnamedavprefNode1 = new ANamedAvpRef(null, tidentifierNode3);
        }
	nodeList.add(pnamedavprefNode1);
        return nodeList;
    }



    ArrayList new106() /* reduce AAfixed2$1Fixed */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PNamedAvpRef pnamedavprefNode1;
        {
        PQualifier pqualifierNode2;
        TIdentifier tidentifierNode3;
        pqualifierNode2 = (PQualifier)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

        pnamedavprefNode1 = new ANamedAvpRef(pqualifierNode2, tidentifierNode3);
        }
	nodeList.add(pnamedavprefNode1);
        return nodeList;
    }



    ArrayList new107() /* reduce AArequired1$1Required */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PNamedAvpRef pnamedavprefNode1;
        {
        Object nullNode2 = null;
        TIdentifier tidentifierNode3;
        tidentifierNode3 = (TIdentifier)nodeArrayList2.get(0);

        pnamedavprefNode1 = new ANamedAvpRef(null, tidentifierNode3);
        }
	nodeList.add(pnamedavprefNode1);
        return nodeList;
    }



    ArrayList new108() /* reduce AArequired2$1Required */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PNamedAvpRef pnamedavprefNode1;
        {
        PQualifier pqualifierNode2;
        TIdentifier tidentifierNode3;
        pqualifierNode2 = (PQualifier)nodeArrayList1.get(0);
        tidentifierNode3 = (TIdentifier)nodeArrayList3.get(0);

        pnamedavprefNode1 = new ANamedAvpRef(pqualifierNode2, tidentifierNode3);
        }
	nodeList.add(pnamedavprefNode1);
        return nodeList;
    }



    ArrayList new109() /* reduce AArequiredavp1RequiredAvp */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGeneralAvpRef pgeneralavprefNode1;
        {
        Object nullNode2 = null;
        PAvpSpec pavpspecNode3;
        pavpspecNode3 = (PAvpSpec)nodeArrayList2.get(0);

        pgeneralavprefNode1 = new AGeneralAvpRef(null, pavpspecNode3);
        }
	nodeList.add(pgeneralavprefNode1);
        return nodeList;
    }



    ArrayList new110() /* reduce AArequiredavp2RequiredAvp */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGeneralAvpRef pgeneralavprefNode1;
        {
        PQualifier pqualifierNode2;
        PAvpSpec pavpspecNode3;
        pqualifierNode2 = (PQualifier)nodeArrayList1.get(0);
        pavpspecNode3 = (PAvpSpec)nodeArrayList3.get(0);

        pgeneralavprefNode1 = new AGeneralAvpRef(pqualifierNode2, pavpspecNode3);
        }
	nodeList.add(pgeneralavprefNode1);
        return nodeList;
    }



    ArrayList new111() /* reduce AAoptional1Optional */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGeneralAvpRef pgeneralavprefNode1;
        {
        Object nullNode2 = null;
        PAvpSpec pavpspecNode3;
        pavpspecNode3 = (PAvpSpec)nodeArrayList2.get(0);

        pgeneralavprefNode1 = new AGeneralAvpRef(null, pavpspecNode3);
        }
	nodeList.add(pgeneralavprefNode1);
        return nodeList;
    }



    ArrayList new112() /* reduce AAoptional2Optional */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList4 = (ArrayList) pop();
        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PGeneralAvpRef pgeneralavprefNode1;
        {
        PQualifier pqualifierNode2;
        PAvpSpec pavpspecNode3;
        pqualifierNode2 = (PQualifier)nodeArrayList1.get(0);
        pavpspecNode3 = (PAvpSpec)nodeArrayList3.get(0);

        pgeneralavprefNode1 = new AGeneralAvpRef(pqualifierNode2, pavpspecNode3);
        }
	nodeList.add(pgeneralavprefNode1);
        return nodeList;
    }



    ArrayList new113() /* reduce AAqualifier1Qualifier */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PQualifier pqualifierNode1;
        {
        Object nullNode2 = null;
        Object nullNode3 = null;

        pqualifierNode1 = new AQualifier(null, null);
        }
	nodeList.add(pqualifierNode1);
        return nodeList;
    }



    ArrayList new114() /* reduce AAqualifier2Qualifier */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PQualifier pqualifierNode1;
        {
        TInteger tintegerNode2;
        Object nullNode3 = null;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);

        pqualifierNode1 = new AQualifier(tintegerNode2, null);
        }
	nodeList.add(pqualifierNode1);
        return nodeList;
    }



    ArrayList new115() /* reduce AAqualifier3Qualifier */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PQualifier pqualifierNode1;
        {
        Object nullNode2 = null;
        TInteger tintegerNode3;
        tintegerNode3 = (TInteger)nodeArrayList2.get(0);

        pqualifierNode1 = new AQualifier(null, tintegerNode3);
        }
	nodeList.add(pqualifierNode1);
        return nodeList;
    }



    ArrayList new116() /* reduce AAqualifier4Qualifier */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList3 = (ArrayList) pop();
        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        PQualifier pqualifierNode1;
        {
        TInteger tintegerNode2;
        TInteger tintegerNode3;
        tintegerNode2 = (TInteger)nodeArrayList1.get(0);
        tintegerNode3 = (TInteger)nodeArrayList3.get(0);

        pqualifierNode1 = new AQualifier(tintegerNode2, tintegerNode3);
        }
	nodeList.add(pqualifierNode1);
        return nodeList;
    }



    ArrayList new117() /* reduce ANamed$1AvpSpec */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpSpec pavpspecNode1;
        {
        TIdentifier tidentifierNode2;
        tidentifierNode2 = (TIdentifier)nodeArrayList1.get(0);

        pavpspecNode1 = new ANamedAvpSpec(tidentifierNode2);
        }
	nodeList.add(pavpspecNode1);
        return nodeList;
    }



    ArrayList new118() /* reduce AAnyAvpSpec */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        PAvpSpec pavpspecNode1;
        {

        pavpspecNode1 = new AAnyAvpSpec();
        }
	nodeList.add(pavpspecNode1);
        return nodeList;
    }



    ArrayList new119() /* reduce ATerminal$Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        {
        PDefinition pdefinitionNode1;
        pdefinitionNode1 = (PDefinition)nodeArrayList1.get(0);
	if(pdefinitionNode1 != null)
	{
	  listNode2.add(pdefinitionNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    ArrayList new120() /* reduce ANonTerminal$Definition */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        {
        TypedLinkedList listNode1 = new TypedLinkedList();
        PDefinition pdefinitionNode2;
        listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        pdefinitionNode2 = (PDefinition)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pdefinitionNode2 != null)
	{
	  listNode3.add(pdefinitionNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    ArrayList new121() /* reduce ATerminal$Enumerator */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        {
        PEnumerator penumeratorNode1;
        penumeratorNode1 = (PEnumerator)nodeArrayList1.get(0);
	if(penumeratorNode1 != null)
	{
	  listNode2.add(penumeratorNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    ArrayList new122() /* reduce ANonTerminal$Enumerator */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        {
        TypedLinkedList listNode1 = new TypedLinkedList();
        PEnumerator penumeratorNode2;
        listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        penumeratorNode2 = (PEnumerator)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(penumeratorNode2 != null)
	{
	  listNode3.add(penumeratorNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    ArrayList new123() /* reduce ATerminal$Fixed */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        {
        PNamedAvpRef pnamedavprefNode1;
        pnamedavprefNode1 = (PNamedAvpRef)nodeArrayList1.get(0);
	if(pnamedavprefNode1 != null)
	{
	  listNode2.add(pnamedavprefNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    ArrayList new124() /* reduce ANonTerminal$Fixed */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        {
        TypedLinkedList listNode1 = new TypedLinkedList();
        PNamedAvpRef pnamedavprefNode2;
        listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        pnamedavprefNode2 = (PNamedAvpRef)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pnamedavprefNode2 != null)
	{
	  listNode3.add(pnamedavprefNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    ArrayList new125() /* reduce ATerminal$RequiredAvp */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        {
        PGeneralAvpRef pgeneralavprefNode1;
        pgeneralavprefNode1 = (PGeneralAvpRef)nodeArrayList1.get(0);
	if(pgeneralavprefNode1 != null)
	{
	  listNode2.add(pgeneralavprefNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    ArrayList new126() /* reduce ANonTerminal$RequiredAvp */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        {
        TypedLinkedList listNode1 = new TypedLinkedList();
        PGeneralAvpRef pgeneralavprefNode2;
        listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        pgeneralavprefNode2 = (PGeneralAvpRef)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pgeneralavprefNode2 != null)
	{
	  listNode3.add(pgeneralavprefNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    ArrayList new127() /* reduce ATerminal$Optional */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        {
        PGeneralAvpRef pgeneralavprefNode1;
        pgeneralavprefNode1 = (PGeneralAvpRef)nodeArrayList1.get(0);
	if(pgeneralavprefNode1 != null)
	{
	  listNode2.add(pgeneralavprefNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    ArrayList new128() /* reduce ANonTerminal$Optional */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        {
        TypedLinkedList listNode1 = new TypedLinkedList();
        PGeneralAvpRef pgeneralavprefNode2;
        listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        pgeneralavprefNode2 = (PGeneralAvpRef)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pgeneralavprefNode2 != null)
	{
	  listNode3.add(pgeneralavprefNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    ArrayList new129() /* reduce ATerminal$Required */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode2 = new TypedLinkedList();
        {
        PNamedAvpRef pnamedavprefNode1;
        pnamedavprefNode1 = (PNamedAvpRef)nodeArrayList1.get(0);
	if(pnamedavprefNode1 != null)
	{
	  listNode2.add(pnamedavprefNode1);
	}
        }
	nodeList.add(listNode2);
        return nodeList;
    }



    ArrayList new130() /* reduce ANonTerminal$Required */
    {
        ArrayList nodeList = new ArrayList();

        ArrayList nodeArrayList2 = (ArrayList) pop();
        ArrayList nodeArrayList1 = (ArrayList) pop();
        TypedLinkedList listNode3 = new TypedLinkedList();
        {
        TypedLinkedList listNode1 = new TypedLinkedList();
        PNamedAvpRef pnamedavprefNode2;
        listNode1 = (TypedLinkedList)nodeArrayList1.get(0);
        pnamedavprefNode2 = (PNamedAvpRef)nodeArrayList2.get(0);
	if(listNode1 != null)
	{
	  listNode3.addAll(listNode1);
	}
	if(pnamedavprefNode2 != null)
	{
	  listNode3.add(pnamedavprefNode2);
	}
        }
	nodeList.add(listNode3);
        return nodeList;
    }



    private static int[][][] actionTable;
/*      {
			{{-1, ERROR, 0}, {0, SHIFT, 1}, {22, SHIFT, 2}, {23, SHIFT, 3}, },
			{{-1, ERROR, 1}, {22, SHIFT, 5}, {23, SHIFT, 6}, },
			{{-1, ERROR, 2}, {23, SHIFT, 7}, },
			{{-1, ERROR, 3}, {48, SHIFT, 8}, },
			{{-1, ERROR, 4}, {49, ACCEPT, -1}, },
			{{-1, ERROR, 5}, {23, SHIFT, 10}, },
			{{-1, ERROR, 6}, {48, SHIFT, 8}, },
			{{-1, ERROR, 7}, {48, SHIFT, 8}, },
			{{-1, REDUCE, 18}, {15, SHIFT, 13}, },
			{{-1, ERROR, 9}, {7, SHIFT, 14}, },
			{{-1, ERROR, 10}, {48, SHIFT, 8}, },
			{{-1, ERROR, 11}, {7, SHIFT, 16}, },
			{{-1, ERROR, 12}, {7, SHIFT, 17}, },
			{{-1, ERROR, 13}, {48, SHIFT, 8}, },
			{{-1, ERROR, 14}, {47, SHIFT, 19}, },
			{{-1, ERROR, 15}, {7, SHIFT, 21}, },
			{{-1, ERROR, 16}, {47, SHIFT, 19}, },
			{{-1, ERROR, 17}, {47, SHIFT, 19}, },
			{{-1, REDUCE, 19}, },
			{{-1, REDUCE, 20}, },
			{{-1, ERROR, 20}, {11, SHIFT, 24}, {47, SHIFT, 25}, },
			{{-1, ERROR, 21}, {47, SHIFT, 19}, },
			{{-1, ERROR, 22}, {11, SHIFT, 28}, {47, SHIFT, 25}, },
			{{-1, ERROR, 23}, {11, SHIFT, 30}, {47, SHIFT, 25}, },
			{{-1, ERROR, 24}, {1, SHIFT, 32}, },
			{{-1, REDUCE, 74}, },
			{{-1, ERROR, 26}, {11, SHIFT, 34}, },
			{{-1, ERROR, 27}, {11, SHIFT, 35}, {47, SHIFT, 25}, },
			{{-1, ERROR, 28}, {1, SHIFT, 32}, },
			{{-1, ERROR, 29}, {11, SHIFT, 38}, },
			{{-1, ERROR, 30}, {1, SHIFT, 32}, },
			{{-1, ERROR, 31}, {11, SHIFT, 40}, },
			{{-1, REDUCE, 21}, },
			{{-1, ERROR, 33}, {8, SHIFT, 41}, },
			{{-1, ERROR, 34}, {1, SHIFT, 32}, },
			{{-1, ERROR, 35}, {1, SHIFT, 32}, },
			{{-1, ERROR, 36}, {11, SHIFT, 44}, },
			{{-1, ERROR, 37}, {8, SHIFT, 45}, },
			{{-1, ERROR, 38}, {1, SHIFT, 32}, },
			{{-1, ERROR, 39}, {8, SHIFT, 47}, },
			{{-1, ERROR, 40}, {1, SHIFT, 32}, },
			{{-1, ERROR, 41}, {12, SHIFT, 49}, },
			{{-1, ERROR, 42}, {8, SHIFT, 50}, },
			{{-1, ERROR, 43}, {8, SHIFT, 51}, },
			{{-1, ERROR, 44}, {1, SHIFT, 32}, },
			{{-1, ERROR, 45}, {12, SHIFT, 53}, },
			{{-1, ERROR, 46}, {8, SHIFT, 54}, },
			{{-1, ERROR, 47}, {12, SHIFT, 55}, },
			{{-1, ERROR, 48}, {8, SHIFT, 56}, },
			{{-1, ERROR, 49}, {0, SHIFT, 57}, {24, SHIFT, 58}, {48, SHIFT, 59}, },
			{{-1, ERROR, 50}, {12, SHIFT, 63}, },
			{{-1, ERROR, 51}, {12, SHIFT, 64}, },
			{{-1, ERROR, 52}, {8, SHIFT, 65}, },
			{{-1, ERROR, 53}, {0, SHIFT, 57}, {24, SHIFT, 58}, {48, SHIFT, 59}, },
			{{-1, ERROR, 54}, {12, SHIFT, 68}, },
			{{-1, ERROR, 55}, {0, SHIFT, 57}, {24, SHIFT, 58}, {48, SHIFT, 59}, },
			{{-1, ERROR, 56}, {12, SHIFT, 71}, },
			{{-1, ERROR, 57}, {24, SHIFT, 72}, {48, SHIFT, 73}, },
			{{-1, ERROR, 58}, {47, SHIFT, 74}, },
			{{-1, ERROR, 59}, {2, SHIFT, 75}, {7, SHIFT, 76}, },
			{{-1, ERROR, 60}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 119}, },
			{{-1, REDUCE, 0}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 63}, {0, SHIFT, 57}, {24, SHIFT, 58}, {48, SHIFT, 59}, },
			{{-1, ERROR, 64}, {0, SHIFT, 57}, {24, SHIFT, 58}, {48, SHIFT, 59}, },
			{{-1, ERROR, 65}, {12, SHIFT, 85}, },
			{{-1, ERROR, 66}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 1}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 68}, {0, SHIFT, 57}, {24, SHIFT, 58}, {48, SHIFT, 59}, },
			{{-1, ERROR, 69}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 2}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 71}, {0, SHIFT, 57}, {24, SHIFT, 58}, {48, SHIFT, 59}, },
			{{-1, ERROR, 72}, {47, SHIFT, 92}, },
			{{-1, ERROR, 73}, {2, SHIFT, 93}, {7, SHIFT, 76}, },
			{{-1, ERROR, 74}, {12, SHIFT, 95}, },
			{{-1, ERROR, 75}, {7, SHIFT, 96}, {47, SHIFT, 97}, },
			{{-1, ERROR, 76}, {48, SHIFT, 102}, },
			{{-1, ERROR, 77}, {2, SHIFT, 103}, },
			{{-1, ERROR, 78}, {48, SHIFT, 73}, },
			{{-1, REDUCE, 8}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 120}, },
			{{-1, ERROR, 81}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 4}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 83}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 3}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 85}, {0, SHIFT, 57}, {24, SHIFT, 58}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 9}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 87}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 5}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 10}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 90}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 6}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 92}, {12, SHIFT, 110}, },
			{{-1, ERROR, 93}, {7, SHIFT, 96}, {47, SHIFT, 97}, },
			{{-1, ERROR, 94}, {2, SHIFT, 115}, },
			{{-1, REDUCE, 16}, },
			{{-1, ERROR, 96}, {28, SHIFT, 116}, {29, SHIFT, 117}, {44, SHIFT, 118}, },
			{{-1, REDUCE, 73}, },
			{{-1, ERROR, 98}, {0, SHIFT, 119}, {48, SHIFT, 120}, },
			{{-1, REDUCE, 65}, {3, SHIFT, 124}, {5, SHIFT, 125}, {7, SHIFT, 126}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, ERROR, 100}, {31, SHIFT, 137}, {32, SHIFT, 138}, {33, SHIFT, 139}, {34, SHIFT, 140}, {35, SHIFT, 141}, {36, SHIFT, 142}, {37, SHIFT, 143}, {38, SHIFT, 144}, {39, SHIFT, 145}, {40, SHIFT, 146}, {41, SHIFT, 147}, {42, SHIFT, 148}, {43, SHIFT, 149}, {44, SHIFT, 150}, {45, SHIFT, 151}, {46, SHIFT, 152}, {47, SHIFT, 25}, },
			{{-1, REDUCE, 92}, {3, SHIFT, 155}, {5, SHIFT, 125}, {7, SHIFT, 126}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, ERROR, 102}, {8, SHIFT, 162}, },
			{{-1, ERROR, 103}, {7, SHIFT, 163}, },
			{{-1, REDUCE, 12}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 11}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 106}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 7}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 13}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 14}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, REDUCE, 17}, },
			{{-1, ERROR, 111}, {0, SHIFT, 119}, {48, SHIFT, 120}, },
			{{-1, REDUCE, 65}, {3, SHIFT, 124}, {5, SHIFT, 125}, {7, SHIFT, 126}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, ERROR, 113}, {31, SHIFT, 137}, {32, SHIFT, 138}, {33, SHIFT, 139}, {34, SHIFT, 140}, {35, SHIFT, 141}, {36, SHIFT, 142}, {37, SHIFT, 143}, {38, SHIFT, 144}, {39, SHIFT, 145}, {40, SHIFT, 146}, {41, SHIFT, 147}, {42, SHIFT, 148}, {43, SHIFT, 149}, {44, SHIFT, 150}, {45, SHIFT, 151}, {46, SHIFT, 152}, {47, SHIFT, 25}, },
			{{-1, REDUCE, 92}, {3, SHIFT, 155}, {5, SHIFT, 125}, {7, SHIFT, 126}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, ERROR, 115}, {7, SHIFT, 163}, },
			{{-1, ERROR, 116}, {30, SHIFT, 172}, },
			{{-1, ERROR, 117}, {30, SHIFT, 173}, },
			{{-1, ERROR, 118}, {11, SHIFT, 174}, },
			{{-1, ERROR, 119}, {48, SHIFT, 175}, },
			{{-1, ERROR, 120}, {47, SHIFT, 176}, },
			{{-1, ERROR, 121}, {12, SHIFT, 177}, },
			{{-1, REDUCE, 121}, },
			{{-1, REDUCE, 60}, {0, SHIFT, 119}, {48, SHIFT, 120}, },
			{{-1, ERROR, 124}, {29, SHIFT, 179}, {48, SHIFT, 180}, },
			{{-1, ERROR, 125}, {29, SHIFT, 179}, {48, SHIFT, 180}, },
			{{-1, ERROR, 126}, {48, SHIFT, 183}, },
			{{-1, REDUCE, 113}, {47, SHIFT, 184}, },
			{{-1, ERROR, 128}, {13, SHIFT, 185}, },
			{{-1, ERROR, 129}, {12, SHIFT, 186}, },
			{{-1, REDUCE, 123}, },
			{{-1, REDUCE, 125}, },
			{{-1, REDUCE, 127}, },
			{{-1, ERROR, 133}, {3, SHIFT, 187}, {5, SHIFT, 188}, {7, SHIFT, 189}, },
			{{-1, REDUCE, 66}, {3, SHIFT, 124}, {5, SHIFT, 125}, {7, SHIFT, 126}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 67}, {3, SHIFT, 124}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 69}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 34}, },
			{{-1, REDUCE, 35}, },
			{{-1, REDUCE, 36}, },
			{{-1, REDUCE, 37}, },
			{{-1, REDUCE, 38}, },
			{{-1, REDUCE, 39}, },
			{{-1, REDUCE, 40}, },
			{{-1, REDUCE, 41}, },
			{{-1, REDUCE, 42}, },
			{{-1, REDUCE, 43}, },
			{{-1, REDUCE, 44}, },
			{{-1, REDUCE, 45}, },
			{{-1, REDUCE, 46}, },
			{{-1, REDUCE, 47}, },
			{{-1, REDUCE, 48}, },
			{{-1, REDUCE, 49}, },
			{{-1, REDUCE, 51}, {17, SHIFT, 198}, {18, SHIFT, 199}, {19, SHIFT, 200}, },
			{{-1, ERROR, 154}, {31, SHIFT, 137}, {32, SHIFT, 138}, {33, SHIFT, 139}, {34, SHIFT, 140}, {35, SHIFT, 141}, {36, SHIFT, 142}, {37, SHIFT, 143}, {38, SHIFT, 144}, {39, SHIFT, 145}, {40, SHIFT, 146}, {41, SHIFT, 147}, {42, SHIFT, 148}, {43, SHIFT, 149}, {44, SHIFT, 150}, {45, SHIFT, 151}, {46, SHIFT, 152}, },
			{{-1, ERROR, 155}, {48, SHIFT, 205}, },
			{{-1, ERROR, 156}, {12, SHIFT, 206}, },
			{{-1, REDUCE, 129}, },
			{{-1, ERROR, 158}, {3, SHIFT, 207}, {5, SHIFT, 188}, {7, SHIFT, 189}, },
			{{-1, REDUCE, 93}, {3, SHIFT, 155}, {5, SHIFT, 125}, {7, SHIFT, 126}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 96}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 94}, {3, SHIFT, 155}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 75}, },
			{{-1, ERROR, 163}, {28, SHIFT, 116}, },
			{{-1, REDUCE, 92}, {3, SHIFT, 155}, {5, SHIFT, 125}, {7, SHIFT, 126}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 15}, {0, SHIFT, 78}, {48, SHIFT, 59}, },
			{{-1, ERROR, 166}, {12, SHIFT, 214}, },
			{{-1, ERROR, 167}, {12, SHIFT, 215}, },
			{{-1, REDUCE, 51}, {17, SHIFT, 198}, {18, SHIFT, 199}, {19, SHIFT, 200}, },
			{{-1, ERROR, 169}, {31, SHIFT, 137}, {32, SHIFT, 138}, {33, SHIFT, 139}, {34, SHIFT, 140}, {35, SHIFT, 141}, {36, SHIFT, 142}, {37, SHIFT, 143}, {38, SHIFT, 144}, {39, SHIFT, 145}, {40, SHIFT, 146}, {41, SHIFT, 147}, {42, SHIFT, 148}, {43, SHIFT, 149}, {44, SHIFT, 150}, {45, SHIFT, 151}, {46, SHIFT, 152}, },
			{{-1, ERROR, 170}, {12, SHIFT, 218}, },
			{{-1, REDUCE, 92}, {3, SHIFT, 155}, {5, SHIFT, 125}, {7, SHIFT, 126}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, ERROR, 172}, {11, SHIFT, 220}, },
			{{-1, ERROR, 173}, {11, SHIFT, 221}, },
			{{-1, ERROR, 174}, {47, SHIFT, 97}, },
			{{-1, ERROR, 175}, {47, SHIFT, 223}, },
			{{-1, REDUCE, 61}, },
			{{-1, REDUCE, 26}, },
			{{-1, REDUCE, 122}, },
			{{-1, REDUCE, 118}, },
			{{-1, REDUCE, 117}, },
			{{-1, ERROR, 181}, {4, SHIFT, 224}, },
			{{-1, ERROR, 182}, {6, SHIFT, 225}, },
			{{-1, ERROR, 183}, {8, SHIFT, 226}, },
			{{-1, REDUCE, 115}, },
			{{-1, REDUCE, 114}, {47, SHIFT, 227}, },
			{{-1, REDUCE, 28}, },
			{{-1, ERROR, 187}, {29, SHIFT, 179}, {48, SHIFT, 180}, },
			{{-1, ERROR, 188}, {29, SHIFT, 179}, {48, SHIFT, 180}, },
			{{-1, ERROR, 189}, {48, SHIFT, 230}, },
			{{-1, REDUCE, 124}, },
			{{-1, REDUCE, 68}, {3, SHIFT, 124}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 70}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 126}, },
			{{-1, ERROR, 194}, {3, SHIFT, 187}, {5, SHIFT, 188}, },
			{{-1, REDUCE, 71}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 128}, },
			{{-1, ERROR, 197}, {5, SHIFT, 188}, },
			{{-1, REDUCE, 54}, },
			{{-1, REDUCE, 55}, },
			{{-1, REDUCE, 56}, },
			{{-1, ERROR, 201}, {12, SHIFT, 232}, },
			{{-1, ERROR, 202}, {16, SHIFT, 233}, },
			{{-1, REDUCE, 52}, {14, SHIFT, 234}, },
			{{-1, REDUCE, 51}, {17, SHIFT, 198}, {18, SHIFT, 199}, {19, SHIFT, 200}, },
			{{-1, ERROR, 205}, {4, SHIFT, 236}, },
			{{-1, REDUCE, 30}, },
			{{-1, ERROR, 207}, {48, SHIFT, 237}, },
			{{-1, REDUCE, 97}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 95}, {3, SHIFT, 155}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 130}, },
			{{-1, ERROR, 211}, {3, SHIFT, 207}, {5, SHIFT, 188}, },
			{{-1, REDUCE, 98}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, ERROR, 213}, {12, SHIFT, 239}, },
			{{-1, REDUCE, 27}, },
			{{-1, REDUCE, 29}, },
			{{-1, ERROR, 216}, {12, SHIFT, 240}, },
			{{-1, REDUCE, 51}, {17, SHIFT, 198}, {18, SHIFT, 199}, {19, SHIFT, 200}, },
			{{-1, REDUCE, 31}, },
			{{-1, ERROR, 219}, {12, SHIFT, 242}, },
			{{-1, ERROR, 220}, {47, SHIFT, 243}, },
			{{-1, ERROR, 221}, {47, SHIFT, 97}, },
			{{-1, ERROR, 222}, {8, SHIFT, 246}, },
			{{-1, REDUCE, 62}, },
			{{-1, REDUCE, 109}, },
			{{-1, REDUCE, 111}, },
			{{-1, REDUCE, 105}, },
			{{-1, REDUCE, 116}, },
			{{-1, ERROR, 228}, {4, SHIFT, 247}, },
			{{-1, ERROR, 229}, {6, SHIFT, 248}, },
			{{-1, ERROR, 230}, {8, SHIFT, 249}, },
			{{-1, REDUCE, 72}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 22}, },
			{{-1, REDUCE, 51}, {17, SHIFT, 198}, {18, SHIFT, 199}, {19, SHIFT, 200}, },
			{{-1, REDUCE, 51}, {17, SHIFT, 198}, {18, SHIFT, 199}, {19, SHIFT, 200}, },
			{{-1, ERROR, 235}, {12, SHIFT, 252}, },
			{{-1, REDUCE, 107}, },
			{{-1, ERROR, 237}, {4, SHIFT, 253}, },
			{{-1, REDUCE, 99}, {5, SHIFT, 125}, {13, SHIFT, 127}, {47, SHIFT, 128}, },
			{{-1, REDUCE, 32}, },
			{{-1, REDUCE, 23}, },
			{{-1, ERROR, 241}, {12, SHIFT, 254}, },
			{{-1, REDUCE, 33}, },
			{{-1, REDUCE, 100}, },
			{{-1, ERROR, 244}, {8, SHIFT, 255}, {14, SHIFT, 256}, },
			{{-1, ERROR, 245}, {8, SHIFT, 261}, {47, SHIFT, 25}, },
			{{-1, REDUCE, 59}, },
			{{-1, REDUCE, 110}, },
			{{-1, REDUCE, 112}, },
			{{-1, REDUCE, 106}, },
			{{-1, ERROR, 250}, {16, SHIFT, 263}, },
			{{-1, REDUCE, 53}, },
			{{-1, REDUCE, 24}, },
			{{-1, REDUCE, 108}, },
			{{-1, REDUCE, 25}, },
			{{-1, REDUCE, 76}, },
			{{-1, ERROR, 256}, {25, SHIFT, 264}, {26, SHIFT, 265}, {27, SHIFT, 266}, {47, SHIFT, 267}, },
			{{-1, ERROR, 257}, {8, SHIFT, 268}, {14, SHIFT, 269}, },
			{{-1, ERROR, 258}, {8, SHIFT, 273}, {14, SHIFT, 274}, },
			{{-1, ERROR, 259}, {8, SHIFT, 277}, {14, SHIFT, 278}, },
			{{-1, ERROR, 260}, {8, SHIFT, 280}, },
			{{-1, REDUCE, 63}, },
			{{-1, ERROR, 262}, {8, SHIFT, 281}, },
			{{-1, REDUCE, 51}, {17, SHIFT, 198}, {18, SHIFT, 199}, {19, SHIFT, 200}, },
			{{-1, REDUCE, 101}, },
			{{-1, REDUCE, 102}, },
			{{-1, REDUCE, 103}, },
			{{-1, REDUCE, 104}, },
			{{-1, REDUCE, 77}, },
			{{-1, ERROR, 269}, {26, SHIFT, 265}, {27, SHIFT, 266}, {47, SHIFT, 267}, },
			{{-1, ERROR, 270}, {8, SHIFT, 283}, {14, SHIFT, 274}, },
			{{-1, ERROR, 271}, {8, SHIFT, 286}, {14, SHIFT, 278}, },
			{{-1, ERROR, 272}, {8, SHIFT, 288}, },
			{{-1, REDUCE, 78}, },
			{{-1, ERROR, 274}, {27, SHIFT, 266}, {47, SHIFT, 267}, },
			{{-1, ERROR, 275}, {8, SHIFT, 289}, {14, SHIFT, 278}, },
			{{-1, ERROR, 276}, {8, SHIFT, 291}, },
			{{-1, REDUCE, 80}, },
			{{-1, ERROR, 278}, {47, SHIFT, 267}, },
			{{-1, ERROR, 279}, {8, SHIFT, 292}, },
			{{-1, REDUCE, 84}, },
			{{-1, REDUCE, 64}, },
			{{-1, ERROR, 282}, {16, SHIFT, 293}, },
			{{-1, REDUCE, 79}, },
			{{-1, ERROR, 284}, {8, SHIFT, 294}, {14, SHIFT, 278}, },
			{{-1, ERROR, 285}, {8, SHIFT, 296}, },
			{{-1, REDUCE, 81}, },
			{{-1, ERROR, 287}, {8, SHIFT, 297}, },
			{{-1, REDUCE, 85}, },
			{{-1, REDUCE, 82}, },
			{{-1, ERROR, 290}, {8, SHIFT, 298}, },
			{{-1, REDUCE, 86}, },
			{{-1, REDUCE, 88}, },
			{{-1, REDUCE, 51}, {17, SHIFT, 198}, {18, SHIFT, 199}, {19, SHIFT, 200}, },
			{{-1, REDUCE, 83}, },
			{{-1, ERROR, 295}, {8, SHIFT, 300}, },
			{{-1, REDUCE, 87}, },
			{{-1, REDUCE, 89}, },
			{{-1, REDUCE, 90}, },
			{{-1, ERROR, 299}, {16, SHIFT, 301}, },
			{{-1, REDUCE, 91}, },
			{{-1, ERROR, 301}, {20, SHIFT, 302}, {21, SHIFT, 303}, },
			{{-1, REDUCE, 57}, },
			{{-1, REDUCE, 58}, },
			{{-1, REDUCE, 50}, },
        };*/
    private static int[][][] gotoTable;
/*      {
			{{-1, 4}, },
			{{-1, 60}, {53, 66}, {55, 69}, {63, 81}, {64, 83}, {68, 87}, {71, 90}, {85, 106}, },
			{{-1, 9}, {6, 11}, {7, 12}, {10, 15}, {13, 18}, },
			{{-1, 20}, {16, 22}, {17, 23}, {21, 27}, },
			{{-1, 33}, {28, 37}, {30, 39}, {34, 42}, {35, 43}, {38, 46}, {40, 48}, {44, 52}, },
			{{-1, 61}, {62, 80}, {67, 80}, {70, 80}, {79, 80}, {82, 80}, {84, 80}, {86, 80}, {88, 80}, {89, 80}, {91, 80}, {104, 80}, {105, 80}, {107, 80}, {108, 80}, {109, 80}, {165, 80}, },
			{{-1, 153}, {113, 168}, {154, 204}, {169, 217}, },
			{{-1, 201}, {168, 216}, {204, 235}, {217, 241}, },
			{{-1, 202}, {233, 250}, {234, 251}, {263, 282}, {293, 299}, },
			{{-1, 203}, },
			{{-1, 304}, },
			{{-1, 98}, {93, 111}, },
			{{-1, 121}, {111, 166}, },
			{{-1, 122}, {123, 178}, },
			{{-1, 99}, {93, 112}, },
			{{-1, 129}, {112, 167}, },
			{{-1, 100}, {93, 113}, {174, 222}, {221, 245}, },
			{{-1, 26}, {22, 29}, {23, 31}, {27, 36}, {100, 154}, {113, 169}, {245, 262}, },
			{{-1, 77}, {73, 94}, },
			{{-1, 101}, {93, 114}, {103, 164}, {115, 171}, },
			{{-1, 156}, {114, 170}, {164, 213}, {171, 219}, },
			{{-1, 244}, },
			{{-1, 257}, },
			{{-1, 258}, {257, 270}, },
			{{-1, 259}, {257, 271}, {258, 275}, {270, 284}, },
			{{-1, 260}, {257, 272}, {258, 276}, {259, 279}, {270, 285}, {271, 287}, {275, 290}, {284, 295}, },
			{{-1, 130}, {134, 190}, {159, 190}, },
			{{-1, 157}, {161, 210}, {209, 210}, },
			{{-1, 131}, {135, 193}, {191, 193}, },
			{{-1, 132}, {136, 196}, {160, 196}, {192, 196}, {195, 196}, {208, 196}, {212, 196}, {231, 196}, {238, 196}, },
			{{-1, 197}, {99, 133}, {101, 158}, {112, 133}, {114, 158}, {134, 133}, {135, 194}, {159, 158}, {161, 211}, {164, 158}, {171, 158}, {191, 194}, {209, 211}, },
			{{-1, 181}, {125, 182}, {187, 228}, {188, 229}, },
			{{-1, 62}, {53, 67}, {55, 70}, {60, 79}, {63, 82}, {64, 84}, {66, 86}, {68, 88}, {69, 89}, {71, 91}, {81, 104}, {83, 105}, {85, 107}, {87, 108}, {90, 109}, {106, 165}, },
			{{-1, 123}, },
			{{-1, 159}, {99, 134}, {112, 134}, },
			{{-1, 135}, {134, 191}, },
			{{-1, 160}, {99, 136}, {112, 136}, {134, 192}, {135, 195}, {159, 208}, {161, 212}, {191, 231}, {209, 238}, },
			{{-1, 161}, {159, 209}, },
        };*/
    private static String[] errorMessages;
/*      {
			"expecting: documentation, '@', 'protocol'",
			"expecting: '@', 'protocol'",
			"expecting: 'protocol'",
			"expecting: identifier",
			"expecting: EOF",
			"expecting: '<', '.'",
			"expecting: '<'",
			"expecting: integer",
			"expecting: ':', integer",
			"expecting: string literal",
			"expecting: '>', ':', 'OctetString', 'Integer32', 'Integer64', 'Unsigned32', 'Unsigned64', 'Float32', 'Float64', 'Grouped', 'Address', 'Time', 'UTF8String', 'DiamIdent', 'DiamURI', 'Enumerated', 'IPFilterRule', 'QoSFilterRule'",
			"expecting: ':'",
			"expecting: '>'",
			"expecting: ';'",
			"expecting: documentation, 'dict-id', identifier",
			"expecting: 'dict-id', identifier",
			"expecting: '::=', '<'",
			"expecting: documentation, identifier",
			"expecting: documentation, identifier, EOF",
			"expecting: '<', integer",
			"expecting: '::='",
			"expecting: 'Diameter', 'AVP', 'Enumerated'",
			"expecting: '>', 'OctetString', 'Integer32', 'Integer64', 'Unsigned32', 'Unsigned64', 'Float32', 'Float64', 'Grouped', 'Address', 'Time', 'UTF8String', 'DiamIdent', 'DiamURI', 'Enumerated', 'IPFilterRule', 'QoSFilterRule', integer",
			"expecting: '{', '[', '<', ';', '*', integer",
			"expecting: 'OctetString', 'Integer32', 'Integer64', 'Unsigned32', 'Unsigned64', 'Float32', 'Float64', 'Grouped', 'Address', 'Time', 'UTF8String', 'DiamIdent', 'DiamURI', 'Enumerated', 'IPFilterRule', 'QoSFilterRule', integer",
			"expecting: 'Header'",
			"expecting: documentation, ';', identifier",
			"expecting: 'AVP', identifier",
			"expecting: '{', '[', '<', integer",
			"expecting: '*'",
			"expecting: '{', '[', ';', '*', integer",
			"expecting: '[', ';', '*', integer",
			"expecting: '{', '[', '<'",
			"expecting: '|', 'M', 'P', 'V'",
			"expecting: 'OctetString', 'Integer32', 'Integer64', 'Unsigned32', 'Unsigned64', 'Float32', 'Float64', 'Grouped', 'Address', 'Time', 'UTF8String', 'DiamIdent', 'DiamURI', 'Enumerated', 'IPFilterRule', 'QoSFilterRule'",
			"expecting: 'Diameter'",
			"expecting: '}', ']'",
			"expecting: '}'",
			"expecting: ']'",
			"expecting: '{', '['",
			"expecting: '['",
			"expecting: ',', '|'",
			"expecting: '|'",
			"expecting: '>', ','",
			"expecting: '>', integer",
			"expecting: 'REQ', 'PXY', 'ERR', integer",
			"expecting: 'PXY', 'ERR', integer",
			"expecting: 'ERR', integer",
			"expecting: 'Y', 'N'",
        };*/
    private static int[] errors;
/*      {
			0, 1, 2, 3, 4, 2, 3, 3, 5, 6, 3, 6, 6, 3, 7, 6, 7, 7, 6, 8, 8, 7, 8, 8, 9, 10, 11, 8, 9, 11, 9, 11, 12, 12, 9, 9, 11, 12, 9, 12, 9, 13, 12, 12, 9, 13, 12, 13, 12, 14, 13, 13, 12, 14, 13, 14, 13, 15, 7, 16, 17, 18, 18, 14, 14, 13, 17, 18, 14, 17, 18, 14, 7, 16, 13, 19, 3, 20, 3, 18, 18, 17, 18, 17, 18, 14, 18, 17, 18, 18, 17, 18, 13, 19, 20, 17, 21, 22, 17, 23, 24, 23, 12, 6, 18, 18, 17, 18, 18, 18, 17, 17, 23, 24, 23, 6, 25, 25, 11, 3, 7, 13, 26, 26, 27, 27, 3, 28, 29, 13, 23, 30, 31, 32, 23, 30, 31, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 33, 34, 3, 13, 30, 32, 23, 31, 30, 20, 35, 23, 18, 13, 13, 33, 34, 13, 23, 11, 11, 7, 7, 26, 18, 26, 36, 36, 37, 38, 12, 32, 28, 18, 27, 27, 3, 23, 30, 31, 30, 39, 31, 31, 40, 41, 41, 41, 13, 42, 41, 33, 37, 18, 3, 31, 30, 30, 39, 31, 13, 18, 18, 13, 33, 18, 13, 7, 7, 12, 26, 30, 31, 23, 32, 37, 38, 12, 31, 18, 33, 33, 13, 30, 37, 31, 18, 18, 13, 18, 43, 43, 44, 17, 30, 31, 23, 42, 42, 18, 30, 18, 23, 45, 43, 43, 43, 12, 23, 12, 33, 43, 43, 43, 12, 23, 46, 43, 43, 12, 23, 47, 43, 12, 23, 7, 12, 23, 23, 42, 23, 43, 12, 23, 12, 23, 23, 12, 23, 23, 33, 23, 12, 23, 23, 23, 42, 23, 48, 13, 13, 13, 
        };*/

    static 
    {
        try
        {
            DataInputStream s = new DataInputStream(
                new BufferedInputStream(
                Parser.class.getResourceAsStream("parser.dat")));

            // read actionTable
            int length = s.readInt();
            actionTable = new int[length][][];
            for(int i = 0; i < actionTable.length; i++)
            {
                length = s.readInt();
                actionTable[i] = new int[length][3];
                for(int j = 0; j < actionTable[i].length; j++)
                {
                for(int k = 0; k < 3; k++)
                {
                    actionTable[i][j][k] = s.readInt();
                }
                }
            }

            // read gotoTable
            length = s.readInt();
            gotoTable = new int[length][][];
            for(int i = 0; i < gotoTable.length; i++)
            {
                length = s.readInt();
                gotoTable[i] = new int[length][2];
                for(int j = 0; j < gotoTable[i].length; j++)
                {
                for(int k = 0; k < 2; k++)
                {
                    gotoTable[i][j][k] = s.readInt();
                }
                }
            }

            // read errorMessages
            length = s.readInt();
            errorMessages = new String[length];
            for(int i = 0; i < errorMessages.length; i++)
            {
                length = s.readInt();
                StringBuffer buffer = new StringBuffer();

                for(int j = 0; j < length; j++)
                {
                buffer.append(s.readChar());
                }
                errorMessages[i] = buffer.toString();
            }

            // read errors
            length = s.readInt();
            errors = new int[length];
            for(int i = 0; i < errors.length; i++)
            {
                errors[i] = s.readInt();
            }

            s.close();
        }
        catch(Exception e)
        {
            throw new RuntimeException("The file \"parser.dat\" is either missing or corrupted.");
        }
    }
}
