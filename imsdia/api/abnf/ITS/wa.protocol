/**
 * 3GPP TS 29.234 V9.1.0 (2010-03) --- Wa interface
 * The Wa reference point is defined between the I-WLAN 
 * and the 3GPP AAA Server or 3GPP AAA Proxy. 
 * The Wa reference point inter-works between 3GPP networks and WLAN ANs
 * The description of the reference point
 * and its functionality is given in 3GPP TS 23.234
 * RFC 3588 - Diameter Base and Accounting Protocol
 * RFC 4072 - Diameter EAP application
 * RFC 4005 - Diameter NASREQ application
 * RFC 5777 - Diameter QoS-Resources application
 * Wa interface re-used AVPs
 * The Application-Id to be advertised over Wa reference 
 * point corresponds to the EAP or Diameter Base Protocol 
 * Application-Id, depending on the command sent over Wa.
 */
protocol diameter.wa < 5 : "ETSI TS 129 234 V9.1.0 (2010-03) " >;

    //////////////////
    // Derived AVPs //
    //////////////////


/**
 * The Visited-Network-Identifier AVP is of type OctetString. This AVP
 * contains an identifier that helps the home  network to identify the
 * visited network (e.g. the visited network domain name).
 */
    Visited-Network-Identifier         ::=  600  /*6.3.1*/                OctetString   M,V| | |   |N;


/**
 * The Session-Request-Type AVP is of type Enumerated and indicates the action
 * that the PDG is asking to the 3GPP AAA Server to perform (authorization or
 * routing policy). The following values are defined:
 * AUTHORIZATION REQUEST (0)
 * - The PDG is requesting authorization for a user for a given W-APN.
 * ROUTING POLICY (1)
 * - The PDG is indicating that routing policy information is present.
 */
    Session-Request-Type               ::= 311  /*ETSI 29 234 10.1.23*/   Enumerated    M,V| | |   |N;


/**
 * The 3GPP-WLAN-APN-Id AVP is of type OctetString, and contains the W-APN for
 * which the user will have services available. These W-APNs may be mapped to
 * services in the home network or in the visited network. W-APN is defined
 * in 3GPP TS 23.003 [22].
 */
    Wa3GPP-WLAN-APN-Id                 ::= 100 /* ETSI 29 23410.1.15*/    OctetString   M,V| | |   |N;



/**
 * The Routing Policy AVP is of type IPFilterRule, and defines a packet filter
 * for an IP flow with the following
 * information:
 * - Direction (in or out).
 * - Source and destination IP address (possibly masked).
 * - Protocol.
 * - Source and destination port (list or ranges).
 * Where the protocol type shall be set to ESP (50). The IPFilterRule type shall
 * be used with the following restrictions:
 * - Only the Action "permit" shall be used.
 * - No "options" shall be used.
 * - The invert modifier "!" for addresses shall not be used.
 * - The keyword "assigned" shall not be used.
 * - For direction "out", an IPv4 destination IP address shall not be wildcarded.
 * For direction "out", the 64 bits
 * network prefix of an IPv6 destination IP address shall not be wildcarded.
 */
    Routing-Policy                     ::= 312 /* ETSI 29 10.1.24*/       IPFilterRule  M,V| | |   |N;


/**
 * The Subscription-ID AVP is of type grouped and indicates the user identity
 * to be used for charging purposes. It is defined in the IETF RFC 4006 [19].
 * WLAN shall make use only of the values MSISDN or IMSI. This grouped AVP shall
 * set the sub-AVP Subscription-Id- Type to value "END_USER_E164" or to value
 * "END_USER_IMSI" and shall set the sub-AVP Subscription-Id-Data to
 * the MSISDN value.
 */
    Subscription-Id                    ::= 443  0  /*clause 8.46 RFC4006 */  Grouped       M|P| |  V  |Y;

/**
 * Subscription-Id-Type AVP is of type Enumerated and it is used to determine which type of
 * identifier is carried by the Subscription-Id AVP.
 */
    Subscription-Id-Type               ::= 450 0 /* clause 8.47 RFC4006 */ Enumerated    M|P| |  V  |Y;

/**
 * Subscription-Id-Data AVP is used to identity the end user and is of type UTF8String.
 */
    Subscription-Id-Data               ::= 444 0 /* clause 8.48 RFC4006 */ UTF8String    M|P| |  V  |Y;

/**
 * The Max-Requested-Bandwidth AVP(code 313) is of type OctetString and
 * indicates the Max-Subscriber-Bandwidth. If present, shall be downloaded from
 * HSS to 3GPP AAA Server, and sent from the 3GPP AAA Server to the PDG.
 */
    Max-Requested-Bandwidth            ::= 313  /*10.1.26 3GPP TS29.234*/ OctetString   M,V| | |   |N;



/**
 * The Charging-Data AVP is of type Grouped, and contains the addresses of thei
 * charging functions. When this AVP is present within the APN-Authorised AVP,
 * charging data apply to the specific W-APN within the  APN-Authorised AVP and
 * shall prevail over the general received Charging-Data.
 */
    Charging-Data                      ::= 304 /* 10.1.10*/               Grouped       M,V| | |    |N;


/**
 * The Charging-Characteristics AVP is of type Integer, and contains the
 * charging mode to be applied as described in 3GPP TS 32.215.
 */
    Charging-Characteristics           ::= 314  /*10.1.27 3GPP TS29.234*/ Integer32     M,V| | |   |N;

/**
 * The Charging-Nodes AVP is of type Grouped, and contains the addresses of the
 * charging functions, as described in 3GPP TS 32.240.
 */
    Charging-Nodes                     ::= 315  /*10.1.28 3GPP TS29.234*/ Grouped       M,V| | |   |N;

/**
 * The Primary-Charging-Collection-Function-Name AVP is of type DiameterURI.
 * This AVP contains the address of the Primary Charging Collection Function.
 */
    Primary-Charging-Collection-Function-Name ::= 621 /* 6.3.22 3GPP TS29.229*/ DiamURI M,V| | |   |N;

/**
 * The Primary-OCS-Charging-Function-Name AVP is of type DiameterIdentity, and
 * defines the address of the Primary Online Charging System (OCS).
 */
    Primary-OCS-Charging-Function-Name ::= 316  /*10.1.29 3GPP TS29.234*/ DiamIdent     M,V| | |   |N;

/**
 * The Secondary-OCS-Charging-Function-Name AVP is of type DiameterIdentity,and
 * defines the address of the Secondary Online Charging System (OCS).
 */
    Secondary-OCS-Charging-Function-Name ::= 317  /*10.1.30 3GPP TS29.234*/ DiamIdent   M,V| | |   |N;

/**
 * The Line-Identifier AVP has AVP code 500 is of type OctetString. This AVP
 * contains a fixed broadband access line identifier associated to the user.
 * This information element contains the line identifier of the user's network
 * termination.
 */
    Line-Identifier                    ::= 500 /*TS183033-6.3.1,34*/ OctetString   V|M| |  |Y;


/**
 * The Secondary-Charging-Collection-Function-Name AVP is of type DiameterURI.
 * This AVP contains the address of the Secondary Charging Collection Function.
 */
    Secondary-Charging-Collection-Function-Name  ::= 622 /*6.3.23 3GPP TS29.229*/ DiamURI M,V| | |   |N;

    Number-Of-Messages-Sent ::= 2019  /*TS 32299.8a0 */ Unsigned32    V,M|P| |    |N; /* 8.24, 32299.8a0 */


/**
 * This attribute carries the operator namespace identifier and the
 * operator name.  The operator name is combined with the namespace
 * identifier to uniquely identify the owner of an access network.  The
 * value of the Operator-Name is a non-NULL terminated text whose length
 * MUST NOT exceed 253 bytes.
 * The Operator-Name Attribute SHOULD be sent in Access-Request and
 * Accounting-Request messages where the Acc-Status-Type is set to
 * Start, Interim, or Stop.
 */
    Operator-Name ::= 1000    /*RFC 5580 Section 4.1  */ OctetString   V,M|P| |     |Y; /* Radius (Re-check the type) dummy AVP code*/

/**
 * The Location-Information Attribute MAY be sent in the Access-Request
 * message, the Accounting-Request message, both of these messages, or
 * no message.  For the Accounting-Request message, the Acc-Status-Type
 * may be set to Start, Interim, or Stop.
 * The Location-Information Attribute provides meta-data about the
 * location information, such as sighting time, time-to-live, location-
 * determination method, etc.
 */
    Location-Information ::= 1001    /*RFC 5580 Section 4.2  */ OctetString   V,M|P| |     |Y; /* Radius (Re-check the type) dummy AVP code*/

/**
 * The Location-Data Attribute MAY be sent in Access-Request and
 * Accounting-Request messages.  For the Accounting-Request message, the
 * Acc-Status-Type may be set to Start, Interim, or Stop.
 */
    Location-Data ::= 1002    /*RFC 5580 Section 4.3  */ OctetString   V,M|P| |     |Y; /* Radius (Re-check the type) dummy AVP code*/

/**
 * The Basic-Location-Policy-Rules Attribute MAY be sent in Access-
 * Request, Access-Accept, Access-Challenge, Change-of-Authorization,
 * and Accounting-Request messages.
 */
    Basic-Location-Policy-Rules ::= 1003 /*RFC 5580 Section 4.4  */ OctetString  V,M|P| |   |Y; /* Radius (Re-check the type) dummy AVP code*/

/**
 *  The Extended-Location-Policy-Rules Attribute MAY be sent in Access-
 *  Request, Access-Accept, Access-Challenge, Access-Reject, Change-of-
 *  Authorization, and Accounting-Request messages.
 */

 Extended-Location-Policy-Rules ::= 1004 /*RFC 5580 Section 4.5  */ OctetString  V,M|P| |   |Y; /* Radius (Re-check the type) dummy AVP code*/

/**
 * The Location-Capable Attribute allows an NAS (or client function of a
 *   proxy server) to indicate support for the functionality specified in
 *    this document.  The Location-Capable Attribute with the value for
 *    'Location Capable' MUST be sent with the Access-Request messages, if
 *    the NAS supports the functionality described in this document and is
 *    capable of sending location information.  A RADIUS server MUST NOT
 *    challenge for location information unless the Location-Capable
 *   Attribute has been sent to it.
 */ 
   Location-Capable ::= 1005 /*RFC 5580 Section 4.6  */ OctetString  V,M|P| |   |Y; /* Radius (Re-check the type) dummy AVP code*/

/**
 * The Requested-Location-Info Attribute allows the RADIUS server to
 * indicate which location information about which entity it wants to
 * receive.  The latter aspect refers to the entities that are indicated
 * in the Entity field of the Location-Information Attribute.
 */
   Requested-Location-Info ::= 1006 /*RFC 5580 Section 4.7  */ OctetString  V,M|P| |   |Y; /* Radius (Re-check the type) dummy AVP code*/

/**
 * It is possible that a Dynamic Authorization Server cannot honor
 * Disconnect-Request or CoA-Request packets for some reason.  The
 * Error-Cause Attribute provides more detail on the cause of the
 * problem.  It MAY be included within CoA-NAK and Disconnect-NAK
 * packets.
 */ 
  Error-Cause  ::= 1007 /*RFC 5580 Section 4.7  */ OctetString  V,M|P| |   |Y; /* Radius (Re-check the type) dummy AVP code*/

/**
 * Acct-Terminate-Cause attribute indicates how the session was terminated, and can
 * only be present in Accounting-Request records where the Acct-
 * Status-Type is set to Stop.
 */ 

  Acct-Terminate-Cause  ::= 49 /*RFC 2866 Section 5.10  */ OctetString  V,M|P| |   |Y; /* Radius (Re-check the type) dummy AVP code*/

/**
 * The QoS-Resources AVP (AVP Code 508) is of type Grouped and contains
 * a list of filter policy rules.
 */
    QoS-Resources    ::= 508  /*RFC5777 Section 3.1 */ Grouped      M,V| | |   |N;

/**
 * The Filter-Rule AVP (AVP Code 509) is of type Grouped and defines a
 * specific condition and action combination.
 */
     
    Filter-Rule    ::= 509  /*RFC5777 Section 3.2 */ Grouped      M,V| | |   |N;

/**
 * The Filter-Rule-Precedence AVP (AVP Code 510) is of type Unsigned32
 * and specifies the execution order of the rules expressed in the QoSResources
 * AVP. The lower the numerical value of Filter-Rule-
 * Precedence AVP, the higher the rule precedence. Rules with equal
 * precedence MAY be executed in parallel if supported by the Resource
 * Management Function. If the Filter-Rule-Precedence AVP is absent
 * from the Filter-Rule AVP, the rules SHOULD be executed in the order
 * in which they appear in the QoS-Resources AVP.
 */

    Filter-Rule-Precedence ::= 510  /*RFC5777 Section 3.3 */ Unsigned32    V,M|P| |    |N; 


/**
 * The Classifier AVP (AVP Code 511) is a grouped AVP that consists of a
 * set of attributes that specify how to match a packet.
 */

    Classifier    ::= 511  /*RFC5777 Section 4.1.1 */ Grouped      M,V| | |   |N;

/**
 * The Classifier-ID AVP (AVP Code 512) is of type OctetString and
 * uniquely identifies the classifier. Each application will define the
 * uniqueness scope of this identifier, e.g., unique per terminal or
 * globally unique. Exactly one Classifier-ID AVP MUST be contained
 * within a Classifier AVP.
 */

    Classifier-ID ::= 512 /*RFC5777 Section 4.1.2 */ OctetString   V|M| |  |Y;

/**
 * The Protocol AVP (AVP Code 513) is of type Enumerated and specifies
 * the protocol being matched. The attributes included in the
 * Classifier AVP MUST be consistent with the value of the Protocol AVP.
 * Exactly zero or one Protocol AVP may be contained within a Classifier
 * AVP. If the Protocol AVP is omitted from the classifier, then
 * comparison of the protocol of the packet is irrelevant. The values
 * for this AVP are managed by IANA under the Protocol Numbers registry
 * as defined in [RFC2780].
 */

    Protocol      ::= 513 /* RFC5777 Section 4.1.3  */ Enumerated    V|M| |  |Y;

/**
 * The Direction AVP (AVP Code 514) is of type Enumerated and specifies
 * in which direction to apply the classifier. The values of the
 * enumeration are "IN","OUT","BOTH". In the "IN" and "BOTH"
 * directions, the From-Spec refers to the address of the managed
 * terminal and the To-Spec refers to the unmanaged terminal. In the
 * "OUT" direction, the From-Spec refers to the unmanaged terminal
 * whereas the To-Spec refers to the managed terminal. If the Direction
 * AVP is omitted, the classifier matches packets flowing in both
 * directions.
 */

    Direction      ::= 514 /* RFC5777 Section 4.1.4  */ Enumerated    V|M| |  |Y;

/**
 * The From-Spec AVP (AVP Code 515) is a grouped AVP that specifies the
 * Source Specification used to match the packet.
 */

    From-Spec    ::= 515  /*RFC5777 Section 4.1.5 */ Grouped      M,V| | |   |N;

/**
 * The To-Spec AVP (AVP Code 516) is a grouped AVP that specifies the
 * Destination Specification used to match the packet. Zero or more of
 * these AVPs may appear in the classifier. If this AVP is absent from
 * the classifier, then all packets are matched regardless of the
 * destination address.
 */ 
    To-Spec    ::= 516  /*RFC5777 Section 4.1.6 */ Grouped      M,V| | |   |N;


/**
 * The Negated AVP (AVP Code 517) is of type Enumerated containing the
 * values of True or False. Exactly zero or one of these AVPs may
 * appear in the From-Spec or To-Spec AVP.
 */ 

    Negated      ::= 517 /* RFC5777 Section 4.1.7.1  */ Enumerated    V|M| |  |Y;


/**
 * The IP-Address AVP (AVP Code 518) is of type Address and specifies a
 * single IP address (IPv4 or IPv6) to match.
 */
    IP-Address  ::= 518  /* RFC5777 Section 4.1.7.2 */ Address     V,M|P| |   |N;

/**
 * The IP-Address-Range AVP (AVP Code 519) is of type Grouped and
 * specifies an inclusive IP address range.
 */
    IP-Address-Range  ::= 519  /* RFC5777 Section 4.1.7.3 */ Grouped     V,M|P| |   |N;

/**
 * The IP-Address-Start AVP (AVP Code 520) is of type Address and
 * specifies the first IP address (IPv4 or IPv6) of an IP address range.
 */

    IP-Address-Start  ::= 520 /* RFC5777 Section 4.1.7.4 */ Address     V,M|P| |   |N;

/**
 * The IP-Address-End AVP (AVP Code 521) is of type Address and
 * specifies the last IP address (IPv4 or IPv6) of an address range.
 */

    IP-Address-End  ::= 521 /* RFC5777 Section 4.1.7.5 */ Address     V,M|P| |   |N;

/**
 * The IP-Address-Mask AVP (AVP Code 522) is of type Grouped and
 * specifies an IP address range using a base IP address and the bitwidth
 * of the mask. For example, a range expressed as 192.0.2.0/24
 * will match all IP addresses from 192.0.2.0 up to and including
 * 192.0.2.255. The bit-width MUST be valid for the type of IP address.
 */ 
    IP-Address-Mask  ::= 522  /* RFC5777 Section 4.1.7.6 */ Grouped     V,M|P| |   |N;

/** 
 * The IP-Bit-Mask-Width AVP (AVP Code 523) is of type Unsigned32. The
 * value specifies the width of an IP address bit mask.
 */ 
    IP-Bit-Mask-Width   ::= 523  /*RFC5777 Section 4.1.7.7 */ Unsigned32      M,V| | |   |N;

/**
 * The MAC-Address AVP (AVP Code 524) is of type OctetString and
 * specifies a single layer 2 address in MAC-48 format. The value is a
 * 6-octet encoding of the address as it would appear in the frame
 * header.
 */ 
    MAC-Address  ::= 524 /*RFC5777 Section 4.1.7.8 */ OctetString   V|M| |  |Y;

/**
 * The MAC-Address-Mask AVP (AVP Code 525) is of type Grouped and
 * specifies a set of MAC addresses using a bit mask to indicate the
 * bits of the MAC addresses that must fit to the specified MAC address
 * attribute.
 */ 

    MAC-Address-Mask  ::= 525  /* RFC5777 Section 4.1.7.9 */ Grouped     V,M|P| |   |N;

/**
 * The MAC-Address-Mask-Pattern AVP (AVP Code 526) is of type
 * OctetString. The value is 6 octets specifying the bit positions of a
 * MAC address that are taken for matching.
 */ 

    MAC-Address-Mask-Pattern  ::= 526 /*RFC5777 Section 4.1.7.10 */ OctetString   V|M| |  |Y;

/**
 * The EUI64-Address AVP (AVP Code 527) is of type OctetString and
 * specifies a single layer 2 address in EUI-64 format. The value is an
 * 8-octet encoding of the address as it would appear in the frame
 * header.
 */ 

    EUI64-Address  ::= 527 /*RFC5777 Section 4.1.7.11 */ OctetString   V|M| |  |Y;

/**
 * The EUI64-Address-Mask AVP (AVP Code 528) is of type Grouped and
 * specifies a set of EUI64 addresses using a bit mask to indicate the
 * bits of the EUI64 addresses that must fit to the specified EUI64
 * address attribute.
 */ 

    EUI64-Address-Mask  ::= 528  /* RFC5777 Section 4.1.7.12 */ Grouped     V,M|P| |   |N;

/**
 * The EUI64-Address-Mask-Pattern AVP (AVP Code 529) is of type
 * OctetString. The value is 8 octets specifying the bit positions of a
 * EUI64 address that are taken for matching.
 */ 

    EUI64-Address-Mask-Pattern  ::= 529 /*RFC5777 Section 4.1.7.13 */ OctetString   V|M| |  |N;

/**
 * The Port AVP (AVP Code 530) is of type Integer32 in the range of 0 to
 * 65535 and specifies port numbers to match. The type of port is
 * indicated by the value of the Protocol AVP; i.e., if Protocol AVP
 * value is 6 (TCP), then the Port AVP represents a TCP port.
 */ 
    Port   ::= 530  /*RFC5777 Section 4.1.7.14 */ Integer32      V|M| |   |N;


/**
 * The Port-Range AVP (AVP Code 531) is of type Grouped and specifies an
 * inclusive range of ports. The type of the ports is indicated by the
 * value of the Protocol AVP; i.e., if Protocol AVP value is 6 (TCP),
 * then the Port-Range AVP represents an inclusive range of TCP ports.
 */ 
    Port-Range  ::= 531  /* RFC5777 Section 4.1.7.15 */ Grouped     V,M|P| |   |N;


/**
 * The Port-Start AVP (AVP Code 532) is of type Integer32 and specifies
 * the first port number of an IP port range.
 */ 

    Port-Start    ::= 532  /* RFC5777 Section 4.1.7.16 */ Integer32     M,V| | |   |N;


/**
 * The Port-End AVP (AVP Code 533) is of type Integer32 and specifies
 * the last port number of an IP port range.
 */ 
    Port-End    ::= 533  /* RFC5777 Section 4.1.7.17 */ Integer32     M,V| | |   |N;

/**
 * The Use-Assigned-Address AVP (AVP Code 534) is
 * of type Enumerated containing the values of True or False. When
 * present and set to True, it represents the IP address assigned to the
 * managed terminal.
 */ 

    Use-Assigned-Address      ::= 534 /* RFC5777 Section 4.1.7.18  */ Enumerated    V|M| |  |Y;

/**
 * The Diffserv-Code-Point AVP (AVP Code 535) is of type Enumerated and
 * specifies the Differentiated Services Field Codepoints to match in
 * the IP header. The values are managed by IANA under the
 * Differentiated Services Field Codepoints registry as defined in
 * [RFC2474].
 */ 

    Diffserv-Code-Point      ::= 535 /* RFC5777 Section 4.1.8.1  */ Enumerated    V|M| |  |Y;

/**
 * The Fragmentation-Flag AVP (AVP Code 536) is of type Enumerated and
 * specifies the packet fragmentation flags to match in the IP header.
 */ 
    Fragmentation-Flag      ::= 536 /* RFC5777 Section 4.1.8.2  */ Enumerated    V|M| |  |Y;

/**
 * The IP-Option AVP (AVP Code 537) is of type Grouped and specifies an
 * IP header option that must be matched.
 */ 
    IP-Option  ::= 537 /* RFC5777 Section 4.1.8.3 */ Grouped     V,M|P| |   |N;

/**
 * The IP-Option-Type AVP (AVP Code 538) is of type Enumerated and the
 * values are managed by IANA under the IP Option Numbers registry as
 * defined in [RFC2780].
 */ 
    IP-Option-Type     ::= 538 /* RFC5777 Section 4.1.8.4  */ Enumerated    V|M| |  |Y;


/**
 * The IP-Option-Value AVP (AVP Code 539) is of type OctetString and
 * contains the option value that must be matched.
 */ 
    IP-Option-Value  ::= 539 /*RFC5777 Section 4.1.8.5 */ OctetString   V|M| |  |N;

/**
 * The TCP-Option AVP (AVP Code 540) is of type Grouped and specifies a
 * TCP header option that must be matched.
 */

    TCP-Option  ::= 540 /* RFC5777 Section 4.1.8.6 */ Grouped     V,M|P| |   |N;

/**
 * The TCP-Option-Type AVP (AVP Code 541) is of type Enumerated and the
 * values are managed by IANA under the TCP Option Numbers registry as
 * defined in [RFC2780].
 * From RFC 4341 The remaining option types -- 128-183,
 * 191-247, and 255 -- are currently reserved and should be allocated
 * with the Standards Action policy, which requires IESG review and
 * approval and standards-track IETF RFC publication.
 *  But  adding TCP optional values from TCP Header.
 *  Needs to check in future releases.
 */ 

    TCP-Option-Type     ::= 541 /* RFC5777 Section 4.1.8.7 */ Enumerated    V|M| |  |Y;

/**
 * The TCP-Option-Value AVP (AVP Code 542) is of type OctetString and
 * contains the option value that must be matched.
 */ 
    TCP-Option-Value  ::= 542 /*RFC5777 Section 4.1.8.8 */ OctetString   V|M| |  |N;

/**
 * The TCP-Flags AVP (AVP Code 543) is of type Grouped and specifies a
 * set of TCP control flags that must be matched.
 */ 
    TCP-Flags  ::= 543 /* RFC5777 Section 4.1.8.9 */ Grouped     V,M|P| |   |N;

/**
 * The TCP-Flag-Type AVP (AVP Code 544) is of type Unsigned32 and
 * specifies the TCP control flag types that must be matched. The first
 * 16 bits match the TCP header format defined in [RFC3168], and the
 * subsequent 16 bits are unused. Within the first 16 bits, bits 0 to 3
 * are unused and bits 4 to 15 are managed by IANA under the TCP Header
 * Flag registry as defined in [RFC3168].
 */ 
    TCP-Flag-Type  ::= 544  /*RFC5777 Section 4.1.8.10 */ Unsigned32      M,V| | |   |N;

/**
 * The ICMP-Type AVP (AVP Code 545) is of type Grouped and specifies an
 * ICMP message type that must be matched.
 */ 
    ICMP-Type  ::= 545 /* RFC5777 Section 4.1.8.11 */ Grouped     V,M|P| |   |N;


/**
 * The ICMP-Type-Number AVP (AVP Code 546) is of type Enumerated and the
 * values are managed by IANA under the ICMP Type Numbers registry as
 * defined in [RFC2780].
 */ 

    ICMP-Type-Number     ::= 546 /* RFC5777 Section 4.1.8.12 */ Enumerated    V|M| |  |Y;

/**
 * The ICMP-Code AVP (AVP Code 547) is of type Enumerated and the values
 * are managed by IANA under the ICMP Type Numbers registry as defined
 * in [RFC2780].
 */
    ICMP-Code     ::= 547 /* RFC5777 Section 4.1.8.13 */ Enumerated    V|M| |  |Y;

/**
 * The ETH-Option AVP (AVP Code 548) is of type Grouped and specifies
 * Ethernet specific attributes.
 */ 
    ETH-Option  ::= 548 /* RFC5777 Section 4.1.8.14 */ Grouped     V,M|P| |   |N;

/**
 * The Eth-Proto-Type AVP (AVP Code 549) is of type Grouped and
 * specifies the encapsulated protocol type. ETH-Ether-Type and ETH-SAP
 * are mutually exclusive.
 */ 
    ETH-Proto-Type ::= 549 /* RFC5777 Section 4.1.8.15 */ Grouped     V,M|P| |   |N;

/**
 * The ETH-Ether-Type AVP (AVP Code 550) is of type OctetString. The
 * value is a double octet that contains the value of the Ethertype
 * field in the packet to match. This AVP MAY be present in the case of
 * Digital, Intel, and Xerox (DIX) or if the Subnetwork Access Protocol
 * (SNAP) is present at 802.2, but the ETH-SAP AVP MUST NOT be present
 * in this case.
 */                      

    ETH-Ether-Type  ::= 550 /*RFC5777 Section 4.1.8.16 */ OctetString   V|M| |  |N;

/**
 * The ETH-SAP AVP (AVP Code 551) is of type OctetString. The value is
 * a double octet representing the 802.2 SAP as specified in
 * [IEEE802.2]. The first octet contains the Destination Service Access
 * Point (DSAP) and the second the Source Service Access Point (SSAP).
 */ 

    ETH-SAP   ::= 551 /*RFC5777 Section 4.1.8.17 */ OctetString   V|M| |  |N;

/**
 * The VLAN-ID-Range AVP (AVP Code 552) is of type Grouped and specifies
 * the VLAN range to match. VLAN identities are specified either by a
 * single VLAN-ID according to [IEEE802.1Q] or by a combination of
 * Customer and Service VLAN-IDs according to [IEEE802.1ad].
 */ 

    VLAN-ID-Range ::= 552 /* RFC5777 Section 4.1.8.18 */ Grouped     V,M|P| |   |N;

/**
 * The S-VID-Start AVP (AVP Code 553) is of type Unsigned32. The value
 * MUST be in the range from 0 to 4095. The value of this AVP specifies
 * the start value of the range of S-VID VLAN-IDs to be matched.
 */ 

    S-VID-Start  ::= 553  /*RFC5777 Section 4.1.8.19 */ Unsigned32      M,V| | |   |N;

/**
 * The S-VID-End AVP (AVP Code 554) is of type Unsigned32. The value
 * MUST be in the range from 0 to 4095. The value of this AVP specifies
 * the end value of the range of S-VID VLAN-IDs to be matched.
 */ 
    S-VID-End  ::= 554  /*RFC5777 Section 4.1.8.20 */ Unsigned32      M,V| | |   |N;

/**
 * The C-VID-Start AVP (AVP Code 555) is of type Unsigned32. The value
 * MUST be in the range from 0 to 4095. The value of this AVP specifies
 * the start value of the range of C-VID VLAN-IDs to be matched.
 */ 

    C-VID-Start  ::= 555  /*RFC5777 Section 4.1.8.21 */ Unsigned32      M,V| | |   |N;

/**
 * The C-VID-End AVP (AVP Code 556) is of type Unsigned32. The value
 * MUST be in the range from 0 to 4095. The value of this AVP specifies
 * the end value of the range of C-VID VLAN-IDs to be matched.
 */ 

    C-VID-End  ::= 556  /*RFC5777 Section 4.1.8.22 */ Unsigned32      M,V| | |   |N;

/**
 * The User-Priority-Range AVP (AVP Code 557) is of type Grouped and
 * specifies an inclusive range to match the user_priority parameter
 * specified in [IEEE802.1D].
 */ 

    User-Priority-Range ::= 557 /* RFC5777 Section 4.1.8.23 */ Grouped     V,M|P| |   |N;


/**
 * The Low-User-Priority AVP (AVP Code 558) is of type Unsigned32. The
 * value MUST be in the range from 0 to 7.
 */ 
    Low-User-Priority    ::= 558  /*RFC5777 Section 4.1.8.24 */ Unsigned32      M,V| | |   |N;

/**
 * The High-User-Priority AVP (AVP Code 559) is of type Unsigned32. The
 * value MUST be in the range from 0 to 7.
 */ 

    High-User-Priority    ::= 559  /*RFC5777 Section 4.1.8.25 */ Unsigned32      M,V| | |   |N;

/**
 * The Time-Of-Day-Condition AVP (AVP Code 560) is of type Grouped and
 * specifies one or more time windows.
 */ 

    Time-Of-Day-Condition ::= 560 /* RFC5777 Section 4.2.1 */ Grouped     V,M|P| |   |N;

/**
 * The Time-Of-Day-Start AVP (AVP Code 561) is of type Unsigned32. The
 * value MUST be in the range from 0 to 86400. The value of this AVP
 * specifies the start of an inclusive time window expressed as the
 * offset in seconds from midnight. If this AVP is absent from the
 * Time-Of-Day-Condition AVP, the time window starts at midnight.
 */ 
    Time-Of-Day-Start    ::= 561  /*RFC5777 Section 4.2.2 */ Unsigned32      M,V| | |   |N;

/**
 * The Time-Of-Day-End AVP (AVP Code 562) is of type Unsigned32. The
 * value MUST be in the range from 1 to 86400. The value of this AVP
 * specifies the end of an inclusive time window expressed as the offset
 * in seconds from midnight. If this AVP is absent from the Time-Of-
 * Day-Condition AVP, the time window ends one second before midnight.
 */ 

    Time-Of-Day-End    ::= 562  /*RFC5777 Section 4.2.3 */ Unsigned32      M,V| | |   |N;


/**
 * The Day-Of-Week-Mask AVP (AVP Code 563) is of type Unsigned32. The
 * value is a bit mask that specifies the day of the week for the time
 * window to match. This document specifies the following bits:
 */ 
     Day-Of-Week-Mask   ::= 563  /*RFC5777 Section 4.2.4 */ Unsigned32      M,V| | |   |N;

/**
 * The Day-Of-Month-Mask AVP (AVP Code 564) is of type Unsigned32. The value
 * MUST be in the range from 0 to 2147483647.
 */ 

     Day-Of-Month-Mask   ::= 564  /*RFC5777 Section 4.2.5 */ Unsigned32      M,V| | |   |N;

/**
 * The Month-Of-Year-Mask AVP (AVP Code 565) is of type Unsigned32. The
 * value is a bit mask that specifies the months of the year for the
 * time window to match.
 */  
     Month-Of-Year-Mask   ::= 565  /*RFC5777 Section 4.2.6 */ Unsigned32      M,V| | |   |N;

/**
 * The Absolute-Start-Time AVP (AVP Code 566) is of type Time. The
 * value of this AVP specifies the time in seconds since January 1,
 * 1900, 00:00 UTC when the time window starts.
 */ 
	Absolute-Start-Time   ::=  566  /*RFC5777 Section 4.2.7  */ Time  M,V|P| |    |N;

/**
 * The Absolute-Start-Fractional-Seconds AVP (AVP Code 567) is of type
 * Unsigned32. The value specifies the fractional seconds that are
 * added to Absolute-Start-Time value in order to determine when the
 * time window starts.
 */ 
     Absolute-Start-Fractional-Seconds   ::= 567  /*RFC5777 Section 4.2.8 */ Unsigned32      M,V| | |   |N;

/**
 * The Absolute-End-Time AVP (AVP Code 568) is of type Time. The value of
 * this AVP specifies the time in seconds since January 1, 1900, 00:00
 * UTC when the time window ends.
 */ 
     Absolute-End-Time    ::=  568  /*RFC5777 Section 4.2.9  */ Time  M,V|P| |    |N;

/**
 * The Absolute-End-Fractional-Seconds AVP (AVP Code 569) is of type
 * Unsigned32. The value specifies the fractional seconds that are
 * added to Absolute-End-Time value in order to determine when the time
 * window ends.
 */ 
     Absolute-End-Fractional-Seconds   ::= 569  /*RFC5777 Section 4.2.10 */ Unsigned32      M,V| | |   |N;

/**
 * The Timezone-Flag AVP (AVP Code 570) is of type Enumerated and
 * indicates whether the time windows are specified in UTC, local time,
 * at the managed terminal or as an offset from UTC. If this AVP is
 * absent from the Time-Of-Day-Condition AVP, then the time windows are
 * in UTC.
 */ 

    Timezone-Flag     ::= 570 /* RFC5777 Section 4.2.11 */ Enumerated    V|M| |  |Y;

/**
 * The Timezone-Offset AVP (AVP Code 571) is of type Integer32. The
 * value of this AVP MUST be in the range from -43200 to 43200.
 */ 

    Timezone-Offset    ::= 571  /* RFC5777 Section 4.2.12 */ Integer32     M,V| | |   |N;

/**
 * The Treatment-Action AVP (AVP Code 572) is of type Enumerated and
 * lists the actions that are associated with the condition part of a
 * rule.
 */ 
    Treatment-Action    ::= 572 /* RFC5777 Section 5.1 */ Enumerated    V|M| |  |Y;

/**
 * The QoS-Profile-Id AVP (AVP Code 573) is of type Unsigned32 and
 * contains a QoS profile template identifier. An initial QoS profile
 * template is defined with value of 0 and can be found in [RFC5624].
 * The registry for the QoS profile templates is created with the same
 * document.
 */ 

     QoS-Profile-Id   ::= 573  /*RFC5777 Section 5.2 */ Unsigned32      M,V| | |   |N;


/**
 * The QoS-Profile-Template AVP (AVP Code 574) is of type Grouped and
 * defines the namespace of the QoS profile (indicated in the Vendor-ID
 * AVP) followed by the specific value for the profile.
 */ 
    QoS-Profile-Template  ::= 574 /* RFC5777 Section 5.3 */ Grouped     V,M|P| |   |N;

/**
 * The QoS-Semantics AVP (AVP Code 575) is of type Enumerated and
 * provides the semantics for the QoS-Profile-Template and QoSParameters
 * AVPs in the Filter-Rule AVP.
 */ 
    QoS-Semantics    ::= 575 /* RFC5777 Section 5.4 */ Enumerated    V|M| |  |Y;

/**
 * The QoS-Parameters AVP (AVP Code 576) is of type Grouped and contains
 * Quality of Service parameters. These parameters are defined in
 * separate documents and depend on the indicated QoS profile template
 * of the QoS-Profile-Template AVP. For an initial QoS parameter
 * specification, see [RFC5624].
 */ 
    QoS-Parameters  ::= 576 /* RFC5777 Section 5.5 */ Grouped     V,M|P| |   |N;

/**
 * The Excess-Treatment AVP (AVP Code 577) is of type Grouped and
 * indicates how out-of-profile traffic, i.e., traffic not covered by
 * the original QoS-Profile-Template and QoS-Parameters AVPs, is
 * treated.
 */ 
    Excess-Treatment  ::= 577 /* RFC5777 Section 5.6 */ Grouped     V,M|P| |   |N;

/**
 * The QoS-Capability grouped AVP is defined in IETF RFC 5777 [35]. It includes a 
 * list  of supported Quality of Service profiles. The QoS-Profile sub-AVP shall have 
 * Vendor-ID and Specifier fields set to default value 0 (zero).
 */

    QoS-Capability      ::= 578  /*10.1.43 3GPP TS29.234*/ Grouped       V| | |   |N;

                          /////////////////
                          //Enumerations//
                          ///////////////

    Subscription-Id-Type ::= < Enumerated: 450 >
                               END_USER_E164           0
                               END_USER_IMSI           1
                               END_USER_SIP_URI        2
                               END_USER_NAI            3
                               END_USER_PRIVATE        4
                               ;

   Session-Request-Type ::= < Enumerated: 311 >
                              AUTHORIZATION_REQUEST    0
                              ROUTING_POLICY           1
                              ;

   Protocol  ::= < Enumerated: 513 >
                IPv4     0
                IPv6     1
                ICMP     2
                UDP      3 
                TCP      4 
                ;
                
   Direction  ::= < Enumerated: 514 >
                  IN     0
                  OUT    1
                  BOTH   2
                  ;

   Negated    ::= < Enumerated: 517 >
                  False  0
                  True   1
                  ;

   Use-Assigned-Address  ::= < Enumerated: 534 >
                             False  0
                             True   1
                             ;

   Diffserv-Code-Point   ::= < Enumerated: 535 >
                            CS0     0 
                            CS1     4 
                            CS2     16 
                            CS3     24 
                            CS4     32 
                            CS5     40 
                            CS6     48 
                            CS7     56 
                            ;

   Fragmentation-Flag  ::= < Enumerated: 536 >
                           DF  0
                           MF  1
                           ;

   IP-Option-Type  ::= < Enumerated: 538 >
                       EOOL     0       
		       NOP      1 
		       RR       7
		       ZSU      10
                       MTUP     11
                       MTUR     12
                       ENCODE   15
                       QS       25
                       EXP1     30
		       TS       68  
                       TR       82
                       EXP2     94
		       LSR      131 
		       E_SEC    133         
		       CIPSO    134
		       SID      136
		       SSR      137
                       VISA     142
                       IMITD    144
                       Wa_EIP   145
                       ADDEXT   147
                       RTRALT   148
                       SDB      149
                       DPS      151
                       UMP      152
                       EXP3     158
                       FINN     205
                       EXP4     222
                       ;

   TCP-Option-Type  ::= < Enumerated: 541 >
                        End_of_option_list      0
                        No_Operation            1
                        Maximum_Segment_Size    2
                        ;

  ICMP-Type-Number  ::= < Enumerated: 546 >
                        Echo_Reply                         0
                        Destination_Unreachable_Message    3
                        Source_Quench                      4 
			Redirect                           5
			Alternate_Host_Address             6
                        Echo_Request                       8
			Router_Advertisement               9
			Router_Solicitation                10
			Time_Exceeded                      11
                        Parameter_Problem                  12
			Timestamp                          13 
			Timestamp_Reply                    14 
			Information_Request                15
			Information_Reply                  16 
                        Address_Mask_Request               17
                        Address_Mask_Reply                 18
                        Traceroute                         30 
                        Datagram_Conversion_Error          31
                        Mobile_Host_Redirect               32
                        IPv6_Where_Are_You                 33
                        IPv6_I_Am_Here                     34
                        Mobile_Registration_Request        35
                        Mobile_Registration_Reply          36
                        Domain_Name_Request                37
                        Domain_Name_Reply                  38
			SKIP                               39
			Photuris                           40
			ICMP_messages                      41
                        ;

  ICMP-Code  ::= < Enumerated: 547 >
		Net_Unreachable_OR_Redirect_Datagram_for_the_Network_OR_Alternate_Address_for_Host_OR_Normal_router_advertisement_OR_Time_to_Live_exceeded_in_Transit_OR_Pointer_indicates_the_error_OR_Bad_SPI             0
		Host_Unreachable_OR_Redirect_Datagram_for_the_Host_OR_Fragment_Reassembly_Time_Exceeded_OR_Missing_a_Required_Option_OR_Authentication_Failed                                                                 1
		Protocol_Unreachable_OR_Redirect_Datagram_for_the_TOS_and_Network_OR_Bad_Length_OR_Decompression_Failed    2
		Port_Unreachable_OR_Redirect_Datagram_for_the_TOS_and_Host_OR_Decryption_Failed                            3
                Fragmentation_Needed_OR_Need_Authentication                                                                4 
		Source_Route_Failed_OR_Need_Authorization                                                                  5
		Destination_Network_Unknown                                                                                6
		Destination_Host_Unknown 										   7
		Source_Host_Isolated                                                                                       8
		Communication_with_Destination_Network_Prohibited   							   9 
                Communication_with_Destination_Host_Prohibited								   10 
		Destination_Network_Unreachable_for_TOS 								   11
		Destination_Host_Unreachable_for_TOS 									   12
		Communication_Administratively_Prohibited  								   13
		Host_Precedence_Violation 										   14 
		Precedence_cutoff_in_effect										   15
		Does_not_route_common_traffic                                                                              16
                ;



   Timezone-Flag    ::= < Enumerated: 570 >
                        UTC      0
                        LOCAL    1
                        OFFSET   2
                        ;

   Treatment-Action   ::= < Enumerated: 572 >
                        drop      0
                        shape     1
                        mark      2
                        permit    3
                        ;

    QoS-Semantics   ::= < Enumerated: 575 >
                        QoS_Desired       0
                        QoS_Available     1
                        QoS_Delivered     2
                        Minimum_QoS       3
                        QoS_Authorized    4
                        ;


                  ///////////////////
                  ///Grouped AVPs///
                  //////////////////

  Subscription-Id ::= < AVP Header: 443 >
                        { Subscription-Id-Type }
                        { Subscription-Id-Data }
                        ;


  Charging-Data ::= < AVP Header : 304 10415 >
                    { Charging-Characteristics }
                    { Charging-Nodes}
                    *[ AVP ]
                    ;


  Charging-Nodes ::= < AVP Header : 315 10415 >
                     { Primary-Charging-Collection-Function-Name }
                     [ Primary-OCS-Charging-Function-Name ]
                     [ Secondary-OCS-Charging-Function-Name]
                     [ Secondary-Charging-Collection-Function-Name ]
                     *[ AVP ]
                     ;

  QoS-Capability ::= < AVP Header: 578 >
                     1*{ QoS-Profile-Template }
                     * [ AVP ]
                     ;

  QoS-Profile-Template ::= < AVP Header: 574 >
                           { Vendor-Id }
                           { QoS-Profile-Id }
                           * [ AVP ]
                           ;

  QoS-Resources ::= < AVP Header: 508 >
                      1*{ Filter-Rule }
                      * [ AVP ]
                      ;

  Filter-Rule ::= < AVP Header: 509 >
                  [ Filter-Rule-Precedence ]
                  [ Classifier ]
                  * [ Time-Of-Day-Condition ]
                  [ Treatment-Action ]
                  [ QoS-Semantics ]
                  [ QoS-Profile-Template ]
                  [ QoS-Parameters ]
                  [ Excess-Treatment ]
                  * [ AVP ]
                  ;

   Classifier ::= < AVP Header: 511 >
                  { Classifier-ID }
                  [ Protocol ]
                  [ Direction ]
                  * [ From-Spec ]
                  * [ To-Spec ]
                  * [ Diffserv-Code-Point ]
                  [ Fragmentation-Flag ]
                  * [ IP-Option ]
                  * [ TCP-Option ]
                  [ TCP-Flags ]
                  * [ ICMP-Type ]
                  * [ ETH-Option ]
                  * [ AVP ]
                  ;

   From-Spec ::= < AVP Header: 515 >
                 * [ IP-Address ]
                 * [ IP-Address-Range ]
                 * [ IP-Address-Mask ]
                 * [ MAC-Address ]
                 * [ MAC-Address-Mask]
                 * [ EUI64-Address ]
                 * [ EUI64-Address-Mask]
                 * [ Port ]
                 * [ Port-Range ]
                 [ Negated ]
                 [ Use-Assigned-Address ]
                 * [ AVP ]
                 ;

     To-Spec ::= < AVP Header: 516 >
                 * [ IP-Address ]
                 * [ IP-Address-Range ]
                 * [ IP-Address-Mask ]
                 * [ MAC-Address ]
                 * [ MAC-Address-Mask]
                 * [ EUI64-Address ]
                 * [ EUI64-Address-Mask]
                 * [ Port ]
                 * [ Port-Range ]
                 [ Negated ]
                 [ Use-Assigned-Address ]
                 * [ AVP ]
                 ;

  IP-Address-Range ::= < AVP Header: 519 >
                       [ IP-Address-Start ]
                       [ IP-Address-End ]
                       * [ AVP ]
                       ;

  IP-Address-Mask ::= < AVP Header: 522 >
                      { IP-Address }
                      { IP-Bit-Mask-Width }
                      * [ AVP ]
                      ;

   MAC-Address-Mask ::= < AVP Header: 525 >
                        { MAC-Address }
                        { MAC-Address-Mask-Pattern }
                        * [ AVP ]
                        ; 

  EUI64-Address-Mask ::= < AVP Header: 528 >
                         { EUI64-Address }
                         { EUI64-Address-Mask-Pattern }
                         * [ AVP ]
                         ;

  Port-Range ::= < AVP Header: 531 >
                 [ Port-Start ]
                 [ Port-End ]
                 * [ AVP ]
                 ;

  IP-Option ::= < AVP Header: 537 >
                { IP-Option-Type }
                * [ IP-Option-Value ]
                [ Negated ]
                * [ AVP ]
                ;

  TCP-Option ::= < AVP Header: 540 >
                 { TCP-Option-Type }
                 * [ TCP-Option-Value ]
                 [ Negated ]
                 * [ AVP ]
                 ;

  TCP-Flags ::= < AVP Header: 543 >
                { TCP-Flag-Type }
                [ Negated ]
                * [ AVP ]
                ;

  ICMP-Type ::= < AVP Header: 545 >
                { ICMP-Type-Number }
                * [ ICMP-Code ]
                [ Negated ]
                * [ AVP ]
                ; 

  ETH-Option ::= < AVP Header: 548 >
                 { ETH-Proto-Type }
                 * [ VLAN-ID-Range ]
                 * [ User-Priority-Range ]
                 * [ AVP ]
                 ;

   ETH-Proto-Type ::= < AVP Header: 549 >
                      * [ ETH-Ether-Type ]
                      * [ ETH-SAP ]
                      * [ AVP ]
                      ;

   VLAN-ID-Range ::= < AVP Header: 552 >
                     [ S-VID-Start ]
	             [ S-VID-End ]
		     [ C-VID-Start ]
		     [ C-VID-End ]
		     * [ AVP ]
                     ;

   User-Priority-Range ::= < AVP Header: 557 >
			   * [ Low-User-Priority ]
	                   * [ High-User-Priority ]
	                   * [ AVP ]
                           ;

   Time-Of-Day-Condition ::= < AVP Header: 560 >
			     [ Time-Of-Day-Start ]
			     [ Time-Of-Day-End ]
			     [ Day-Of-Week-Mask ]
			     [ Day-Of-Month-Mask ]
			     [ Month-Of-Year-Mask ]
		             [ Absolute-Start-Time ]
			     [ Absolute-End-Time ]
			     [ Timezone-Flag ]
			     * [ AVP ]
                             ;

    QoS-Parameters ::= < AVP Header: 576 >
	               * [ AVP ]
                       ;

    Excess-Treatment ::= < AVP Header: 577 >
			 { Treatment-Action }
			 [ QoS-Profile-Template ]
			 [ QoS-Parameters ]
			 * [ AVP ]
			 ;



    /////////////// 
    // Commands //
    //////////////

/**         
 * The Diameter-EAP-Request (DER) command, indicated by the Command-Code field
 * set to 268 and the 'R' bit set in the Command Flags field, is sent by a
 * Diameter client to a Diameter server, and conveys an EAP-Response from the
 * EAP client. The Diameter-EAP-Request MUST contain one EAP-Payload AVP
 * contain ing the actual EAP payload. An EAP-Payload AVP with no data MAY be
 * sent to the Diameter server to initiate an EAP authentication session.
 * The DER message MAY be the result of a multi-round authentication exchange
 * that occurs when the DEA is received with the Result-Code AVP set to
 * DIAMETER_MULTI_ROUND_AUTH [BASE]. A subsequent DER message MUST include any
 * State AVPs [NASREQ] that were present in the DEA. For re-authentication, it
 * is recommended that the Identity request be skipped in order to reduce the
 * number of authentication round trips. This is only possible when the user's
 * identity is already known by the home Diameter server.
 */

    Diameter-EAP-Request<DER> ::= < Diameter Header: 268, REQ, PXY, 5>
            < Session-Id >
            { Auth-Application-Id }
            { Origin-Host }
            { Origin-Realm }
            { Destination-Realm }
            { Auth-Request-Type }
            { EAP-Payload }
            [ Destination-Host ]
            [ User-Name ]
            [ NAS-IP-Address ]
            [ NAS-IPv6-Address ]
            [ Calling-Station-Id ]
	    [ QoS-Capability ]
            [ Visited-Network-Identifier ] /* This one needs to be removed */
            * [ Proxy-Info ]
            * [ Route-Record ]
              [ Operator-Name ]
            * [ Location-Information ]
            * [ Location-Data ]
              [ Basic-Location-Policy-Rules ]
              [ Extended-Location-Policy-Rules ]
	      [ Location-Capable ]
            * [ AVP ]
            ;

/**
 * The Diameter-EAP-Answer (DEA) message, indicated by the Command-Code
 * field set to 268 and the 'R' bit cleared in the Command Flags field,
 * is sent by the Diameter server to the client for one of the following
 * reasons:
 * 1. The message is part of a multi-round authentication exchange, and the
 * server is expecting a subsequent Diameter-EAP-Request. This is indicated by
 * setting the Result-Code to DIAMETER_MULTI_ROUND_AUTH, and MAY include zero
 * or more State AVPs.
 * 2. The EAP client has been successfully authenticated and authorized, in
 * which case the message MUST include the Result-Code AVP indicating success,
 * and SHOULD include an EAP-Payload of type EAP-Success. This event MUST
 * cause the access device to provide service to the EAP client.
 * 3. The EAP client has not been successfully authenticated and/or authorized,
 * and the Result-Code AVP is set to indicate failure. This message SHOULD
 * include an EAP-Payload, but this AVP is not used to determine whether service
 * is to be provided. If the message from the Diameter client included a request
 * for authorization, a successful response MUST include the authorization
 * AVPs that are relevant to the service being provided.
 */
    Diameter-EAP-Answer<DEA> ::= < Diameter Header: 268, PXY, 5>
            < Session-Id >
            { Auth-Application-Id }
            { Result-Code }
            { Origin-Host }
            { Origin-Realm }
            { Auth-Request-Type }
            1*{ Subscription-Id } /* the optional sign [] is changed to mandatory {} */            
            [ EAP-Payload ]
            [ User-Name ]
	    [ Session-Timeout ]
            [ EAP-Master-Session-Key ]
            [ QoS-Resources ]
            * [Filter-Id]
            * [NAS-Filter-Rule]
            * [Tunneling]
            * [ Proxy-Info ]
            [ Basic-Location-Policy-Rules ]
            [ Extended-Location-Policy-Rules ]
            [ Requested-Location-Info ]
            [ Error-Cause ]
            [ AVP ]
            ;


/**
 * The ABNF for the Accounting Request and Accouting Response messages over the Wa interface are given below:
 */ 
	AC-Request<ACR> ::= < Diameter Header: 271, REQ, PXY >
                      < Session-Id >
                      { Origin-Host }
                      { Origin-Realm }
                      { Destination-Realm }
                      { Accounting-Record-Type }
                      { Accounting-Record-Number }
                      [ Acct-Application-Id ]
                      [ Vendor-Specific-Application-Id ]
                      [ User-Name ]
                      [ Accounting-Sub-Session-Id ]
                      [ Acct-Session-Id ]
                      [ Acct-Multi-Session-Id ]
                      [ Origin-State-Id ]
                      [ Destination-Host ]
                      [ Event-Timestamp ]
                      [ Acct-Delay-Time ]
                      [ NAS-Identifier ]
                      [ NAS-IP-Address ]
                      [ NAS-IPv6-Address ]
                      [ Acct-Terminate-Cause ]
                      [ Acct-Session-Time ]
                      [ NAS-Port ]
                      [ NAS-Port-Id ]
                      [ NAS-Port-Type ] 
                      [ Operator-Name ]
                      * [ Location-Information ]
                      * [ Location-Data ]
                      [ Basic-Location-Policy-Rules ]
                      [ Extended-Location-Policy-Rules ]
                      * [ AVP ]
                      ;

  	AC-Answer<ACA> ::= < Diameter Header: 271, PXY >
                      < Session-Id >
                      { Result-Code }
                      { Origin-Host }
                      { Origin-Realm }
                      { Accounting-Record-Type }
                      { Accounting-Record-Number }
                      [ Acct-Application-Id ]
                      [ Vendor-Specific-Application-Id ]
                      [ User-Name ]
                      [ Accounting-Sub-Session-Id ]
                      [ Acct-Session-Id ]
                      [ Acct-Multi-Session-Id ]
                      [ Event-Timestamp ]
                      [ Error-Message ]
                      [ Error-Reporting-Host ]
                    * [ Failed-AVP ]
                      [ Origin-State-Id ]
                      [ NAS-Identifier ]
                      [ NAS-IP-Address ]
                      [ NAS-IPv6-Address ]
                      [ NAS-Port ]
                      [ NAS-Port-Id ]
                      [ NAS-Port-Type ]
                      [ Service-Type ]
                      [ Termination-Cause ]
                      [ Accounting-Realtime-Required ]
                      [ Acct-Interim-Interval ]
                    * [ Class ]
                    * [ Proxy-Info ]
                    * [ Route-Record ]
                    * [ AVP ]
                    ; 

/**
 * The AA-Request (AAR), which is indicated by setting the Command-Code field to
 * 265 and the 'R' bit in the Command Flags field, is used to request
 * authentication and/or authorization for a given NAS user.
 * The type of request is identified through the Auth-Request-Type AVP [BASE].
 * The recommended value for most RADIUS interoperabily situations is
 * AUTHORIZE_AUTHENTICATE.
 * If Authentication is requested, the User-Name attribute SHOULD be present, as
 * well as any additional authentication AVPs that would carry the password
 * information. A request for authorization SHOULD only include the information
 * from which the authorization will be performed, such as the User-Name,
 * Called-Station-Id, or Calling-Station-Id AVPs. All requests SHOULD contain
 * AVPs uniquely identifying the source of the call, such as Origin-Host and
 * NAS-Port. Certain networks MAY use different AVPs for authorization purposes.
 * A request for authorization will include some AVPs defined in section 6.
 */
    AA-Request<AAR> ::= < Diameter Header: 265, REQ, PXY, 1>
            < Session-Id >
            { Auth-Application-Id }
            { Origin-Host }
            { Origin-Realm }
            { Destination-Realm }
            { Auth-Request-Type }
            { Destination-Host }
            [ Session-Request-Type ]
            [ Visited-Network-Identifier ]
            [Wa3GPP-WLAN-APN-Id]
            * [ Routing-Policy]
            [ NAS-Identifier ]
            [ NAS-IP-Address ]
            [ NAS-IPv6-Address ]
            [ NAS-Port ]
            [ NAS-Port-Id ]
            [ NAS-Port-Type ]
            [ Origin-State-Id ]
            [ Port-Limit ]
            [ User-Name ]
            [ User-Password ]
            [ Service-Type ]
            [ State ]
            [ Authorization-Lifetime ]
            [ Auth-Grace-Period ]
            [ Auth-Session-State ]
            [ Callback-Number ]
            [ Called-Station-Id ]
            [ Calling-Station-Id ]
            [ Originating-Line-Info ]
            [ Connect-Info ]
            [ CHAP-Auth ]
            [ CHAP-Challenge ]
            * [ Framed-Compression ]
            [ Framed-Interface-Id ]
            [ Framed-IP-Address ]
            [ Framed-IP-Netmask ]
            [ Framed-MTU ]
            [ Framed-Protocol ]
            [ ARAP-Password ]
            [ ARAP-Security ]
            * [ ARAP-Security-Data ]
            * [ Login-IP-Host ]
            * [ Login-IPv6-Host ]
            [ Login-LAT-Group ]
            [ Login-LAT-Node ]
            [ Login-LAT-Port ]
            [ Login-LAT-Service ]
            * [ Tunneling ]
            * [ Proxy-Info ]
            * [ Route-Record ]
            * [ AVP ]
            ;

/**
 * The AA-Answer (AAA) message is indicated by setting the Command-Code field to
 * 265 and clearing the 'R' bit in the Command Flags field. It is sent in
 * response to the AA-Request (AAR) message. If authorization was requested, a
 * successful response will include the authorization AVPs appropriate for the
 * service being provided, as defined in section 6.
 * For authentication exchanges requiring more than a single round trip,
 * the server MUST set the Result-Code AVP to DIAMETER_MULTI_ROUND_AUTH.
 * An AAA message with this result code MAY include one Reply-Message or
 * more and MAY include zero or one State AVPs.
 */
    AA-Answer<AAA> ::= < Diameter Header: 265, PXY, 1>
            < Session-Id >
            { Auth-Application-Id }
            { Auth-Request-Type }
            { Result-Code }
            { Origin-Host }
            { Origin-Realm }
            1*{ Subscription-Id }
            [ Max-Requested-Bandwidth ]
            [ Charging-Data ]
            [ Service-Type ]
            * [ Class ]
            * [ Configuration-Token ]
            [ Acct-Interim-Interval ]
            [ Error-Message ]
            [ Error-Reporting-Host ]
            * [ Failed-AVP ]
            [ Idle-Timeout ]
            [ Authorization-Lifetime ]
            [ Auth-Grace-Period ]
            [ Auth-Session-State ]
            [ Re-Auth-Request-Type ]
            [ Session-Timeout ]
            [ State ]
            * [ Reply-Message ]
            [ Origin-State-Id ]
            * [ Filter-Id ]
            [ Password-Retry ]
            [ Port-Limit ]
            [ User-Name ]
            [ Prompt ]
            [ ARAP-Challenge-Response ]
            [ ARAP-Features ]
            [ ARAP-Security ]
            * [ ARAP-Security-Data ]
            [ ARAP-Zone-Access ]
            [ Callback-Id ]
            [ Callback-Number ]
            [ Framed-Appletalk-Link ]
            * [ Framed-Appletalk-Network ]
            [ Framed-Appletalk-Zone ]
            * [ Framed-Compression ]
            [ Framed-Interface-Id ]
            [ Framed-IP-Address ]
            * [ Framed-IPv6-Prefix ]
            [ Framed-IPv6-Pool ]
            * [ Framed-IPv6-Route ]
            [ Framed-IP-Netmask ]
            * [ Framed-Route ]
            [ Framed-Pool ]
            [ Framed-IPX-Network ]
            [ Framed-MTU ]
            [ Framed-Protocol ]
            [ Framed-Routing ]
            * [ Login-IP-Host ]
            * [ Login-IPv6-Host ]
            [ Login-LAT-Group ]
            [ Login-LAT-Node ]
            [ Login-LAT-Port ]
            [ Login-LAT-Service ]
            [ Login-Service ]
            [ Login-TCP-Port ]
            * [ Filter-Rule ]
            * [ QoS-Filter-Rule ]
            * [ Tunneling ]
            * [ Redirect-Host ]
            [ Redirect-Host-Usage ]
            [ Redirect-Max-Cache-Time ]
            * [ Proxy-Info ]
            * [ AVP ]
            ;

/**
 * A Diameter server may initiate a re-authentication and/or reauthorization
 * service for a particular session by issuing a Re-Auth-Request (RAR) message
 * [BASE].For example, for pre-paid services, the Diameter server that
 * originally authorized a session may need some confirmation that the user is
 * still using the services. If a NAS receives an RAR message with Session-Id
 * equal to a currently active session and a Re-Auth-Type that includes
 * authentication, it MUST initiate a re-authentication toward the user, if
 * the service supports this particular feature.
 */
    Re-Auth-Request<RAR> ::= < Diameter Header: 258, REQ, PXY, 1>
            < Session-Id >
            { Origin-Host }
            { Origin-Realm }
            { Destination-Realm }
            { Destination-Host }
            { Auth-Application-Id }
            { Re-Auth-Request-Type }
            [ User-Name ]
            [ Origin-State-Id ]
            * [ Proxy-Info ]
            * [ Route-Record ]
            [ Basic-Location-Policy-Rules ]
	    [ Extended-Location-Policy-Rules ]
            [ Requested-Location-Info ]
            * [ AVP ]
            ;

/**
 * The Re-Auth-Answer (RAA) message [BASE] is sent in response to the RAR. The
 * Result-Code AVP MUST be present and indicates the disposition of the request.
 * A successful RAA transaction MUST be followed by an AAR message.
 */
    Re-Auth-Answer<RAA> ::= < Diameter Header: 258, PXY, 1>
            < Session-Id >
            { Result-Code }
            { Origin-Host }
            { Origin-Realm }
            [ User-Name ]
            [ Origin-State-Id ]
            [ Error-Message ]
            [ Error-Reporting-Host ]
            * [ Failed-AVP ]
            * [ Redirect-Host ]
            [ Redirect-Host-Usage ]
            [ Redirect-Max-Cache-Time ] /* in spec mentioned as Redirect-Host-Cache-Time */
            * [ Proxy-Info ]
            * [ AVP ]
            ;

/**
 * The Abort-Session-Request (ASR), indicated by the Command-Code set to
 * 274 and the message flags' 'R' bit set, may be sent by any server to
 * the access device that is providing session service, to request that
 * the session identified by the Session-Id be stopped.
 */
    Abort-Session-Request<ASR> ::= < Diameter Header: 274, REQ, PXY, 1>
            < Session-Id >
            { Origin-Host }
            { Origin-Realm }
            { Destination-Realm }
            { Destination-Host }
            { Auth-Application-Id }
            [ User-Name ]
            [ Origin-State-Id ]
            * [ Proxy-Info ]
            * [ Route-Record ]
            *[ AVP ]
            ;

/**
 * The Abort-Session-Answer (ASA), indicated by the Command-Code set to
 * 274 and the message flags' 'R' bit clear, is sent in response to the
 * ASR.  The Result-Code AVP MUST be present, and indicates the
 * disposition of the request.
 * If the session identified by Session-Id in the ASR was successfully
 * terminated, Result-Code is set to DIAMETER_SUCCESS.  If the session
 * is not currently active, Result-Code is set to
 * DIAMETER_UNKNOWN_SESSION_ID.  If the access device does not stop the
 * session for any other reason, Result-Code is set to
 * DIAMETER_UNABLE_TO_COMPLY.
 */
    Abort-Session-Answer<ASA> ::= < Diameter Header: 274, PXY, 1>
            < Session-Id >
            { Result-Code }
            { Origin-Host }
            { Origin-Realm }
            [ User-Name ]
            [ Origin-State-Id ]
            [ Error-Message ]
            [ Error-Reporting-Host ]
            * [ Failed-AVP ]
            * [ Redirect-Host ]
            [ Redirect-Host-Usage ]
            [ Redirect-Max-Cache-Time ]
            * [ Proxy-Info ]
            * [ AVP ]
            ;

/**
 * The Session-Termination-Request (STR), indicated by the Command-Code
 * set to 275 and the Command Flags' 'R' bit set, is sent by the access
 * device to inform the Diameter Server that an authenticated and/or
 * authorized session is being terminated.
 */
    Session-Termination-Request<STR> ::= < Diameter Header: 275, REQ, PXY, 1>
            < Session-Id >
            { Origin-Host }
            { Origin-Realm }
            { Destination-Realm }
            { Auth-Application-Id }
            { Termination-Cause }
            [ User-Name ]
            [ Destination-Host ]
            * [ Class ]
            [ Origin-State-Id ]
            * [ Proxy-Info ]
            * [ Route-Record ]
            * [ AVP ]
            ;

/**
 * The Session-Termination-Answer (STA), indicated by the Command-Code
 * set to 275 and the message flags' 'R' bit clear, is sent by the
 * Diameter Server to acknowledge the notification that the session has
 * been terminated.  The Result-Code AVP MUST be present, and MAY
 * contain an indication that an error occurred while servicing the STR.
 * Upon sending or receipt of the STA, the Diameter Server MUST release
 * all resources for the session indicated by the Session-Id AVP.  Any
 * intermediate server in the Proxy-Chain MAY also release any
 * resources, if necessary.
 */
   Session-Termination-Answer <STA> ::= < Diameter Header: 275, PXY, 1>
            < Session-Id >
            { Result-Code }
            { Origin-Host }
            { Origin-Realm }
            [ User-Name ]
            * [ Class ]
            [ Error-Message ]
            [ Error-Reporting-Host ]
            * [ Failed-AVP ]
            [ Origin-State-Id ]
            * [ Proxy-Info ]
            * [ AVP ]
            ;

