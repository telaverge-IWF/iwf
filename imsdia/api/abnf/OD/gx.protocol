/**
 * ETSI TS 129 210 V6.5.0 - Gx interface --Diameter Based Protocol
 * Gx interface between an TPF(Traffice Plane Function) and the 
 *                         CRF(Charging Rules Function)
 * is used for provisioning service data flow based charging rules.
 */
protocol diameter.gx < 0 10415: "ETSI TS 129 210 V6.5.0 " >;


    //////////////////
    // Derived AVPs //
    //////////////////

/**
 * The Bearer-Usage AVP (AVP code 1000) is of type Enumerated, and it shall 
 * indicate how the bearer is being used. If the Bearer-Usage AVP has not been
 * previously provided, its absence shall indicate that no specific information
 * is available. If the Bearer-Usage AVP has been provided, its value shall 
 * remain valid until it is provided the next time.
 */
    Bearer-Usage                                ::= 1000 /* 5.2.1  */ Enumerated    M,V|P| |   |Y; 

/**
 * The Charging-Rule-Install AVP (AVP code 1001) is of type Grouped, and it is
 * used to activate,install or modify charging rules for a bearer as instructed 
 * from the CRF to TPF. 
 * For installing a new rule or modifying a Charging Rule already installed, 
 * Charging-Rule-Name AVP and Charging-Rule-Definition AVP shall be used.
 * For activating a specific chargign rule predefined at the TPF, Charging-Rule
 * -Name AVP is a reference that may be used for activating a group of charging
 * rules predefined at the TPF. 
 */
    Charging-Rule-Install                       ::= 1001 /* 5.2.2  */ Grouped       M,V|P| |   |Y; 

/**
 * The Charging-Rule-Remove AVP (AVP code 1002) is of type Grouped, and it is 
 * used to deactivate or remove charging rules from a bearer.Charging-Rule-Name
 * AVP is a reference for a specific charging rule at the TPF to be removed or
 * for a specific charging rule predefined at the TPF to be deactivated. The 
 * Charging-Rule-Base-Name AVP is a reference for a group of charging rules 
 * predefined at the TPF to be deactivated.
 */
    Charging-Rule-Remove                        ::= 1002 /* 5.2.3  */ Grouped       M,V|P| |   |Y; 

/**
 * The Charging-Rule-Definition AVP (AVP code 1003) is of type Grouped, and it
 * defines the charging rule for a service flow sent by the CRF to the TPF.The
 * Charging-Rule-Name AVP uniquely identifies the charging rule for a bearer 
 * and it is used to reference to a charging rule in communication between the 
 * TPF and the CRF. The Flow-Description AVP(s) determines the traffic that 
 * belongs to the service flow. 
 * If optional AVP(s) within a Charging-Rule-Definition AVP are omitted, but 
 * corresponding information has been provided in previous Gx messages, the 
 * previous information remains valid. If Flow-Description AVP(s) are supplied,  * they replace all previous Flow-Description AVP(s). If Flows AVP(s) are 
 * supplied, they replace all previous Flows AVP(s).
 */
    Charging-Rule-Definition                    ::= 1003 /* 5.2.4  */ Grouped       M,V|P| |   |Y; 

/**
 * The Charging-Rule-Base-Name AVP (AVP code 1004) is of type OctetString, and 
 * it indicates the name of a preâ€‘defined group of charging rules residing at 
 * the TPF.
 */
    Charging-Rule-Base-Name                     ::= 1004 /* 5.2.5  */ OctetString   M,V|P| |   |Y; 

/**
 * The Charging-Rule-Name AVP (AVP code 1005) is of type OctetString.  For 
 * charging rules provided by the CRF it uniquely identifies a charging rule 
 * for a bearer. For charging rules pre-defined at the TPF it uniquely 
 * identifies a charging rule within the TPF.
 */
    Charging-Rule-Name                          ::= 1005 /* 5.2.6  */ OctetString   M,V|P| |   |Y; 

/**
 * The Event-Trigger AVP (AVP code 1006) is of type Enumerated,and it indicates
 * an event that shall cause a re-request of charging rules.
 */
    Event-Trigger                               ::= 1006 /* 5.2.7  */ Enumerated    M,V|P| |   |Y; 

/**
 * The Metering-Method AVP (AVP code 1007) is of type Enumerated, and it 
 * defines what parameters shall be metered for offline charging.
 */
    Metering-Method                             ::= 1007 /* 5.2.8  */ Enumerated    M,V|P| |   |Y; 

/**
 * The Offline AVP (AVP code 1008) is of type Enumerated,and it defines whether
 * the offline charging interface from the TPF for the associated charging rule
 * shall be enabled. The absence of this AVP indicates that the default 
 * configuration shall be used.
 */
    Offline                                     ::= 1008 /* 5.2.9  */ Enumerated    M,V|P| |   |Y; 

/**
 * The Online AVP (AVP code 1009) is of type Enumerated, and it defines whether
 * the online charging interface from the TPF for the associated charging rule 
 * shall be enabled. The absence of this AVP indicates that the default 
 * configuration shall be used.
 */
    Online                                      ::= 1009 /* 5.2.10 */ Enumerated    M,V|P| |   |Y; 

/**
 * The Precedence AVP (AVP code 1010) is of type Unsigned32, and it defines the
 * precedence of a charging rule in case of overlapping charging rules. A 
 * charging rule with the Precedence AVP with lower value shall take the 
 * priority over a charging rule with the Precedence AVP with higher value. The
 * Precedence AVP is also used to indicate the evaluation precedence of the TFT
 * packet filters.
 */
    Precedence                                  ::= 1010 /* 5.2.11 */ Unsigned32    M,V|P| |   |Y; 

/**
 * The Reporting-Level AVP (AVP code 1011) is of type Enumerated,and it defines
 * on what level the TPF reports the usage for the related charging rule.
 */
    Reporting-Level                             ::= 1011 /* 5.2.15 */ Enumerated    M,V|P| |   |Y; 

/**
 * The TFT-Filter AVP (AVP code 1012) is of type IPFilterRule, and it contains 
 * the flow filter for one TFT packet filter.The TFT-Filter AVP is derived from
 * the Traffic Flow Template (TFT) defined in 3GPP TS 24.008. 
 * The following information shall be sent:
 *  -Action shall be set to "permit".
 *  -Direction shall be set to "out".
 *  -Protocol shall be set to the value provided within the TFT packet filter 
 *    parameter "Protocol Identifier/Next Header Type".If the TFT packet filter 
 *    parameter "Protocol Identifier/Next Header Type" is not provided within
 *    the TFT packet filter, Protocol shall be set to "IP".
 *  -Source IP address (possibly masked). The source IP address shall be 
 *    derived from TFT packet filter parameters "Source address" and "Subnet 
 *    Mask". The source IP address shall be set to "any", if no such 
 *    information is provided in the TFT packet filter.
 *  -Source and destination port (single value, list or ranges).The information
 *    shall be derived from the corresponding TFT packet filter parameters.
 *    Source and/or destination port(s) shall be omitted if such information is
 *    not provided in the TFT packet filter.
 *  -The Destination IP address shall be set to "assigned".
 * The IPFilterRule type shall be used with the following restrictions:
 *  -No options shall be used
 *  -The invert modifier "!" for addresses shall not be used.
 * The direction "out" refers to downlink direction.
 */
    TFT-Filter                                  ::= 1012 /* 5.2.18 */ IPFilterRule  M,V|P| |   |Y; 

/**
 * The TFT-Packet-Filter-Information AVP (AVP code 1013) is of type Grouped,and
 * it contains the information from a single TFT packet filter including the 
 * evaluation precedence, the filter and the Type-of-Service/Traffic Class sent
 * from the TPF to the CRF. The TPF shall include one TFT-Packet-Filter-
 * Information AVP for each TFT packet filters applicable at a PDP context
 * in separate TFT-Packet-Filter-Information AVPs within each charging rule
 * request. corresponding to that PDP context. TFT-Packet-Filter-Information 
 * AVPs are derived from the Traffic Flow Template (TFT) defined in
 * 3GPP TS 24.008. When SBLP is used the packet filters shall be omitted.
 */
    TFT-Packet-Filter-Information               ::= 1013 /* 5.2.19 */ Grouped       M,V|P| |   |Y; 

/**
 * The ToS-Traffic-Class AVP (AVP code 1014) is of type OctetString, and it 
 * contains the Type-of-Service/Traffic-Class of a TFT packet filter as defined
 * in 3GPP TS 24.008.
 */
    ToS-Traffic-Class                           ::= 1014 /* 5.2.20 */ OctetString   M,V|P| |   |Y; 

/**
 * The PDP-Session-Operation AVP (AVP Code 1015) is of type Enumerated. It is 
 * only applicable for GPRS. 
 */
    PDP-Session-Operation                       ::= 1015 /* 5.2.21 */ Enumerated    M,V|P| |   |Y; 

/**
 * The AF-Charging-Identifier AVP (AVP code 505)is of type OctetString,contains
 * the AF Charging Identifier that is sent by the AF. This information may be 
 * used for charging correlation with bearer layer.
 */
    AF-Charging-Identifier                      ::= 505  /* 6.5.6  */ OctetString   M,V|P| |   |Y;  /* 3GPP TS 29.209 V6.5 */

/**
 * The Flow-Description AVP (AVP code 507) is of type IPFilterRule, and defines
 * a packet filter for an IP flow with the following information:
 * Direction (in or out).
 * Source and destination IP address (possibly masked).
 * Protocol.
 * Source and destination port (list or ranges).
 * The IPFilterRule type shall be used with the following restrictions:
 *  Only the Action "permit" shall be used.
 *  No "options" shall be used.
 *  The invert modifier "!" for addresses shall not be used.
 *  The keyword "assigned" shall not be used.
 * If any of these restrictions is not observed by the AF,the server shall send
 * an error response to the AF containing the Experimental-Result-Code AVP with
 * value FILTER_RESTRICTIONS.
 * The Flow description AVP shall be used to describe a single IP flow.
 * The direction "in" refers to uplink IP flows, and the direction "out" refers
 * to downlink IP flows.
 */
    Flow-Description                            ::= 507  /* 6.5.8  */ IPFilterRule  M,V|P| |   |Y;  /* 3GPP TS 29.209 V6.5 */

/**
 * The Flow-Number AVP (AVP code 509) is of type Unsigned32,and it contains the
 * ordinal number of the IP flow(s), assigned according to the rules in annex A
 * of 3GPP2 X.S0013-013-0.
 */
    Flow-Number                                 ::= 509  /* 6.5.10 */ Unsigned32    M,V|P| |   |Y;  /* 3GPP TS 29.209 V6.5 */

/**
 * The Flows AVP (AVP code 510) is of type Grouped, and it indicates IP flows 
 * via their flow identifiers.
 * If no Flow-Number AVP(s) are supplied, the Flows AVP refers to all Flows 
 * matching the media component number.
 */
    Flows                                       ::= 510  /* 6.5.11 */ Grouped       M,V|P| |   |Y;  /* 3GPP TS 29.209 V6.5 */

/**
 * The Media-Component-Number AVP (AVP code 518) is of type Unsigned32, and it
 * contains the ordinal number of the media component, assigned according to 
 * the rules in annex A of 3GPP2 X.S0013-013-0.
 */
    Media-Component-Number                      ::= 518  /* 6.5.19 */ Unsigned32    M,V|P| |   |Y;  /* 3GPP TS 29.209 V6.5 */

/**
 * 3GPP-GPRS-Negotiated-QoS-Profile AVP is of type UTF8String. It is the
 * QoS Profile applied by GGSN.
 */
    Gx-3GPP-GPRS-Negotiated-QoS-Profile         ::= 5    /* 16.4.7 */ UTF8String    M,V|P| |   |Y;  /* 3GPP TS 29.061 V7.0*/

/**
 * 3GPP-SGSN-Address AVP (AVP Code 6) is of type UTF8String and contains the 
 * SGSN IP address that is used by the GTP control plane for the handling of 
 * control messages. It may be used to identify the PLMN to which the user is 
 * attached.
 */
    Gx-3GPP-SGSN-Address                        ::= 6    /* 16.4.7 */ UTF8String    M,V|P| |   |Y;  /* 3GPP TS 29.061 V7.0*/

/**
 * 3GPP-SGSN-IPv6-Address AVP (AVP Code 15) is of type UTF8String and contains 
 * the SGSN IPv6 address that is used by the GTP control plane for the handling
 * of control messages. It may be used to identify the PLMN to which the user 
 * is attached.
 */
    Gx-3GPP-SGSN-IPv6-Address                   ::= 15   /* 16.4.7 */ UTF8String    M,V|P| |   |Y;  /* 3GPP TS 29.061 V7.0*/

/**
 * 3GPP-SGSN-MCC-MNC AVP is of type UTF8String. It contains the MCC and MNC 
 * extracted from the RAI within the Create PDP Context Request or Update PDP 
 * Context Request message.
 */
    Gx-3GPP-SGSN-MCC-MNC                        ::= 18   /* 16.4.7 */ UTF8String       | | |   |N;  /* 3GPP TS 29.061 V7.0*/ 

/**
 * 3GPP-RAT-Type AVP is of type OctetString. It indicates which Radio Access 
 * Technology is currently serving the UE.
 */
    Gx-3GPP-RAT-Type                            ::= 21   /* 16.4.7 */ OctetString   M,V|P| |   |Y;  /* 3GPP TS 29.061 V7.0*/

/**
 * The Charging-Information AVP (AVP Code 618) is of type Grouped, and contains
 * the addresses of the charging function.
 */
    Charging-Information                        ::= 618  /* 6.3.19 */ Grouped       M,V| | |   |N;  /* 3GPP TS 29.299 V7.1*/

/**
 * The Primary-Event-Charging-Function-Name AVP (AVP Code 619) is of type 
 * DiameterURI. This AVP contains the address of the Primary Online Charging 
 * Function.
 */
    Primary-Event-Charging-Function-Name        ::= 619  /* 6.3.20 */ DiamURI       M,V| | |   |N;  /* 3GPP TS 29.299 V7.1*/

/**
 * The Secondary-Event-Charging-Function-Name AVP (AVP Code 620) is of type 
 * DiameterURI. This AVP contains the address of the Secondary Online Charging 
 * Function.
 */
    Secondary-Event-Charging-Function-Name      ::= 620  /* 6.3.21 */ DiamURI       M,V| | |   |N;  /* 3GPP TS 29.299 V7.1*/

/**
 * The Primary-Charging-Collection-Function-Name AVP (AVP Code 621) is of type 
 * DiameterURI. This AVP contains the address of the Primary Charging Data 
 * Function. 
 */
    Primary-Charging-Collection-Function-Name   ::= 621  /* 6.3.22 */ DiamURI       M,V| | |   |N;  /* 3GPP TS 29.299 V7.1*/

/**
 * The Secondary-Charging-Collection-Function-Name AVP (AVP Code 622) is of type 
 * DiameterURI. This AVP contains the address of the Secondary Charging Data 
 * Function.
 */
    Secondary-Charging-Collection-Function-Name ::= 622  /* 6.3.23 */ DiamURI       M,V| | |   |N;  /* 3GPP TS 29.299 V7.1*/


    //////////////////
    // Enumerations //
    //////////////////

  Bearer-Usage ::= < Enumerated: 1000 >
        GENERAL           0
        IMS_SIGNALLING    1
        ;

  Event-Trigger ::= < Enumerated: 1006 >
        SGSN_CHANGE       0
        QOS_CHANGE        1
        RAT_CHANGE        2
        TFT_CHANGE        3
        PLMN_CHANGE       4
        ;

  Metering-Method ::= < Enumerated: 1007 >
        DURATION           0
        VOLUME             1
        DURATION_VOLUME    2
        ;

  Offline ::= < Enumerated: 1008 >
        DISABLE_OFFLINE    0
        ENABLE_OFFLINE     1
        ;

  Online ::= < Enumerated: 1009 >
        DISABLE_ONLINE     0
        ENABLE_ONLINE      1
        ;

  Reporting-Level ::= < Enumerated: 1011 >
        CHARGING_RULE_LEVEL   0
        RATING_GROUP_LEVEL    1
        ;

  PDP-Session-Operation ::= < Enumerated: 1015 >
        PDP_SESSION_TERMINATION    0
        ;

    //////////////////
    // Grouped AVPs //
    //////////////////

  Flows ::= < AVP Header: 510 10415 >
        { Media-Component-Number}
        *[ Flow-Number]
        ;

  TFT-Packet-Filter-Information ::= < AVP Header: 1013 10415 >
        [ Precedence ]
        [ TFT-Filter ]
        [ ToS-Traffic-Class ]
        ;

  Charging-Rule-Install ::= < AVP Header: 1001 10415 >
        *[ Charging-Rule-Definition ]
        *[ Charging-Rule-Name ]
        *[ Charging-Rule-Base-Name ]
        *[ AVP ]
        ;

  Charging-Rule-Remove ::= < AVP Header: 1002 10415 >
        *[ Charging-Rule-Name ]
        *[ Charging-Rule-Base-Name ]
        *[ AVP ]
        ;
 
  Charging-Rule-Definition ::= < AVP Header: 1003 10415 >
        { Charging-Rule-Name }
        [ Service-Identifier ]
        [ Rating-Group ]
        *[ Flow-Description ]
        [ Reporting-Level ]
        [ Online ]
        [ Offline ]
        [ Metering-Method ]
        [ Precedence ]
        [ AF-Charging-Identifier ]
        *[ Flows ]
        *[ AVP ]
        ;

  Charging-Information ::= < AVP Header: 618 10415 >
        [ Primary-Event-Charging-Function-Name ]
        [ Secondary-Event-Charging-Function-Name ]
        [ Primary-Charging-Collection-Function-Name ]
        [ Secondary-Charging-Collection-Function-Name ]
        *[ AVP]
        ;

    //////////////
    // Commands //
    //////////////

/*
 * The CCR command, indicated by the Command-Code field set to 272 and the 'R'
 * bit set in the Command Flags field, is sent by the TPF to the CRF in order 
 * to request charging rules for a bearer. The CCR command is also sent by the
 * TPF to the CRF in order to indicate the termination of the bearer.
 */

 CC-Request<CCR> ::= < Diameter Header: 272, REQ, PXY >
        < Session-Id >
        { Auth-Application-Id }
        { Origin-Host }
        { Origin-Realm }
        { Destination-Realm }
        { CC-Request-Type }
        { CC-Request-Number }
        [ Destination-Host ]
        [ Origin-State-Id ]
        *[ Subscription-Id ]
        [ Framed-IP-Address ]
        [ Framed-IPv6-Prefix ]
        [ Gx-3GPP-RAT-Type ]
        [ Termination-Cause ]
        [ User-Equipment-Info ]
        [ Gx-3GPP-GPRS-Negotiated-QoS-Profile ]
        [ Gx-3GPP-SGSN-MCC-MNC ]
        [ Gx-3GPP-SGSN-Address ]  
        [ Gx-3GPP-SGSN-IPv6-Address ]  
        [ Called-Station-Id ]  /* ID changed to Id */
        [ Bearer-Usage ]
        [ PDP-Session-Operation ]
        *[ TFT-Packet-Filter-Information ]
        *[ Proxy-Info ]
        *[ Route-Record ]
        *[ AVP ]
        ;

/*
 * The CCA command, indicated by the Command-Code field set to 272 and the 'R'
 * bit cleared in the Command Flags field, is sent by the CRF to the TPF in 
 * response to the CCR command.It is used to provision charging rules and event
 * triggers for the bearer. The primary and secondary CCF and/or primary and 
 * secondary OSC addresses may be included in the initial provisioning. 
 */

 CC-Answer<CCA> ::= < Diameter Header: 272, PXY >
        < Session-Id >
        { Auth-Application-Id }
        { Origin-Host }
        { Origin-Realm }
        { CC-Request-Type }
        { CC-Request-Number }
        [ Result-Code ]
        [ Experimental-Result ] 	
        *[ Event-Trigger ]
        [ Origin-State-Id ]
        *[ Charging-Rule-Remove ]
        *[ Charging-Rule-Install ]
        [ Charging-Information ]
        [ Error-Message ]
        [ Error-Reporting-Host ]
        *[ Failed-AVP ]
        *[ Proxy-Info ]
        *[ Route-Record ]
        *[ AVP ]
        ;

/*
 * The RAR command, indicated by the Command-Code field set to 258 and the 'R'
 * bit set in the Command Flags field, is sent by the CRF to the TPF in order
 * to indicate the provision of unsolicited charging rules for an existing
 * bearer. The RAR command shall be followed by a CCR command from the TPF 
 * requesting charging rules for the bearer in question.
 */

 RA-Request<RAR> ::= < Diameter Header: 258, REQ, PXY >
        < Session-Id >
        { Auth-Application-Id }
        { Origin-Host }
        { Origin-Realm }
        { Destination-Realm }
        { Destination-Host }
        { Re-Auth-Request-Type }
        [ Origin-State-Id ]
        *[ Proxy-Info ]
        *[ Route-Record ]
        *[ AVP ]
        ;

/*
 * The RAA command, indicated by the Command-Code field set to 258 and the 'R' 
 * bit cleared in the Command Flags field, is sent by the TPF to the CRF in 
 * response to the RAR command. 
 */

 RA-Answer<RAA> ::= < Diameter Header: 258, PXY >
        < Session-Id >
        { Origin-Host }
        { Origin-Realm }
        [ Result-Code ]
        [ Experimental-Result ]
        [ Origin-State-Id ]
        [ Error-Message ]
        [ Error-Reporting-Host ]
        *[ Failed-AVP ]
        *[ Proxy-Info ]
        *[ AVP ]
        ;

