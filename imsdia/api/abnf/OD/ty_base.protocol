/**
 * RFC 3588 - Diameter Base and Accounting Protocol
 * Diameter base commands and AVPs defined here for Ty interface.
 * RFC 4006 and RFC 4005
 * Ty Re-used AVPs - from Diameter Credit Control and NAS Application
 */
@protocol diameter.ty.base < 0: "RFC 3588 RFC 4006 and RFC 4005 for Ty" >;

    //////////////////
    // Derived AVPs //
    //////////////////

    /**
     * The Accounting-Realtime-Required AVP (AVP Code 483) is of type
     * Enumerated and is sent from the Diameter home authorization server to
     * the Diameter client or in the Accounting-Answer from the accounting
     * server.  The client uses information in this AVP to decide what to do
     * if the sending of accounting records to the accounting server has
     * been temporarily prevented due to, for instance, a network problem.
     * <ul>
     * <li>DELIVER_AND_GRANT (1) <br>
     *    The AVP with Value field set to DELIVER_AND_GRANT means that the
     *    service MUST only be granted as long as there is a connection to
     *    an accounting server.  Note that the set of alternative accounting
     *    servers are treated as one server in this sense.  Having to move
     *    the accounting record stream to a backup server is not a reason to
     *    discontinue the service to the user.
     * <li>GRANT_AND_STORE (2) <br>
     *    The AVP with Value field set to GRANT_AND_STORE means that service
     *    SHOULD be granted if there is a connection, or as long as records
     *    can still be stored as described in Section 9.4.
     * <p>
     *    This is the default behavior if the AVP isn't included in the
     *    reply from the authorization server.
     * <li>GRANT_AND_LOSE (3) <br>
     *    The AVP with Value field set to GRANT_AND_LOSE means that service
     *    SHOULD be granted even if the records can not be delivered or
     *    stored.
     * </ul>
     */
    Accounting-Realtime-Required    ::= 483 /*9.8.7*/  Enumerated  M|P| |  V  |Y;

    /**
     * The Accounting-Record-Number AVP (AVP Code 485) is of type Unsigned32
     * and identifies this record within one session.  As Session-Id AVPs
     * are globally unique, the combination of Session-Id and Accounting-
     * Record-Number AVPs is also globally unique, and can be used in
     * matching accounting records with confirmations.  An easy way to
     * produce unique numbers is to set the value to 0 for records of type
     * EVENT_RECORD and START_RECORD, and set the value to 1 for the first
     * INTERIM_RECORD, 2 for the second, and so on until the value for
     * STOP_RECORD is one more than for the last INTERIM_RECORD.
     */
    Accounting-Record-Number        ::= 485 /*9.8.3*/  Unsigned32  M|P| |  V  |Y;

    /**
     * The Accounting-Record-Type AVP (AVP Code 480) is of type Enumerated
     * and contains the type of accounting record being sent.  The following
     * values are currently defined for the Accounting-Record-Type AVP:
     * <ul>
     * <li>EVENT_RECORD (1) <br>
     *    An Accounting Event Record is used to indicate that a one-time
     *    event has occurred (meaning that the start and end of the event
     *    are simultaneous).  This record contains all information relevant
     *    to the service, and is the only record of the service.
     * <li>START_RECORD (2) <br>
     *    An Accounting Start, Interim, and Stop Records are used to
     *    indicate that a service of a measurable length has been given.  An
     *    Accounting Start Record is used to initiate an accounting session,
     *    and contains accounting information that is relevant to the
     *    initiation of the session.
     * <li>INTERIM_RECORD (3) <br>
     *    An Interim Accounting Record contains cumulative accounting
     *    information for an existing accounting session.  Interim
     *    Accounting Records SHOULD be sent every time a re-authentication
     *    or re-authorization occurs.  Further, additional interim record
     *    triggers MAY be defined by application-specific Diameter
     *    applications.  The selection of whether to use INTERIM_RECORD
     *    records is done by the Acct-Interim-Interval AVP.
     * <li>STOP_RECORD (4) <br>
     *    An Accounting Stop Record is sent to terminate an accounting
     *    session and contains cumulative accounting information relevant to
     *    the existing session.
     * </un>
     */
    Accounting-Record-Type          ::= 480 /*9.8.1*/  Enumerated  M|P| |  V  |Y;

    /**
     * The Accounting-Sub-Session-Id AVP (AVP Code 287) is of type
     * Unsigned64 and contains the accounting sub-session identifier.  The
     * combination of the Session-Id and this AVP MUST be unique per sub-
     * session, and the value of this AVP MUST be monotonically increased by
     * one for all new sub-sessions.  The absence of this AVP implies no
     * sub-sessions are in use, with the exception of an Accounting-Request
     * whose Accounting-Record-Type is set to STOP_RECORD.  A STOP_RECORD
     * message with no Accounting-Sub-Session-Id AVP present will signal the
     * termination of all sub-sessions for a given Session-Id.
     */
    Accounting-Sub-Session-Id       ::= 287 /*9.8.6*/  Unsigned64  M|P| |  V  |Y;

    /**
     * The Acct-Application-Id AVP (AVP Code 259) is of type Unsigned32 and
     * is used in order to advertise support of the Accounting portion of an
     * application (see Section 2.4).  The Acct-Application-Id MUST also be
     * present in all Accounting messages.  Exactly one of the Auth-
     * Application-Id and Acct-Application-Id AVPs MAY be present.
     */
    Acct-Application-Id             ::= 259 /*6.9  */  Unsigned32  M|P| |  V  |N;

    /**
     * The Acct-Multi-Session-Id AVP (AVP Code 50) is of type UTF8String,
     * following the format specified in Section 8.8.  The Acct-Multi-
     * Session-Id AVP is used to link together multiple related accounting
     * sessions, where each session would have a unique Session-Id, but the
     * same Acct-Multi-Session-Id AVP.  This AVP MAY be returned by the
     * Diameter server in an authorization answer, and MUST be used in all
     * accounting messages for the given session.
     */
    Acct-Multi-Session-Id           ::=  50 /*9.8.5*/  UTF8String  M|P| |  V  |Y;

    /**
     * The Acct-Session-Id AVP (AVP Code 44) is of type OctetString is only
     * used when RADIUS/Diameter translation occurs.  This AVP contains the
     * contents of the RADIUS Acct-Session-Id attribute.
     */
    Acct-Session-Id                 ::=  44 /*9.8.4*/  OctetString M|P| |  V  |Y;

    /**
     * The Acct-Interim-Interval AVP (AVP Code 85) is of type Unsigned32 and
     * is sent from the Diameter home authorization server to the Diameter
     * client.  The client uses information in this AVP to decide how and
     * when to produce accounting records.  With different values in this
     * AVP, service sessions can result in one, two, or two+N accounting
     * records, based on the needs of the home-organization.  The following
     * accounting record production behavior is directed by the inclusion of
     * this AVP:
     * <ol>
     * <li> The omission of the Acct-Interim-Interval AVP or its inclusion
     *    with Value field set to 0 means that EVENT_RECORD, START_RECORD,
     *     and STOP_RECORD are produced, as appropriate for the service.
     * <li> The inclusion of the AVP with Value field set to a non-zero value
     *     means that INTERIM_RECORD records MUST be produced between the
     *     START_RECORD and STOP_RECORD records.  The Value field of this AVP
     *     is the nominal interval between these records in seconds.  The
     *     Diameter node that originates the accounting information, known as
     *     the client, MUST produce the first INTERIM_RECORD record roughly
     *     at the time when this nominal interval has elapsed from the
     *     START_RECORD, the next one again as the interval has elapsed once
     *     more, and so on until the session ends and a STOP_RECORD record is
     *     produced.
     *     <p>
     *     The client MUST ensure that the interim record production times
     *     are randomized so that large accounting message storms are not
     *     created either among records or around a common service start
     *     time.
     * </ol>
     */
    Acct-Interim-Interval           ::=  85 /*9.8.2*/  Unsigned32  M|P| |  V  |Y;

    /**
     * The Auth-Application-Id AVP (AVP Code 258) is of type Unsigned32 and
     * is used in order to advertise support of the Authentication and
     * Authorization portion of an application (see Section 2.4).  The
     * Auth-Application-Id MUST also be present in all Authentication and/or
     * Authorization messages that are defined in a separate Diameter
     * specification and have an Application ID assigned.
     */
    Auth-Application-Id             ::= 258 /*6.8  */  Unsigned32  M|P| |  V  |N;

    /**
     * The Auth-Request-Type AVP (AVP Code 274) is of type Enumerated and is
     * included in application-specific auth requests to inform the peers
     * whether a user is to be authenticated only, authorized only or both.
     * Note any value other than both MAY cause RADIUS interoperability
     * issues.  The following values are defined:
     * <ul>
     * <li> AUTHENTICATE_ONLY (1) <br>
     *    The request being sent is for authentication only, and MUST
     *    contain the relevant application specific authentication AVPs that
     *    are needed by the Diameter server to authenticate the user.
     * <li> AUTHORIZE_ONLY (2) <br>
     *    The request being sent is for authorization only, and MUST contain
     *    the application specific authorization AVPs that are necessary to
     *    identify the service being requested/offered.
     * <li> AUTHORIZE_AUTHENTICATE (3) <br>
     *    The request contains a request for both authentication and
     *    authorization.  The request MUST include both the relevant
     *    application specific authentication information, and authorization
     *    information necessary to identify the service being
     *    requested/offered.
     * </ul>
     */
    Auth-Request-Type               ::= 274 /*8.7  */  Enumerated  M|P| |  V  |N;

    /**
     * The Auth-Grace-Period AVP (AVP Code 276) is of type Unsigned32 and
     * contains the number of seconds the Diameter server will wait
     * following the expiration of the Authorization-Lifetime AVP before
     * cleaning up resources for the session.
     */
    Auth-Grace-Period               ::= 276 /*8.10 */  Unsigned32  M|P| |  V  |N;

    /**
     * The Auth-Session-State AVP (AVP Code 277) is of type Enumerated and
     * specifies whether state is maintained for a particular session.  The
     * client MAY include this AVP in requests as a hint to the server, but
     * the value in the server's answer message is binding.  The following
     * values are supported:
     * <ul>
     * <li> STATE_MAINTAINED (0) <br>
     *    This value is used to specify that session state is being
     *    maintained, and the access device MUST issue a session termination
     *    message when service to the user is terminated.  This is the
     *    default value.
     * <li> NO_STATE_MAINTAINED (1) <br>
     *    This value is used to specify that no session termination messages
     *    will be sent by the access device upon expiration of the
     *    Authorization-Lifetime.
     * </ul>
     */
    Auth-Session-State              ::= 277 /*8.11 */  Enumerated  M|P| |  V  |N;

    /**
     * The Authorization-Lifetime AVP (AVP Code 291) is of type Unsigned32
     * and contains the maximum number of seconds of service to be provided
     * to the user before the user is to be re-authenticated and/or re-
     * authorized.  Great care should be taken when the Authorization-
     * Lifetime value is determined, since a low, non-zero, value could
     * create significant Diameter traffic, which could congest both the
     * network and the agents.
     * <p>
     * A value of zero (0) means that immediate re-auth is necessary by the
     * access device.  This is typically used in cases where multiple
     * authentication methods are used, and a successful auth response with
     * this AVP set to zero is used to signal that the next authentication
     * method is to be immediately initiated.  The absence of this AVP, or a
     * value of all ones (meaning all bits in the 32 bit field are set to
     * one) means no re-auth is expected.
     * <p>
     * If both this AVP and the Session-Timeout AVP are present in a
     * message, the value of the latter MUST NOT be smaller than the
     * Authorization-Lifetime AVP.
     * <p>
     * An Authorization-Lifetime AVP MAY be present in re-authorization
     * messages, and contains the number of seconds the user is authorized
     * to receive service from the time the re-auth answer message is
     * received by the access device.
     * <p>
     * This AVP MAY be provided by the client as a hint of the maximum
     * lifetime that it is willing to accept.  However, the server MAY
     * return a value that is equal to, or smaller, than the one provided by
     * the client.
     */
    Authorization-Lifetime          ::= 291 /*8.9  */  Unsigned32  M|P| |  V  |N;

    /**
     * The Class AVP (AVP Code 25) is of type OctetString and is used to by
     * Diameter servers to return state information to the access device.
     * When one or more Class AVPs are present in application-specific
     * authorization answer messages, they MUST be present in subsequent
     * re-authorization, session termination and accounting messages.  Class
     * AVPs found in a re-authorization answer message override the ones
     * found in any previous authorization answer message.  Diameter server
     * implementations SHOULD NOT return Class AVPs that require more than
     * 4096 bytes of storage on the Diameter client.  A Diameter client that
     * receives Class AVPs whose size exceeds local available storage MUST
     * terminate the session.
     */
    Class                           ::=  25 /*8.20 */  OctetString M|P| |  V  |Y;

    /**
     * The Destination-Host AVP (AVP Code 293) is of type DiameterIdentity.
     * This AVP MUST be present in all unsolicited agent initiated messages,
     * MAY be present in request messages, and MUST NOT be present in Answer
     * messages.
     * <p>
     * The absence of the Destination-Host AVP will cause a message to be
     * sent to any Diameter server supporting the application within the
     * realm specified in Destination-Realm AVP.
     */
    Destination-Host                ::= 293 /*6.5  */  DiamIdent   M|P| |  V  |N;

    /**
     * The Destination-Realm AVP (AVP Code 283) is of type DiameterIdentity,
     * and contains the realm the message is to be routed to.  The
     * Destination-Realm AVP MUST NOT be present in Answer messages.
     * Diameter Clients insert the realm portion of the User-Name AVP.
     * Diameter servers initiating a request message use the value of the
     * Origin-Realm AVP from a previous message received from the intended
     * target host (unless it is known a priori).  When present, the
     * Destination-Realm AVP is used to perform message routing decisions.
     * <p>
     * Request messages whose ABNF does not list the Destination-Realm AVP
     * as a mandatory AVP are inherently non-routable messages.
     */
    Destination-Realm               ::= 283 /*6.6  */  DiamIdent   M|P| |  V  |N;

    /**
     * The Destination-Realm AVP (AVP Code 283) is of type DiameterIdentity,
     * and contains the realm the message is to be routed to.  The
     * Destination-Realm AVP MUST NOT be present in Answer messages.
     * Diameter Clients insert the realm portion of the User-Name AVP.
     * Diameter servers initiating a request message use the value of the
     * Origin-Realm AVP from a previous message received from the intended
     * target host (unless it is known a priori).  When present, the
     * Destination-Realm AVP is used to perform message routing decisions.
     * <p>
     * Request messages whose ABNF does not list the Destination-Realm AVP
     * as a mandatory AVP are inherently non-routable messages.
     */
    Disconnect-Cause                ::= 273 /*5.4.3*/  Enumerated  M|P| |  V  |N;

  //E2E-Sequence                    ::= 300 /*6.15 */  Grouped     M|P| |  V  |Y;

    /**
     * The Error-Message AVP (AVP Code 281) is of type UTF8String.  It MAY
     * accompany a Result-Code AVP as a human readable error message.  The
     * Error-Message AVP is not intended to be useful in real-time, and
     * SHOULD NOT be expected to be parsed by network entities.
     */
    Error-Message                   ::= 281 /*7.3  */  UTF8String   |P| | V,M |N;

    /**
     * The Error-Reporting-Host AVP (AVP Code 294) is of type
     * DiameterIdentity.  This AVP contains the identity of the Diameter
     * host that sent the Result-Code AVP to a value other than 2001
     * (Success), only if the host setting the Result-Code is different from
     * the one encoded in the Origin-Host AVP.  This AVP is intended to be
     * used for troubleshooting purposes, and MUST be set when the Result-
     * Code AVP indicates a failure.
     */
    Error-Reporting-Host            ::= 294 /*7.4  */  DiamIdent    |P| | V,M |N;

    /**
     * The Event-Timestamp (AVP Code 55) is of type Time, and MAY be
     * included in an Accounting-Request and Accounting-Answer messages to
     * record the time that the reported event occurred, in seconds since
     * January 1, 1900 00:00 UTC.
     */
    Event-Timestamp                 ::=  55 /*8.21 */  Unsigned32  M|P| |  V  |N;

    /**
     * The Experimental-Result AVP (AVP Code 297) is of type Grouped, and
     * indicates whether a particular vendor-specific request was completed
     * successfully or whether an error occurred.
     * <p>
     * The Vendor-Id AVP (see Section 5.3.3) in this grouped AVP identifies
     * the vendor responsible for the assignment of the result code which
     * follows.  All Diameter answer messages defined in vendor-specific
     * applications MUST include either one Result-Code AVP or one
     * Experimental-Result AVP.
     */
    Experimental-Result             ::= 297 /*7.6  */  Grouped     M|P| |  V  |N;

    /**
     * The Experimental-Result-Code AVP (AVP Code 298) is of type Unsigned32
     * and contains a vendor-assigned value representing the result of
     * processing the request.
     * <p>
     * It is recommended that vendor-specific result codes follow the same
     * conventions given for the Result-Code AVP regarding the different
     * types of result codes and the handling of errors (for non 2xxx
     * values).
     */
    Experimental-Result-Code        ::= 298 /*7.7  */  Unsigned32  M|P| |  V  |N;

    /**
     * The Failed-AVP AVP (AVP Code 279) is of type Grouped and provides
     * debugging information in cases where a request is rejected or not
     * fully processed due to erroneous information in a specific AVP.  The
     * value of the Result-Code AVP will provide information on the reason
     * for the Failed-AVP AVP.
     * <p>
     * The possible reasons for this AVP are the presence of an improperly
     * constructed AVP, an unsupported or unrecognized AVP, an invalid AVP
     * value, the omission of a required AVP, the presence of an explicitly
     * excluded AVP (see tables in Section 10), or the presence of two or
     * more occurrences of an AVP which is restricted to 0, 1, or 0-1
     * occurrences.
     * <p>
     * A Diameter message MAY contain one Failed-AVP AVP, containing the
     * entire AVP that could not be processed successfully.  If the failure
     * reason is omission of a required AVP, an AVP with the missing AVP
     * code, the missing vendor id, and a zero filled payload of the minimum
     * required length for the omitted AVP will be added.
     */
    Failed-AVP                      ::= 279 /*7.5  */  Grouped     M|P| |  V  |N;

    /**
     * The Firmware-Revision AVP (AVP Code 267) is of type Unsigned32 and is
     * used to inform a Diameter peer of the firmware revision of the
     * issuing device.
     * <p>
     * For devices that do not have a firmware revision (general purpose
     * computers running Diameter software modules, for instance), the
     * revision of the Diameter software module may be reported instead.
     */
    Firmware-Revision               ::= 267 /*5.3.4*/  Unsigned32   | | |P,V,M|N;

    /**
     * The Host-IP-Address AVP (AVP Code 257) is of type Address and is used
     * to inform a Diameter peer of the sender's IP address.  All source
     * addresses that a Diameter node expects to use with SCTP [SCTP] MUST
     * be advertised in the CER and CEA messages by including a Host-IP-
     * Address AVP for each address.  This AVP MUST ONLY be used in the CER
     * and CEA messages.
     */
    Host-IP-Address                 ::= 257 /*5.3.5*/  Address     M|P| |  V  |N;

    /**
     * The Inband-Security-Id AVP (AVP Code 299) is of type Unsigned32 and
     * is used in order to advertise support of the Security portion of the
     * application.
     * <p>
     * Currently, the following values are supported, but there is ample
     * room to add new security Ids.
     * <ul>
     * <li> NO_INBAND_SECURITY (0) <br>
     *    This peer does not support TLS.  This is the default value, if the
     *    AVP is omitted.
     * <li> TLS (1) <br>
     *    This node supports TLS security, as defined by [TLS].
     * </ul>
     */
    Inband-Security-Id              ::= 299 /*6.10 */  Unsigned32  M|P| |  V  |N;

    /**
     * The Multi-Round-Time-Out AVP (AVP Code 272) is of type Unsigned32,
     * and SHOULD be present in application-specific authorization answer
     * messages whose Result-Code AVP is set to DIAMETER_MULTI_ROUND_AUTH.
     * This AVP contains the maximum number of seconds that the access
     * device MUST provide the user in responding to an authentication
     * request.
     */
    Multi-Round-Time-Out            ::= 272 /*8.19 */  Unsigned32  M|P| |  V  |Y;

    /**
     * The Origin-Host AVP (AVP Code 264) is of type DiameterIdentity, and
     * MUST be present in all Diameter messages.  This AVP identifies the
     * endpoint that originated the Diameter message.  Relay agents MUST NOT
     * modify this AVP.
     * <p>
     * The value of the Origin-Host AVP is guaranteed to be unique within a
     * single host.
     * <p>
     * Note that the Origin-Host AVP may resolve to more than one address as
     * the Diameter peer may support more than one address.
     */
    Origin-Host                     ::= 264 /*6.3  */  DiamIdent   M|P| |  V  |N;

    /**
     * The Origin-Realm AVP (AVP Code 296) is of type DiameterIdentity.
     * This AVP contains the Realm of the originator of any Diameter message
     * and MUST be present in all messages.
     */
    Origin-Realm                    ::= 296 /*6.4  */  DiamIdent   M|P| |  V  |N;

    /**
     * The Origin-State-Id AVP (AVP Code 278), of type Unsigned32, is a
     * monotonically increasing value that is advanced whenever a Diameter
     * entity restarts with loss of previous state, for example upon reboot.
     * Origin-State-Id MAY be included in any Diameter message, including
     * CER.
     * <p>
     * A Diameter entity issuing this AVP MUST create a higher value for
     * this AVP each time its state is reset.  A Diameter entity MAY set
     * Origin-State-Id to the time of startup, or it MAY use an incrementing
     * counter retained in non-volatile memory across restarts.
     * <p>
     * The Origin-State-Id, if present, MUST reflect the state of the entity
     * indicated by Origin-Host.  If a proxy modifies Origin-Host, it MUST
     * either remove Origin-State-Id or modify it appropriately as well.
     * <p>
     * Typically, Origin-State-Id is used by an access device that always
     * starts up with no active sessions; that is, any session active prior
     * to restart will have been lost.  By including Origin-State-Id in a
     * message, it allows other Diameter entities to infer that sessions
     * associated with a lower Origin-State-Id are no longer active.  If an
     * access device does not intend for such inferences to be made, it MUST
     * either not include Origin-State-Id in any message, or set its value
     * to 0.
     */
    Origin-State-Id                 ::= 278 /*8.16 */  Unsigned32  M|P| |  V  |N;

    /**
     * The Product-Name AVP (AVP Code 269) is of type UTF8String, and
     * contains the vendor assigned name for the product.  The Product-Name
     * AVP SHOULD remain constant across firmware revisions for the same
     * product.
     */
    Product-Name                    ::= 269 /*5.3.7*/  UTF8String   | | |P,V,M|N;

    /**
     * The Proxy-Host AVP (AVP Code 280) is of type DiameterIdentity.  This
     * AVP contains the identity of the host that added the Proxy-Info AVP.
     */
    Proxy-Host                      ::= 280 /*6.7.3*/  DiamIdent   M| | | P,V |N;

    /**
     * The Proxy-Info AVP (AVP Code 284) is of type Grouped.
     */
    Proxy-Info                      ::= 284 /*6.7.2*/  Grouped     M| | | P,V |N;

    /**
     * The Proxy-State AVP (AVP Code 33) is of type OctetString, and
     * contains state local information, and MUST be treated as opaque data.
     */
    Proxy-State                     ::=  33 /*6.7.4*/  OctetString M| | | P,V |N;

    /**
     * The Re-Auth-Request-Type AVP (AVP Code 285) is of type Enumerated and
     * is included in application-specific auth answers to inform the client
     * of the action expected upon expiration of the Authorization-Lifetime.
     * If the answer message contains an Authorization-Lifetime AVP with a
     * positive value, the Re-Auth-Request-Type AVP MUST be present in an
     * answer message.  The following values are defined:
     * <ul>
     * <li> AUTHORIZE_ONLY (0) <br>
     *    An authorization only re-auth is expected upon expiration of the
     *    Authorization-Lifetime.  This is the default value if the AVP is
     *    not present in answer messages that include the Authorization-
     *    Lifetime.
     * <li> AUTHORIZE_AUTHENTICATE (1) <br>
     *    An authentication and authorization re-auth is expected upon
     *    expiration of the Authorization-Lifetime.
     * </ul>
     */
    Re-Auth-Request-Type            ::= 285 /*8.12 */  Enumerated  M|P| |  V  |N;

    /**
     * One or more of instances of this AVP MUST be present if the answer
     * message's 'E' bit is set and the Result-Code AVP is set to
     * DIAMETER_REDIRECT_INDICATION.
     * <p>
     * Upon receiving the above, the receiving Diameter node SHOULD forward
     * the request directly to one of the hosts identified in these AVPs.
     * The server contained in the selected Redirect-Host AVP SHOULD be used
     * for all messages pertaining to this session.
     */
    Redirect-Host                   ::= 292 /*6.12 */  DiamURI     M|P| |  V  |N;

    /**
     * The Redirect-Host-Usage AVP (AVP Code 261) is of type Enumerated.
     * This AVP MAY be present in answer messages whose 'E' bit is set and
     * the Result-Code AVP is set to DIAMETER_REDIRECT_INDICATION.
     * <p>
     * When present, this AVP dictates how the routing entry resulting from
     * the Redirect-Host is to be used.  The following values are supported:
     * <ul>
     * <li> DONT_CACHE (0) <br>
     *    The host specified in the Redirect-Host AVP should not be cached.
     *    This is the default value.
     * <li> ALL_SESSION (1) <br>
     *    All messages within the same session, as defined by the same value
     *    of the Session-ID AVP MAY be sent to the host specified in the
     *    Redirect-Host AVP.
     * <li> ALL_REALM (2) <br>
     *    All messages destined for the realm requested MAY be sent to the
     *    host specified in the Redirect-Host AVP.
     * <li> REALM_AND_APPLICATION (3) <br>
     *    All messages for the application requested to the realm specified
     *    MAY be sent to the host specified in the Redirect-Host AVP.
     * <li> ALL_APPLICATION (4) <br>
     *    All messages for the application requested MAY be sent to the host
     *    specified in the Redirect-Host AVP.
     * <li> ALL_HOST (5) <br>
     *    All messages that would be sent to the host that generated the
     *    Redirect-Host MAY be sent to the host specified in the Redirect-
     *    Host AVP.
     * <li> ALL_USER (6) <br>
     *    All messages for the user requested MAY be sent to the host
     *    specified in the Redirect-Host AVP.
     * </ul>
     */
    Redirect-Host-Usage             ::= 261 /*6.13 */  Enumerated  M|P| |  V  |N;

    /**
     * The Redirect-Max-Cache-Time AVP (AVP Code 262) is of type Unsigned32.
     * This AVP MUST be present in answer messages whose 'E' bit is set, the
     * Result-Code AVP is set to DIAMETER_REDIRECT_INDICATION and the
     * Redirect-Host-Usage AVP set to a non-zero value.
     * <p>
     * This AVP contains the maximum number of seconds the peer and route
     * table entries, created as a result of the Redirect-Host, will be
     * cached.  Note that once a host created due to a redirect indication
     * is no longer reachable, any associated peer and routing table entries
     * MUST be deleted.
     */
    Redirect-Max-Cache-Time         ::= 262 /*6.14 */  Unsigned32  M|P| |  V  |N;

    /**
     * The Result-Code AVP (AVP Code 268) is of type Unsigned32 and
     * indicates whether a particular request was completed successfully or
     * whether an error occurred.  All Diameter answer messages defined in
     * IETF applications MUST include one Result-Code AVP.  A non-successful
     * Result-Code AVP (one containing a non 2xxx value other than
     * DIAMETER_REDIRECT_INDICATION) MUST include the Error-Reporting-Host
     * AVP if the host setting the Result-Code AVP is different from the
     * identity encoded in the Origin-Host AVP.
     * <p>
     * The Result-Code data field contains an IANA-managed 32-bit address
     * space representing errors (see Section 11.4).  Diameter provides the
     * following classes of errors, all identified by the thousands digit in
     * the decimal notation:
     * <ul>
     * <li> <tt>1xxx</tt> (Informational)
     * <li> <tt>2xxx</tt> (Success)
     * <li> <tt>3xxx</tt> (Protocol Errors)
     * <li> <tt>4xxx</tt> (Transient Failures)
     * <li> <tt>5xxx</tt> (Permanent Failure)
     * </ul>
     * A non-recognized class (one whose first digit is not defined in this
     * section) MUST be handled as a permanent failure.
     */
    Result-Code                     ::= 268 /*7.1  */  Unsigned32  M|P| |  V  |N;

    /**
     * The Route-Record AVP (AVP Code 282) is of type DiameterIdentity.  The
     * identity added in this AVP MUST be the same as the one received in
     * the Origin-Host of the Capabilities Exchange message.
     */
    Route-Record                    ::= 282 /*6.7.1*/  DiamIdent   M| | | P,V |N;

    /**
     * The Session-Binding AVP (AVP Code 270) is of type Unsigned32, and MAY
     * be present in application-specific authorization answer messages.  If
     * present, this AVP MAY inform the Diameter client that all future
     * application-specific re-auth messages for this session MUST be sent
     * to the same authorization server.  This AVP MAY also specify that a
     * Session-Termination-Request message for this session MUST be sent to
     * the same authorizing server.
     * <p>
     * This field is a bit mask, and the following bits have been defined:
     * <ul>
     * <li> RE_AUTH (1) <br>
     *    When set, future re-auth messages for this session MUST NOT
     *    include the Destination-Host AVP.  When cleared, the default
     *    value, the Destination-Host AVP MUST be present in all re-auth
     *    messages for this session.
     * <li> STR (2) <br>
     *    When set, the STR message for this session MUST NOT include the
     *    Destination-Host AVP.  When cleared, the default value, the
     *    Destination-Host AVP MUST be present in the STR message for this
     *    session.
     * <li> ACCOUNTING (4) <br>
     *    When set, all accounting messages for this session MUST NOT
     *    include the Destination-Host AVP.  When cleared, the default
     *    value, the Destination-Host AVP, if known, MUST be present in all
     *    accounting messages for this session.
     * </ul>
     */
    Session-Binding                 ::= 270 /*8.17 */  Unsigned32  M|P| |  V  |Y;

    /**
     */
    Session-Id                      ::= 263 /*8.8  */  UTF8String  M|P| |  V  |Y;

    /**
     * The Session-Server-Failover AVP (AVP Code 271) is of type Enumerated,
     * and MAY be present in application-specific authorization answer
     * messages that either do not include the Session-Binding AVP or
     * include the Session-Binding AVP with any of the bits set to a zero
     * value.  If present, this AVP MAY inform the Diameter client that if a
     * re-auth or STR message fails due to a delivery problem, the Diameter
     * client SHOULD issue a subsequent message without the Destination-Host
     * AVP.  When absent, the default value is REFUSE_SERVICE.
     * <p>
     * The following values are supported:
     * <ul>
     * <li> REFUSE_SERVICE (0) <br>
     *    If either the re-auth or the STR message delivery fails, terminate
     *    service with the user, and do not attempt any subsequent attempts.
     * <li> TRY_AGAIN (1) <br>
     *    If either the re-auth or the STR message delivery fails, resend
     *    the failed message without the Destination-Host AVP present.
     * <li> ALLOW_SERVICE (2) <br>
     *    If re-auth message delivery fails, assume that re-authorization
     *    succeeded.  If STR message delivery fails, terminate the session.
     * <li> TRY_AGAIN_ALLOW_SERVICE (3) <br>
     *    If either the re-auth or the STR message delivery fails, resend
     *    the failed message without the Destination-Host AVP present.  If
     *    the second delivery fails for re-auth, assume re-authorization
     *    succeeded.  If the second delivery fails for STR, terminate the
     *    session.
     * </ul>
     */
    Session-Server-Failover         ::= 271 /*8.18 */  Enumerated  M|P| |  V  |Y;

    /**
     * The Session-Timeout AVP (AVP Code 27) [RADIUS] is of type Unsigned32
     * and contains the maximum number of seconds of service to be provided
     * to the user before termination of the session.  When both the
     * Session-Timeout and the Authorization-Lifetime AVPs are present in an
     * answer message, the former MUST be equal to or greater than the value
     * of the latter.
     * <p>
     * A session that terminates on an access device due to the expiration
     * of the Session-Timeout MUST cause an STR to be issued, unless both
     * the access device and the home server had previously agreed that no
     * session termination messages would be sent (see Section 8.9).
     * <p>
     * A Session-Timeout AVP MAY be present in a re-authorization answer
     * message, and contains the remaining number of seconds from the
     * beginning of the re-auth.
     * <p>
     * A value of zero, or the absence of this AVP, means that this session
     * has an unlimited number of seconds before termination.
     * <p>
     * This AVP MAY be provided by the client as a hint of the maximum
     * timeout that it is willing to accept.  However, the server MAY return
     * a value that is equal to, or smaller, than the one provided by the
     * client.
     */
    Session-Timeout                 ::=  27 /*8.13 */  Unsigned32  M|P| |  V  |N;

    /**
     * The Supported-Vendor-Id AVP (AVP Code 265) is of type Unsigned32 and
     * contains the IANA "SMI Network Management Private Enterprise Codes"
     * [ASSIGNNO] value assigned to a vendor other than the device vendor.
     * This is used in the CER and CEA messages in order to inform the peer
     * that the sender supports (a subset of) the vendor-specific AVPs
     * defined by the vendor identified in this AVP.
     */
    Supported-Vendor-Id             ::= 265 /*5.3.6*/  Unsigned32  M|P| |  V  |N;

    /**
     * The Termination-Cause AVP (AVP Code 295) is of type Enumerated, and
     * is used to indicate the reason why a session was terminated on the
     * access device.  The following values are defined:
     * <ul>
     * <li> DIAMETER_LOGOUT (1) <br>
     *    The user initiated a disconnect
     * <li> DIAMETER_SERVICE_NOT_PROVIDED (2) <br>
     *    This value is used when the user disconnected prior to the receipt
     *    of the authorization answer message.
     * <li> DIAMETER_BAD_ANSWER (3) <br>
     *    This value indicates that the authorization answer received by the
     *    access device was not processed successfully.
     * <li> DIAMETER_ADMINISTRATIVE (4) <br>
     *    The user was not granted access, or was disconnected, due to
     *    administrative reasons, such as the receipt of a Abort-Session-
     *    Request message.
     * <li> DIAMETER_LINK_BROKEN (5) <br>
     *    The communication to the user was abruptly disconnected.
     * <li> DIAMETER_AUTH_EXPIRED (6) <br>
     *    The user's access was terminated since its authorized session time
     *    has expired.
     * <li> DIAMETER_USER_MOVED (7) <br>
     *    The user is receiving services from another access device.
     * <li> DIAMETER_SESSION_TIMEOUT (8) <br>
     *    The user's session has timed out, and service has been terminated.
     * </ul>
     */
    Termination-Cause               ::= 295 /*8.15 */  Enumerated  M|P| |  V  |N;

    /**
     * The User-Name AVP (AVP Code 1) [RADIUS] is of type UTF8String, which
     * contains the User-Name, in a format consistent with the NAI
     * specification [NAI].
     */
    User-Name                       ::=   1 /*8.14 */  UTF8String  M|P| |  V  |Y;

    /**
     * The Vendor-Id AVP (AVP Code 266) is of type Unsigned32 and contains
     * the IANA "SMI Network Management Private Enterprise Codes" [ASSIGNNO]
     * value assigned to the vendor of the Diameter application.  In
     * combination with the Supported-Vendor-Id AVP (Section 5.3.6), this
     * MAY be used in order to know which vendor specific attributes may be
     * sent to the peer.  It is also envisioned that the combination of the
     * Vendor-Id, Product-Name (Section 5.3.7) and the Firmware-Revision
     * (Section 5.3.4) AVPs MAY provide very useful debugging information.
     * <p>
     * A Vendor-Id value of zero in the CER or CEA messages is reserved and
     * indicates that this field is ignored.
     */
    Vendor-Id                       ::= 266 /*5.3.3*/  Unsigned32  M|P| |  V  |N;

    /**
     * The Vendor-Specific-Application-Id AVP (AVP Code 260) is of type
     * Grouped and is used to advertise support of a vendor-specific
     * Diameter Application.  Exactly one of the Auth-Application-Id and
     * Acct-Application-Id AVPs MAY be present.
     * <p>
     * This AVP MUST also be present as the first AVP in all experimental
     * commands defined in the vendor-specific application.
     */
    Vendor-Specific-Application-Id  ::= 260 /*6.11 */  Grouped     M|P| |  V  |N;
   
    /*
     *AVPs used for charging
    */
    CC-Sub-Session-Id               ::= 419 /*RFC4006*/Unsigned32  M|P| |  V  |Y;
    G-S-U-Pool-Identifier           ::= 453 /*RFC4006*/Unsigned32  M|P| |  V  |Y;
    Service-Identifier              ::= 439 /*RFC4006*/UTF8String  M|P| |  V  |Y;
    Rating-Group                    ::= 432 /*RFC4006*/Unsigned32  M|P| |  V  |Y;

    /**
     * CC-Request-Type AVP (AVP Code 416) is of type enumerated and contains 
     * the reason for sending the Credit-Control request message.
    */
    CC-Request-Type                 ::= 416  /* 8.3 */ Enumerated  M|P| |  V  |Y;  /* RFC4006 */
                                                                                
    /**
     * CC-Request-Number AVP (AVP Code 415) is of type Unsigned32 and 
     * identifies this request within one session. As Session-Id AVPs are 
     * globally unique,the combination of Session-Id and CC-Request-Number is
     * also globally unique and can be used in matching credit-control messages
     * with confirmations.
    */
    CC-Request-Number               ::= 415  /* 8.2 */ Unsigned32  M|P| |  V  |Y;  /* RFC4006 */

    /**
     * Subscription-Id AVP(AVP Code 443) is of type Grouped and is used to 
     * identity the end user's subscription.
    */
    Subscription-Id                 ::= 443  /*8.46 */ Grouped     M|P| |  V  |Y;  /* RFC4006 */
                                                                                
    /**
     * Subscription-Id-Type AVP (AVP Code 450) is of type Enumerated and it is
     * used to determine which type of identifier is carried by the 
     * Subscription-Id AVP.
    */
    Subscription-Id-Type            ::= 450  /*8.47 */ Enumerated  M|P| |  V  |Y;  /* RFC4006 */                                                                                 

    /**
     * Subscription-Id-Data AVP (AVP Code 444) is of type UTF8String and is 
     * used to identify the end user.
     */
    Subscription-Id-Data            ::= 444  /*8.48 */ UTF8String  M|P| |  V  |Y;  /* RFC4006 */

    /**
     * The Framed-IP-Address AVP (AVP Code 8) is of type OctetString and 
     * contains an IPv4 address of the type specified in attribute value to be
     * configured for the user. It MAY be used in an authorization request as a
     * hint to server that a specific address is desired, but the server is not
     * required to honor the hint in the corresponding response.
     * Two values have special significance: 0xFFFFFFFF and 0xFFFFFFFE. The 
     * value 0xFFFFFFFF indicates that the NAS should allow the user to select
     * an address (i.e:negotiated). The value 0xFFFFFFFE indicates that NAS
     * should select an address for the user (e.g:assigned from a pool of
     * addresses kept by NAS).
    */
    Framed-IP-Address               ::= 8  /* 6.11.1*/ OctetString M|P| |  V  |Y;  /* RFC 4005 */
                                                                                
    /**
     * The Framed-IPv6-Prefix AVP (AVP Code 97) is of type OctetString and 
     * contains the IPv6 prefix to be configured for the user. One or more AVPs
     * MAY be used in authorization requests as hint to the server that 
     * specific IPv6 prefixes are desired, but the server is not required to 
     * honor the hint in the corresponding response.
    */
    Framed-IPv6-Prefix              ::= 97  /*6.11.6*/ OctetString M|P| |  V  |Y;  /* RFC 4005 */

    /**
     * The User-Equipment-Info AVP (AVP Code 458) is of type Grouped and allows
     * the credit-control client to indicate the identity and capability of the 
     * terminal the subscriber is using for the connection to network.
    */
    User-Equipment-Info             ::= 458  /* 8.49*/ Grouped      |P,M| | V |Y;  /* RFC4006 */
                                                                                
    /**
     * The User-Equipment-Info-Type AVP (AVP Code 459) is of type Enumerated 
     * and defines the type of user equipment information contained in the 
     * User-Equipment-Info-Value AVP.
    */
    User-Equipment-Info-Type        ::= 459  /* 8.50*/ Enumerated   |P,M| | V |Y;  /* RFC4006 */

    /**
     * The User-Equipment-Info-Value AVP (AVP Code 460) is of type OctetString.
     * The User-Equipment-Info-Type AVP defines which type of identifier is 
     * used.
    */
    User-Equipment-Info-Value       ::= 460  /* 8.51*/ OctetString  |P,M| | V |Y;  /* RFC4006 */

    /**
     * The Called-Station-Id AVP (AVP Code 30) is of type UTF8String and allows
     * the NAS to send the ASCII string describing the layer 2 address the user
     * contacted in the request. For dialup access,this can be a phone number,
     * obtained using Dialed Number identification (DNIS) or a similar 
     * technology.
     * Note that this may be different from the phone number the call comes on. 
     * For the use with IEEE 802 access,the Called-Station-Id MAY contain a MAC 
     * address formatted as described in RAD802.1X.
    */
    Called-Station-Id               ::= 30   /* 4.5 */ UTF8String  M|P| |  V  |Y;  /* RFC 4005*/



    //////////////////
    // Enumerations //
    //////////////////

    Accounting-Realtime-Required ::= < Enumerated: 483 >
                DELIVER_AND_GRANT   1
                GRANT_AND_STORE     2
                GRANT_AND_LOSE      3
                ;

    Accounting-Record-Type ::= < Enumerated: 480 >
                EVENT_RECORD    1
                START_RECORD    2
                INTERIM_RECORD  3
                STOP_RECORD     4
                ;

    Auth-Request-Type ::= < Enumerated: 274 >
                AUTHENTICATE_ONLY       1
                AUTHORIZE_ONLY          2
                AUTHORIZE_AUTHENTICATE  3
                ;

    Auth-Session-State ::= < Enumerated: 277 >
                STATE_MAINTAINED        0
                NO_STATE_MAINTAINED     1
                ;

    Re-Auth-Request-Type ::= < Enumerated: 285 >
                AUTHORIZE_ONLY          0
                AUTHORIZE_AUTHENTICATE  1
                ;

    Disconnect-Cause ::= < Enumerated: 273 >
                REBOOTING                   0
                BUSY                        1
                DO_NOT_WANT_TO_TALK_TO_YOU  2
                ;

    Redirect-Host-Usage ::= < Enumerated: 261 >
                DONT_CACHE              0
                ALL_SESSION             1
                ALL_REALM               2
                REALM_AND_APPLICATION   3
                ALL_APPLICATION         4
                ALL_HOST                5
                ALL_USER                6
                ;

    Session-Server-Failover ::= < Enumerated: 271 >
                REFUSE_SERVICE          0
                TRY_AGAIN               1
                ALLOW_SERVICE           2
                TRY_AGAIN_ALLOW_SERVICE 3
                ;

    Termination-Cause ::= < Enumerated: 295 >
                /**
                 * The user initiated a disconnect
                 */
                DIAMETER_LOGOUT                 1
                /**
                 * This value is used when the user disconnected prior to the receipt
                 * of the authorization answer message.
                 */
                DIAMETER_SERVICE_NOT_PROVIDED   2
                /**
                 * This value indicates that the authorization answer received by the
                 * access device was not processed successfully.
                 */
                DIAMETER_BAD_ANSWER             3
                /**
                 * The user was not granted access, or was disconnected, due to
                 * administrative reasons, such as the receipt of a Abort-Session-
                 * Request message.
                 */
                DIAMETER_ADMINISTRATIVE         4
                /**
                 * The communication to the user was abruptly disconnected.
                 */
                DIAMETER_LINK_BROKEN            5
                /**
                 * The user's access was terminated since its authorized session time
                 * has expired.
                 */
                DIAMETER_AUTH_EXPIRED           6
                /**
                 * The user is receiving services from another access device.
                 */
                DIAMETER_USER_MOVED             7
                /**
                 * The user's session has timed out, and service has been terminated.
                 */
                DIAMETER_SESSION_TIMEOUT        8
                ;

    CC-Request-Type ::= < Enumerated: 416 >
                INITIAL_REQUEST       1
                UPDATE_REQUEST        2
                TERMINATION_REQUEST   3
                EVENT_REQUEST         4
                ;  

    Subscription-Id-Type ::= < Enumerated: 450 >
                END_USER_E164             0
                END_USER_IMSI             1
                END_USER_SIP_URI          2
                END_USER_NAI              3
                END_USER_PRIVATE          4
                ;

    User-Equipment-Info-Type ::= < Enumerated: 459 >
                IMEISV         0
                MAC            1
                EUI64          2
                MODIFIED_EUI64 3
                ;


    //////////////////
    // Grouped AVPs //
    //////////////////


  //E2E-Sequence                    ::= 300 /*6.15 */  Grouped     M|P| |  V  |Y;

    /**
     * Experimental-Result
     */
    Experimental-Result ::= < AVP Header: 297 >
                { Vendor-Id }
                { Experimental-Result-Code }
                ;

    Failed-AVP ::= < AVP Header: 279 >
             1* { AVP }
                ;

    Proxy-Info ::= < AVP Header: 284 >
                { Proxy-Host }
                { Proxy-State }
              * [ AVP ]
                ;

    Vendor-Specific-Application-Id ::= < AVP Header: 260 >
             1* { Vendor-Id }
             0*1{ Auth-Application-Id }
             0*1{ Acct-Application-Id }
                ;

    Subscription-Id ::= < AVP Header: 443 >
                { Subscription-Id-Type }
                { Subscription-Id-Data }
                ;

    User-Equipment-Info ::= < AVP Header: 458 >
                { User-Equipment-Info-Type }
                { User-Equipment-Info-Value }
                ;


    //////////////
    // Commands //
    //////////////

    PROXYABLE-ERROR ::= < Diameter Header: 0, PXY >
             0*1< Session-Id >
                { Origin-Host }
                { Origin-Realm }
                { Result-Code } 
                [ Origin-State-Id ]
                [ Error-Reporting-Host ]
                [ Proxy-Info ]
              * [ AVP ]
                ; 

    NON-PROXYABLE-ERROR ::= < Diameter Header: 0 >
             0*1< Session-Id >
                { Origin-Host }
                { Origin-Realm }
                { Result-Code }
                [ Origin-State-Id ]
                [ Error-Reporting-Host ]
                [ Proxy-Info ]
              * [ AVP ]
                ;

    /**
     * The Capabilities-Exchange-Request (CER), indicated by the Command-
     * Code set to 257 and the Command Flags' 'R' bit set, is sent to
     * exchange local capabilities.  Upon detection of a transport failure,
     * this message MUST NOT be sent to an alternate peer.
     * <p>
     * When Diameter is run over SCTP [SCTP], which allows for connections
     * to span multiple interfaces and multiple IP addresses, the
     * Capabilities-Exchange-Request message MUST contain one Host-IP-
     * Address AVP for each potential IP address that MAY be locally used
     * when transmitting Diameter messages.
     */
    Capabilities-Exchange-Request<CER> ::= < Diameter Header: 257, REQ >
                { Origin-Host }
                { Origin-Realm }
             1* { Host-IP-Address }
                { Vendor-Id }
                { Product-Name }
                [ Origin-State-Id ]
              * [ Supported-Vendor-Id ]
              * [ Auth-Application-Id ]
              * [ Inband-Security-Id ]
              * [ Acct-Application-Id ]
              * [ Vendor-Specific-Application-Id ]
                [ Firmware-Revision ]
              * [ AVP ]
                ;

    /**
     * The Capabilities-Exchange-Answer (CEA), indicated by the Command-Code
     * set to 257 and the Command Flags' 'R' bit cleared, is sent in
     * response to a CER message.
     * <p>
     * When Diameter is run over SCTP [SCTP], which allows connections to
     * span multiple interfaces, hence, multiple IP addresses, the
     * Capabilities-Exchange-Answer message MUST contain one Host-IP-Address
     * AVP for each potential IP address that MAY be locally used when
     * transmitting Diameter messages.
     */
    Capabilities-Exchange-Answer<CEA> ::= < Diameter Header: 257 >
                { Result-Code }
                { Origin-Host }
                { Origin-Realm }
             1* { Host-IP-Address }
                { Vendor-Id }
                { Product-Name }
                [ Origin-State-Id ]
                [ Error-Message ]
              * [ Failed-AVP ]
              * [ Supported-Vendor-Id ]
              * [ Auth-Application-Id ]
              * [ Inband-Security-Id ]
              * [ Acct-Application-Id ]
              * [ Vendor-Specific-Application-Id ]
                [ Firmware-Revision ]
              * [ AVP ]
                ;

    /**
     * The Disconnect-Peer-Request (DPR), indicated by the Command-Code set
     * to 282 and the Command Flags' 'R' bit set, is sent to a peer to
     * inform its intentions to shutdown the transport connection.  Upon
     * detection of a transport failure, this message MUST NOT be sent to an
     * alternate peer.
     */
    Disconnect-Peer-Request<DPR>  ::= < Diameter Header: 282, REQ >
                { Origin-Host }
                { Origin-Realm }
                { Disconnect-Cause }
                ;

    /**
     * The Disconnect-Peer-Answer (DPA), indicated by the Command-Code set
     * to 282 and the Command Flags' 'R' bit cleared, is sent as a response
     * to the Disconnect-Peer-Request message.  Upon receipt of this
     * message, the transport connection is shutdown.
     */
    Disconnect-Peer-Answer<DPA>  ::= < Diameter Header: 282 >
                { Result-Code }
                { Origin-Host }
                { Origin-Realm }
                [ Error-Message ]
              * [ Failed-AVP ]
                ;

    /**
     * The Device-Watchdog-Request (DWR), indicated by the Command-Code set
     * to 280 and the Command Flags' 'R' bit set, is sent to a peer when no
     * traffic has been exchanged between two peers (see Section 5.5.3).
     * Upon detection of a transport failure, this message MUST NOT be sent
     * to an alternate peer.
     */
    Device-Watchdog-Request<DWR>  ::= < Diameter Header: 280, REQ >
                { Origin-Host }
                { Origin-Realm }
                [ Origin-State-Id ]
                ;

    /**
     * The Device-Watchdog-Answer (DWA), indicated by the Command-Code set
     * to 280 and the Command Flags' 'R' bit cleared, is sent as a response
     * to the Device-Watchdog-Request message.
     */
    Device-Watchdog-Answer<DWA>  ::= < Diameter Header: 280 >
                { Result-Code }
                { Origin-Host }
                { Origin-Realm }
                [ Error-Message ]
              * [ Failed-AVP ]
                [ Origin-State-Id ]
                ;

    /**
     * The Session-Termination-Request (STR), indicated by the Command-Code
     * set to 275 and the Command Flags' 'R' bit set, is sent by the access
     * device to inform the Diameter Server that an authenticated and/or
     * authorized session is being terminated.
     */
    Session-Termination-Request<STR> ::= < Diameter Header: 275, REQ, PXY >
                < Session-Id >
                { Origin-Host }
                { Origin-Realm }
                { Destination-Realm }
                { Auth-Application-Id }
                { Termination-Cause }
                [ User-Name ]
                [ Destination-Host ]
              * [ Class ]
                [ Origin-State-Id ]
              * [ Proxy-Info ]
              * [ Route-Record ]
              * [ AVP ]
                ;

    /**
     * The Session-Termination-Answer (STA), indicated by the Command-Code
     * set to 275 and the message flags' 'R' bit clear, is sent by the
     * Diameter Server to acknowledge the notification that the session has
     * been terminated.  The Result-Code AVP MUST be present, and MAY
     * contain an indication that an error occurred while servicing the STR.
     * <p>
     * Upon sending or receipt of the STA, the Diameter Server MUST release
     * all resources for the session indicated by the Session-Id AVP.  Any
     * intermediate server in the Proxy-Chain MAY also release any
     * resources, if necessary.
     */
    Session-Termination-Answer<STA>  ::= < Diameter Header: 275, PXY >
                < Session-Id >
                { Result-Code }
                { Origin-Host }
                { Origin-Realm }
                [ User-Name ]
              * [ Class ]
                [ Error-Message ]
                [ Error-Reporting-Host ]
              * [ Failed-AVP ]
                [ Origin-State-Id ]
              * [ Redirect-Host ]
                [ Redirect-Host-Usage ]
                [ Redirect-Max-Cache-Time ]
              * [ Proxy-Info ]
              * [ AVP ]
                ;

    /**
     * The Abort-Session-Request (ASR), indicated by the Command-Code set to
     * 274 and the message flags' 'R' bit set, may be sent by any server to
     * the access device that is providing session service, to request that
     * the session identified by the Session-Id be stopped.
     */
    Abort-Session-Request<ASR>  ::= < Diameter Header: 274, REQ, PXY >
                < Session-Id >
                { Origin-Host }
                { Origin-Realm }
                { Destination-Realm }
                { Destination-Host }
                { Auth-Application-Id }
                [ User-Name ]
                [ Origin-State-Id ]
              * [ Proxy-Info ]
              * [ Route-Record ]
              * [ AVP ]
                ;

    /**
     * The Abort-Session-Answer (ASA), indicated by the Command-Code set to
     * 274 and the message flags' 'R' bit clear, is sent in response to the
     * ASR.  The Result-Code AVP MUST be present, and indicates the
     * disposition of the request.
     * <p>
     * If the session identified by Session-Id in the ASR was successfully
     * terminated, Result-Code is set to DIAMETER_SUCCESS.  If the session
     * is not currently active, Result-Code is set to
     * DIAMETER_UNKNOWN_SESSION_ID.  If the access device does not stop the
     * session for any other reason, Result-Code is set to
     * DIAMETER_UNABLE_TO_COMPLY.
     */
    Abort-Session-Answer<ASA>  ::= < Diameter Header: 274, PXY >
                < Session-Id >
                { Result-Code }
                { Origin-Host }
                { Origin-Realm }
                [ User-Name ]
                [ Origin-State-Id ]
                [ Error-Message ]
                [ Error-Reporting-Host ]
              * [ Failed-AVP ]
              * [ Redirect-Host ]
                [ Redirect-Host-Usage ]
                [ Redirect-Max-Cache-Time ]
              * [ Proxy-Info ]
              * [ AVP ]
                ;

