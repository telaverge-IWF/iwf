#include<iostream>
#include<sstream>
#include <string>
#include <Sync.h>
#include <PluginObj.h>
#include <diameter/Command.h>
#include <DiameterDictionary.h>
#include <DictionaryTable.h>

using namespace diameter;

unsigned char DiaMsg276[] = 
	{0x01, 0x00, 0x01, 0x14, 0xc0, 0x00, 0x01, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x03, 0xe9,
	0x00, 0x00, 0x07, 0xd1, 0x00, 0x00, 0x01, 0x07, 0x40, 0x00, 0x00, 0x32, 0x73, 0x65, 0x61, 0x67,
	0x75, 0x6c, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x2e, 0x69, 0x6e, 0x74, 0x65, 0x6c,
	0x6c, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x3b, 0x31, 0x30, 0x39, 0x36, 0x32, 0x39,
	0x38, 0x33, 0x39, 0x31, 0x3b, 0x31, 0x00, 0x00, 0x00, 0x00, 0x01, 0x08, 0x40, 0x00, 0x00, 0x16,
	0x73, 0x65, 0x61, 0x67, 0x75, 0x6c, 0x6c, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x41, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x28, 0x40, 0x00, 0x00, 0x16, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x6e,
	0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x01, 0x1b, 0x40, 0x00, 0x00, 0x16,
	0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x69, 0x6e, 0x65, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x00, 0x00,
	0x00, 0x00, 0x01, 0x02, 0x40, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x01, 0xcd,
	0x40, 0x00, 0x00, 0x16, 0x32, 0x39, 0x32, 0x31, 0x33, 0x40, 0x33, 0x67, 0x70, 0x70, 0x2e, 0x6f,
	0x72, 0x67, 0x00, 0x00, 0x00, 0x00, 0x01, 0xa0, 0x40, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x01,
	0x00, 0x00, 0x01, 0x9f, 0x40, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01,
	0x40, 0x00, 0x00, 0x19, 0x61, 0x6c, 0x69, 0x63, 0x65, 0x40, 0x61, 0x74, 0x6c, 0x61, 0x6e, 0x74,
	0x61, 0x2e, 0x63, 0x6f, 0x6d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xbb, 0x40, 0x00, 0x00, 0x2c,
	0x00, 0x00, 0x01, 0xc2, 0x40, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0xbc,
	0x40, 0x00, 0x00, 0x17, 0x34, 0x30, 0x34, 0x31, 0x32, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30, 0x30,
	0x30, 0x30, 0x31, 0x00};

int main()
{
	DictionaryTable dictTable;
	std::stringstream dir;
	std::stringstream out;

	 dir << getenv("IMS_ROOT") << "/api/c++/lib/";
	PluginLoader::SetPluginDir(dir.str());
	unsigned int dictId = dictTable.loadDictionary("gyrel10apiD");
	cout <<"Dictionary with id "<< dictId << " loaded successfully" << endl;

	DiameterDictionaryRef dictRef = dictTable.fetchDictionaryObject("gyrel10apiD");
	if(dictRef.IsNull())
	{
		cout << "Dictionary gyrel10apiD has been unloaded" << endl;
	}

	Command* cmd = dictRef->createCommandObject(DiaMsg276,sizeof(DiaMsg276));
	cmd->formDiameterMessageForRuleEngine(out);

	cout << "Formatted msg is " << out.str() << endl;

	dictTable.unloadDictionary("gyrel10apiD");
	dictRef = dictTable.fetchDictionaryObject("gyrel10apiD");
	if(dictRef.IsNull())
	{
		cout << "Dictionary gyrel10apiD has been unloaded" << endl;
	}

}
