/* **********************************************************************
*                                                                       *
* Copyright (c) 1996 Natural MicroSystems Corp.  All rights reserved.   *
* Generated by User Definable Parameter  ( Version 1.0 )                *
* exported udpGenerateParameterSourceFiles() function.                  *
*                                                                       *
* ********************************************************************* */
                                     
                                     
#ifndef NCCXMFSESPPARM_DEFINED       
#define NCCXMFSESPPARM_DEFINED       
                                     
#include "ctadef.h"                  
                                     
#ifdef __cplusplus                   
extern "C"                           
{                                    
#endif                               
                                     
                                     
#define    NCC_SVCID    0x1C         
                                     
#define    NCC_ADI_MFS_PARMID    0x1C0117
                                     
typedef struct                       
{                                    
    DWORD    size;                   
    WORD    DIDnumber;               /* 0 the expected number of DID          */
    WORD    ANInumber;               /* 1 the expected number of ANI          */
    WORD    RTCdigitnumber;          /* 2 digits the network expects          */
    WORD    playbusyonreject;        /* 3 do we play busy when                */
                                     /*  rejecting a call? If not, the        */
                                     /*  switch does it for us                */
                                     /*  (0=do not play, 1=play)              */
    WORD    playcleardowntone;       /* 4 play clear down tone:               */
                                     /*   0=don't play; 1=play                */
    WORD    trunkdirection;          /* 5 direction of the trunk              */
                                     /*   0=default is two-way                */
                                     /*   1=trunk is inbound only             */
                                     /*   2=trunk is outbound only            */
    WORD    anifirst;                /* 6 inbound collects ANI first,         */
                                     /*   then DID                            */
    WORD    twooffivesignaling;      /* 7 set to 1 if using 2 of 5            */
                                     /*   signaling                           */
    WORD    emulatenetwork;          /* 8 CPE is default  (set to 1           */
                                     /*   for network or PSTN)                */
    WORD    timerT1;                 /* 9 timer T1                            */
    WORD    timerT2;                 /*10 timer T2                            */
    WORD    timerT3;                 /*11 timer T3                            */
    WORD    timerT4;                 /*12 timer T4                            */
    WORD    timerT5;                 /*13 timer T5                            */
    WORD    timerT6;                 /*14 timer T6                            */
    WORD    bitsqualtime;            /*15 time to qualify bit changes         */
    WORD    releaseguardtime;        /*16 release guard wink min time         */
    WORD    clearbacktime1;          /*17 rel.guard recognition time          */
                                     /*    if inbound clears first            */
    WORD    clearbacktime2;          /*18 rel.guard recognition time          */
                                     /*    if outbound clears first           */
    WORD    answertime;              /*19 outbound answer timer (s)           */
    WORD    tnGAPSTNsendallDID;      /*20 backward PSTN Group A tone:         */
                                     /*   send all DID digits                 */
    WORD    tnGAPSTNsendallANI;      /*21 backward PSTN Group A tone:         */
                                     /*   send all ANI digits                 */
    WORD    tnGAPSTNswitchtoG2;      /*22 backward PSTN Group A tone:         */
                                     /*   switch to Group II signaling        */
    WORD    tnGAPSTNsendCallCategory;/*23 backward PSTN Group A tone:         */
                                     /*   send the call category              */
    WORD    tnCongestionGroupA;      /*24 congestion in Group A               */
    WORD    tnANInotavailable;       /*25 ANI not available                   */
    WORD    tnCongestionGroupB;      /*26 congestion in Group B               */
    WORD    tnGBlinefree;            /*27 backward Group B tone:              */
                                     /*   line free, billing                  */
    WORD    tnGBlinebusy;            /*28 backward Group B tone:              */
                                     /*   line busy                           */
    WORD    tnGBunallocatednumber;   /*29 backward Group B tone:              */
                                     /*   unallocated number                  */
    WORD    tnGBendofselection;      /*30 backward Group B tone:              */
                                     /*   end of selection                    */
    WORD    tnGACPEsenddigitGBC;     /*31 backward CPE Group A tones:         */
                                     /*   send Digit Group BC                 */
    WORD    tnGACPEsendallANI;       /*32 backward CPE Group A tones:         */
                                     /*   send all ANI digits                 */
    WORD    tnGACPEswitchtoGII;      /*33 backward CPE Group A tones:         */
                                     /*   go to Group II                      */
    WORD    tndefaultoutcategory;    /*34 default outbound category           */
    WORD    compelledtonelevel;      /*35 amplitude of cmpl'd tones           */
    WORD    congestiontones;         /*36 tones in a fast busy cycle          */
    WORD    congestionofftime2;      /*37 busy-off time 2                     */
    WORD    alarmsonqualtime;        /*38 qualification for alarm (on)        */
    WORD    alarmsoffqualtime;       /*39 qualification for alarm (off)       */
}    NCC_ADI_MFS_PARMS;              
                                     
extern const CTAPARM_DESC * const _nccParmDescTable[];
                                     
                                     
#ifdef __cplusplus                   
}                                    
#endif                               
                                     
#endif                               

