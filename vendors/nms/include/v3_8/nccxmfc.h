/* **********************************************************************
*                                                                       *
* Copyright (c) 1996 Natural MicroSystems Corp.  All rights reserved.   *
* Generated by User Definable Parameter  ( Version 1.0 )                *
* exported udpGenerateParameterSourceFiles() function.                  *
*                                                                       *
* ********************************************************************* */
                                     
                                     
#ifndef NCCXMFCPARM_DEFINED          
#define NCCXMFCPARM_DEFINED          
                                     
#include "ctadef.h"                  
                                     
#ifdef __cplusplus                   
extern "C"                           
{                                    
#endif                               
                                     
                                     
#define    NCC_SVCID    0x1C         
                                     
#define    NCC_ADI_MFC_PARMID    0x1C0116
                                     
typedef struct                       
{                                    
    DWORD    size;                   
    WORD    DIDnumber;               /* 0 the expected number of DID          */
    WORD    ANInumber;               /* 1 the expected number of ANI          */
    WORD    DIDBeforeANI;            /* 2 DID to request before ANI           */
    WORD    nobusyonReject;          /* 3 do we play busy when                */
                                     /*   rejecting a call? If not, the       */
                                     /*   switch does it for us               */
                                     /*   (1=do not play, 0=play)             */
    WORD    trunkdirection;          /* 4 direction of the trunk              */
                                     /*   0=default is two-way                */
                                     /*   1=trunk is inbound only             */
                                     /*   2=trunk is outbound only            */
    WORD    cleardowntone;           /* 5 0=don't play cleardown tone         */
                                     /*   1= play cleardown tone              */
    WORD    detectnetworkAudio;      /* 6 perform call progress in any        */
                                     /*   case when the network accepts       */
                                     /*   the call                            */
    WORD    answerGroupA;            /* 7 answer the call with Group A        */
                                     /*   tone                                */
    WORD    compelledT1;             /* 8 T1, compelled timer                 */
    WORD    compelledT2;             /* 9 T2, compelled timer                 */
    WORD    compelledT3;             /*10 T3, compelled timer                 */
    WORD    releaseguardtime;        /*11 release guard timer                 */
    WORD    inqualidletime;          /*12 inbound bit qualification           */
                                     /*   time in idle                        */
    WORD    inqualcompeltime;        /*13 inbound bit qualification           */
                                     /*   time during complled sequence       */
    WORD    inqualconnectedtime;     /*14 inbound bit qualification           */
                                     /*   time during connected               */
    WORD    outqualidletime;         /*15 outbound bit qualification          */
                                     /*   time in idle                        */
    WORD    outqualcompeltime;       /*16 outbound bit qualification          */
                                     /*   time during complled sequence       */
    WORD    outqualconnectedtime;    /*17 outbound bit qualification          */
                                     /*   time during connected               */
    WORD    seizureacktime;          /*18 outbound timer waiting for          */
                                     /*   seizure acknowledge                 */
    WORD    answertime;              /*19 outbound timer waiting for          */
                                     /*   answer                              */
    WORD    inboundreleasetime;      /*20 min length of inbound release       */
                                     /*   signal to distinguish from          */
                                     /*   billing pulses                      */
    WORD    tnGAsendnextDID;         /*21 Group A tone: send next DID         */
    WORD    tnGAsendCAT;             /*22 Group A tone: send category         */
    WORD    tnGAsendnextANI;         /*23 Group A tone: send next ANI         */
    WORD    tnGAswitchtoGB;          /*24 Group A tone: got to Group B        */
    WORD    tnGBcongestion;          /*25 Group B tone: congestion            */
    WORD    tnGBunallocnumber;       /*26 Group B tone: unalloc. number       */
    WORD    tnGBlinebusy;            /*27 Group B tone: line busy             */
    WORD    tnGBlineoutoforder;      /*28 Group B tone: line out of           */
                                     /*   order                               */
    WORD    tnDIDeoi;                /*29 tones for end of info for DID       */
    WORD    tnNoCategory;            /*30 tones for end of info for Cat       */
                                     /*   If category is compulsory =>0       */
    WORD    tnANIeoi;                /*31 tones for end of info ANI           */
    WORD    tnANIeoirestrictCID;     /*32 tones for end of info when          */
                                     /*   ANIs are restricted                 */
    WORD    tnanswerGBtoll;          /*33 backward answer tone:               */
                                     /*   specifies that the call is          */
                                     /*   charged                             */
    WORD    tnanswerGBfree;          /*34 backward answer tone:               */
                                     /*   specifies that the call is          */
                                     /*   free                                */
    WORD    tnanswerGA;              /*35 backward answer tone:               */
                                     /*   from Group A                        */
    WORD    tnaltGB;                 /*36 backward answer tone:               */
                                     /*   alternative, from Group B           */
    WORD    tnoutGIIcategory;        /*37 outbound Group II cat.              */
    WORD    tnGIcategory;            /*38 the default user category           */
    WORD    tnGIANInotavailable;     /*39 tone, no ANI available              */
    WORD    tnGBmessagefollows;      /*40 tone preceding SIT                  */
    WORD    tnRepeatLastMinus1DID;   /*41 outbound repeat tone:n-1 DID        */
    WORD    tnRepeatLastMinus2DID;   /*42 outbound repeat tone:n-2 DID        */
    WORD    tnRepeatLastMinus3DID;   /*43 outbound repeat tone:n-3 DID        */
    WORD    tnRepeatAllDID;          /*44 outbound repeat tone:all DID        */
    WORD    tnSendNextDIDfromANI;    /*45 request the next DID while          */
                                     /*   receieving ANI                      */
    WORD    tnRepeatLastDID;         /*46 switches to request DID from        */
                                     /*   ANI, but asks for the last          */
                                     /*   one dialed                          */
    WORD    tnSpecifyCircuit;        /*47 tone specifying the nature          */
                                     /*   of the circuit connection           */
    WORD    tnCheckEchoSuppress;     /*48 tone inbound sends to ask if        */
                                     /*   a half-echo suppressor is           */
                                     /*   needed                              */
    WORD    compelledtonelevel;      /*49 amplitude of cmpl tones             */
    WORD    bmCDbit;                 /*50 what to put out on the line         */
                                     /*   as C and D bits                     */
    WORD    bmnodigitbehavior;       /*51 defines outbound behavior           */
                                     /*   when all the digits have been       */
                                     /*   dialed                              */
    WORD    bmringfaults;            /*52 faulty bit states while             */
                                     /*   playing ring:                       */
                                     /*   0=ignore; 1=care                    */
    WORD    meteringbit;             /*53 set the bit on which to             */
                                     /*   receive metering pulsees:           */
                                     /*   a=A-bit; b=B-bit; c=C-bit;          */
                                     /*   0=none.                             */
    WORD    postdialdelay;           /*54 time outbound is not allowed        */
                                     /*   to dial after a call.               */
    WORD    bmhangupbyreleaseguard;  /*55 expect a clearback after            */
                                     /*   connected                           */
                                     /*   1=yes; 0=no;                        */
    WORD    bmsetsimwindow;          /*56 sets the spread between 2 bit       */
                                     /*   changes considered to be            */
                                     /*   simultaneous                        */
                                     /*   0=simultaneous; 1=5ms.              */
    WORD    bmrequirehalfecho;       /*57 half-echo suppression needed        */
                                     /*   on international lines              */
    WORD    bmIndia;                 /*58 running India                       */
    WORD    bmaltEOI;                /*59 Alternate method for EOI            */
    WORD    bmIgnoreNonNumeric;      /*60 Do not pass back non-numeric        */
                                     /*   address digits for DNIS             */
    WORD    validDIDmask;            /*61 16 tones; 1=valid, 0=not            */
    WORD    validANImask;            /*62 16 tones; 1=valid, 0=not            */
    WORD    validcategorymask;       /*63 16 tones; 1=valid, 0=not            */
    WORD    validgroupIImask;        /*64 16 tones; 1=valid, 0=not            */
    WORD    catnoANImask;            /*65 16 tones; 1=valid, 0=not            */
    WORD    tnNoSatellite;           /*66 in case of a non-sattelite          */
                                     /*   circuit, default outbound           */
                                     /*   tone in response to the             */
                                     /*   request about the nature            */
                                     /*   of the circuit                      */
    WORD    tnSatellite;             /*67 in case of a sattelite              */
                                     /*   circuit, default outbound           */
                                     /*   tone in response to the             */
                                     /*   request about the nature            */
                                     /*   of the circuit                      */
    WORD    tnEchoSuppressorRequired;/*68 if half-echo suppression is         */
                                     /*   needed on international lines       */
                                     /*   tone sent in response to the        */
                                     /*   inbound request.                    */
    WORD    reanswerdelay;           /*69 time before reanswer                */
    WORD    reanswerpulsetime;       /*70 length of reanswer pulse            */
    WORD    alarmsonqualtime;        /*71 qualification for alarm (on)        */
    WORD    alarmsoffqualtime;       /*72 qualification for alarm (off)       */
    WORD    GroupIIT1Timer;          /*73 T1 compelled timer for sending      */
                                     /*   Group II category (secs)            */

}    NCC_ADI_MFC_PARMS;
                                     
extern const CTAPARM_DESC * const _nccParmDescTable[];
                                     
                                     
#ifdef __cplusplus                   
}                                    
#endif                               
                                     
#endif                               

