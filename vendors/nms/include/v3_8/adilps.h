/* **********************************************************************
*                                                                       *
* Copyright (c) 1996 Natural MicroSystems Corp.  All rights reserved.   *
* Generated by User Definable Parameter  ( Version 1.0 )                *
* exported udpGenerateParameterSourceFiles() function.                  *
*                                                                       *
* ********************************************************************* */
                                     
                                     
#ifndef ADILPSPARM_DEFINED           
#define ADILPSPARM_DEFINED           
                                     
#include "ctadef.h"                  
                                     
#ifdef __cplusplus                   
extern "C"                           
{                                    
#endif                               

#define    ADI_LPS_PARMID    0x10014 
                                     
typedef struct                       
{                                    
    DWORD    size;                   
    WORD    cleardownflag;           /* 0, 1 = cleardown enabled, 0 = disabled*/
    WORD    qualloopoff;             /* 1, Qualification time of loop-off     */
    WORD    ringdetectmode;          /* 2, 0=Level sens 1=Freq sens           */
    WORD    qualringon;              /* 3, qualification time of ring begin   */
    WORD    qualringoff;             /* 4, qualification time of ring end     */
    WORD    freqringlow;             /* 5, low  freq cut-off in Hz (1 to 250) */
    WORD    freqringhigh;            /* 6, high freq cut-off in Hz (1 to 250) */
    WORD    freqringperiods;         /* 7, candidate periods avg'd to qual.   */
                                     /*    (1-8)                              */
    WORD    freqdeglitchtime;        /* 8, periods to deglitch(8=1ms);        */
                                     /*    must be>=2                         */
    WORD    freqtolerance;           /* 9, percent tolerance (1-100;<50       */
                                     /*    is good                            */
    WORD    ringsigmintime;          /*10, inbound minimum ring time (+qual)  */
    WORD    ringsigmaxtime;          /*11, inbound maximum ring time (+qual)  */
    WORD    interringmaxtime;        /*12, inbound max between ring-begins    */
    WORD    numrings;                /*13, when alert user of incoming call:  */
                                     /*    0 = 1st ring begin;                */
                                     /*    1 = 1st ring end;                  */
                                     /*    n = after n rings;                 */
    WORD    dialtonewaittime;        /*14, maximum wait for dial-tone         */
    WORD    dialtonemintime;         /*15, minimum dial-tone duration required*/
    WORD    nodialtoneaction;        /*16, what to do if no dialtone:         */
#define ADILPS_NO_DT_DISCONNECT 0    /*    disconnect (hangup)                */
#define ADILPS_NO_DT_PROCEED    1    /*    proceed anyways (continue dialing) */
#define ADILPS_NO_DT_OFFERCALL  2    /*    offer as an incoming call          */
    WORD    xfersupport;             /*17, indicates if PBX xfer supported    */
    WORD    cidsupport;              /*18, 0 = CID disabled ; 1 = CID enabled */
    WORD    reversalmode;            /*19, meaning of a loop current reversal:*/
#define ADILPS_REVERSAL_NONE    0    /*    no loop current reversal           */
#define ADILPS_REVERSAL_ANSWER  1    /*    reversal indicates remote answer   */
#define ADILPS_REVERSAL_HANGUP  2    /*    reversal indicates remote hangup   */
#define ADILPS_REVERSAL_BOTH    3    /*    reversal indicates answer & hangup */
    WORD    releaseguardtime;        /*20, minimum time between hangup &      */
                                     /*    offhook                            */
    WORD    CIDtype;                 /*21, the CID type:                      */
#define ADILPS_CID_BELL         0    /* US (BellCore)                         */
#define ADILPS_CID_NTT          1    /* Japan                                 */
#define ADILPS_CID_ETSI         2    /* France                                */
    WORD    CIDmaxwaittime;          /*22, Maximum time to wait for           */
                                     /*    Caller ID to arrive before         */
                                     /*    concluding the caller hangup.      */
    char    xferstring[6];           /*23, default xfer string, = "!;"        */
    char    connstring[6];           /*26, default reconnect string, = "!"    */
    WORD    CIDalertmaxtime;         /*29, Maximum duration of an alert signal*/
                                     /*    in Caller ID protocol.             */
                                     /*    (if CID is enabled)                */
    WORD    qualreversal;            /*30, Qualification time for loop current*/
                                     /*    reversal event.                    */
    WORD    polaranswertime;         /*31, Wait time after answering a call   */
                                     /*    before you start detecting the     */
                                     /*    loop current polarity reversal on  */
                                     /*    Far-End disconnect                 */
                                     /*    (if reversalmode = 2 or 3).        */
    WORD    polardialtime;           /*32, Wait time after receiving the      */
                                     /*    dial tone before reading the loop  */
                                     /*    current polarity (if reversal      */
                                     /*    mode = 1 or 3).                    */
    WORD    CIDminmarktime;          /*33, CID minimum mark time              */
}    ADI_LPS_PARMS;                  
                                     
extern const CTAPARM_DESC * const _adiParmDescTable[];
                                     
                                     
#ifdef __cplusplus                   
}                                    
#endif                               
                                     
#endif                               

