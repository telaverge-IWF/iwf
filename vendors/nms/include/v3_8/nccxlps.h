/* **********************************************************************
*                                                                       *
* Copyright (c) 1996 Natural MicroSystems Corp.  All rights reserved.   *
* Generated by User Definable Parameter  ( Version 1.0 )                *
* exported udpGenerateParameterSourceFiles() function.                  *
*                                                                       *
* ********************************************************************* */
                                     
                                     
#ifndef NCCXLPSUSAPARM_DEFINED       
#define NCCXLPSUSAPARM_DEFINED       
                                     
#include "ctadef.h"                  
                                     
#ifdef __cplusplus                   
extern "C"                           
{                                    
#endif                               
                                     
                                     
#define    NCC_SVCID    0x1C         
                                     
#define    NCC_ADI_LPS_PARMID    0x1C0115
                                     
typedef struct                       
{                                    
    DWORD    size;                   
    WORD    qualloopoff;             /* 0 bit qual time                       */
    WORD    ringdetectmode;          /* 1 level or frequency                  */
    WORD    qualringon;              /* 2 freq ring on                        */
    WORD    qualringoff;             /* 3 freq ring off                       */
    WORD    freqringlow;             /* 4 low frequency of ring               */
    WORD    freqringhigh;            /* 5 high frequency of ring              */
    WORD    freqringperiods;         /* 6 periods for freq. ring det          */
    WORD    freqdeglitchtime;        /* 7 deglitch time for freq. ring det    */
    WORD    freqtolerance;           /* 8 max variation of frequency          */
    WORD    ringsigmintime;          /* 9 min time for ring to be on          */
    WORD    ringsigmaxtime;          /*10 max time for ring to be on          */
    WORD    interringmaxtime;        /*11 max time between rings              */
    WORD    ringstoincoming;         /*12 number of rings to incoming call    */
    WORD    dialtonewaittime;        /*13 max time to wait for dialtone       */
    WORD    dialtonemintime;         /*14 min time dialtone must be on        */
    WORD    cleardownflag;           /*15 1 = cleardown enabled, 0 = disabled */
    WORD    nodialtoneaction;        /*16 what to do if no dialtone           */
    WORD    xfersupport;             /*17 does the TCP support transfer?      */
    WORD    cidsupport;              /*18 does the TCP support CID?           */
    WORD    reversalmode;            /*19 mode for polarity reversal          */
    WORD    releaseguardtime;        /*20 time to hold release guard          */
    WORD    CIDtype;                 /*21 type of caller id protocol          */
    WORD    CIDmaxwaittime;          /*22 max wait time for CID               */
    WORD    CIDalertmaxtime;         /*23 max "alert" signal in CID           */
    WORD    CIDminmarktime;          /*24 min "mark" signal in CID            */
    WORD    qualreversal;            /*25 qual time for polarity reversal     */
    WORD    polaranswertime;         /*26 time of polarity reversal to        */
                                     /*   qualify answer                      */
    WORD    polardialtime;           /*27 time after dial tone started        */
                                     /*   before measuring the polarity       */
    char    xferstring[6];           /*28 what to dial to ask a transfer      */
    char    connstring[6];           /*29 what to dial to retrieve a call     */
}    NCC_ADI_LPS_PARMS;              
                                     
extern const CTAPARM_DESC * const _nccParmDescTable[];
                                     
                                     
#ifdef __cplusplus                   
}                                    
#endif                               
                                     
#endif                               

