//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_MAP_V13_PGW_INTERFACE_LIST_H_)
#define _MAP_V13_PGW_INTERFACE_LIST_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnBitString.h>



namespace map_v13 {



class PGW_InterfaceList : public its::AsnBitString
{
public:

    PGW_InterfaceList() : its::AsnBitString(false)
    {
        Initialize();
    }

    PGW_InterfaceList(const std::vector<bool>& array) : its::AsnBitString(array, false)
    {
        Initialize();
    }

    PGW_InterfaceList(its::Octets& octets) : its::AsnBitString(false)
    {
        Initialize();
        Decode(octets);
    }

    PGW_InterfaceList(const PGW_InterfaceList& rhs) : its::AsnBitString(rhs)
    {
        // Nothing to do.
    }

    PGW_InterfaceList(its::AsnDescObject* description) : its::AsnBitString(description)
    {
        // Nothing to do.
    }

    PGW_InterfaceList(its::AsnDescObject* description, const std::vector<bool>& array) : its::AsnBitString(description, array)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

public:

    virtual ~PGW_InterfaceList()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new PGW_InterfaceList(*this);
    }

    virtual std::string GetName() const
    { return "PGW_InterfaceList"; }

    void SetSgi()
    { Set(7); }

    void ResetSgi()
    { Reset(7); }

    bool IsSgiSet() const
    { return IsSet(7); }

    bool IsSgiDefined() const
    { return 7 < GetSize(); }

    void SetS8b()
    { Set(6); }

    void ResetS8b()
    { Reset(6); }

    bool IsS8bSet() const
    { return IsSet(6); }

    bool IsS8bDefined() const
    { return 6 < GetSize(); }

    void SetGx()
    { Set(5); }

    void ResetGx()
    { Reset(5); }

    bool IsGxSet() const
    { return IsSet(5); }

    bool IsGxDefined() const
    { return 5 < GetSize(); }

    void SetS6b()
    { Set(4); }

    void ResetS6b()
    { Reset(4); }

    bool IsS6bSet() const
    { return IsSet(4); }

    bool IsS6bDefined() const
    { return 4 < GetSize(); }

    void SetS5()
    { Set(3); }

    void ResetS5()
    { Reset(3); }

    bool IsS5Set() const
    { return IsSet(3); }

    bool IsS5Defined() const
    { return 3 < GetSize(); }

    void SetS2c()
    { Set(2); }

    void ResetS2c()
    { Reset(2); }

    bool IsS2cSet() const
    { return IsSet(2); }

    bool IsS2cDefined() const
    { return 2 < GetSize(); }

    void SetS2b()
    { Set(1); }

    void ResetS2b()
    { Reset(1); }

    bool IsS2bSet() const
    { return IsSet(1); }

    bool IsS2bDefined() const
    { return 1 < GetSize(); }

    void SetS2a()
    { Set(0); }

    void ResetS2a()
    { Reset(0); }

    bool IsS2aSet() const
    { return IsSet(0); }

    bool IsS2aDefined() const
    { return 0 < GetSize(); }

};



} // namespace.

#endif    // !defined(_MAP_V13_PGW_INTERFACE_LIST_H_)

