//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_MAP_V2_MAP_ACCEPT_INFO_H_)
#define _MAP_V2_MAP_ACCEPT_INFO_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnSequence.h>



namespace map_v2 {



class MAP_AcceptInfo : public its::AsnSequence
{
public:


////////// Begin Nested Class(es) //////////


////////// End Nested Class(es) //////////

    MAP_AcceptInfo() : its::AsnSequence(0, false)
    {
        Initialize();
    }

    MAP_AcceptInfo(its::Octets& octets) : its::AsnSequence(0, false)
    {
        Initialize();
        Decode(octets);
    }

    MAP_AcceptInfo(const MAP_AcceptInfo& rhs) : its::AsnSequence(rhs)
    {
        // Nothing to do.
    }

    MAP_AcceptInfo(its::AsnDescObject* description) : its::AsnSequence(0, description)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

public:

    virtual ~MAP_AcceptInfo()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new MAP_AcceptInfo(*this);
    }

    virtual std::string GetName() const
    { return "MAP_AcceptInfo"; }

};



} // namespace.

#endif    // !defined(_MAP_V2_MAP_ACCEPT_INFO_H_)

