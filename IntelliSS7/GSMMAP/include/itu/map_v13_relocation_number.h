//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_MAP_V13_RELOCATION_NUMBER_H_)
#define _MAP_V13_RELOCATION_NUMBER_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnSequence.h>
#include <AsnOctetString.h>
#include <AsnInteger.h>

#include <map_v13_isdn_address_string.h>
#include <map_v13_rab_id.h>



namespace map_v13 {



class RelocationNumber : public its::AsnSequence
{
public:


////////// Begin Nested Class(es) //////////


        typedef map_v13::ISDN_AddressString ISDN_AddressString;


        typedef map_v13::RAB_Id RAB_Id;


////////// End Nested Class(es) //////////

    RelocationNumber() : its::AsnSequence(2, false)
    {
        Initialize();
    }

    RelocationNumber(its::Octets& octets) : its::AsnSequence(2, false)
    {
        Initialize();
        Decode(octets);
    }

    RelocationNumber(const RelocationNumber& rhs) : its::AsnSequence(rhs)
    {
        // Nothing to do.
    }

    RelocationNumber(its::AsnDescObject* description) : its::AsnSequence(2, description)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

    static its::AsnDescObject* GetHandoverNumberStaticDescription();
    static its::AsnDescObject* GetRab_IdStaticDescription();

public:

    virtual ~RelocationNumber()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new RelocationNumber(*this);
    }

    virtual std::string GetName() const
    { return "RelocationNumber"; }

    void SetHandoverNumber(ISDN_AddressString* element)
    {
        ITS_REQUIRE(element != NULL);
        element->AsnObject::SetDescription(GetHandoverNumberStaticDescription());
        AddElement(0, element);
    }

    void SetHandoverNumber(const ISDN_AddressString& element)
    {
        its::AsnObject& asnObject = const_cast<ISDN_AddressString&>(element);
        asnObject.SetDescription(GetHandoverNumberStaticDescription());
        AddElement(0, element);
    }

    const ISDN_AddressString& GetHandoverNumber() const
    {
        return static_cast<const ISDN_AddressString&> (ElementAt(0));
    }

    void SetRab_Id(RAB_Id* element)
    {
        ITS_REQUIRE(element != NULL);
        element->AsnObject::SetDescription(GetRab_IdStaticDescription());
        AddElement(1, element);
    }

    void SetRab_Id(const RAB_Id& element)
    {
        its::AsnObject& asnObject = const_cast<RAB_Id&>(element);
        asnObject.SetDescription(GetRab_IdStaticDescription());
        AddElement(1, element);
    }

    const RAB_Id& GetRab_Id() const
    {
        return static_cast<const RAB_Id&> (ElementAt(1));
    }

};



} // namespace.

#endif    // !defined(_MAP_V13_RELOCATION_NUMBER_H_)

