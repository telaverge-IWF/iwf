//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_MAP_V9_SPECIFIC_CSI_WITHDRAW_H_)
#define _MAP_V9_SPECIFIC_CSI_WITHDRAW_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnBitString.h>



namespace map_v9 {



class SpecificCSI_Withdraw : public its::AsnBitString
{
public:

    SpecificCSI_Withdraw() : its::AsnBitString(false)
    {
        Initialize();
    }

    SpecificCSI_Withdraw(const std::vector<bool>& array) : its::AsnBitString(array, false)
    {
        Initialize();
    }

    SpecificCSI_Withdraw(its::Octets& octets) : its::AsnBitString(false)
    {
        Initialize();
        Decode(octets);
    }

    SpecificCSI_Withdraw(const SpecificCSI_Withdraw& rhs) : its::AsnBitString(rhs)
    {
        // Nothing to do.
    }

    SpecificCSI_Withdraw(its::AsnDescObject* description) : its::AsnBitString(description)
    {
        // Nothing to do.
    }

    SpecificCSI_Withdraw(its::AsnDescObject* description, const std::vector<bool>& array) : its::AsnBitString(description, array)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

public:

    virtual ~SpecificCSI_Withdraw()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new SpecificCSI_Withdraw(*this);
    }

    virtual std::string GetName() const
    { return "SpecificCSI_Withdraw"; }

    void SetVt_IM_CSI()
    { Set(13); }

    void ResetVt_IM_CSI()
    { Reset(13); }

    bool IsVt_IM_CSISet() const
    { return IsSet(13); }

    bool IsVt_IM_CSIDefined() const
    { return 13 < GetSize(); }

    void SetD_IM_CSI()
    { Set(12); }

    void ResetD_IM_CSI()
    { Reset(12); }

    bool IsD_IM_CSISet() const
    { return IsSet(12); }

    bool IsD_IM_CSIDefined() const
    { return 12 < GetSize(); }

    void SetO_IM_CSI()
    { Set(11); }

    void ResetO_IM_CSI()
    { Reset(11); }

    bool IsO_IM_CSISet() const
    { return IsSet(11); }

    bool IsO_IM_CSIDefined() const
    { return 11 < GetSize(); }

    void SetMg_csi()
    { Set(10); }

    void ResetMg_csi()
    { Reset(10); }

    bool IsMg_csiSet() const
    { return IsSet(10); }

    bool IsMg_csiDefined() const
    { return 10 < GetSize(); }

    void SetMt_sms_csi()
    { Set(9); }

    void ResetMt_sms_csi()
    { Reset(9); }

    bool IsMt_sms_csiSet() const
    { return IsSet(9); }

    bool IsMt_sms_csiDefined() const
    { return 9 < GetSize(); }

    void SetT_csi()
    { Set(8); }

    void ResetT_csi()
    { Reset(8); }

    bool IsT_csiSet() const
    { return IsSet(8); }

    bool IsT_csiDefined() const
    { return 8 < GetSize(); }

    void SetGprs_csi()
    { Set(7); }

    void ResetGprs_csi()
    { Reset(7); }

    bool IsGprs_csiSet() const
    { return IsSet(7); }

    bool IsGprs_csiDefined() const
    { return 7 < GetSize(); }

    void SetM_csi()
    { Set(6); }

    void ResetM_csi()
    { Reset(6); }

    bool IsM_csiSet() const
    { return IsSet(6); }

    bool IsM_csiDefined() const
    { return 6 < GetSize(); }

    void SetMo_sms_csi()
    { Set(5); }

    void ResetMo_sms_csi()
    { Reset(5); }

    bool IsMo_sms_csiSet() const
    { return IsSet(5); }

    bool IsMo_sms_csiDefined() const
    { return 5 < GetSize(); }

    void SetVt_csi()
    { Set(4); }

    void ResetVt_csi()
    { Reset(4); }

    bool IsVt_csiSet() const
    { return IsSet(4); }

    bool IsVt_csiDefined() const
    { return 4 < GetSize(); }

    void SetD_csi()
    { Set(3); }

    void ResetD_csi()
    { Reset(3); }

    bool IsD_csiSet() const
    { return IsSet(3); }

    bool IsD_csiDefined() const
    { return 3 < GetSize(); }

    void SetTif_csi()
    { Set(2); }

    void ResetTif_csi()
    { Reset(2); }

    bool IsTif_csiSet() const
    { return IsSet(2); }

    bool IsTif_csiDefined() const
    { return 2 < GetSize(); }

    void SetSs_csi()
    { Set(1); }

    void ResetSs_csi()
    { Reset(1); }

    bool IsSs_csiSet() const
    { return IsSet(1); }

    bool IsSs_csiDefined() const
    { return 1 < GetSize(); }

    void SetO_csi()
    { Set(0); }

    void ResetO_csi()
    { Reset(0); }

    bool IsO_csiSet() const
    { return IsSet(0); }

    bool IsO_csiDefined() const
    { return 0 < GetSize(); }

};



} // namespace.

#endif    // !defined(_MAP_V9_SPECIFIC_CSI_WITHDRAW_H_)

