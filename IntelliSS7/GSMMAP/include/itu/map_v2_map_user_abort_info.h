//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_MAP_V2_MAP_USER_ABORT_INFO_H_)
#define _MAP_V2_MAP_USER_ABORT_INFO_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnSequence.h>
#include <AsnChoice.h>

#include <map_v2_map_user_abort_choice.h>



namespace map_v2 {



class MAP_UserAbortInfo : public its::AsnSequence
{
public:


////////// Begin Nested Class(es) //////////


        typedef map_v2::MAP_UserAbortChoice MAP_UserAbortChoice;


////////// End Nested Class(es) //////////

    MAP_UserAbortInfo() : its::AsnSequence(1, false)
    {
        Initialize();
    }

    MAP_UserAbortInfo(its::Octets& octets) : its::AsnSequence(1, false)
    {
        Initialize();
        Decode(octets);
    }

    MAP_UserAbortInfo(const MAP_UserAbortInfo& rhs) : its::AsnSequence(rhs)
    {
        // Nothing to do.
    }

    MAP_UserAbortInfo(its::AsnDescObject* description) : its::AsnSequence(1, description)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

    static its::AsnDescObject* GetMap_UserAbortChoiceStaticDescription();

public:

    virtual ~MAP_UserAbortInfo()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new MAP_UserAbortInfo(*this);
    }

    virtual std::string GetName() const
    { return "MAP_UserAbortInfo"; }

    void SetMap_UserAbortChoice(MAP_UserAbortChoice* element)
    {
        ITS_REQUIRE(element != NULL);
        element->AsnObject::SetDescription(GetMap_UserAbortChoiceStaticDescription());
        AddElement(0, element);
    }

    void SetMap_UserAbortChoice(const MAP_UserAbortChoice& element)
    {
        its::AsnObject& asnObject = const_cast<MAP_UserAbortChoice&>(element);
        asnObject.SetDescription(GetMap_UserAbortChoiceStaticDescription());
        AddElement(0, element);
    }

    const MAP_UserAbortChoice& GetMap_UserAbortChoice() const
    {
        return static_cast<const MAP_UserAbortChoice&> (ElementAt(0));
    }

};



} // namespace.

#endif    // !defined(_MAP_V2_MAP_USER_ABORT_INFO_H_)

