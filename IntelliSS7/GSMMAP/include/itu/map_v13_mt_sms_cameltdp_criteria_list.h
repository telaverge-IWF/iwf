//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_MAP_V13_MT_SMS_CAMELTDP_CRITERIA_LIST_H_)
#define _MAP_V13_MT_SMS_CAMELTDP_CRITERIA_LIST_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnSequenceOf.h>
#include <AsnSequence.h>

#include <map_v13_mt_sms_cameltdp_criteria.h>



namespace map_v13 {



class MT_smsCAMELTDP_CriteriaList : public its::AsnSequenceOf
{
public:


////////// Begin Nested Class //////////


        typedef map_v13::MT_smsCAMELTDP_Criteria MT_smsCAMELTDP_Criteria;


////////// End Nested Class //////////

    MT_smsCAMELTDP_CriteriaList() : its::AsnSequenceOf(false)
    {
        Initialize();
    }

    MT_smsCAMELTDP_CriteriaList(its::Octets& octets) : its::AsnSequenceOf(false)
    {
        Initialize();
        Decode(octets);
    }

    MT_smsCAMELTDP_CriteriaList(const MT_smsCAMELTDP_CriteriaList& rhs) : its::AsnSequenceOf(rhs)
    {
        // Nothing to do.
    }

    MT_smsCAMELTDP_CriteriaList(its::AsnDescObject* description) : its::AsnSequenceOf(description)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

    static its::AsnDescObject* GetMT_smsCAMELTDP_CriteriaStaticDescription();

public:

    virtual ~MT_smsCAMELTDP_CriteriaList()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new MT_smsCAMELTDP_CriteriaList(*this);
    }

    virtual std::string GetName() const
    { return "MT_smsCAMELTDP_CriteriaList"; }

    void AddElement(MT_smsCAMELTDP_Criteria* element)
    {
        ITS_REQUIRE(element != NULL);
        element->AsnObject::SetDescription(GetMT_smsCAMELTDP_CriteriaStaticDescription());
        AsnSequenceOf::AddElement(element);
    }

    void AddElement(const MT_smsCAMELTDP_Criteria& element)
    {
        its::AsnObject& asnObject = const_cast<MT_smsCAMELTDP_Criteria&>(element);
        asnObject.SetDescription(GetMT_smsCAMELTDP_CriteriaStaticDescription());
        AsnSequenceOf::AddElement(element);
    }

    const MT_smsCAMELTDP_Criteria& ElementAt(int index) const
    {
        return static_cast<const MT_smsCAMELTDP_Criteria&> (AsnSequenceOf::ElementAt(index));
    }

};



} // namespace.

#endif    // !defined(_MAP_V13_MT_SMS_CAMELTDP_CRITERIA_LIST_H_)

