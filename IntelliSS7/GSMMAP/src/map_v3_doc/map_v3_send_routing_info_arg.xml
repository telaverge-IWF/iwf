<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SendRoutingInfoArg</className>
<asnTypeName>SendRoutingInfoArg</asnTypeName>
<moduleName>MAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetMsisdn</name>
<signature>void SetMsisdn(ISDN_AddressString* element)</signature>
<elmentName>Msisdn</elmentName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsisdn</name>
<signature>void SetMsisdn(const ISDN_AddressString&amp; element)</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsisdn</name>
<signature>const ISDN_AddressString&amp; GetMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCug_CheckInfo</name>
<signature>void SetCug_CheckInfo(CUG_CheckInfo* element)</signature>
<elmentName>Cug_CheckInfo</elmentName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCug_CheckInfo</name>
<signature>void SetCug_CheckInfo(const CUG_CheckInfo&amp; element)</signature>
<elementName>Cug_CheckInfo</elementName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCug_CheckInfo</name>
<signature>const CUG_CheckInfo&amp; GetCug_CheckInfo() const</signature>
<elementName>Cug_CheckInfo</elementName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCug_CheckInfo</name>
<signature>bool OptionCug_CheckInfo() const</signature>
<elementName>Cug_CheckInfo</elementName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNumberOfForwarding</name>
<signature>void SetNumberOfForwarding(NumberOfForwarding* element)</signature>
<elmentName>NumberOfForwarding</elmentName>
<asnElementName>numberOfForwarding</asnElementName>
<elementTypeName>NumberOfForwarding</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNumberOfForwarding</name>
<signature>void SetNumberOfForwarding(const NumberOfForwarding&amp; element)</signature>
<elementName>NumberOfForwarding</elementName>
<asnElementName>numberOfForwarding</asnElementName>
<elementTypeName>NumberOfForwarding</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNumberOfForwarding</name>
<signature>const NumberOfForwarding&amp; GetNumberOfForwarding() const</signature>
<elementName>NumberOfForwarding</elementName>
<asnElementName>numberOfForwarding</asnElementName>
<elementTypeName>NumberOfForwarding</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNumberOfForwarding</name>
<signature>bool OptionNumberOfForwarding() const</signature>
<elementName>NumberOfForwarding</elementName>
<asnElementName>numberOfForwarding</asnElementName>
<elementTypeName>NumberOfForwarding</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetInterrogationType</name>
<signature>void SetInterrogationType(InterrogationType* element)</signature>
<elmentName>InterrogationType</elmentName>
<asnElementName>interrogationType</asnElementName>
<elementTypeName>InterrogationType</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetInterrogationType</name>
<signature>void SetInterrogationType(const InterrogationType&amp; element)</signature>
<elementName>InterrogationType</elementName>
<asnElementName>interrogationType</asnElementName>
<elementTypeName>InterrogationType</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetInterrogationType</name>
<signature>const InterrogationType&amp; GetInterrogationType() const</signature>
<elementName>InterrogationType</elementName>
<asnElementName>interrogationType</asnElementName>
<elementTypeName>InterrogationType</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetOr_Interrogation</name>
<signature>void SetOr_Interrogation(Or_Interrogation* element)</signature>
<elmentName>Or_Interrogation</elmentName>
<asnElementName>or-Interrogation</asnElementName>
<elementTypeName>Or_Interrogation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOr_Interrogation</name>
<signature>void SetOr_Interrogation(const Or_Interrogation&amp; element)</signature>
<elementName>Or_Interrogation</elementName>
<asnElementName>or-Interrogation</asnElementName>
<elementTypeName>Or_Interrogation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOr_Interrogation</name>
<signature>const Or_Interrogation&amp; GetOr_Interrogation() const</signature>
<elementName>Or_Interrogation</elementName>
<asnElementName>or-Interrogation</asnElementName>
<elementTypeName>Or_Interrogation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionOr_Interrogation</name>
<signature>bool OptionOr_Interrogation() const</signature>
<elementName>Or_Interrogation</elementName>
<asnElementName>or-Interrogation</asnElementName>
<elementTypeName>Or_Interrogation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetOr_Capability</name>
<signature>void SetOr_Capability(OR_Phase* element)</signature>
<elmentName>Or_Capability</elmentName>
<asnElementName>or-Capability</asnElementName>
<elementTypeName>OR_Phase</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOr_Capability</name>
<signature>void SetOr_Capability(const OR_Phase&amp; element)</signature>
<elementName>Or_Capability</elementName>
<asnElementName>or-Capability</asnElementName>
<elementTypeName>OR_Phase</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOr_Capability</name>
<signature>const OR_Phase&amp; GetOr_Capability() const</signature>
<elementName>Or_Capability</elementName>
<asnElementName>or-Capability</asnElementName>
<elementTypeName>OR_Phase</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionOr_Capability</name>
<signature>bool OptionOr_Capability() const</signature>
<elementName>Or_Capability</elementName>
<asnElementName>or-Capability</asnElementName>
<elementTypeName>OR_Phase</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGmsc_Address</name>
<signature>void SetGmsc_Address(ISDN_AddressString* element)</signature>
<elmentName>Gmsc_Address</elmentName>
<asnElementName>gmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGmsc_Address</name>
<signature>void SetGmsc_Address(const ISDN_AddressString&amp; element)</signature>
<elementName>Gmsc_Address</elementName>
<asnElementName>gmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGmsc_Address</name>
<signature>const ISDN_AddressString&amp; GetGmsc_Address() const</signature>
<elementName>Gmsc_Address</elementName>
<asnElementName>gmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCallReferenceNumber</name>
<signature>void SetCallReferenceNumber(CallReferenceNumber* element)</signature>
<elmentName>CallReferenceNumber</elmentName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallReferenceNumber</name>
<signature>void SetCallReferenceNumber(const CallReferenceNumber&amp; element)</signature>
<elementName>CallReferenceNumber</elementName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallReferenceNumber</name>
<signature>const CallReferenceNumber&amp; GetCallReferenceNumber() const</signature>
<elementName>CallReferenceNumber</elementName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCallReferenceNumber</name>
<signature>bool OptionCallReferenceNumber() const</signature>
<elementName>CallReferenceNumber</elementName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetForwardingReason</name>
<signature>void SetForwardingReason(ForwardingReason* element)</signature>
<elmentName>ForwardingReason</elmentName>
<asnElementName>forwardingReason</asnElementName>
<elementTypeName>ForwardingReason</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetForwardingReason</name>
<signature>void SetForwardingReason(const ForwardingReason&amp; element)</signature>
<elementName>ForwardingReason</elementName>
<asnElementName>forwardingReason</asnElementName>
<elementTypeName>ForwardingReason</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetForwardingReason</name>
<signature>const ForwardingReason&amp; GetForwardingReason() const</signature>
<elementName>ForwardingReason</elementName>
<asnElementName>forwardingReason</asnElementName>
<elementTypeName>ForwardingReason</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionForwardingReason</name>
<signature>bool OptionForwardingReason() const</signature>
<elementName>ForwardingReason</elementName>
<asnElementName>forwardingReason</asnElementName>
<elementTypeName>ForwardingReason</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBasicServiceGroup</name>
<signature>void SetBasicServiceGroup(Ext_BasicServiceCode* element)</signature>
<elmentName>BasicServiceGroup</elmentName>
<asnElementName>basicServiceGroup</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBasicServiceGroup</name>
<signature>void SetBasicServiceGroup(const Ext_BasicServiceCode&amp; element)</signature>
<elementName>BasicServiceGroup</elementName>
<asnElementName>basicServiceGroup</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBasicServiceGroup</name>
<signature>const Ext_BasicServiceCode&amp; GetBasicServiceGroup() const</signature>
<elementName>BasicServiceGroup</elementName>
<asnElementName>basicServiceGroup</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBasicServiceGroup</name>
<signature>bool OptionBasicServiceGroup() const</signature>
<elementName>BasicServiceGroup</elementName>
<asnElementName>basicServiceGroup</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNetworkSignalInfo</name>
<signature>void SetNetworkSignalInfo(ExternalSignalInfo* element)</signature>
<elmentName>NetworkSignalInfo</elmentName>
<asnElementName>networkSignalInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNetworkSignalInfo</name>
<signature>void SetNetworkSignalInfo(const ExternalSignalInfo&amp; element)</signature>
<elementName>NetworkSignalInfo</elementName>
<asnElementName>networkSignalInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNetworkSignalInfo</name>
<signature>const ExternalSignalInfo&amp; GetNetworkSignalInfo() const</signature>
<elementName>NetworkSignalInfo</elementName>
<asnElementName>networkSignalInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNetworkSignalInfo</name>
<signature>bool OptionNetworkSignalInfo() const</signature>
<elementName>NetworkSignalInfo</elementName>
<asnElementName>networkSignalInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCamelInfo</name>
<signature>void SetCamelInfo(CamelInfo* element)</signature>
<elmentName>CamelInfo</elmentName>
<asnElementName>camelInfo</asnElementName>
<elementTypeName>CamelInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCamelInfo</name>
<signature>void SetCamelInfo(const CamelInfo&amp; element)</signature>
<elementName>CamelInfo</elementName>
<asnElementName>camelInfo</asnElementName>
<elementTypeName>CamelInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCamelInfo</name>
<signature>const CamelInfo&amp; GetCamelInfo() const</signature>
<elementName>CamelInfo</elementName>
<asnElementName>camelInfo</asnElementName>
<elementTypeName>CamelInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCamelInfo</name>
<signature>bool OptionCamelInfo() const</signature>
<elementName>CamelInfo</elementName>
<asnElementName>camelInfo</asnElementName>
<elementTypeName>CamelInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSuppressionOfAnnouncement</name>
<signature>void SetSuppressionOfAnnouncement(SuppressionOfAnnouncement* element)</signature>
<elmentName>SuppressionOfAnnouncement</elmentName>
<asnElementName>suppressionOfAnnouncement</asnElementName>
<elementTypeName>SuppressionOfAnnouncement</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSuppressionOfAnnouncement</name>
<signature>void SetSuppressionOfAnnouncement(const SuppressionOfAnnouncement&amp; element)</signature>
<elementName>SuppressionOfAnnouncement</elementName>
<asnElementName>suppressionOfAnnouncement</asnElementName>
<elementTypeName>SuppressionOfAnnouncement</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSuppressionOfAnnouncement</name>
<signature>const SuppressionOfAnnouncement&amp; GetSuppressionOfAnnouncement() const</signature>
<elementName>SuppressionOfAnnouncement</elementName>
<asnElementName>suppressionOfAnnouncement</asnElementName>
<elementTypeName>SuppressionOfAnnouncement</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSuppressionOfAnnouncement</name>
<signature>bool OptionSuppressionOfAnnouncement() const</signature>
<elementName>SuppressionOfAnnouncement</elementName>
<asnElementName>suppressionOfAnnouncement</asnElementName>
<elementTypeName>SuppressionOfAnnouncement</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SendRoutingInfoArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SendRoutingInfoArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    msisdn [0] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cug-CheckInfo [1] IMPLICIT CUG-CheckInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    numberOfForwarding [2] IMPLICIT NumberOfForwarding -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    interrogationType [3] IMPLICIT InterrogationType -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    or-Interrogation [4] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    or-Capability [5] IMPLICIT OR-Phase -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gmsc-Address [6] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callReferenceNumber [7] IMPLICIT CallReferenceNumber -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    forwardingReason [8] IMPLICIT ForwardingReason -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    basicServiceGroup [9] IMPLICIT Ext-BasicServiceCode -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    networkSignalInfo [10] IMPLICIT ExternalSignalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    camelInfo [11] IMPLICIT CamelInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    suppressionOfAnnouncement [12] IMPLICIT SuppressionOfAnnouncement -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [13] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

