<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnBitString>

<className>ODB_GeneralData</className>
<asnTypeName>ODB-GeneralData</asnTypeName>
<moduleName>MAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetMultipleECT_Barred</name>
<signature>void SetMultipleECT_Barred()</signature>
<bitName>MultipleECT_Barred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetMultipleECT_Barred</name>
<signature>void ResetMultipleECT_Barred()</signature>
<bitName>MultipleECT_Barred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsMultipleECT_BarredSet</name>
<signature>bool IsMultipleECT_BarredSet() const</signature>
<bitName>MultipleECT_Barred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsMultipleECT_BarredDefined</name>
<signature>bool IsMultipleECT_BarredDefined() const</signature>
<bitName>MultipleECT_Barred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetDoublyChargeableECT_Barred</name>
<signature>void SetDoublyChargeableECT_Barred()</signature>
<bitName>DoublyChargeableECT_Barred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetDoublyChargeableECT_Barred</name>
<signature>void ResetDoublyChargeableECT_Barred()</signature>
<bitName>DoublyChargeableECT_Barred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsDoublyChargeableECT_BarredSet</name>
<signature>bool IsDoublyChargeableECT_BarredSet() const</signature>
<bitName>DoublyChargeableECT_Barred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsDoublyChargeableECT_BarredDefined</name>
<signature>bool IsDoublyChargeableECT_BarredDefined() const</signature>
<bitName>DoublyChargeableECT_Barred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetInterzonalECT_Barred</name>
<signature>void SetInterzonalECT_Barred()</signature>
<bitName>InterzonalECT_Barred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetInterzonalECT_Barred</name>
<signature>void ResetInterzonalECT_Barred()</signature>
<bitName>InterzonalECT_Barred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsInterzonalECT_BarredSet</name>
<signature>bool IsInterzonalECT_BarredSet() const</signature>
<bitName>InterzonalECT_Barred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsInterzonalECT_BarredDefined</name>
<signature>bool IsInterzonalECT_BarredDefined() const</signature>
<bitName>InterzonalECT_Barred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetInternationalECT_Barred</name>
<signature>void SetInternationalECT_Barred()</signature>
<bitName>InternationalECT_Barred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetInternationalECT_Barred</name>
<signature>void ResetInternationalECT_Barred()</signature>
<bitName>InternationalECT_Barred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsInternationalECT_BarredSet</name>
<signature>bool IsInternationalECT_BarredSet() const</signature>
<bitName>InternationalECT_Barred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsInternationalECT_BarredDefined</name>
<signature>bool IsInternationalECT_BarredDefined() const</signature>
<bitName>InternationalECT_Barred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetChargeableECT_Barred</name>
<signature>void SetChargeableECT_Barred()</signature>
<bitName>ChargeableECT_Barred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetChargeableECT_Barred</name>
<signature>void ResetChargeableECT_Barred()</signature>
<bitName>ChargeableECT_Barred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsChargeableECT_BarredSet</name>
<signature>bool IsChargeableECT_BarredSet() const</signature>
<bitName>ChargeableECT_Barred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsChargeableECT_BarredDefined</name>
<signature>bool IsChargeableECT_BarredDefined() const</signature>
<bitName>ChargeableECT_Barred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetAllECT_Barred</name>
<signature>void SetAllECT_Barred()</signature>
<bitName>AllECT_Barred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetAllECT_Barred</name>
<signature>void ResetAllECT_Barred()</signature>
<bitName>AllECT_Barred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsAllECT_BarredSet</name>
<signature>bool IsAllECT_BarredSet() const</signature>
<bitName>AllECT_Barred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsAllECT_BarredDefined</name>
<signature>bool IsAllECT_BarredDefined() const</signature>
<bitName>AllECT_Barred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetSs_AccessBarred</name>
<signature>void SetSs_AccessBarred()</signature>
<bitName>Ss_AccessBarred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetSs_AccessBarred</name>
<signature>void ResetSs_AccessBarred()</signature>
<bitName>Ss_AccessBarred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsSs_AccessBarredSet</name>
<signature>bool IsSs_AccessBarredSet() const</signature>
<bitName>Ss_AccessBarred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsSs_AccessBarredDefined</name>
<signature>bool IsSs_AccessBarredDefined() const</signature>
<bitName>Ss_AccessBarred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetPremiumRateEntertainementOGCallsBarred</name>
<signature>void SetPremiumRateEntertainementOGCallsBarred()</signature>
<bitName>PremiumRateEntertainementOGCallsBarred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetPremiumRateEntertainementOGCallsBarred</name>
<signature>void ResetPremiumRateEntertainementOGCallsBarred()</signature>
<bitName>PremiumRateEntertainementOGCallsBarred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsPremiumRateEntertainementOGCallsBarredSet</name>
<signature>bool IsPremiumRateEntertainementOGCallsBarredSet() const</signature>
<bitName>PremiumRateEntertainementOGCallsBarred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsPremiumRateEntertainementOGCallsBarredDefined</name>
<signature>bool IsPremiumRateEntertainementOGCallsBarredDefined() const</signature>
<bitName>PremiumRateEntertainementOGCallsBarred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetPremiumRateInformationOGCallsBarred</name>
<signature>void SetPremiumRateInformationOGCallsBarred()</signature>
<bitName>PremiumRateInformationOGCallsBarred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetPremiumRateInformationOGCallsBarred</name>
<signature>void ResetPremiumRateInformationOGCallsBarred()</signature>
<bitName>PremiumRateInformationOGCallsBarred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsPremiumRateInformationOGCallsBarredSet</name>
<signature>bool IsPremiumRateInformationOGCallsBarredSet() const</signature>
<bitName>PremiumRateInformationOGCallsBarred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsPremiumRateInformationOGCallsBarredDefined</name>
<signature>bool IsPremiumRateInformationOGCallsBarredDefined() const</signature>
<bitName>PremiumRateInformationOGCallsBarred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetInterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarred</name>
<signature>void SetInterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarred()</signature>
<bitName>InterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetInterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarred</name>
<signature>void ResetInterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarred()</signature>
<bitName>InterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsInterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarredSet</name>
<signature>bool IsInterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarredSet() const</signature>
<bitName>InterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsInterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarredDefined</name>
<signature>bool IsInterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarredDefined() const</signature>
<bitName>InterzonalOGCallsAndInternationalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetInterzonalOGCallsNotToHPLMN_CountryBarred</name>
<signature>void SetInterzonalOGCallsNotToHPLMN_CountryBarred()</signature>
<bitName>InterzonalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetInterzonalOGCallsNotToHPLMN_CountryBarred</name>
<signature>void ResetInterzonalOGCallsNotToHPLMN_CountryBarred()</signature>
<bitName>InterzonalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsInterzonalOGCallsNotToHPLMN_CountryBarredSet</name>
<signature>bool IsInterzonalOGCallsNotToHPLMN_CountryBarredSet() const</signature>
<bitName>InterzonalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsInterzonalOGCallsNotToHPLMN_CountryBarredDefined</name>
<signature>bool IsInterzonalOGCallsNotToHPLMN_CountryBarredDefined() const</signature>
<bitName>InterzonalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetInterzonalOGCallsBarred</name>
<signature>void SetInterzonalOGCallsBarred()</signature>
<bitName>InterzonalOGCallsBarred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetInterzonalOGCallsBarred</name>
<signature>void ResetInterzonalOGCallsBarred()</signature>
<bitName>InterzonalOGCallsBarred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsInterzonalOGCallsBarredSet</name>
<signature>bool IsInterzonalOGCallsBarredSet() const</signature>
<bitName>InterzonalOGCallsBarred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsInterzonalOGCallsBarredDefined</name>
<signature>bool IsInterzonalOGCallsBarredDefined() const</signature>
<bitName>InterzonalOGCallsBarred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetInternationalOGCallsNotToHPLMN_CountryBarred</name>
<signature>void SetInternationalOGCallsNotToHPLMN_CountryBarred()</signature>
<bitName>InternationalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetInternationalOGCallsNotToHPLMN_CountryBarred</name>
<signature>void ResetInternationalOGCallsNotToHPLMN_CountryBarred()</signature>
<bitName>InternationalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsInternationalOGCallsNotToHPLMN_CountryBarredSet</name>
<signature>bool IsInternationalOGCallsNotToHPLMN_CountryBarredSet() const</signature>
<bitName>InternationalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsInternationalOGCallsNotToHPLMN_CountryBarredDefined</name>
<signature>bool IsInternationalOGCallsNotToHPLMN_CountryBarredDefined() const</signature>
<bitName>InternationalOGCallsNotToHPLMN_CountryBarred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetInternationalOGCallsBarred</name>
<signature>void SetInternationalOGCallsBarred()</signature>
<bitName>InternationalOGCallsBarred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetInternationalOGCallsBarred</name>
<signature>void ResetInternationalOGCallsBarred()</signature>
<bitName>InternationalOGCallsBarred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsInternationalOGCallsBarredSet</name>
<signature>bool IsInternationalOGCallsBarredSet() const</signature>
<bitName>InternationalOGCallsBarred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsInternationalOGCallsBarredDefined</name>
<signature>bool IsInternationalOGCallsBarredDefined() const</signature>
<bitName>InternationalOGCallsBarred</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetAllOG_CallsBarred</name>
<signature>void SetAllOG_CallsBarred()</signature>
<bitName>AllOG_CallsBarred</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetAllOG_CallsBarred</name>
<signature>void ResetAllOG_CallsBarred()</signature>
<bitName>AllOG_CallsBarred</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsAllOG_CallsBarredSet</name>
<signature>bool IsAllOG_CallsBarredSet() const</signature>
<bitName>AllOG_CallsBarred</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsAllOG_CallsBarredDefined</name>
<signature>bool IsAllOG_CallsBarredDefined() const</signature>
<bitName>AllOG_CallsBarred</bitName>
</memberFunctionIsDefined>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ODB-GeneralData information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ODB-GeneralData ::= BIT STRING</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    multipleECT-Barred(14),</text>
<shift></shift>
</line>
<line>
<text>    doublyChargeableECT-Barred(13),</text>
<shift></shift>
</line>
<line>
<text>    interzonalECT-Barred(12),</text>
<shift></shift>
</line>
<line>
<text>    internationalECT-Barred(11),</text>
<shift></shift>
</line>
<line>
<text>    chargeableECT-Barred(10),</text>
<shift></shift>
</line>
<line>
<text>    allECT-Barred(9),</text>
<shift></shift>
</line>
<line>
<text>    ss-AccessBarred(5),</text>
<shift></shift>
</line>
<line>
<text>    premiumRateEntertainementOGCallsBarred(4),</text>
<shift></shift>
</line>
<line>
<text>    premiumRateInformationOGCallsBarred(3),</text>
<shift></shift>
</line>
<line>
<text>    interzonalOGCallsAndInternationalOGCallsNotToHPLMN-CountryBarred(8),</text>
<shift></shift>
</line>
<line>
<text>    interzonalOGCallsNotToHPLMN-CountryBarred(7),</text>
<shift></shift>
</line>
<line>
<text>    interzonalOGCallsBarred(6),</text>
<shift></shift>
</line>
<line>
<text>    internationalOGCallsNotToHPLMN-CountryBarred(2),</text>
<shift></shift>
</line>
<line>
<text>    internationalOGCallsBarred(1),</text>
<shift></shift>
</line>
<line>
<text>    allOG-CallsBarred(0)</text>
<shift></shift>
</line>
<line>
<text>} (SIZE(15..32)) </text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnBitString>

</asnType>

