<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ProvideRoamingNumberArg</className>
<asnTypeName>ProvideRoamingNumberArg</asnTypeName>
<moduleName>MAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetMsc_Number</name>
<signature>void SetMsc_Number(ISDN_AddressString* element)</signature>
<elmentName>Msc_Number</elmentName>
<asnElementName>msc-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsc_Number</name>
<signature>void SetMsc_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>Msc_Number</elementName>
<asnElementName>msc-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsc_Number</name>
<signature>const ISDN_AddressString&amp; GetMsc_Number() const</signature>
<elementName>Msc_Number</elementName>
<asnElementName>msc-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetMsisdn</name>
<signature>void SetMsisdn(ISDN_AddressString* element)</signature>
<elmentName>Msisdn</elmentName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsisdn</name>
<signature>void SetMsisdn(const ISDN_AddressString&amp; element)</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsisdn</name>
<signature>const ISDN_AddressString&amp; GetMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMsisdn</name>
<signature>bool OptionMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLmsi</name>
<signature>void SetLmsi(LMSI* element)</signature>
<elmentName>Lmsi</elmentName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLmsi</name>
<signature>void SetLmsi(const LMSI&amp; element)</signature>
<elementName>Lmsi</elementName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLmsi</name>
<signature>const LMSI&amp; GetLmsi() const</signature>
<elementName>Lmsi</elementName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLmsi</name>
<signature>bool OptionLmsi() const</signature>
<elementName>Lmsi</elementName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGsm_BearerCapability</name>
<signature>void SetGsm_BearerCapability(ExternalSignalInfo* element)</signature>
<elmentName>Gsm_BearerCapability</elmentName>
<asnElementName>gsm-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGsm_BearerCapability</name>
<signature>void SetGsm_BearerCapability(const ExternalSignalInfo&amp; element)</signature>
<elementName>Gsm_BearerCapability</elementName>
<asnElementName>gsm-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGsm_BearerCapability</name>
<signature>const ExternalSignalInfo&amp; GetGsm_BearerCapability() const</signature>
<elementName>Gsm_BearerCapability</elementName>
<asnElementName>gsm-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGsm_BearerCapability</name>
<signature>bool OptionGsm_BearerCapability() const</signature>
<elementName>Gsm_BearerCapability</elementName>
<asnElementName>gsm-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNetworkSignalInfo</name>
<signature>void SetNetworkSignalInfo(ExternalSignalInfo* element)</signature>
<elmentName>NetworkSignalInfo</elmentName>
<asnElementName>networkSignalInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNetworkSignalInfo</name>
<signature>void SetNetworkSignalInfo(const ExternalSignalInfo&amp; element)</signature>
<elementName>NetworkSignalInfo</elementName>
<asnElementName>networkSignalInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNetworkSignalInfo</name>
<signature>const ExternalSignalInfo&amp; GetNetworkSignalInfo() const</signature>
<elementName>NetworkSignalInfo</elementName>
<asnElementName>networkSignalInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNetworkSignalInfo</name>
<signature>bool OptionNetworkSignalInfo() const</signature>
<elementName>NetworkSignalInfo</elementName>
<asnElementName>networkSignalInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSuppressionOfAnnouncement</name>
<signature>void SetSuppressionOfAnnouncement(SuppressionOfAnnouncement* element)</signature>
<elmentName>SuppressionOfAnnouncement</elmentName>
<asnElementName>suppressionOfAnnouncement</asnElementName>
<elementTypeName>SuppressionOfAnnouncement</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSuppressionOfAnnouncement</name>
<signature>void SetSuppressionOfAnnouncement(const SuppressionOfAnnouncement&amp; element)</signature>
<elementName>SuppressionOfAnnouncement</elementName>
<asnElementName>suppressionOfAnnouncement</asnElementName>
<elementTypeName>SuppressionOfAnnouncement</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSuppressionOfAnnouncement</name>
<signature>const SuppressionOfAnnouncement&amp; GetSuppressionOfAnnouncement() const</signature>
<elementName>SuppressionOfAnnouncement</elementName>
<asnElementName>suppressionOfAnnouncement</asnElementName>
<elementTypeName>SuppressionOfAnnouncement</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSuppressionOfAnnouncement</name>
<signature>bool OptionSuppressionOfAnnouncement() const</signature>
<elementName>SuppressionOfAnnouncement</elementName>
<asnElementName>suppressionOfAnnouncement</asnElementName>
<elementTypeName>SuppressionOfAnnouncement</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGmsc_Address</name>
<signature>void SetGmsc_Address(ISDN_AddressString* element)</signature>
<elmentName>Gmsc_Address</elmentName>
<asnElementName>gmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGmsc_Address</name>
<signature>void SetGmsc_Address(const ISDN_AddressString&amp; element)</signature>
<elementName>Gmsc_Address</elementName>
<asnElementName>gmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGmsc_Address</name>
<signature>const ISDN_AddressString&amp; GetGmsc_Address() const</signature>
<elementName>Gmsc_Address</elementName>
<asnElementName>gmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGmsc_Address</name>
<signature>bool OptionGmsc_Address() const</signature>
<elementName>Gmsc_Address</elementName>
<asnElementName>gmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCallReferenceNumber</name>
<signature>void SetCallReferenceNumber(CallReferenceNumber* element)</signature>
<elmentName>CallReferenceNumber</elmentName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallReferenceNumber</name>
<signature>void SetCallReferenceNumber(const CallReferenceNumber&amp; element)</signature>
<elementName>CallReferenceNumber</elementName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallReferenceNumber</name>
<signature>const CallReferenceNumber&amp; GetCallReferenceNumber() const</signature>
<elementName>CallReferenceNumber</elementName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCallReferenceNumber</name>
<signature>bool OptionCallReferenceNumber() const</signature>
<elementName>CallReferenceNumber</elementName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetOr_Interrogation</name>
<signature>void SetOr_Interrogation(Or_Interrogation* element)</signature>
<elmentName>Or_Interrogation</elmentName>
<asnElementName>or-Interrogation</asnElementName>
<elementTypeName>Or_Interrogation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOr_Interrogation</name>
<signature>void SetOr_Interrogation(const Or_Interrogation&amp; element)</signature>
<elementName>Or_Interrogation</elementName>
<asnElementName>or-Interrogation</asnElementName>
<elementTypeName>Or_Interrogation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOr_Interrogation</name>
<signature>const Or_Interrogation&amp; GetOr_Interrogation() const</signature>
<elementName>Or_Interrogation</elementName>
<asnElementName>or-Interrogation</asnElementName>
<elementTypeName>Or_Interrogation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionOr_Interrogation</name>
<signature>bool OptionOr_Interrogation() const</signature>
<elementName>Or_Interrogation</elementName>
<asnElementName>or-Interrogation</asnElementName>
<elementTypeName>Or_Interrogation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ProvideRoamingNumberArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ProvideRoamingNumberArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    imsi [0] IMPLICIT IMSI -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    msc-Number [1] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    msisdn [2] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lmsi [4] IMPLICIT LMSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gsm-BearerCapability [5] IMPLICIT ExternalSignalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    networkSignalInfo [6] IMPLICIT ExternalSignalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    suppressionOfAnnouncement [7] IMPLICIT SuppressionOfAnnouncement -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gmsc-Address [8] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callReferenceNumber [9] IMPLICIT CallReferenceNumber -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    or-Interrogation [10] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [11] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

