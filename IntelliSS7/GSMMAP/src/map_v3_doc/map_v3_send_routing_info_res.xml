<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SendRoutingInfoRes</className>
<asnTypeName>SendRoutingInfoRes</asnTypeName>
<moduleName>MAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionImsi</name>
<signature>bool OptionImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtendedRoutingInfo</name>
<signature>void SetExtendedRoutingInfo(ExtendedRoutingInfo* element)</signature>
<elmentName>ExtendedRoutingInfo</elmentName>
<asnElementName>extendedRoutingInfo</asnElementName>
<elementTypeName>ExtendedRoutingInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtendedRoutingInfo</name>
<signature>void SetExtendedRoutingInfo(const ExtendedRoutingInfo&amp; element)</signature>
<elementName>ExtendedRoutingInfo</elementName>
<asnElementName>extendedRoutingInfo</asnElementName>
<elementTypeName>ExtendedRoutingInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtendedRoutingInfo</name>
<signature>const ExtendedRoutingInfo&amp; GetExtendedRoutingInfo() const</signature>
<elementName>ExtendedRoutingInfo</elementName>
<asnElementName>extendedRoutingInfo</asnElementName>
<elementTypeName>ExtendedRoutingInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtendedRoutingInfo</name>
<signature>bool OptionExtendedRoutingInfo() const</signature>
<elementName>ExtendedRoutingInfo</elementName>
<asnElementName>extendedRoutingInfo</asnElementName>
<elementTypeName>ExtendedRoutingInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCug_CheckInfo</name>
<signature>void SetCug_CheckInfo(CUG_CheckInfo* element)</signature>
<elmentName>Cug_CheckInfo</elmentName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCug_CheckInfo</name>
<signature>void SetCug_CheckInfo(const CUG_CheckInfo&amp; element)</signature>
<elementName>Cug_CheckInfo</elementName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCug_CheckInfo</name>
<signature>const CUG_CheckInfo&amp; GetCug_CheckInfo() const</signature>
<elementName>Cug_CheckInfo</elementName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCug_CheckInfo</name>
<signature>bool OptionCug_CheckInfo() const</signature>
<elementName>Cug_CheckInfo</elementName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCugSubscriptionFlag</name>
<signature>void SetCugSubscriptionFlag(CugSubscriptionFlag* element)</signature>
<elmentName>CugSubscriptionFlag</elmentName>
<asnElementName>cugSubscriptionFlag</asnElementName>
<elementTypeName>CugSubscriptionFlag</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCugSubscriptionFlag</name>
<signature>void SetCugSubscriptionFlag(const CugSubscriptionFlag&amp; element)</signature>
<elementName>CugSubscriptionFlag</elementName>
<asnElementName>cugSubscriptionFlag</asnElementName>
<elementTypeName>CugSubscriptionFlag</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCugSubscriptionFlag</name>
<signature>const CugSubscriptionFlag&amp; GetCugSubscriptionFlag() const</signature>
<elementName>CugSubscriptionFlag</elementName>
<asnElementName>cugSubscriptionFlag</asnElementName>
<elementTypeName>CugSubscriptionFlag</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCugSubscriptionFlag</name>
<signature>bool OptionCugSubscriptionFlag() const</signature>
<elementName>CugSubscriptionFlag</elementName>
<asnElementName>cugSubscriptionFlag</asnElementName>
<elementTypeName>CugSubscriptionFlag</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSubscriberInfo</name>
<signature>void SetSubscriberInfo(SubscriberInfo* element)</signature>
<elmentName>SubscriberInfo</elmentName>
<asnElementName>subscriberInfo</asnElementName>
<elementTypeName>SubscriberInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSubscriberInfo</name>
<signature>void SetSubscriberInfo(const SubscriberInfo&amp; element)</signature>
<elementName>SubscriberInfo</elementName>
<asnElementName>subscriberInfo</asnElementName>
<elementTypeName>SubscriberInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSubscriberInfo</name>
<signature>const SubscriberInfo&amp; GetSubscriberInfo() const</signature>
<elementName>SubscriberInfo</elementName>
<asnElementName>subscriberInfo</asnElementName>
<elementTypeName>SubscriberInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSubscriberInfo</name>
<signature>bool OptionSubscriberInfo() const</signature>
<elementName>SubscriberInfo</elementName>
<asnElementName>subscriberInfo</asnElementName>
<elementTypeName>SubscriberInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSs_List</name>
<signature>void SetSs_List(SS_List* element)</signature>
<elmentName>Ss_List</elmentName>
<asnElementName>ss-List</asnElementName>
<elementTypeName>SS_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_List</name>
<signature>void SetSs_List(const SS_List&amp; element)</signature>
<elementName>Ss_List</elementName>
<asnElementName>ss-List</asnElementName>
<elementTypeName>SS_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_List</name>
<signature>const SS_List&amp; GetSs_List() const</signature>
<elementName>Ss_List</elementName>
<asnElementName>ss-List</asnElementName>
<elementTypeName>SS_List</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSs_List</name>
<signature>bool OptionSs_List() const</signature>
<elementName>Ss_List</elementName>
<asnElementName>ss-List</asnElementName>
<elementTypeName>SS_List</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBasicService</name>
<signature>void SetBasicService(Ext_BasicServiceCode* element)</signature>
<elmentName>BasicService</elmentName>
<asnElementName>basicService</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBasicService</name>
<signature>void SetBasicService(const Ext_BasicServiceCode&amp; element)</signature>
<elementName>BasicService</elementName>
<asnElementName>basicService</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBasicService</name>
<signature>const Ext_BasicServiceCode&amp; GetBasicService() const</signature>
<elementName>BasicService</elementName>
<asnElementName>basicService</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBasicService</name>
<signature>bool OptionBasicService() const</signature>
<elementName>BasicService</elementName>
<asnElementName>basicService</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetForwardingInterrogationRequired</name>
<signature>void SetForwardingInterrogationRequired(ForwardingInterrogationRequired* element)</signature>
<elmentName>ForwardingInterrogationRequired</elmentName>
<asnElementName>forwardingInterrogationRequired</asnElementName>
<elementTypeName>ForwardingInterrogationRequired</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetForwardingInterrogationRequired</name>
<signature>void SetForwardingInterrogationRequired(const ForwardingInterrogationRequired&amp; element)</signature>
<elementName>ForwardingInterrogationRequired</elementName>
<asnElementName>forwardingInterrogationRequired</asnElementName>
<elementTypeName>ForwardingInterrogationRequired</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetForwardingInterrogationRequired</name>
<signature>const ForwardingInterrogationRequired&amp; GetForwardingInterrogationRequired() const</signature>
<elementName>ForwardingInterrogationRequired</elementName>
<asnElementName>forwardingInterrogationRequired</asnElementName>
<elementTypeName>ForwardingInterrogationRequired</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionForwardingInterrogationRequired</name>
<signature>bool OptionForwardingInterrogationRequired() const</signature>
<elementName>ForwardingInterrogationRequired</elementName>
<asnElementName>forwardingInterrogationRequired</asnElementName>
<elementTypeName>ForwardingInterrogationRequired</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetVmsc_Address</name>
<signature>void SetVmsc_Address(ISDN_AddressString* element)</signature>
<elmentName>Vmsc_Address</elmentName>
<asnElementName>vmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVmsc_Address</name>
<signature>void SetVmsc_Address(const ISDN_AddressString&amp; element)</signature>
<elementName>Vmsc_Address</elementName>
<asnElementName>vmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVmsc_Address</name>
<signature>const ISDN_AddressString&amp; GetVmsc_Address() const</signature>
<elementName>Vmsc_Address</elementName>
<asnElementName>vmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVmsc_Address</name>
<signature>bool OptionVmsc_Address() const</signature>
<elementName>Vmsc_Address</elementName>
<asnElementName>vmsc-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SendRoutingInfoRes information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SendRoutingInfoRes ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    imsi [9] IMPLICIT IMSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extendedRoutingInfo ExtendedRoutingInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cug-CheckInfo [3] IMPLICIT CUG-CheckInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cugSubscriptionFlag [6] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    subscriberInfo [7] IMPLICIT SubscriberInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-List [1] IMPLICIT SS-List -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    basicService [5] IMPLICIT Ext-BasicServiceCode -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    forwardingInterrogationRequired [4] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    vmsc-Address [2] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [0] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

