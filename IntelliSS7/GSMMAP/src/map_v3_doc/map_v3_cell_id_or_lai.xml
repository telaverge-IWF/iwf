<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>CellIdOrLAI</className>
<asnTypeName>CellIdOrLAI</asnTypeName>
<moduleName>MAP_V3</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceCellIdFixedLength</name>
<signature>void SetChoiceCellIdFixedLength(CellIdFixedLength* choice)</signature>
<choiceName>CellIdFixedLength</choiceName>
<asnChoiceName>cellIdFixedLength</asnChoiceName>
<choiceTypeName>CellIdFixedLength</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCellIdFixedLength</name>
<signature>void SetChoiceCellIdFixedLength(const CellIdFixedLength&amp; choice)</signature>
<choiceName>CellIdFixedLength</choiceName>
<asnChoiceName>cellIdFixedLength</asnChoiceName>
<choiceTypeName>CellIdFixedLength</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCellIdFixedLength</name>
<signature>const CellIdFixedLength&amp; GetChoiceCellIdFixedLength() const</signature>
<choiceName>CellIdFixedLength</choiceName>
<asnChoiceName>cellIdFixedLength</asnChoiceName>
<choiceTypeName>CellIdFixedLength</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCellIdFixedLength</name>
<signature>bool ChoiceCellIdFixedLength() const</signature>
<choiceName>CellIdFixedLength</choiceName>
<asnChoiceName>cellIdFixedLength</asnChoiceName>
<choiceTypeName>CellIdFixedLength</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceLaiFixedLength</name>
<signature>void SetChoiceLaiFixedLength(LAIFixedLength* choice)</signature>
<choiceName>LaiFixedLength</choiceName>
<asnChoiceName>laiFixedLength</asnChoiceName>
<choiceTypeName>LAIFixedLength</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceLaiFixedLength</name>
<signature>void SetChoiceLaiFixedLength(const LAIFixedLength&amp; choice)</signature>
<choiceName>LaiFixedLength</choiceName>
<asnChoiceName>laiFixedLength</asnChoiceName>
<choiceTypeName>LAIFixedLength</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceLaiFixedLength</name>
<signature>const LAIFixedLength&amp; GetChoiceLaiFixedLength() const</signature>
<choiceName>LaiFixedLength</choiceName>
<asnChoiceName>laiFixedLength</asnChoiceName>
<choiceTypeName>LAIFixedLength</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceLaiFixedLength</name>
<signature>bool ChoiceLaiFixedLength() const</signature>
<choiceName>LaiFixedLength</choiceName>
<asnChoiceName>laiFixedLength</asnChoiceName>
<choiceTypeName>LAIFixedLength</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CellIdOrLAI information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CellIdOrLAI ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    cellIdFixedLength [0] IMPLICIT CellIdFixedLength -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    laiFixedLength [1] IMPLICIT LAIFixedLength -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

