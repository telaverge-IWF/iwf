<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>RegisterSS_Arg</className>
<asnTypeName>RegisterSS-Arg</asnTypeName>
<moduleName>MAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetSs_Code</name>
<signature>void SetSs_Code(SS_Code* element)</signature>
<elmentName>Ss_Code</elmentName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_Code</name>
<signature>void SetSs_Code(const SS_Code&amp; element)</signature>
<elementName>Ss_Code</elementName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_Code</name>
<signature>const SS_Code&amp; GetSs_Code() const</signature>
<elementName>Ss_Code</elementName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetBasicService</name>
<signature>void SetBasicService(BasicServiceCode* element)</signature>
<elmentName>BasicService</elmentName>
<asnElementName>basicService</asnElementName>
<elementTypeName>BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBasicService</name>
<signature>void SetBasicService(const BasicServiceCode&amp; element)</signature>
<elementName>BasicService</elementName>
<asnElementName>basicService</asnElementName>
<elementTypeName>BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBasicService</name>
<signature>const BasicServiceCode&amp; GetBasicService() const</signature>
<elementName>BasicService</elementName>
<asnElementName>basicService</asnElementName>
<elementTypeName>BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBasicService</name>
<signature>bool OptionBasicService() const</signature>
<elementName>BasicService</elementName>
<asnElementName>basicService</asnElementName>
<elementTypeName>BasicServiceCode</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetForwardedToNumber</name>
<signature>void SetForwardedToNumber(AddressString* element)</signature>
<elmentName>ForwardedToNumber</elmentName>
<asnElementName>forwardedToNumber</asnElementName>
<elementTypeName>AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetForwardedToNumber</name>
<signature>void SetForwardedToNumber(const AddressString&amp; element)</signature>
<elementName>ForwardedToNumber</elementName>
<asnElementName>forwardedToNumber</asnElementName>
<elementTypeName>AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetForwardedToNumber</name>
<signature>const AddressString&amp; GetForwardedToNumber() const</signature>
<elementName>ForwardedToNumber</elementName>
<asnElementName>forwardedToNumber</asnElementName>
<elementTypeName>AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionForwardedToNumber</name>
<signature>bool OptionForwardedToNumber() const</signature>
<elementName>ForwardedToNumber</elementName>
<asnElementName>forwardedToNumber</asnElementName>
<elementTypeName>AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetForwardedToSubaddress</name>
<signature>void SetForwardedToSubaddress(ISDN_SubaddressString* element)</signature>
<elmentName>ForwardedToSubaddress</elmentName>
<asnElementName>forwardedToSubaddress</asnElementName>
<elementTypeName>ISDN_SubaddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetForwardedToSubaddress</name>
<signature>void SetForwardedToSubaddress(const ISDN_SubaddressString&amp; element)</signature>
<elementName>ForwardedToSubaddress</elementName>
<asnElementName>forwardedToSubaddress</asnElementName>
<elementTypeName>ISDN_SubaddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetForwardedToSubaddress</name>
<signature>const ISDN_SubaddressString&amp; GetForwardedToSubaddress() const</signature>
<elementName>ForwardedToSubaddress</elementName>
<asnElementName>forwardedToSubaddress</asnElementName>
<elementTypeName>ISDN_SubaddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionForwardedToSubaddress</name>
<signature>bool OptionForwardedToSubaddress() const</signature>
<elementName>ForwardedToSubaddress</elementName>
<asnElementName>forwardedToSubaddress</asnElementName>
<elementTypeName>ISDN_SubaddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNoReplyConditionTime</name>
<signature>void SetNoReplyConditionTime(NoReplyConditionTime* element)</signature>
<elmentName>NoReplyConditionTime</elmentName>
<asnElementName>noReplyConditionTime</asnElementName>
<elementTypeName>NoReplyConditionTime</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNoReplyConditionTime</name>
<signature>void SetNoReplyConditionTime(const NoReplyConditionTime&amp; element)</signature>
<elementName>NoReplyConditionTime</elementName>
<asnElementName>noReplyConditionTime</asnElementName>
<elementTypeName>NoReplyConditionTime</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNoReplyConditionTime</name>
<signature>const NoReplyConditionTime&amp; GetNoReplyConditionTime() const</signature>
<elementName>NoReplyConditionTime</elementName>
<asnElementName>noReplyConditionTime</asnElementName>
<elementTypeName>NoReplyConditionTime</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNoReplyConditionTime</name>
<signature>bool OptionNoReplyConditionTime() const</signature>
<elementName>NoReplyConditionTime</elementName>
<asnElementName>noReplyConditionTime</asnElementName>
<elementTypeName>NoReplyConditionTime</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- RegisterSS-Arg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>RegisterSS-Arg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    ss-Code SS-Code -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    basicService BasicServiceCode -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    forwardedToNumber [4] IMPLICIT AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    forwardedToSubaddress [6] IMPLICIT ISDN-SubaddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    noReplyConditionTime [5] IMPLICIT NoReplyConditionTime -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

