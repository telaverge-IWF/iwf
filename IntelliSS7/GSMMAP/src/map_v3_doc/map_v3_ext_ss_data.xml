<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>Ext_SS_Data</className>
<asnTypeName>Ext-SS-Data</asnTypeName>
<moduleName>MAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetSs_Code</name>
<signature>void SetSs_Code(SS_Code* element)</signature>
<elmentName>Ss_Code</elmentName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_Code</name>
<signature>void SetSs_Code(const SS_Code&amp; element)</signature>
<elementName>Ss_Code</elementName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_Code</name>
<signature>const SS_Code&amp; GetSs_Code() const</signature>
<elementName>Ss_Code</elementName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetSs_Status</name>
<signature>void SetSs_Status(Ext_SS_Status* element)</signature>
<elmentName>Ss_Status</elmentName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>Ext_SS_Status</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_Status</name>
<signature>void SetSs_Status(const Ext_SS_Status&amp; element)</signature>
<elementName>Ss_Status</elementName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>Ext_SS_Status</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_Status</name>
<signature>const Ext_SS_Status&amp; GetSs_Status() const</signature>
<elementName>Ss_Status</elementName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>Ext_SS_Status</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetSs_SubscriptionOption</name>
<signature>void SetSs_SubscriptionOption(SS_SubscriptionOption* element)</signature>
<elmentName>Ss_SubscriptionOption</elmentName>
<asnElementName>ss-SubscriptionOption</asnElementName>
<elementTypeName>SS_SubscriptionOption</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_SubscriptionOption</name>
<signature>void SetSs_SubscriptionOption(const SS_SubscriptionOption&amp; element)</signature>
<elementName>Ss_SubscriptionOption</elementName>
<asnElementName>ss-SubscriptionOption</asnElementName>
<elementTypeName>SS_SubscriptionOption</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_SubscriptionOption</name>
<signature>const SS_SubscriptionOption&amp; GetSs_SubscriptionOption() const</signature>
<elementName>Ss_SubscriptionOption</elementName>
<asnElementName>ss-SubscriptionOption</asnElementName>
<elementTypeName>SS_SubscriptionOption</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSs_SubscriptionOption</name>
<signature>bool OptionSs_SubscriptionOption() const</signature>
<elementName>Ss_SubscriptionOption</elementName>
<asnElementName>ss-SubscriptionOption</asnElementName>
<elementTypeName>SS_SubscriptionOption</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBasicServiceGroupList</name>
<signature>void SetBasicServiceGroupList(Ext_BasicServiceGroupList* element)</signature>
<elmentName>BasicServiceGroupList</elmentName>
<asnElementName>basicServiceGroupList</asnElementName>
<elementTypeName>Ext_BasicServiceGroupList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBasicServiceGroupList</name>
<signature>void SetBasicServiceGroupList(const Ext_BasicServiceGroupList&amp; element)</signature>
<elementName>BasicServiceGroupList</elementName>
<asnElementName>basicServiceGroupList</asnElementName>
<elementTypeName>Ext_BasicServiceGroupList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBasicServiceGroupList</name>
<signature>const Ext_BasicServiceGroupList&amp; GetBasicServiceGroupList() const</signature>
<elementName>BasicServiceGroupList</elementName>
<asnElementName>basicServiceGroupList</asnElementName>
<elementTypeName>Ext_BasicServiceGroupList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBasicServiceGroupList</name>
<signature>bool OptionBasicServiceGroupList() const</signature>
<elementName>BasicServiceGroupList</elementName>
<asnElementName>basicServiceGroupList</asnElementName>
<elementTypeName>Ext_BasicServiceGroupList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- Ext-SS-Data information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>Ext-SS-Data ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    ss-Code SS-Code -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-Status [4] IMPLICIT Ext-SS-Status -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-SubscriptionOption SS-SubscriptionOption -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    basicServiceGroupList Ext-BasicServiceGroupList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [5] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

