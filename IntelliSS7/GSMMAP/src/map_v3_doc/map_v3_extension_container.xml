<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ExtensionContainer</className>
<asnTypeName>ExtensionContainer</asnTypeName>
<moduleName>MAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetPrivateExtensionList</name>
<signature>void SetPrivateExtensionList(PrivateExtensionList* element)</signature>
<elmentName>PrivateExtensionList</elmentName>
<asnElementName>privateExtensionList</asnElementName>
<elementTypeName>PrivateExtensionList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPrivateExtensionList</name>
<signature>void SetPrivateExtensionList(const PrivateExtensionList&amp; element)</signature>
<elementName>PrivateExtensionList</elementName>
<asnElementName>privateExtensionList</asnElementName>
<elementTypeName>PrivateExtensionList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPrivateExtensionList</name>
<signature>const PrivateExtensionList&amp; GetPrivateExtensionList() const</signature>
<elementName>PrivateExtensionList</elementName>
<asnElementName>privateExtensionList</asnElementName>
<elementTypeName>PrivateExtensionList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPrivateExtensionList</name>
<signature>bool OptionPrivateExtensionList() const</signature>
<elementName>PrivateExtensionList</elementName>
<asnElementName>privateExtensionList</asnElementName>
<elementTypeName>PrivateExtensionList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetPcs_Extensions</name>
<signature>void SetPcs_Extensions(PCS_Extensions* element)</signature>
<elmentName>Pcs_Extensions</elmentName>
<asnElementName>pcs-Extensions</asnElementName>
<elementTypeName>PCS_Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPcs_Extensions</name>
<signature>void SetPcs_Extensions(const PCS_Extensions&amp; element)</signature>
<elementName>Pcs_Extensions</elementName>
<asnElementName>pcs-Extensions</asnElementName>
<elementTypeName>PCS_Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPcs_Extensions</name>
<signature>const PCS_Extensions&amp; GetPcs_Extensions() const</signature>
<elementName>Pcs_Extensions</elementName>
<asnElementName>pcs-Extensions</asnElementName>
<elementTypeName>PCS_Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPcs_Extensions</name>
<signature>bool OptionPcs_Extensions() const</signature>
<elementName>Pcs_Extensions</elementName>
<asnElementName>pcs-Extensions</asnElementName>
<elementTypeName>PCS_Extensions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ExtensionContainer information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 91]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ExtensionContainer ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    privateExtensionList [0] IMPLICIT PrivateExtensionList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pcs-Extensions [1] IMPLICIT PCS-Extensions -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

