<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SGSN_Capability</className>
<asnTypeName>SGSN-Capability</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetSolsaSupportIndicator</name>
<signature>void SetSolsaSupportIndicator(SolsaSupportIndicator* element)</signature>
<elmentName>SolsaSupportIndicator</elmentName>
<asnElementName>solsaSupportIndicator</asnElementName>
<elementTypeName>SolsaSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSolsaSupportIndicator</name>
<signature>void SetSolsaSupportIndicator(const SolsaSupportIndicator&amp; element)</signature>
<elementName>SolsaSupportIndicator</elementName>
<asnElementName>solsaSupportIndicator</asnElementName>
<elementTypeName>SolsaSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSolsaSupportIndicator</name>
<signature>const SolsaSupportIndicator&amp; GetSolsaSupportIndicator() const</signature>
<elementName>SolsaSupportIndicator</elementName>
<asnElementName>solsaSupportIndicator</asnElementName>
<elementTypeName>SolsaSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSolsaSupportIndicator</name>
<signature>bool OptionSolsaSupportIndicator() const</signature>
<elementName>SolsaSupportIndicator</elementName>
<asnElementName>solsaSupportIndicator</asnElementName>
<elementTypeName>SolsaSupportIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSuperChargerSupportedInServingNetworkEntity</name>
<signature>void SetSuperChargerSupportedInServingNetworkEntity(SuperChargerInfo* element)</signature>
<elmentName>SuperChargerSupportedInServingNetworkEntity</elmentName>
<asnElementName>superChargerSupportedInServingNetworkEntity</asnElementName>
<elementTypeName>SuperChargerInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSuperChargerSupportedInServingNetworkEntity</name>
<signature>void SetSuperChargerSupportedInServingNetworkEntity(const SuperChargerInfo&amp; element)</signature>
<elementName>SuperChargerSupportedInServingNetworkEntity</elementName>
<asnElementName>superChargerSupportedInServingNetworkEntity</asnElementName>
<elementTypeName>SuperChargerInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSuperChargerSupportedInServingNetworkEntity</name>
<signature>const SuperChargerInfo&amp; GetSuperChargerSupportedInServingNetworkEntity() const</signature>
<elementName>SuperChargerSupportedInServingNetworkEntity</elementName>
<asnElementName>superChargerSupportedInServingNetworkEntity</asnElementName>
<elementTypeName>SuperChargerInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSuperChargerSupportedInServingNetworkEntity</name>
<signature>bool OptionSuperChargerSupportedInServingNetworkEntity() const</signature>
<elementName>SuperChargerSupportedInServingNetworkEntity</elementName>
<asnElementName>superChargerSupportedInServingNetworkEntity</asnElementName>
<elementTypeName>SuperChargerInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGprsEnhancementsSupportIndicator</name>
<signature>void SetGprsEnhancementsSupportIndicator(GprsEnhancementsSupportIndicator* element)</signature>
<elmentName>GprsEnhancementsSupportIndicator</elmentName>
<asnElementName>gprsEnhancementsSupportIndicator</asnElementName>
<elementTypeName>GprsEnhancementsSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGprsEnhancementsSupportIndicator</name>
<signature>void SetGprsEnhancementsSupportIndicator(const GprsEnhancementsSupportIndicator&amp; element)</signature>
<elementName>GprsEnhancementsSupportIndicator</elementName>
<asnElementName>gprsEnhancementsSupportIndicator</asnElementName>
<elementTypeName>GprsEnhancementsSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGprsEnhancementsSupportIndicator</name>
<signature>const GprsEnhancementsSupportIndicator&amp; GetGprsEnhancementsSupportIndicator() const</signature>
<elementName>GprsEnhancementsSupportIndicator</elementName>
<asnElementName>gprsEnhancementsSupportIndicator</asnElementName>
<elementTypeName>GprsEnhancementsSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGprsEnhancementsSupportIndicator</name>
<signature>bool OptionGprsEnhancementsSupportIndicator() const</signature>
<elementName>GprsEnhancementsSupportIndicator</elementName>
<asnElementName>gprsEnhancementsSupportIndicator</asnElementName>
<elementTypeName>GprsEnhancementsSupportIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSupportedCamelPhases</name>
<signature>void SetSupportedCamelPhases(SupportedCamelPhases* element)</signature>
<elmentName>SupportedCamelPhases</elmentName>
<asnElementName>supportedCamelPhases</asnElementName>
<elementTypeName>SupportedCamelPhases</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSupportedCamelPhases</name>
<signature>void SetSupportedCamelPhases(const SupportedCamelPhases&amp; element)</signature>
<elementName>SupportedCamelPhases</elementName>
<asnElementName>supportedCamelPhases</asnElementName>
<elementTypeName>SupportedCamelPhases</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSupportedCamelPhases</name>
<signature>const SupportedCamelPhases&amp; GetSupportedCamelPhases() const</signature>
<elementName>SupportedCamelPhases</elementName>
<asnElementName>supportedCamelPhases</asnElementName>
<elementTypeName>SupportedCamelPhases</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSupportedCamelPhases</name>
<signature>bool OptionSupportedCamelPhases() const</signature>
<elementName>SupportedCamelPhases</elementName>
<asnElementName>supportedCamelPhases</asnElementName>
<elementTypeName>SupportedCamelPhases</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSupportedLCS_CapabilitySets</name>
<signature>void SetSupportedLCS_CapabilitySets(SupportedLCS_CapabilitySets* element)</signature>
<elmentName>SupportedLCS_CapabilitySets</elmentName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSupportedLCS_CapabilitySets</name>
<signature>void SetSupportedLCS_CapabilitySets(const SupportedLCS_CapabilitySets&amp; element)</signature>
<elementName>SupportedLCS_CapabilitySets</elementName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSupportedLCS_CapabilitySets</name>
<signature>const SupportedLCS_CapabilitySets&amp; GetSupportedLCS_CapabilitySets() const</signature>
<elementName>SupportedLCS_CapabilitySets</elementName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSupportedLCS_CapabilitySets</name>
<signature>bool OptionSupportedLCS_CapabilitySets() const</signature>
<elementName>SupportedLCS_CapabilitySets</elementName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetOfferedCamel4CSIs</name>
<signature>void SetOfferedCamel4CSIs(OfferedCamel4CSIs* element)</signature>
<elmentName>OfferedCamel4CSIs</elmentName>
<asnElementName>offeredCamel4CSIs</asnElementName>
<elementTypeName>OfferedCamel4CSIs</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOfferedCamel4CSIs</name>
<signature>void SetOfferedCamel4CSIs(const OfferedCamel4CSIs&amp; element)</signature>
<elementName>OfferedCamel4CSIs</elementName>
<asnElementName>offeredCamel4CSIs</asnElementName>
<elementTypeName>OfferedCamel4CSIs</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOfferedCamel4CSIs</name>
<signature>const OfferedCamel4CSIs&amp; GetOfferedCamel4CSIs() const</signature>
<elementName>OfferedCamel4CSIs</elementName>
<asnElementName>offeredCamel4CSIs</asnElementName>
<elementTypeName>OfferedCamel4CSIs</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionOfferedCamel4CSIs</name>
<signature>bool OptionOfferedCamel4CSIs() const</signature>
<elementName>OfferedCamel4CSIs</elementName>
<asnElementName>offeredCamel4CSIs</asnElementName>
<elementTypeName>OfferedCamel4CSIs</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSmsCallBarringSupportIndicator</name>
<signature>void SetSmsCallBarringSupportIndicator(SmsCallBarringSupportIndicator* element)</signature>
<elmentName>SmsCallBarringSupportIndicator</elmentName>
<asnElementName>smsCallBarringSupportIndicator</asnElementName>
<elementTypeName>SmsCallBarringSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSmsCallBarringSupportIndicator</name>
<signature>void SetSmsCallBarringSupportIndicator(const SmsCallBarringSupportIndicator&amp; element)</signature>
<elementName>SmsCallBarringSupportIndicator</elementName>
<asnElementName>smsCallBarringSupportIndicator</asnElementName>
<elementTypeName>SmsCallBarringSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSmsCallBarringSupportIndicator</name>
<signature>const SmsCallBarringSupportIndicator&amp; GetSmsCallBarringSupportIndicator() const</signature>
<elementName>SmsCallBarringSupportIndicator</elementName>
<asnElementName>smsCallBarringSupportIndicator</asnElementName>
<elementTypeName>SmsCallBarringSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSmsCallBarringSupportIndicator</name>
<signature>bool OptionSmsCallBarringSupportIndicator() const</signature>
<elementName>SmsCallBarringSupportIndicator</elementName>
<asnElementName>smsCallBarringSupportIndicator</asnElementName>
<elementTypeName>SmsCallBarringSupportIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSupportedRAT_TypesIndicator</name>
<signature>void SetSupportedRAT_TypesIndicator(SupportedRAT_Types* element)</signature>
<elmentName>SupportedRAT_TypesIndicator</elmentName>
<asnElementName>supportedRAT-TypesIndicator</asnElementName>
<elementTypeName>SupportedRAT_Types</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSupportedRAT_TypesIndicator</name>
<signature>void SetSupportedRAT_TypesIndicator(const SupportedRAT_Types&amp; element)</signature>
<elementName>SupportedRAT_TypesIndicator</elementName>
<asnElementName>supportedRAT-TypesIndicator</asnElementName>
<elementTypeName>SupportedRAT_Types</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSupportedRAT_TypesIndicator</name>
<signature>const SupportedRAT_Types&amp; GetSupportedRAT_TypesIndicator() const</signature>
<elementName>SupportedRAT_TypesIndicator</elementName>
<asnElementName>supportedRAT-TypesIndicator</asnElementName>
<elementTypeName>SupportedRAT_Types</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSupportedRAT_TypesIndicator</name>
<signature>bool OptionSupportedRAT_TypesIndicator() const</signature>
<elementName>SupportedRAT_TypesIndicator</elementName>
<asnElementName>supportedRAT-TypesIndicator</asnElementName>
<elementTypeName>SupportedRAT_Types</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSupportedFeatures</name>
<signature>void SetSupportedFeatures(SupportedFeatures* element)</signature>
<elmentName>SupportedFeatures</elmentName>
<asnElementName>supportedFeatures</asnElementName>
<elementTypeName>SupportedFeatures</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSupportedFeatures</name>
<signature>void SetSupportedFeatures(const SupportedFeatures&amp; element)</signature>
<elementName>SupportedFeatures</elementName>
<asnElementName>supportedFeatures</asnElementName>
<elementTypeName>SupportedFeatures</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSupportedFeatures</name>
<signature>const SupportedFeatures&amp; GetSupportedFeatures() const</signature>
<elementName>SupportedFeatures</elementName>
<asnElementName>supportedFeatures</asnElementName>
<elementTypeName>SupportedFeatures</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSupportedFeatures</name>
<signature>bool OptionSupportedFeatures() const</signature>
<elementName>SupportedFeatures</elementName>
<asnElementName>supportedFeatures</asnElementName>
<elementTypeName>SupportedFeatures</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetT_adsDataRetrieval</name>
<signature>void SetT_adsDataRetrieval(T_adsDataRetrieval* element)</signature>
<elmentName>T_adsDataRetrieval</elmentName>
<asnElementName>t-adsDataRetrieval</asnElementName>
<elementTypeName>T_adsDataRetrieval</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetT_adsDataRetrieval</name>
<signature>void SetT_adsDataRetrieval(const T_adsDataRetrieval&amp; element)</signature>
<elementName>T_adsDataRetrieval</elementName>
<asnElementName>t-adsDataRetrieval</asnElementName>
<elementTypeName>T_adsDataRetrieval</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetT_adsDataRetrieval</name>
<signature>const T_adsDataRetrieval&amp; GetT_adsDataRetrieval() const</signature>
<elementName>T_adsDataRetrieval</elementName>
<asnElementName>t-adsDataRetrieval</asnElementName>
<elementTypeName>T_adsDataRetrieval</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionT_adsDataRetrieval</name>
<signature>bool OptionT_adsDataRetrieval() const</signature>
<elementName>T_adsDataRetrieval</elementName>
<asnElementName>t-adsDataRetrieval</asnElementName>
<elementTypeName>T_adsDataRetrieval</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetHomogeneousSupportOfIMSVoiceOverPSSessions</name>
<signature>void SetHomogeneousSupportOfIMSVoiceOverPSSessions(HomogeneousSupportOfIMSVoiceOverPSSessions* element)</signature>
<elmentName>HomogeneousSupportOfIMSVoiceOverPSSessions</elmentName>
<asnElementName>homogeneousSupportOfIMSVoiceOverPSSessions</asnElementName>
<elementTypeName>HomogeneousSupportOfIMSVoiceOverPSSessions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetHomogeneousSupportOfIMSVoiceOverPSSessions</name>
<signature>void SetHomogeneousSupportOfIMSVoiceOverPSSessions(const HomogeneousSupportOfIMSVoiceOverPSSessions&amp; element)</signature>
<elementName>HomogeneousSupportOfIMSVoiceOverPSSessions</elementName>
<asnElementName>homogeneousSupportOfIMSVoiceOverPSSessions</asnElementName>
<elementTypeName>HomogeneousSupportOfIMSVoiceOverPSSessions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetHomogeneousSupportOfIMSVoiceOverPSSessions</name>
<signature>const HomogeneousSupportOfIMSVoiceOverPSSessions&amp; GetHomogeneousSupportOfIMSVoiceOverPSSessions() const</signature>
<elementName>HomogeneousSupportOfIMSVoiceOverPSSessions</elementName>
<asnElementName>homogeneousSupportOfIMSVoiceOverPSSessions</asnElementName>
<elementTypeName>HomogeneousSupportOfIMSVoiceOverPSSessions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionHomogeneousSupportOfIMSVoiceOverPSSessions</name>
<signature>bool OptionHomogeneousSupportOfIMSVoiceOverPSSessions() const</signature>
<elementName>HomogeneousSupportOfIMSVoiceOverPSSessions</elementName>
<asnElementName>homogeneousSupportOfIMSVoiceOverPSSessions</asnElementName>
<elementTypeName>HomogeneousSupportOfIMSVoiceOverPSSessions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SGSN-Capability information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SGSN-Capability ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    solsaSupportIndicator NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [1] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    superChargerSupportedInServingNetworkEntity [2] IMPLICIT SuperChargerInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gprsEnhancementsSupportIndicator [3] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    supportedCamelPhases [4] IMPLICIT SupportedCamelPhases -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    supportedLCS-CapabilitySets [5] IMPLICIT SupportedLCS-CapabilitySets -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    offeredCamel4CSIs [6] IMPLICIT OfferedCamel4CSIs -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    smsCallBarringSupportIndicator [7] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    supportedRAT-TypesIndicator [8] IMPLICIT SupportedRAT-Types -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    supportedFeatures [9] IMPLICIT SupportedFeatures -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    t-adsDataRetrieval [10] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    homogeneousSupportOfIMSVoiceOverPSSessions [11] IMPLICIT BOOLEAN OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

