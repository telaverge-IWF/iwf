<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnEnumerated>

<className>ReportAmount</className>
<asnTypeName>ReportAmount</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetD1</name>
<signature>void SetD1()</signature>
<enumItemName>d1</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsD1</name>
<signature>bool IsD1() const</signature>
<enumItemName>d1</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetD2</name>
<signature>void SetD2()</signature>
<enumItemName>d2</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsD2</name>
<signature>bool IsD2() const</signature>
<enumItemName>d2</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetD4</name>
<signature>void SetD4()</signature>
<enumItemName>d4</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsD4</name>
<signature>bool IsD4() const</signature>
<enumItemName>d4</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetD8</name>
<signature>void SetD8()</signature>
<enumItemName>d8</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsD8</name>
<signature>bool IsD8() const</signature>
<enumItemName>d8</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetD16</name>
<signature>void SetD16()</signature>
<enumItemName>d16</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsD16</name>
<signature>bool IsD16() const</signature>
<enumItemName>d16</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetD32</name>
<signature>void SetD32()</signature>
<enumItemName>d32</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsD32</name>
<signature>bool IsD32() const</signature>
<enumItemName>d32</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetD64</name>
<signature>void SetD64()</signature>
<enumItemName>d64</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsD64</name>
<signature>bool IsD64() const</signature>
<enumItemName>d64</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetInfinity</name>
<signature>void SetInfinity()</signature>
<enumItemName>infinity</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsInfinity</name>
<signature>bool IsInfinity() const</signature>
<enumItemName>infinity</enumItemName>
</memberFunctionIs>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ReportAmount information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ReportAmount ::= ENUMERATED</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    d1(0),</text>
<shift></shift>
</line>
<line>
<text>    d2(1),</text>
<shift></shift>
</line>
<line>
<text>    d4(2),</text>
<shift></shift>
</line>
<line>
<text>    d8(3),</text>
<shift></shift>
</line>
<line>
<text>    d16(4),</text>
<shift></shift>
</line>
<line>
<text>    d32(5),</text>
<shift></shift>
</line>
<line>
<text>    d64(6),</text>
<shift></shift>
</line>
<line>
<text>    infinity(7)</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnEnumerated>

</asnType>

