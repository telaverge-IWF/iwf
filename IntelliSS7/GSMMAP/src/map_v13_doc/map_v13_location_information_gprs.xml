<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>LocationInformationGPRS</className>
<asnTypeName>LocationInformationGPRS</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCellGlobalIdOrServiceAreaIdOrLAI</name>
<signature>void SetCellGlobalIdOrServiceAreaIdOrLAI(CellGlobalIdOrServiceAreaIdOrLAI* element)</signature>
<elmentName>CellGlobalIdOrServiceAreaIdOrLAI</elmentName>
<asnElementName>cellGlobalIdOrServiceAreaIdOrLAI</asnElementName>
<elementTypeName>CellGlobalIdOrServiceAreaIdOrLAI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCellGlobalIdOrServiceAreaIdOrLAI</name>
<signature>void SetCellGlobalIdOrServiceAreaIdOrLAI(const CellGlobalIdOrServiceAreaIdOrLAI&amp; element)</signature>
<elementName>CellGlobalIdOrServiceAreaIdOrLAI</elementName>
<asnElementName>cellGlobalIdOrServiceAreaIdOrLAI</asnElementName>
<elementTypeName>CellGlobalIdOrServiceAreaIdOrLAI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCellGlobalIdOrServiceAreaIdOrLAI</name>
<signature>const CellGlobalIdOrServiceAreaIdOrLAI&amp; GetCellGlobalIdOrServiceAreaIdOrLAI() const</signature>
<elementName>CellGlobalIdOrServiceAreaIdOrLAI</elementName>
<asnElementName>cellGlobalIdOrServiceAreaIdOrLAI</asnElementName>
<elementTypeName>CellGlobalIdOrServiceAreaIdOrLAI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCellGlobalIdOrServiceAreaIdOrLAI</name>
<signature>bool OptionCellGlobalIdOrServiceAreaIdOrLAI() const</signature>
<elementName>CellGlobalIdOrServiceAreaIdOrLAI</elementName>
<asnElementName>cellGlobalIdOrServiceAreaIdOrLAI</asnElementName>
<elementTypeName>CellGlobalIdOrServiceAreaIdOrLAI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRouteingAreaIdentity</name>
<signature>void SetRouteingAreaIdentity(RAIdentity* element)</signature>
<elmentName>RouteingAreaIdentity</elmentName>
<asnElementName>routeingAreaIdentity</asnElementName>
<elementTypeName>RAIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRouteingAreaIdentity</name>
<signature>void SetRouteingAreaIdentity(const RAIdentity&amp; element)</signature>
<elementName>RouteingAreaIdentity</elementName>
<asnElementName>routeingAreaIdentity</asnElementName>
<elementTypeName>RAIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRouteingAreaIdentity</name>
<signature>const RAIdentity&amp; GetRouteingAreaIdentity() const</signature>
<elementName>RouteingAreaIdentity</elementName>
<asnElementName>routeingAreaIdentity</asnElementName>
<elementTypeName>RAIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRouteingAreaIdentity</name>
<signature>bool OptionRouteingAreaIdentity() const</signature>
<elementName>RouteingAreaIdentity</elementName>
<asnElementName>routeingAreaIdentity</asnElementName>
<elementTypeName>RAIdentity</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGeographicalInformation</name>
<signature>void SetGeographicalInformation(GeographicalInformation* element)</signature>
<elmentName>GeographicalInformation</elmentName>
<asnElementName>geographicalInformation</asnElementName>
<elementTypeName>GeographicalInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGeographicalInformation</name>
<signature>void SetGeographicalInformation(const GeographicalInformation&amp; element)</signature>
<elementName>GeographicalInformation</elementName>
<asnElementName>geographicalInformation</asnElementName>
<elementTypeName>GeographicalInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGeographicalInformation</name>
<signature>const GeographicalInformation&amp; GetGeographicalInformation() const</signature>
<elementName>GeographicalInformation</elementName>
<asnElementName>geographicalInformation</asnElementName>
<elementTypeName>GeographicalInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGeographicalInformation</name>
<signature>bool OptionGeographicalInformation() const</signature>
<elementName>GeographicalInformation</elementName>
<asnElementName>geographicalInformation</asnElementName>
<elementTypeName>GeographicalInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSgsn_Number</name>
<signature>void SetSgsn_Number(ISDN_AddressString* element)</signature>
<elmentName>Sgsn_Number</elmentName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSgsn_Number</name>
<signature>void SetSgsn_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>Sgsn_Number</elementName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSgsn_Number</name>
<signature>const ISDN_AddressString&amp; GetSgsn_Number() const</signature>
<elementName>Sgsn_Number</elementName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSgsn_Number</name>
<signature>bool OptionSgsn_Number() const</signature>
<elementName>Sgsn_Number</elementName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSelectedLSAIdentity</name>
<signature>void SetSelectedLSAIdentity(LSAIdentity* element)</signature>
<elmentName>SelectedLSAIdentity</elmentName>
<asnElementName>selectedLSAIdentity</asnElementName>
<elementTypeName>LSAIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSelectedLSAIdentity</name>
<signature>void SetSelectedLSAIdentity(const LSAIdentity&amp; element)</signature>
<elementName>SelectedLSAIdentity</elementName>
<asnElementName>selectedLSAIdentity</asnElementName>
<elementTypeName>LSAIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSelectedLSAIdentity</name>
<signature>const LSAIdentity&amp; GetSelectedLSAIdentity() const</signature>
<elementName>SelectedLSAIdentity</elementName>
<asnElementName>selectedLSAIdentity</asnElementName>
<elementTypeName>LSAIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSelectedLSAIdentity</name>
<signature>bool OptionSelectedLSAIdentity() const</signature>
<elementName>SelectedLSAIdentity</elementName>
<asnElementName>selectedLSAIdentity</asnElementName>
<elementTypeName>LSAIdentity</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSai_Present</name>
<signature>void SetSai_Present(Sai_Present* element)</signature>
<elmentName>Sai_Present</elmentName>
<asnElementName>sai-Present</asnElementName>
<elementTypeName>Sai_Present</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSai_Present</name>
<signature>void SetSai_Present(const Sai_Present&amp; element)</signature>
<elementName>Sai_Present</elementName>
<asnElementName>sai-Present</asnElementName>
<elementTypeName>Sai_Present</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSai_Present</name>
<signature>const Sai_Present&amp; GetSai_Present() const</signature>
<elementName>Sai_Present</elementName>
<asnElementName>sai-Present</asnElementName>
<elementTypeName>Sai_Present</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSai_Present</name>
<signature>bool OptionSai_Present() const</signature>
<elementName>Sai_Present</elementName>
<asnElementName>sai-Present</asnElementName>
<elementTypeName>Sai_Present</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGeodeticInformation</name>
<signature>void SetGeodeticInformation(GeodeticInformation* element)</signature>
<elmentName>GeodeticInformation</elmentName>
<asnElementName>geodeticInformation</asnElementName>
<elementTypeName>GeodeticInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGeodeticInformation</name>
<signature>void SetGeodeticInformation(const GeodeticInformation&amp; element)</signature>
<elementName>GeodeticInformation</elementName>
<asnElementName>geodeticInformation</asnElementName>
<elementTypeName>GeodeticInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGeodeticInformation</name>
<signature>const GeodeticInformation&amp; GetGeodeticInformation() const</signature>
<elementName>GeodeticInformation</elementName>
<asnElementName>geodeticInformation</asnElementName>
<elementTypeName>GeodeticInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGeodeticInformation</name>
<signature>bool OptionGeodeticInformation() const</signature>
<elementName>GeodeticInformation</elementName>
<asnElementName>geodeticInformation</asnElementName>
<elementTypeName>GeodeticInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCurrentLocationRetrieved</name>
<signature>void SetCurrentLocationRetrieved(CurrentLocationRetrieved* element)</signature>
<elmentName>CurrentLocationRetrieved</elmentName>
<asnElementName>currentLocationRetrieved</asnElementName>
<elementTypeName>CurrentLocationRetrieved</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCurrentLocationRetrieved</name>
<signature>void SetCurrentLocationRetrieved(const CurrentLocationRetrieved&amp; element)</signature>
<elementName>CurrentLocationRetrieved</elementName>
<asnElementName>currentLocationRetrieved</asnElementName>
<elementTypeName>CurrentLocationRetrieved</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCurrentLocationRetrieved</name>
<signature>const CurrentLocationRetrieved&amp; GetCurrentLocationRetrieved() const</signature>
<elementName>CurrentLocationRetrieved</elementName>
<asnElementName>currentLocationRetrieved</asnElementName>
<elementTypeName>CurrentLocationRetrieved</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCurrentLocationRetrieved</name>
<signature>bool OptionCurrentLocationRetrieved() const</signature>
<elementName>CurrentLocationRetrieved</elementName>
<asnElementName>currentLocationRetrieved</asnElementName>
<elementTypeName>CurrentLocationRetrieved</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAgeOfLocationInformation</name>
<signature>void SetAgeOfLocationInformation(AgeOfLocationInformation* element)</signature>
<elmentName>AgeOfLocationInformation</elmentName>
<asnElementName>ageOfLocationInformation</asnElementName>
<elementTypeName>AgeOfLocationInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAgeOfLocationInformation</name>
<signature>void SetAgeOfLocationInformation(const AgeOfLocationInformation&amp; element)</signature>
<elementName>AgeOfLocationInformation</elementName>
<asnElementName>ageOfLocationInformation</asnElementName>
<elementTypeName>AgeOfLocationInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAgeOfLocationInformation</name>
<signature>const AgeOfLocationInformation&amp; GetAgeOfLocationInformation() const</signature>
<elementName>AgeOfLocationInformation</elementName>
<asnElementName>ageOfLocationInformation</asnElementName>
<elementTypeName>AgeOfLocationInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAgeOfLocationInformation</name>
<signature>bool OptionAgeOfLocationInformation() const</signature>
<elementName>AgeOfLocationInformation</elementName>
<asnElementName>ageOfLocationInformation</asnElementName>
<elementTypeName>AgeOfLocationInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetUserCSGInformation</name>
<signature>void SetUserCSGInformation(UserCSGInformation* element)</signature>
<elmentName>UserCSGInformation</elmentName>
<asnElementName>userCSGInformation</asnElementName>
<elementTypeName>UserCSGInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetUserCSGInformation</name>
<signature>void SetUserCSGInformation(const UserCSGInformation&amp; element)</signature>
<elementName>UserCSGInformation</elementName>
<asnElementName>userCSGInformation</asnElementName>
<elementTypeName>UserCSGInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetUserCSGInformation</name>
<signature>const UserCSGInformation&amp; GetUserCSGInformation() const</signature>
<elementName>UserCSGInformation</elementName>
<asnElementName>userCSGInformation</asnElementName>
<elementTypeName>UserCSGInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionUserCSGInformation</name>
<signature>bool OptionUserCSGInformation() const</signature>
<elementName>UserCSGInformation</elementName>
<asnElementName>userCSGInformation</asnElementName>
<elementTypeName>UserCSGInformation</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- LocationInformationGPRS information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>LocationInformationGPRS ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    cellGlobalIdOrServiceAreaIdOrLAI [0] IMPLICIT CellGlobalIdOrServiceAreaIdOrLAI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    routeingAreaIdentity [1] IMPLICIT RAIdentity -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    geographicalInformation [2] IMPLICIT GeographicalInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sgsn-Number [3] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    selectedLSAIdentity [4] IMPLICIT LSAIdentity -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [5] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sai-Present [6] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    geodeticInformation [7] IMPLICIT GeodeticInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    currentLocationRetrieved [8] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ageOfLocationInformation [9] IMPLICIT AgeOfLocationInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    userCSGInformation [10] IMPLICIT UserCSGInformation -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

