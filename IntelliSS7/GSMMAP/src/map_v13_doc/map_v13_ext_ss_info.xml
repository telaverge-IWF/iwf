<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>Ext_SS_Info</className>
<asnTypeName>Ext-SS-Info</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceForwardingInfo</name>
<signature>void SetChoiceForwardingInfo(Ext_ForwInfo* choice)</signature>
<choiceName>ForwardingInfo</choiceName>
<asnChoiceName>forwardingInfo</asnChoiceName>
<choiceTypeName>Ext_ForwInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceForwardingInfo</name>
<signature>void SetChoiceForwardingInfo(const Ext_ForwInfo&amp; choice)</signature>
<choiceName>ForwardingInfo</choiceName>
<asnChoiceName>forwardingInfo</asnChoiceName>
<choiceTypeName>Ext_ForwInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceForwardingInfo</name>
<signature>const Ext_ForwInfo&amp; GetChoiceForwardingInfo() const</signature>
<choiceName>ForwardingInfo</choiceName>
<asnChoiceName>forwardingInfo</asnChoiceName>
<choiceTypeName>Ext_ForwInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceForwardingInfo</name>
<signature>bool ChoiceForwardingInfo() const</signature>
<choiceName>ForwardingInfo</choiceName>
<asnChoiceName>forwardingInfo</asnChoiceName>
<choiceTypeName>Ext_ForwInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCallBarringInfo</name>
<signature>void SetChoiceCallBarringInfo(Ext_CallBarInfo* choice)</signature>
<choiceName>CallBarringInfo</choiceName>
<asnChoiceName>callBarringInfo</asnChoiceName>
<choiceTypeName>Ext_CallBarInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCallBarringInfo</name>
<signature>void SetChoiceCallBarringInfo(const Ext_CallBarInfo&amp; choice)</signature>
<choiceName>CallBarringInfo</choiceName>
<asnChoiceName>callBarringInfo</asnChoiceName>
<choiceTypeName>Ext_CallBarInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCallBarringInfo</name>
<signature>const Ext_CallBarInfo&amp; GetChoiceCallBarringInfo() const</signature>
<choiceName>CallBarringInfo</choiceName>
<asnChoiceName>callBarringInfo</asnChoiceName>
<choiceTypeName>Ext_CallBarInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCallBarringInfo</name>
<signature>bool ChoiceCallBarringInfo() const</signature>
<choiceName>CallBarringInfo</choiceName>
<asnChoiceName>callBarringInfo</asnChoiceName>
<choiceTypeName>Ext_CallBarInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCug_Info</name>
<signature>void SetChoiceCug_Info(CUG_Info* choice)</signature>
<choiceName>Cug_Info</choiceName>
<asnChoiceName>cug-Info</asnChoiceName>
<choiceTypeName>CUG_Info</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCug_Info</name>
<signature>void SetChoiceCug_Info(const CUG_Info&amp; choice)</signature>
<choiceName>Cug_Info</choiceName>
<asnChoiceName>cug-Info</asnChoiceName>
<choiceTypeName>CUG_Info</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCug_Info</name>
<signature>const CUG_Info&amp; GetChoiceCug_Info() const</signature>
<choiceName>Cug_Info</choiceName>
<asnChoiceName>cug-Info</asnChoiceName>
<choiceTypeName>CUG_Info</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCug_Info</name>
<signature>bool ChoiceCug_Info() const</signature>
<choiceName>Cug_Info</choiceName>
<asnChoiceName>cug-Info</asnChoiceName>
<choiceTypeName>CUG_Info</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceSs_Data</name>
<signature>void SetChoiceSs_Data(Ext_SS_Data* choice)</signature>
<choiceName>Ss_Data</choiceName>
<asnChoiceName>ss-Data</asnChoiceName>
<choiceTypeName>Ext_SS_Data</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceSs_Data</name>
<signature>void SetChoiceSs_Data(const Ext_SS_Data&amp; choice)</signature>
<choiceName>Ss_Data</choiceName>
<asnChoiceName>ss-Data</asnChoiceName>
<choiceTypeName>Ext_SS_Data</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceSs_Data</name>
<signature>const Ext_SS_Data&amp; GetChoiceSs_Data() const</signature>
<choiceName>Ss_Data</choiceName>
<asnChoiceName>ss-Data</asnChoiceName>
<choiceTypeName>Ext_SS_Data</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceSs_Data</name>
<signature>bool ChoiceSs_Data() const</signature>
<choiceName>Ss_Data</choiceName>
<asnChoiceName>ss-Data</asnChoiceName>
<choiceTypeName>Ext_SS_Data</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceEmlpp_Info</name>
<signature>void SetChoiceEmlpp_Info(EMLPP_Info* choice)</signature>
<choiceName>Emlpp_Info</choiceName>
<asnChoiceName>emlpp-Info</asnChoiceName>
<choiceTypeName>EMLPP_Info</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceEmlpp_Info</name>
<signature>void SetChoiceEmlpp_Info(const EMLPP_Info&amp; choice)</signature>
<choiceName>Emlpp_Info</choiceName>
<asnChoiceName>emlpp-Info</asnChoiceName>
<choiceTypeName>EMLPP_Info</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceEmlpp_Info</name>
<signature>const EMLPP_Info&amp; GetChoiceEmlpp_Info() const</signature>
<choiceName>Emlpp_Info</choiceName>
<asnChoiceName>emlpp-Info</asnChoiceName>
<choiceTypeName>EMLPP_Info</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceEmlpp_Info</name>
<signature>bool ChoiceEmlpp_Info() const</signature>
<choiceName>Emlpp_Info</choiceName>
<asnChoiceName>emlpp-Info</asnChoiceName>
<choiceTypeName>EMLPP_Info</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- Ext-SS-Info information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>Ext-SS-Info ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    forwardingInfo [0] IMPLICIT Ext-ForwInfo -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callBarringInfo [1] IMPLICIT Ext-CallBarInfo -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cug-Info [2] IMPLICIT CUG-Info -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-Data [3] IMPLICIT Ext-SS-Data -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    emlpp-Info [4] IMPLICIT EMLPP-Info -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

