<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>VoiceBroadcastData</className>
<asnTypeName>VoiceBroadcastData</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetGroupid</name>
<signature>void SetGroupid(GroupId* element)</signature>
<elmentName>Groupid</elmentName>
<asnElementName>groupid</asnElementName>
<elementTypeName>GroupId</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGroupid</name>
<signature>void SetGroupid(const GroupId&amp; element)</signature>
<elementName>Groupid</elementName>
<asnElementName>groupid</asnElementName>
<elementTypeName>GroupId</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGroupid</name>
<signature>const GroupId&amp; GetGroupid() const</signature>
<elementName>Groupid</elementName>
<asnElementName>groupid</asnElementName>
<elementTypeName>GroupId</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetBroadcastInitEntitlement</name>
<signature>void SetBroadcastInitEntitlement(BroadcastInitEntitlement* element)</signature>
<elmentName>BroadcastInitEntitlement</elmentName>
<asnElementName>broadcastInitEntitlement</asnElementName>
<elementTypeName>BroadcastInitEntitlement</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBroadcastInitEntitlement</name>
<signature>void SetBroadcastInitEntitlement(const BroadcastInitEntitlement&amp; element)</signature>
<elementName>BroadcastInitEntitlement</elementName>
<asnElementName>broadcastInitEntitlement</asnElementName>
<elementTypeName>BroadcastInitEntitlement</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBroadcastInitEntitlement</name>
<signature>const BroadcastInitEntitlement&amp; GetBroadcastInitEntitlement() const</signature>
<elementName>BroadcastInitEntitlement</elementName>
<asnElementName>broadcastInitEntitlement</asnElementName>
<elementTypeName>BroadcastInitEntitlement</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBroadcastInitEntitlement</name>
<signature>bool OptionBroadcastInitEntitlement() const</signature>
<elementName>BroadcastInitEntitlement</elementName>
<asnElementName>broadcastInitEntitlement</asnElementName>
<elementTypeName>BroadcastInitEntitlement</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLongGroupId</name>
<signature>void SetLongGroupId(Long_GroupId* element)</signature>
<elmentName>LongGroupId</elmentName>
<asnElementName>longGroupId</asnElementName>
<elementTypeName>Long_GroupId</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLongGroupId</name>
<signature>void SetLongGroupId(const Long_GroupId&amp; element)</signature>
<elementName>LongGroupId</elementName>
<asnElementName>longGroupId</asnElementName>
<elementTypeName>Long_GroupId</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLongGroupId</name>
<signature>const Long_GroupId&amp; GetLongGroupId() const</signature>
<elementName>LongGroupId</elementName>
<asnElementName>longGroupId</asnElementName>
<elementTypeName>Long_GroupId</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLongGroupId</name>
<signature>bool OptionLongGroupId() const</signature>
<elementName>LongGroupId</elementName>
<asnElementName>longGroupId</asnElementName>
<elementTypeName>Long_GroupId</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- VoiceBroadcastData information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>VoiceBroadcastData ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    groupid GroupId -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    broadcastInitEntitlement NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    longGroupId [0] IMPLICIT Long-GroupId -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

