<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>APN_Configuration</className>
<asnTypeName>APN-Configuration</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetContextId</name>
<signature>void SetContextId(ContextId* element)</signature>
<elmentName>ContextId</elmentName>
<asnElementName>contextId</asnElementName>
<elementTypeName>ContextId</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetContextId</name>
<signature>void SetContextId(const ContextId&amp; element)</signature>
<elementName>ContextId</elementName>
<asnElementName>contextId</asnElementName>
<elementTypeName>ContextId</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetContextId</name>
<signature>const ContextId&amp; GetContextId() const</signature>
<elementName>ContextId</elementName>
<asnElementName>contextId</asnElementName>
<elementTypeName>ContextId</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetPdn_Type</name>
<signature>void SetPdn_Type(PDN_Type* element)</signature>
<elmentName>Pdn_Type</elmentName>
<asnElementName>pdn-Type</asnElementName>
<elementTypeName>PDN_Type</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPdn_Type</name>
<signature>void SetPdn_Type(const PDN_Type&amp; element)</signature>
<elementName>Pdn_Type</elementName>
<asnElementName>pdn-Type</asnElementName>
<elementTypeName>PDN_Type</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPdn_Type</name>
<signature>const PDN_Type&amp; GetPdn_Type() const</signature>
<elementName>Pdn_Type</elementName>
<asnElementName>pdn-Type</asnElementName>
<elementTypeName>PDN_Type</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetServedPartyIP_IPv4_Address</name>
<signature>void SetServedPartyIP_IPv4_Address(PDP_Address* element)</signature>
<elmentName>ServedPartyIP_IPv4_Address</elmentName>
<asnElementName>servedPartyIP-IPv4-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServedPartyIP_IPv4_Address</name>
<signature>void SetServedPartyIP_IPv4_Address(const PDP_Address&amp; element)</signature>
<elementName>ServedPartyIP_IPv4_Address</elementName>
<asnElementName>servedPartyIP-IPv4-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServedPartyIP_IPv4_Address</name>
<signature>const PDP_Address&amp; GetServedPartyIP_IPv4_Address() const</signature>
<elementName>ServedPartyIP_IPv4_Address</elementName>
<asnElementName>servedPartyIP-IPv4-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionServedPartyIP_IPv4_Address</name>
<signature>bool OptionServedPartyIP_IPv4_Address() const</signature>
<elementName>ServedPartyIP_IPv4_Address</elementName>
<asnElementName>servedPartyIP-IPv4-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetApn</name>
<signature>void SetApn(APN* element)</signature>
<elmentName>Apn</elmentName>
<asnElementName>apn</asnElementName>
<elementTypeName>APN</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetApn</name>
<signature>void SetApn(const APN&amp; element)</signature>
<elementName>Apn</elementName>
<asnElementName>apn</asnElementName>
<elementTypeName>APN</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetApn</name>
<signature>const APN&amp; GetApn() const</signature>
<elementName>Apn</elementName>
<asnElementName>apn</asnElementName>
<elementTypeName>APN</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetEps_qos_Subscribed</name>
<signature>void SetEps_qos_Subscribed(EPS_QoS_Subscribed* element)</signature>
<elmentName>Eps_qos_Subscribed</elmentName>
<asnElementName>eps-qos-Subscribed</asnElementName>
<elementTypeName>EPS_QoS_Subscribed</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEps_qos_Subscribed</name>
<signature>void SetEps_qos_Subscribed(const EPS_QoS_Subscribed&amp; element)</signature>
<elementName>Eps_qos_Subscribed</elementName>
<asnElementName>eps-qos-Subscribed</asnElementName>
<elementTypeName>EPS_QoS_Subscribed</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEps_qos_Subscribed</name>
<signature>const EPS_QoS_Subscribed&amp; GetEps_qos_Subscribed() const</signature>
<elementName>Eps_qos_Subscribed</elementName>
<asnElementName>eps-qos-Subscribed</asnElementName>
<elementTypeName>EPS_QoS_Subscribed</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetPdn_gw_Identity</name>
<signature>void SetPdn_gw_Identity(PDN_GW_Identity* element)</signature>
<elmentName>Pdn_gw_Identity</elmentName>
<asnElementName>pdn-gw-Identity</asnElementName>
<elementTypeName>PDN_GW_Identity</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPdn_gw_Identity</name>
<signature>void SetPdn_gw_Identity(const PDN_GW_Identity&amp; element)</signature>
<elementName>Pdn_gw_Identity</elementName>
<asnElementName>pdn-gw-Identity</asnElementName>
<elementTypeName>PDN_GW_Identity</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPdn_gw_Identity</name>
<signature>const PDN_GW_Identity&amp; GetPdn_gw_Identity() const</signature>
<elementName>Pdn_gw_Identity</elementName>
<asnElementName>pdn-gw-Identity</asnElementName>
<elementTypeName>PDN_GW_Identity</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPdn_gw_Identity</name>
<signature>bool OptionPdn_gw_Identity() const</signature>
<elementName>Pdn_gw_Identity</elementName>
<asnElementName>pdn-gw-Identity</asnElementName>
<elementTypeName>PDN_GW_Identity</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetPdn_gw_AllocationType</name>
<signature>void SetPdn_gw_AllocationType(PDN_GW_AllocationType* element)</signature>
<elmentName>Pdn_gw_AllocationType</elmentName>
<asnElementName>pdn-gw-AllocationType</asnElementName>
<elementTypeName>PDN_GW_AllocationType</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPdn_gw_AllocationType</name>
<signature>void SetPdn_gw_AllocationType(const PDN_GW_AllocationType&amp; element)</signature>
<elementName>Pdn_gw_AllocationType</elementName>
<asnElementName>pdn-gw-AllocationType</asnElementName>
<elementTypeName>PDN_GW_AllocationType</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPdn_gw_AllocationType</name>
<signature>const PDN_GW_AllocationType&amp; GetPdn_gw_AllocationType() const</signature>
<elementName>Pdn_gw_AllocationType</elementName>
<asnElementName>pdn-gw-AllocationType</asnElementName>
<elementTypeName>PDN_GW_AllocationType</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPdn_gw_AllocationType</name>
<signature>bool OptionPdn_gw_AllocationType() const</signature>
<elementName>Pdn_gw_AllocationType</elementName>
<asnElementName>pdn-gw-AllocationType</asnElementName>
<elementTypeName>PDN_GW_AllocationType</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetVplmnAddressAllowed</name>
<signature>void SetVplmnAddressAllowed(VplmnAddressAllowed* element)</signature>
<elmentName>VplmnAddressAllowed</elmentName>
<asnElementName>vplmnAddressAllowed</asnElementName>
<elementTypeName>VplmnAddressAllowed</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVplmnAddressAllowed</name>
<signature>void SetVplmnAddressAllowed(const VplmnAddressAllowed&amp; element)</signature>
<elementName>VplmnAddressAllowed</elementName>
<asnElementName>vplmnAddressAllowed</asnElementName>
<elementTypeName>VplmnAddressAllowed</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVplmnAddressAllowed</name>
<signature>const VplmnAddressAllowed&amp; GetVplmnAddressAllowed() const</signature>
<elementName>VplmnAddressAllowed</elementName>
<asnElementName>vplmnAddressAllowed</asnElementName>
<elementTypeName>VplmnAddressAllowed</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVplmnAddressAllowed</name>
<signature>bool OptionVplmnAddressAllowed() const</signature>
<elementName>VplmnAddressAllowed</elementName>
<asnElementName>vplmnAddressAllowed</asnElementName>
<elementTypeName>VplmnAddressAllowed</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetChargingCharacteristics</name>
<signature>void SetChargingCharacteristics(ChargingCharacteristics* element)</signature>
<elmentName>ChargingCharacteristics</elmentName>
<asnElementName>chargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChargingCharacteristics</name>
<signature>void SetChargingCharacteristics(const ChargingCharacteristics&amp; element)</signature>
<elementName>ChargingCharacteristics</elementName>
<asnElementName>chargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChargingCharacteristics</name>
<signature>const ChargingCharacteristics&amp; GetChargingCharacteristics() const</signature>
<elementName>ChargingCharacteristics</elementName>
<asnElementName>chargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionChargingCharacteristics</name>
<signature>bool OptionChargingCharacteristics() const</signature>
<elementName>ChargingCharacteristics</elementName>
<asnElementName>chargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAmbr</name>
<signature>void SetAmbr(AMBR* element)</signature>
<elmentName>Ambr</elmentName>
<asnElementName>ambr</asnElementName>
<elementTypeName>AMBR</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAmbr</name>
<signature>void SetAmbr(const AMBR&amp; element)</signature>
<elementName>Ambr</elementName>
<asnElementName>ambr</asnElementName>
<elementTypeName>AMBR</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAmbr</name>
<signature>const AMBR&amp; GetAmbr() const</signature>
<elementName>Ambr</elementName>
<asnElementName>ambr</asnElementName>
<elementTypeName>AMBR</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAmbr</name>
<signature>bool OptionAmbr() const</signature>
<elementName>Ambr</elementName>
<asnElementName>ambr</asnElementName>
<elementTypeName>AMBR</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSpecificAPNInfoList</name>
<signature>void SetSpecificAPNInfoList(SpecificAPNInfoList* element)</signature>
<elmentName>SpecificAPNInfoList</elmentName>
<asnElementName>specificAPNInfoList</asnElementName>
<elementTypeName>SpecificAPNInfoList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSpecificAPNInfoList</name>
<signature>void SetSpecificAPNInfoList(const SpecificAPNInfoList&amp; element)</signature>
<elementName>SpecificAPNInfoList</elementName>
<asnElementName>specificAPNInfoList</asnElementName>
<elementTypeName>SpecificAPNInfoList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSpecificAPNInfoList</name>
<signature>const SpecificAPNInfoList&amp; GetSpecificAPNInfoList() const</signature>
<elementName>SpecificAPNInfoList</elementName>
<asnElementName>specificAPNInfoList</asnElementName>
<elementTypeName>SpecificAPNInfoList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSpecificAPNInfoList</name>
<signature>bool OptionSpecificAPNInfoList() const</signature>
<elementName>SpecificAPNInfoList</elementName>
<asnElementName>specificAPNInfoList</asnElementName>
<elementTypeName>SpecificAPNInfoList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetServedPartyIP_IPv6_Address</name>
<signature>void SetServedPartyIP_IPv6_Address(PDP_Address* element)</signature>
<elmentName>ServedPartyIP_IPv6_Address</elmentName>
<asnElementName>servedPartyIP-IPv6-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServedPartyIP_IPv6_Address</name>
<signature>void SetServedPartyIP_IPv6_Address(const PDP_Address&amp; element)</signature>
<elementName>ServedPartyIP_IPv6_Address</elementName>
<asnElementName>servedPartyIP-IPv6-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServedPartyIP_IPv6_Address</name>
<signature>const PDP_Address&amp; GetServedPartyIP_IPv6_Address() const</signature>
<elementName>ServedPartyIP_IPv6_Address</elementName>
<asnElementName>servedPartyIP-IPv6-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionServedPartyIP_IPv6_Address</name>
<signature>bool OptionServedPartyIP_IPv6_Address() const</signature>
<elementName>ServedPartyIP_IPv6_Address</elementName>
<asnElementName>servedPartyIP-IPv6-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetApn_oi_Replacement</name>
<signature>void SetApn_oi_Replacement(APN_OI_Replacement* element)</signature>
<elmentName>Apn_oi_Replacement</elmentName>
<asnElementName>apn-oi-Replacement</asnElementName>
<elementTypeName>APN_OI_Replacement</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetApn_oi_Replacement</name>
<signature>void SetApn_oi_Replacement(const APN_OI_Replacement&amp; element)</signature>
<elementName>Apn_oi_Replacement</elementName>
<asnElementName>apn-oi-Replacement</asnElementName>
<elementTypeName>APN_OI_Replacement</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetApn_oi_Replacement</name>
<signature>const APN_OI_Replacement&amp; GetApn_oi_Replacement() const</signature>
<elementName>Apn_oi_Replacement</elementName>
<asnElementName>apn-oi-Replacement</asnElementName>
<elementTypeName>APN_OI_Replacement</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionApn_oi_Replacement</name>
<signature>bool OptionApn_oi_Replacement() const</signature>
<elementName>Apn_oi_Replacement</elementName>
<asnElementName>apn-oi-Replacement</asnElementName>
<elementTypeName>APN_OI_Replacement</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSipto_Permission</name>
<signature>void SetSipto_Permission(SIPTO_Permission* element)</signature>
<elmentName>Sipto_Permission</elmentName>
<asnElementName>sipto-Permission</asnElementName>
<elementTypeName>SIPTO_Permission</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSipto_Permission</name>
<signature>void SetSipto_Permission(const SIPTO_Permission&amp; element)</signature>
<elementName>Sipto_Permission</elementName>
<asnElementName>sipto-Permission</asnElementName>
<elementTypeName>SIPTO_Permission</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSipto_Permission</name>
<signature>const SIPTO_Permission&amp; GetSipto_Permission() const</signature>
<elementName>Sipto_Permission</elementName>
<asnElementName>sipto-Permission</asnElementName>
<elementTypeName>SIPTO_Permission</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSipto_Permission</name>
<signature>bool OptionSipto_Permission() const</signature>
<elementName>Sipto_Permission</elementName>
<asnElementName>sipto-Permission</asnElementName>
<elementTypeName>SIPTO_Permission</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLipa_Permission</name>
<signature>void SetLipa_Permission(LIPA_Permission* element)</signature>
<elmentName>Lipa_Permission</elmentName>
<asnElementName>lipa-Permission</asnElementName>
<elementTypeName>LIPA_Permission</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLipa_Permission</name>
<signature>void SetLipa_Permission(const LIPA_Permission&amp; element)</signature>
<elementName>Lipa_Permission</elementName>
<asnElementName>lipa-Permission</asnElementName>
<elementTypeName>LIPA_Permission</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLipa_Permission</name>
<signature>const LIPA_Permission&amp; GetLipa_Permission() const</signature>
<elementName>Lipa_Permission</elementName>
<asnElementName>lipa-Permission</asnElementName>
<elementTypeName>LIPA_Permission</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLipa_Permission</name>
<signature>bool OptionLipa_Permission() const</signature>
<elementName>Lipa_Permission</elementName>
<asnElementName>lipa-Permission</asnElementName>
<elementTypeName>LIPA_Permission</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- APN-Configuration information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>APN-Configuration ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    contextId [0] IMPLICIT ContextId -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pdn-Type [1] IMPLICIT PDN-Type -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    servedPartyIP-IPv4-Address [2] IMPLICIT PDP-Address -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    apn [3] IMPLICIT APN -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    eps-qos-Subscribed [4] IMPLICIT EPS-QoS-Subscribed -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pdn-gw-Identity [5] IMPLICIT PDN-GW-Identity -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pdn-gw-AllocationType [6] IMPLICIT PDN-GW-AllocationType -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    vplmnAddressAllowed [7] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    chargingCharacteristics [8] IMPLICIT ChargingCharacteristics -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ambr [9] IMPLICIT AMBR -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    specificAPNInfoList [10] IMPLICIT SpecificAPNInfoList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [11] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    servedPartyIP-IPv6-Address [12] IMPLICIT PDP-Address -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    apn-oi-Replacement [13] IMPLICIT APN-OI-Replacement -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sipto-Permission [14] IMPLICIT SIPTO-Permission -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lipa-Permission [15] IMPLICIT LIPA-Permission -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

