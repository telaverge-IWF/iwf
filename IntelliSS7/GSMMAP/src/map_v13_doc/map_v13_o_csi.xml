<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>O_CSI</className>
<asnTypeName>O-CSI</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetO_BcsmCamelTDPDataList</name>
<signature>void SetO_BcsmCamelTDPDataList(O_BcsmCamelTDPDataList* element)</signature>
<elmentName>O_BcsmCamelTDPDataList</elmentName>
<asnElementName>o-BcsmCamelTDPDataList</asnElementName>
<elementTypeName>O_BcsmCamelTDPDataList</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetO_BcsmCamelTDPDataList</name>
<signature>void SetO_BcsmCamelTDPDataList(const O_BcsmCamelTDPDataList&amp; element)</signature>
<elementName>O_BcsmCamelTDPDataList</elementName>
<asnElementName>o-BcsmCamelTDPDataList</asnElementName>
<elementTypeName>O_BcsmCamelTDPDataList</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetO_BcsmCamelTDPDataList</name>
<signature>const O_BcsmCamelTDPDataList&amp; GetO_BcsmCamelTDPDataList() const</signature>
<elementName>O_BcsmCamelTDPDataList</elementName>
<asnElementName>o-BcsmCamelTDPDataList</asnElementName>
<elementTypeName>O_BcsmCamelTDPDataList</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCamelCapabilityHandling</name>
<signature>void SetCamelCapabilityHandling(CamelCapabilityHandling* element)</signature>
<elmentName>CamelCapabilityHandling</elmentName>
<asnElementName>camelCapabilityHandling</asnElementName>
<elementTypeName>CamelCapabilityHandling</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCamelCapabilityHandling</name>
<signature>void SetCamelCapabilityHandling(const CamelCapabilityHandling&amp; element)</signature>
<elementName>CamelCapabilityHandling</elementName>
<asnElementName>camelCapabilityHandling</asnElementName>
<elementTypeName>CamelCapabilityHandling</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCamelCapabilityHandling</name>
<signature>const CamelCapabilityHandling&amp; GetCamelCapabilityHandling() const</signature>
<elementName>CamelCapabilityHandling</elementName>
<asnElementName>camelCapabilityHandling</asnElementName>
<elementTypeName>CamelCapabilityHandling</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCamelCapabilityHandling</name>
<signature>bool OptionCamelCapabilityHandling() const</signature>
<elementName>CamelCapabilityHandling</elementName>
<asnElementName>camelCapabilityHandling</asnElementName>
<elementTypeName>CamelCapabilityHandling</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNotificationToCSE</name>
<signature>void SetNotificationToCSE(NotificationToCSE* element)</signature>
<elmentName>NotificationToCSE</elmentName>
<asnElementName>notificationToCSE</asnElementName>
<elementTypeName>NotificationToCSE</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNotificationToCSE</name>
<signature>void SetNotificationToCSE(const NotificationToCSE&amp; element)</signature>
<elementName>NotificationToCSE</elementName>
<asnElementName>notificationToCSE</asnElementName>
<elementTypeName>NotificationToCSE</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNotificationToCSE</name>
<signature>const NotificationToCSE&amp; GetNotificationToCSE() const</signature>
<elementName>NotificationToCSE</elementName>
<asnElementName>notificationToCSE</asnElementName>
<elementTypeName>NotificationToCSE</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNotificationToCSE</name>
<signature>bool OptionNotificationToCSE() const</signature>
<elementName>NotificationToCSE</elementName>
<asnElementName>notificationToCSE</asnElementName>
<elementTypeName>NotificationToCSE</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCsiActive</name>
<signature>void SetCsiActive(CsiActive* element)</signature>
<elmentName>CsiActive</elmentName>
<asnElementName>csiActive</asnElementName>
<elementTypeName>CsiActive</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCsiActive</name>
<signature>void SetCsiActive(const CsiActive&amp; element)</signature>
<elementName>CsiActive</elementName>
<asnElementName>csiActive</asnElementName>
<elementTypeName>CsiActive</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCsiActive</name>
<signature>const CsiActive&amp; GetCsiActive() const</signature>
<elementName>CsiActive</elementName>
<asnElementName>csiActive</asnElementName>
<elementTypeName>CsiActive</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCsiActive</name>
<signature>bool OptionCsiActive() const</signature>
<elementName>CsiActive</elementName>
<asnElementName>csiActive</asnElementName>
<elementTypeName>CsiActive</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- O-CSI information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 5]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>O-CSI ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    o-BcsmCamelTDPDataList O-BcsmCamelTDPDataList -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    camelCapabilityHandling [0] IMPLICIT CamelCapabilityHandling -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    notificationToCSE [1] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    csiActive [2] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

