<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SubscriberLocationReport_Res</className>
<asnTypeName>SubscriberLocationReport-Res</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNa_ESRK</name>
<signature>void SetNa_ESRK(ISDN_AddressString* element)</signature>
<elmentName>Na_ESRK</elmentName>
<asnElementName>na-ESRK</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNa_ESRK</name>
<signature>void SetNa_ESRK(const ISDN_AddressString&amp; element)</signature>
<elementName>Na_ESRK</elementName>
<asnElementName>na-ESRK</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNa_ESRK</name>
<signature>const ISDN_AddressString&amp; GetNa_ESRK() const</signature>
<elementName>Na_ESRK</elementName>
<asnElementName>na-ESRK</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNa_ESRK</name>
<signature>bool OptionNa_ESRK() const</signature>
<elementName>Na_ESRK</elementName>
<asnElementName>na-ESRK</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNa_ESRD</name>
<signature>void SetNa_ESRD(ISDN_AddressString* element)</signature>
<elmentName>Na_ESRD</elmentName>
<asnElementName>na-ESRD</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNa_ESRD</name>
<signature>void SetNa_ESRD(const ISDN_AddressString&amp; element)</signature>
<elementName>Na_ESRD</elementName>
<asnElementName>na-ESRD</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNa_ESRD</name>
<signature>const ISDN_AddressString&amp; GetNa_ESRD() const</signature>
<elementName>Na_ESRD</elementName>
<asnElementName>na-ESRD</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNa_ESRD</name>
<signature>bool OptionNa_ESRD() const</signature>
<elementName>Na_ESRD</elementName>
<asnElementName>na-ESRD</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetH_gmlc_Address</name>
<signature>void SetH_gmlc_Address(GSN_Address* element)</signature>
<elmentName>H_gmlc_Address</elmentName>
<asnElementName>h-gmlc-Address</asnElementName>
<elementTypeName>GSN_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetH_gmlc_Address</name>
<signature>void SetH_gmlc_Address(const GSN_Address&amp; element)</signature>
<elementName>H_gmlc_Address</elementName>
<asnElementName>h-gmlc-Address</asnElementName>
<elementTypeName>GSN_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetH_gmlc_Address</name>
<signature>const GSN_Address&amp; GetH_gmlc_Address() const</signature>
<elementName>H_gmlc_Address</elementName>
<asnElementName>h-gmlc-Address</asnElementName>
<elementTypeName>GSN_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionH_gmlc_Address</name>
<signature>bool OptionH_gmlc_Address() const</signature>
<elementName>H_gmlc_Address</elementName>
<asnElementName>h-gmlc-Address</asnElementName>
<elementTypeName>GSN_Address</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMo_lrShortCircuitIndicator</name>
<signature>void SetMo_lrShortCircuitIndicator(Mo_lrShortCircuitIndicator* element)</signature>
<elmentName>Mo_lrShortCircuitIndicator</elmentName>
<asnElementName>mo-lrShortCircuitIndicator</asnElementName>
<elementTypeName>Mo_lrShortCircuitIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMo_lrShortCircuitIndicator</name>
<signature>void SetMo_lrShortCircuitIndicator(const Mo_lrShortCircuitIndicator&amp; element)</signature>
<elementName>Mo_lrShortCircuitIndicator</elementName>
<asnElementName>mo-lrShortCircuitIndicator</asnElementName>
<elementTypeName>Mo_lrShortCircuitIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMo_lrShortCircuitIndicator</name>
<signature>const Mo_lrShortCircuitIndicator&amp; GetMo_lrShortCircuitIndicator() const</signature>
<elementName>Mo_lrShortCircuitIndicator</elementName>
<asnElementName>mo-lrShortCircuitIndicator</asnElementName>
<elementTypeName>Mo_lrShortCircuitIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMo_lrShortCircuitIndicator</name>
<signature>bool OptionMo_lrShortCircuitIndicator() const</signature>
<elementName>Mo_lrShortCircuitIndicator</elementName>
<asnElementName>mo-lrShortCircuitIndicator</asnElementName>
<elementTypeName>Mo_lrShortCircuitIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetReportingPLMNList</name>
<signature>void SetReportingPLMNList(ReportingPLMNList* element)</signature>
<elmentName>ReportingPLMNList</elmentName>
<asnElementName>reportingPLMNList</asnElementName>
<elementTypeName>ReportingPLMNList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetReportingPLMNList</name>
<signature>void SetReportingPLMNList(const ReportingPLMNList&amp; element)</signature>
<elementName>ReportingPLMNList</elementName>
<asnElementName>reportingPLMNList</asnElementName>
<elementTypeName>ReportingPLMNList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetReportingPLMNList</name>
<signature>const ReportingPLMNList&amp; GetReportingPLMNList() const</signature>
<elementName>ReportingPLMNList</elementName>
<asnElementName>reportingPLMNList</asnElementName>
<elementTypeName>ReportingPLMNList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionReportingPLMNList</name>
<signature>bool OptionReportingPLMNList() const</signature>
<elementName>ReportingPLMNList</elementName>
<asnElementName>reportingPLMNList</asnElementName>
<elementTypeName>ReportingPLMNList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLcs_ReferenceNumber</name>
<signature>void SetLcs_ReferenceNumber(LCS_ReferenceNumber* element)</signature>
<elmentName>Lcs_ReferenceNumber</elmentName>
<asnElementName>lcs-ReferenceNumber</asnElementName>
<elementTypeName>LCS_ReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLcs_ReferenceNumber</name>
<signature>void SetLcs_ReferenceNumber(const LCS_ReferenceNumber&amp; element)</signature>
<elementName>Lcs_ReferenceNumber</elementName>
<asnElementName>lcs-ReferenceNumber</asnElementName>
<elementTypeName>LCS_ReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLcs_ReferenceNumber</name>
<signature>const LCS_ReferenceNumber&amp; GetLcs_ReferenceNumber() const</signature>
<elementName>Lcs_ReferenceNumber</elementName>
<asnElementName>lcs-ReferenceNumber</asnElementName>
<elementTypeName>LCS_ReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLcs_ReferenceNumber</name>
<signature>bool OptionLcs_ReferenceNumber() const</signature>
<elementName>Lcs_ReferenceNumber</elementName>
<asnElementName>lcs-ReferenceNumber</asnElementName>
<elementTypeName>LCS_ReferenceNumber</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SubscriberLocationReport-Res information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SubscriberLocationReport-Res ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    extensionContainer ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    na-ESRK [0] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    na-ESRD [1] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    h-gmlc-Address [2] IMPLICIT GSN-Address -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mo-lrShortCircuitIndicator [3] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    reportingPLMNList [4] IMPLICIT ReportingPLMNList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lcs-ReferenceNumber [5] IMPLICIT LCS-ReferenceNumber -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

