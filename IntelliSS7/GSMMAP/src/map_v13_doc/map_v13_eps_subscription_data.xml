<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>EPS_SubscriptionData</className>
<asnTypeName>EPS-SubscriptionData</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetApn_oi_Replacement</name>
<signature>void SetApn_oi_Replacement(APN_OI_Replacement* element)</signature>
<elmentName>Apn_oi_Replacement</elmentName>
<asnElementName>apn-oi-Replacement</asnElementName>
<elementTypeName>APN_OI_Replacement</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetApn_oi_Replacement</name>
<signature>void SetApn_oi_Replacement(const APN_OI_Replacement&amp; element)</signature>
<elementName>Apn_oi_Replacement</elementName>
<asnElementName>apn-oi-Replacement</asnElementName>
<elementTypeName>APN_OI_Replacement</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetApn_oi_Replacement</name>
<signature>const APN_OI_Replacement&amp; GetApn_oi_Replacement() const</signature>
<elementName>Apn_oi_Replacement</elementName>
<asnElementName>apn-oi-Replacement</asnElementName>
<elementTypeName>APN_OI_Replacement</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionApn_oi_Replacement</name>
<signature>bool OptionApn_oi_Replacement() const</signature>
<elementName>Apn_oi_Replacement</elementName>
<asnElementName>apn-oi-Replacement</asnElementName>
<elementTypeName>APN_OI_Replacement</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRfsp_id</name>
<signature>void SetRfsp_id(RFSP_ID* element)</signature>
<elmentName>Rfsp_id</elmentName>
<asnElementName>rfsp-id</asnElementName>
<elementTypeName>RFSP_ID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRfsp_id</name>
<signature>void SetRfsp_id(const RFSP_ID&amp; element)</signature>
<elementName>Rfsp_id</elementName>
<asnElementName>rfsp-id</asnElementName>
<elementTypeName>RFSP_ID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRfsp_id</name>
<signature>const RFSP_ID&amp; GetRfsp_id() const</signature>
<elementName>Rfsp_id</elementName>
<asnElementName>rfsp-id</asnElementName>
<elementTypeName>RFSP_ID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRfsp_id</name>
<signature>bool OptionRfsp_id() const</signature>
<elementName>Rfsp_id</elementName>
<asnElementName>rfsp-id</asnElementName>
<elementTypeName>RFSP_ID</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAmbr</name>
<signature>void SetAmbr(AMBR* element)</signature>
<elmentName>Ambr</elmentName>
<asnElementName>ambr</asnElementName>
<elementTypeName>AMBR</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAmbr</name>
<signature>void SetAmbr(const AMBR&amp; element)</signature>
<elementName>Ambr</elementName>
<asnElementName>ambr</asnElementName>
<elementTypeName>AMBR</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAmbr</name>
<signature>const AMBR&amp; GetAmbr() const</signature>
<elementName>Ambr</elementName>
<asnElementName>ambr</asnElementName>
<elementTypeName>AMBR</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAmbr</name>
<signature>bool OptionAmbr() const</signature>
<elementName>Ambr</elementName>
<asnElementName>ambr</asnElementName>
<elementTypeName>AMBR</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetApn_ConfigurationProfile</name>
<signature>void SetApn_ConfigurationProfile(APN_ConfigurationProfile* element)</signature>
<elmentName>Apn_ConfigurationProfile</elmentName>
<asnElementName>apn-ConfigurationProfile</asnElementName>
<elementTypeName>APN_ConfigurationProfile</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetApn_ConfigurationProfile</name>
<signature>void SetApn_ConfigurationProfile(const APN_ConfigurationProfile&amp; element)</signature>
<elementName>Apn_ConfigurationProfile</elementName>
<asnElementName>apn-ConfigurationProfile</asnElementName>
<elementTypeName>APN_ConfigurationProfile</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetApn_ConfigurationProfile</name>
<signature>const APN_ConfigurationProfile&amp; GetApn_ConfigurationProfile() const</signature>
<elementName>Apn_ConfigurationProfile</elementName>
<asnElementName>apn-ConfigurationProfile</asnElementName>
<elementTypeName>APN_ConfigurationProfile</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionApn_ConfigurationProfile</name>
<signature>bool OptionApn_ConfigurationProfile() const</signature>
<elementName>Apn_ConfigurationProfile</elementName>
<asnElementName>apn-ConfigurationProfile</asnElementName>
<elementTypeName>APN_ConfigurationProfile</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetStn_sr</name>
<signature>void SetStn_sr(ISDN_AddressString* element)</signature>
<elmentName>Stn_sr</elmentName>
<asnElementName>stn-sr</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetStn_sr</name>
<signature>void SetStn_sr(const ISDN_AddressString&amp; element)</signature>
<elementName>Stn_sr</elementName>
<asnElementName>stn-sr</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetStn_sr</name>
<signature>const ISDN_AddressString&amp; GetStn_sr() const</signature>
<elementName>Stn_sr</elementName>
<asnElementName>stn-sr</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionStn_sr</name>
<signature>bool OptionStn_sr() const</signature>
<elementName>Stn_sr</elementName>
<asnElementName>stn-sr</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMps_CSPriority</name>
<signature>void SetMps_CSPriority(Mps_CSPriority* element)</signature>
<elmentName>Mps_CSPriority</elmentName>
<asnElementName>mps-CSPriority</asnElementName>
<elementTypeName>Mps_CSPriority</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMps_CSPriority</name>
<signature>void SetMps_CSPriority(const Mps_CSPriority&amp; element)</signature>
<elementName>Mps_CSPriority</elementName>
<asnElementName>mps-CSPriority</asnElementName>
<elementTypeName>Mps_CSPriority</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMps_CSPriority</name>
<signature>const Mps_CSPriority&amp; GetMps_CSPriority() const</signature>
<elementName>Mps_CSPriority</elementName>
<asnElementName>mps-CSPriority</asnElementName>
<elementTypeName>Mps_CSPriority</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMps_CSPriority</name>
<signature>bool OptionMps_CSPriority() const</signature>
<elementName>Mps_CSPriority</elementName>
<asnElementName>mps-CSPriority</asnElementName>
<elementTypeName>Mps_CSPriority</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMps_EPSPriority</name>
<signature>void SetMps_EPSPriority(Mps_EPSPriority* element)</signature>
<elmentName>Mps_EPSPriority</elmentName>
<asnElementName>mps-EPSPriority</asnElementName>
<elementTypeName>Mps_EPSPriority</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMps_EPSPriority</name>
<signature>void SetMps_EPSPriority(const Mps_EPSPriority&amp; element)</signature>
<elementName>Mps_EPSPriority</elementName>
<asnElementName>mps-EPSPriority</asnElementName>
<elementTypeName>Mps_EPSPriority</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMps_EPSPriority</name>
<signature>const Mps_EPSPriority&amp; GetMps_EPSPriority() const</signature>
<elementName>Mps_EPSPriority</elementName>
<asnElementName>mps-EPSPriority</asnElementName>
<elementTypeName>Mps_EPSPriority</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMps_EPSPriority</name>
<signature>bool OptionMps_EPSPriority() const</signature>
<elementName>Mps_EPSPriority</elementName>
<asnElementName>mps-EPSPriority</asnElementName>
<elementTypeName>Mps_EPSPriority</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- EPS-SubscriptionData information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>EPS-SubscriptionData ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    apn-oi-Replacement [0] IMPLICIT APN-OI-Replacement -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    rfsp-id [2] IMPLICIT RFSP-ID -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ambr [3] IMPLICIT AMBR -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    apn-ConfigurationProfile [4] IMPLICIT APN-ConfigurationProfile -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    stn-sr [6] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [5] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mps-CSPriority [7] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mps-EPSPriority [8] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

