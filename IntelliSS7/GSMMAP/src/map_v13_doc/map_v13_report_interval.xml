<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnEnumerated>

<className>ReportInterval</className>
<asnTypeName>ReportInterval</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetUmts250ms</name>
<signature>void SetUmts250ms()</signature>
<enumItemName>umts250ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts250ms</name>
<signature>bool IsUmts250ms() const</signature>
<enumItemName>umts250ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts500ms</name>
<signature>void SetUmts500ms()</signature>
<enumItemName>umts500ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts500ms</name>
<signature>bool IsUmts500ms() const</signature>
<enumItemName>umts500ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts1000ms</name>
<signature>void SetUmts1000ms()</signature>
<enumItemName>umts1000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts1000ms</name>
<signature>bool IsUmts1000ms() const</signature>
<enumItemName>umts1000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts2000ms</name>
<signature>void SetUmts2000ms()</signature>
<enumItemName>umts2000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts2000ms</name>
<signature>bool IsUmts2000ms() const</signature>
<enumItemName>umts2000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts3000ms</name>
<signature>void SetUmts3000ms()</signature>
<enumItemName>umts3000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts3000ms</name>
<signature>bool IsUmts3000ms() const</signature>
<enumItemName>umts3000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts4000ms</name>
<signature>void SetUmts4000ms()</signature>
<enumItemName>umts4000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts4000ms</name>
<signature>bool IsUmts4000ms() const</signature>
<enumItemName>umts4000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts6000ms</name>
<signature>void SetUmts6000ms()</signature>
<enumItemName>umts6000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts6000ms</name>
<signature>bool IsUmts6000ms() const</signature>
<enumItemName>umts6000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts8000ms</name>
<signature>void SetUmts8000ms()</signature>
<enumItemName>umts8000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts8000ms</name>
<signature>bool IsUmts8000ms() const</signature>
<enumItemName>umts8000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts12000ms</name>
<signature>void SetUmts12000ms()</signature>
<enumItemName>umts12000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts12000ms</name>
<signature>bool IsUmts12000ms() const</signature>
<enumItemName>umts12000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts16000ms</name>
<signature>void SetUmts16000ms()</signature>
<enumItemName>umts16000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts16000ms</name>
<signature>bool IsUmts16000ms() const</signature>
<enumItemName>umts16000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts20000ms</name>
<signature>void SetUmts20000ms()</signature>
<enumItemName>umts20000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts20000ms</name>
<signature>bool IsUmts20000ms() const</signature>
<enumItemName>umts20000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts24000ms</name>
<signature>void SetUmts24000ms()</signature>
<enumItemName>umts24000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts24000ms</name>
<signature>bool IsUmts24000ms() const</signature>
<enumItemName>umts24000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts28000ms</name>
<signature>void SetUmts28000ms()</signature>
<enumItemName>umts28000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts28000ms</name>
<signature>bool IsUmts28000ms() const</signature>
<enumItemName>umts28000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts32000ms</name>
<signature>void SetUmts32000ms()</signature>
<enumItemName>umts32000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts32000ms</name>
<signature>bool IsUmts32000ms() const</signature>
<enumItemName>umts32000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetUmts64000ms</name>
<signature>void SetUmts64000ms()</signature>
<enumItemName>umts64000ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsUmts64000ms</name>
<signature>bool IsUmts64000ms() const</signature>
<enumItemName>umts64000ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte120ms</name>
<signature>void SetLte120ms()</signature>
<enumItemName>lte120ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte120ms</name>
<signature>bool IsLte120ms() const</signature>
<enumItemName>lte120ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte240ms</name>
<signature>void SetLte240ms()</signature>
<enumItemName>lte240ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte240ms</name>
<signature>bool IsLte240ms() const</signature>
<enumItemName>lte240ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte480ms</name>
<signature>void SetLte480ms()</signature>
<enumItemName>lte480ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte480ms</name>
<signature>bool IsLte480ms() const</signature>
<enumItemName>lte480ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte640ms</name>
<signature>void SetLte640ms()</signature>
<enumItemName>lte640ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte640ms</name>
<signature>bool IsLte640ms() const</signature>
<enumItemName>lte640ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte1024ms</name>
<signature>void SetLte1024ms()</signature>
<enumItemName>lte1024ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte1024ms</name>
<signature>bool IsLte1024ms() const</signature>
<enumItemName>lte1024ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte2048ms</name>
<signature>void SetLte2048ms()</signature>
<enumItemName>lte2048ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte2048ms</name>
<signature>bool IsLte2048ms() const</signature>
<enumItemName>lte2048ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte5120ms</name>
<signature>void SetLte5120ms()</signature>
<enumItemName>lte5120ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte5120ms</name>
<signature>bool IsLte5120ms() const</signature>
<enumItemName>lte5120ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte10240ms</name>
<signature>void SetLte10240ms()</signature>
<enumItemName>lte10240ms</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte10240ms</name>
<signature>bool IsLte10240ms() const</signature>
<enumItemName>lte10240ms</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte1min</name>
<signature>void SetLte1min()</signature>
<enumItemName>lte1min</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte1min</name>
<signature>bool IsLte1min() const</signature>
<enumItemName>lte1min</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte6min</name>
<signature>void SetLte6min()</signature>
<enumItemName>lte6min</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte6min</name>
<signature>bool IsLte6min() const</signature>
<enumItemName>lte6min</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte12min</name>
<signature>void SetLte12min()</signature>
<enumItemName>lte12min</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte12min</name>
<signature>bool IsLte12min() const</signature>
<enumItemName>lte12min</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte30min</name>
<signature>void SetLte30min()</signature>
<enumItemName>lte30min</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte30min</name>
<signature>bool IsLte30min() const</signature>
<enumItemName>lte30min</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetLte60min</name>
<signature>void SetLte60min()</signature>
<enumItemName>lte60min</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsLte60min</name>
<signature>bool IsLte60min() const</signature>
<enumItemName>lte60min</enumItemName>
</memberFunctionIs>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ReportInterval information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ReportInterval ::= ENUMERATED</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    umts250ms(0),</text>
<shift></shift>
</line>
<line>
<text>    umts500ms(1),</text>
<shift></shift>
</line>
<line>
<text>    umts1000ms(2),</text>
<shift></shift>
</line>
<line>
<text>    umts2000ms(3),</text>
<shift></shift>
</line>
<line>
<text>    umts3000ms(4),</text>
<shift></shift>
</line>
<line>
<text>    umts4000ms(5),</text>
<shift></shift>
</line>
<line>
<text>    umts6000ms(6),</text>
<shift></shift>
</line>
<line>
<text>    umts8000ms(7),</text>
<shift></shift>
</line>
<line>
<text>    umts12000ms(8),</text>
<shift></shift>
</line>
<line>
<text>    umts16000ms(9),</text>
<shift></shift>
</line>
<line>
<text>    umts20000ms(10),</text>
<shift></shift>
</line>
<line>
<text>    umts24000ms(11),</text>
<shift></shift>
</line>
<line>
<text>    umts28000ms(12),</text>
<shift></shift>
</line>
<line>
<text>    umts32000ms(13),</text>
<shift></shift>
</line>
<line>
<text>    umts64000ms(14),</text>
<shift></shift>
</line>
<line>
<text>    lte120ms(15),</text>
<shift></shift>
</line>
<line>
<text>    lte240ms(16),</text>
<shift></shift>
</line>
<line>
<text>    lte480ms(17),</text>
<shift></shift>
</line>
<line>
<text>    lte640ms(18),</text>
<shift></shift>
</line>
<line>
<text>    lte1024ms(19),</text>
<shift></shift>
</line>
<line>
<text>    lte2048ms(20),</text>
<shift></shift>
</line>
<line>
<text>    lte5120ms(21),</text>
<shift></shift>
</line>
<line>
<text>    lte10240ms(22),</text>
<shift></shift>
</line>
<line>
<text>    lte1min(23),</text>
<shift></shift>
</line>
<line>
<text>    lte6min(24),</text>
<shift></shift>
</line>
<line>
<text>    lte12min(25),</text>
<shift></shift>
</line>
<line>
<text>    lte30min(26),</text>
<shift></shift>
</line>
<line>
<text>    lte60min(27)</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnEnumerated>

</asnType>

