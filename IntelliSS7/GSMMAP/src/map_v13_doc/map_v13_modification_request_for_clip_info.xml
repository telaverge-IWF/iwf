<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ModificationRequestFor_CLIP_Info</className>
<asnTypeName>ModificationRequestFor-CLIP-Info</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetSs_Status</name>
<signature>void SetSs_Status(Ext_SS_Status* element)</signature>
<elmentName>Ss_Status</elmentName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>Ext_SS_Status</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_Status</name>
<signature>void SetSs_Status(const Ext_SS_Status&amp; element)</signature>
<elementName>Ss_Status</elementName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>Ext_SS_Status</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_Status</name>
<signature>const Ext_SS_Status&amp; GetSs_Status() const</signature>
<elementName>Ss_Status</elementName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>Ext_SS_Status</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSs_Status</name>
<signature>bool OptionSs_Status() const</signature>
<elementName>Ss_Status</elementName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>Ext_SS_Status</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetOverrideCategory</name>
<signature>void SetOverrideCategory(OverrideCategory* element)</signature>
<elmentName>OverrideCategory</elmentName>
<asnElementName>overrideCategory</asnElementName>
<elementTypeName>OverrideCategory</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOverrideCategory</name>
<signature>void SetOverrideCategory(const OverrideCategory&amp; element)</signature>
<elementName>OverrideCategory</elementName>
<asnElementName>overrideCategory</asnElementName>
<elementTypeName>OverrideCategory</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOverrideCategory</name>
<signature>const OverrideCategory&amp; GetOverrideCategory() const</signature>
<elementName>OverrideCategory</elementName>
<asnElementName>overrideCategory</asnElementName>
<elementTypeName>OverrideCategory</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionOverrideCategory</name>
<signature>bool OptionOverrideCategory() const</signature>
<elementName>OverrideCategory</elementName>
<asnElementName>overrideCategory</asnElementName>
<elementTypeName>OverrideCategory</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetModifyNotificationToCSE</name>
<signature>void SetModifyNotificationToCSE(ModificationInstruction* element)</signature>
<elmentName>ModifyNotificationToCSE</elmentName>
<asnElementName>modifyNotificationToCSE</asnElementName>
<elementTypeName>ModificationInstruction</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetModifyNotificationToCSE</name>
<signature>void SetModifyNotificationToCSE(const ModificationInstruction&amp; element)</signature>
<elementName>ModifyNotificationToCSE</elementName>
<asnElementName>modifyNotificationToCSE</asnElementName>
<elementTypeName>ModificationInstruction</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetModifyNotificationToCSE</name>
<signature>const ModificationInstruction&amp; GetModifyNotificationToCSE() const</signature>
<elementName>ModifyNotificationToCSE</elementName>
<asnElementName>modifyNotificationToCSE</asnElementName>
<elementTypeName>ModificationInstruction</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionModifyNotificationToCSE</name>
<signature>bool OptionModifyNotificationToCSE() const</signature>
<elementName>ModifyNotificationToCSE</elementName>
<asnElementName>modifyNotificationToCSE</asnElementName>
<elementTypeName>ModificationInstruction</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ModificationRequestFor-CLIP-Info information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ModificationRequestFor-CLIP-Info ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    ss-Status [0] IMPLICIT Ext-SS-Status -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    overrideCategory [1] IMPLICIT OverrideCategory -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    modifyNotificationToCSE [2] IMPLICIT ModificationInstruction -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [3] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

