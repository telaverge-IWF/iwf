<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>PrepareSubsequentHO_Arg</className>
<asnTypeName>PrepareSubsequentHO-Arg</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetTargetCellId</name>
<signature>void SetTargetCellId(GlobalCellId* element)</signature>
<elmentName>TargetCellId</elmentName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTargetCellId</name>
<signature>void SetTargetCellId(const GlobalCellId&amp; element)</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTargetCellId</name>
<signature>const GlobalCellId&amp; GetTargetCellId() const</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTargetCellId</name>
<signature>bool OptionTargetCellId() const</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTargetMSC_Number</name>
<signature>void SetTargetMSC_Number(ISDN_AddressString* element)</signature>
<elmentName>TargetMSC_Number</elmentName>
<asnElementName>targetMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTargetMSC_Number</name>
<signature>void SetTargetMSC_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>TargetMSC_Number</elementName>
<asnElementName>targetMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTargetMSC_Number</name>
<signature>const ISDN_AddressString&amp; GetTargetMSC_Number() const</signature>
<elementName>TargetMSC_Number</elementName>
<asnElementName>targetMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetTargetRNCId</name>
<signature>void SetTargetRNCId(RNCId* element)</signature>
<elmentName>TargetRNCId</elmentName>
<asnElementName>targetRNCId</asnElementName>
<elementTypeName>RNCId</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTargetRNCId</name>
<signature>void SetTargetRNCId(const RNCId&amp; element)</signature>
<elementName>TargetRNCId</elementName>
<asnElementName>targetRNCId</asnElementName>
<elementTypeName>RNCId</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTargetRNCId</name>
<signature>const RNCId&amp; GetTargetRNCId() const</signature>
<elementName>TargetRNCId</elementName>
<asnElementName>targetRNCId</asnElementName>
<elementTypeName>RNCId</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTargetRNCId</name>
<signature>bool OptionTargetRNCId() const</signature>
<elementName>TargetRNCId</elementName>
<asnElementName>targetRNCId</asnElementName>
<elementTypeName>RNCId</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAn_APDU</name>
<signature>void SetAn_APDU(AccessNetworkSignalInfo* element)</signature>
<elmentName>An_APDU</elmentName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAn_APDU</name>
<signature>void SetAn_APDU(const AccessNetworkSignalInfo&amp; element)</signature>
<elementName>An_APDU</elementName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAn_APDU</name>
<signature>const AccessNetworkSignalInfo&amp; GetAn_APDU() const</signature>
<elementName>An_APDU</elementName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAn_APDU</name>
<signature>bool OptionAn_APDU() const</signature>
<elementName>An_APDU</elementName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSelectedRab_Id</name>
<signature>void SetSelectedRab_Id(RAB_Id* element)</signature>
<elmentName>SelectedRab_Id</elmentName>
<asnElementName>selectedRab-Id</asnElementName>
<elementTypeName>RAB_Id</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSelectedRab_Id</name>
<signature>void SetSelectedRab_Id(const RAB_Id&amp; element)</signature>
<elementName>SelectedRab_Id</elementName>
<asnElementName>selectedRab-Id</asnElementName>
<elementTypeName>RAB_Id</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSelectedRab_Id</name>
<signature>const RAB_Id&amp; GetSelectedRab_Id() const</signature>
<elementName>SelectedRab_Id</elementName>
<asnElementName>selectedRab-Id</asnElementName>
<elementTypeName>RAB_Id</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSelectedRab_Id</name>
<signature>bool OptionSelectedRab_Id() const</signature>
<elementName>SelectedRab_Id</elementName>
<asnElementName>selectedRab-Id</asnElementName>
<elementTypeName>RAB_Id</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGeran_classmark</name>
<signature>void SetGeran_classmark(GERAN_Classmark* element)</signature>
<elmentName>Geran_classmark</elmentName>
<asnElementName>geran-classmark</asnElementName>
<elementTypeName>GERAN_Classmark</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGeran_classmark</name>
<signature>void SetGeran_classmark(const GERAN_Classmark&amp; element)</signature>
<elementName>Geran_classmark</elementName>
<asnElementName>geran-classmark</asnElementName>
<elementTypeName>GERAN_Classmark</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGeran_classmark</name>
<signature>const GERAN_Classmark&amp; GetGeran_classmark() const</signature>
<elementName>Geran_classmark</elementName>
<asnElementName>geran-classmark</asnElementName>
<elementTypeName>GERAN_Classmark</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGeran_classmark</name>
<signature>bool OptionGeran_classmark() const</signature>
<elementName>Geran_classmark</elementName>
<asnElementName>geran-classmark</asnElementName>
<elementTypeName>GERAN_Classmark</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRab_ConfigurationIndicator</name>
<signature>void SetRab_ConfigurationIndicator(Rab_ConfigurationIndicator* element)</signature>
<elmentName>Rab_ConfigurationIndicator</elmentName>
<asnElementName>rab-ConfigurationIndicator</asnElementName>
<elementTypeName>Rab_ConfigurationIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRab_ConfigurationIndicator</name>
<signature>void SetRab_ConfigurationIndicator(const Rab_ConfigurationIndicator&amp; element)</signature>
<elementName>Rab_ConfigurationIndicator</elementName>
<asnElementName>rab-ConfigurationIndicator</asnElementName>
<elementTypeName>Rab_ConfigurationIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRab_ConfigurationIndicator</name>
<signature>const Rab_ConfigurationIndicator&amp; GetRab_ConfigurationIndicator() const</signature>
<elementName>Rab_ConfigurationIndicator</elementName>
<asnElementName>rab-ConfigurationIndicator</asnElementName>
<elementTypeName>Rab_ConfigurationIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRab_ConfigurationIndicator</name>
<signature>bool OptionRab_ConfigurationIndicator() const</signature>
<elementName>Rab_ConfigurationIndicator</elementName>
<asnElementName>rab-ConfigurationIndicator</asnElementName>
<elementTypeName>Rab_ConfigurationIndicator</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- PrepareSubsequentHO-Arg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>PrepareSubsequentHO-Arg ::= [3] IMPLICIT SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    targetCellId [0] IMPLICIT GlobalCellId -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    targetMSC-Number [1] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    targetRNCId [2] IMPLICIT RNCId -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    an-APDU [3] IMPLICIT AccessNetworkSignalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    selectedRab-Id [4] IMPLICIT RAB-Id -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [5] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    geran-classmark [6] IMPLICIT GERAN-Classmark -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    rab-ConfigurationIndicator [7] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

