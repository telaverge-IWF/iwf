<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>AreaScope</className>
<asnTypeName>AreaScope</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCgi_List</name>
<signature>void SetCgi_List(CGI_List* element)</signature>
<elmentName>Cgi_List</elmentName>
<asnElementName>cgi-List</asnElementName>
<elementTypeName>CGI_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCgi_List</name>
<signature>void SetCgi_List(const CGI_List&amp; element)</signature>
<elementName>Cgi_List</elementName>
<asnElementName>cgi-List</asnElementName>
<elementTypeName>CGI_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCgi_List</name>
<signature>const CGI_List&amp; GetCgi_List() const</signature>
<elementName>Cgi_List</elementName>
<asnElementName>cgi-List</asnElementName>
<elementTypeName>CGI_List</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCgi_List</name>
<signature>bool OptionCgi_List() const</signature>
<elementName>Cgi_List</elementName>
<asnElementName>cgi-List</asnElementName>
<elementTypeName>CGI_List</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetE_utran_cgi_List</name>
<signature>void SetE_utran_cgi_List(E_UTRAN_CGI_List* element)</signature>
<elmentName>E_utran_cgi_List</elmentName>
<asnElementName>e-utran-cgi-List</asnElementName>
<elementTypeName>E_UTRAN_CGI_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetE_utran_cgi_List</name>
<signature>void SetE_utran_cgi_List(const E_UTRAN_CGI_List&amp; element)</signature>
<elementName>E_utran_cgi_List</elementName>
<asnElementName>e-utran-cgi-List</asnElementName>
<elementTypeName>E_UTRAN_CGI_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetE_utran_cgi_List</name>
<signature>const E_UTRAN_CGI_List&amp; GetE_utran_cgi_List() const</signature>
<elementName>E_utran_cgi_List</elementName>
<asnElementName>e-utran-cgi-List</asnElementName>
<elementTypeName>E_UTRAN_CGI_List</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionE_utran_cgi_List</name>
<signature>bool OptionE_utran_cgi_List() const</signature>
<elementName>E_utran_cgi_List</elementName>
<asnElementName>e-utran-cgi-List</asnElementName>
<elementTypeName>E_UTRAN_CGI_List</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRoutingAreaId_List</name>
<signature>void SetRoutingAreaId_List(RoutingAreaId_List* element)</signature>
<elmentName>RoutingAreaId_List</elmentName>
<asnElementName>routingAreaId-List</asnElementName>
<elementTypeName>RoutingAreaId_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRoutingAreaId_List</name>
<signature>void SetRoutingAreaId_List(const RoutingAreaId_List&amp; element)</signature>
<elementName>RoutingAreaId_List</elementName>
<asnElementName>routingAreaId-List</asnElementName>
<elementTypeName>RoutingAreaId_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRoutingAreaId_List</name>
<signature>const RoutingAreaId_List&amp; GetRoutingAreaId_List() const</signature>
<elementName>RoutingAreaId_List</elementName>
<asnElementName>routingAreaId-List</asnElementName>
<elementTypeName>RoutingAreaId_List</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRoutingAreaId_List</name>
<signature>bool OptionRoutingAreaId_List() const</signature>
<elementName>RoutingAreaId_List</elementName>
<asnElementName>routingAreaId-List</asnElementName>
<elementTypeName>RoutingAreaId_List</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLocationAreaId_List</name>
<signature>void SetLocationAreaId_List(LocationAreaId_List* element)</signature>
<elmentName>LocationAreaId_List</elmentName>
<asnElementName>locationAreaId-List</asnElementName>
<elementTypeName>LocationAreaId_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLocationAreaId_List</name>
<signature>void SetLocationAreaId_List(const LocationAreaId_List&amp; element)</signature>
<elementName>LocationAreaId_List</elementName>
<asnElementName>locationAreaId-List</asnElementName>
<elementTypeName>LocationAreaId_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLocationAreaId_List</name>
<signature>const LocationAreaId_List&amp; GetLocationAreaId_List() const</signature>
<elementName>LocationAreaId_List</elementName>
<asnElementName>locationAreaId-List</asnElementName>
<elementTypeName>LocationAreaId_List</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLocationAreaId_List</name>
<signature>bool OptionLocationAreaId_List() const</signature>
<elementName>LocationAreaId_List</elementName>
<asnElementName>locationAreaId-List</asnElementName>
<elementTypeName>LocationAreaId_List</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTrackingAreaId_List</name>
<signature>void SetTrackingAreaId_List(TrackingAreaId_List* element)</signature>
<elmentName>TrackingAreaId_List</elmentName>
<asnElementName>trackingAreaId-List</asnElementName>
<elementTypeName>TrackingAreaId_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTrackingAreaId_List</name>
<signature>void SetTrackingAreaId_List(const TrackingAreaId_List&amp; element)</signature>
<elementName>TrackingAreaId_List</elementName>
<asnElementName>trackingAreaId-List</asnElementName>
<elementTypeName>TrackingAreaId_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTrackingAreaId_List</name>
<signature>const TrackingAreaId_List&amp; GetTrackingAreaId_List() const</signature>
<elementName>TrackingAreaId_List</elementName>
<asnElementName>trackingAreaId-List</asnElementName>
<elementTypeName>TrackingAreaId_List</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTrackingAreaId_List</name>
<signature>bool OptionTrackingAreaId_List() const</signature>
<elementName>TrackingAreaId_List</elementName>
<asnElementName>trackingAreaId-List</asnElementName>
<elementTypeName>TrackingAreaId_List</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- AreaScope information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>AreaScope ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    cgi-List [0] IMPLICIT CGI-List -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    e-utran-cgi-List [1] IMPLICIT E-UTRAN-CGI-List -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    routingAreaId-List [2] IMPLICIT RoutingAreaId-List -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    locationAreaId-List [3] IMPLICIT LocationAreaId-List -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    trackingAreaId-List [4] IMPLICIT TrackingAreaId-List -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [5] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

