<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>MO_ForwardSM_Arg</className>
<asnTypeName>MO-ForwardSM-Arg</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetSm_RP_DA</name>
<signature>void SetSm_RP_DA(SM_RP_DA* element)</signature>
<elmentName>Sm_RP_DA</elmentName>
<asnElementName>sm-RP-DA</asnElementName>
<elementTypeName>SM_RP_DA</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSm_RP_DA</name>
<signature>void SetSm_RP_DA(const SM_RP_DA&amp; element)</signature>
<elementName>Sm_RP_DA</elementName>
<asnElementName>sm-RP-DA</asnElementName>
<elementTypeName>SM_RP_DA</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSm_RP_DA</name>
<signature>const SM_RP_DA&amp; GetSm_RP_DA() const</signature>
<elementName>Sm_RP_DA</elementName>
<asnElementName>sm-RP-DA</asnElementName>
<elementTypeName>SM_RP_DA</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetSm_RP_OA</name>
<signature>void SetSm_RP_OA(SM_RP_OA* element)</signature>
<elmentName>Sm_RP_OA</elmentName>
<asnElementName>sm-RP-OA</asnElementName>
<elementTypeName>SM_RP_OA</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSm_RP_OA</name>
<signature>void SetSm_RP_OA(const SM_RP_OA&amp; element)</signature>
<elementName>Sm_RP_OA</elementName>
<asnElementName>sm-RP-OA</asnElementName>
<elementTypeName>SM_RP_OA</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSm_RP_OA</name>
<signature>const SM_RP_OA&amp; GetSm_RP_OA() const</signature>
<elementName>Sm_RP_OA</elementName>
<asnElementName>sm-RP-OA</asnElementName>
<elementTypeName>SM_RP_OA</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetSm_RP_UI</name>
<signature>void SetSm_RP_UI(SignalInfo* element)</signature>
<elmentName>Sm_RP_UI</elmentName>
<asnElementName>sm-RP-UI</asnElementName>
<elementTypeName>SignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSm_RP_UI</name>
<signature>void SetSm_RP_UI(const SignalInfo&amp; element)</signature>
<elementName>Sm_RP_UI</elementName>
<asnElementName>sm-RP-UI</asnElementName>
<elementTypeName>SignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSm_RP_UI</name>
<signature>const SignalInfo&amp; GetSm_RP_UI() const</signature>
<elementName>Sm_RP_UI</elementName>
<asnElementName>sm-RP-UI</asnElementName>
<elementTypeName>SignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionImsi</name>
<signature>bool OptionImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- MO-ForwardSM-Arg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>MO-ForwardSM-Arg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    sm-RP-DA SM-RP-DA -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sm-RP-OA SM-RP-OA -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sm-RP-UI SignalInfo -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    imsi IMSI -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

