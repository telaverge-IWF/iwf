<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>LSAInformation</className>
<asnTypeName>LSAInformation</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCompleteDataListIncluded</name>
<signature>void SetCompleteDataListIncluded(CompleteDataListIncluded* element)</signature>
<elmentName>CompleteDataListIncluded</elmentName>
<asnElementName>completeDataListIncluded</asnElementName>
<elementTypeName>CompleteDataListIncluded</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCompleteDataListIncluded</name>
<signature>void SetCompleteDataListIncluded(const CompleteDataListIncluded&amp; element)</signature>
<elementName>CompleteDataListIncluded</elementName>
<asnElementName>completeDataListIncluded</asnElementName>
<elementTypeName>CompleteDataListIncluded</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCompleteDataListIncluded</name>
<signature>const CompleteDataListIncluded&amp; GetCompleteDataListIncluded() const</signature>
<elementName>CompleteDataListIncluded</elementName>
<asnElementName>completeDataListIncluded</asnElementName>
<elementTypeName>CompleteDataListIncluded</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCompleteDataListIncluded</name>
<signature>bool OptionCompleteDataListIncluded() const</signature>
<elementName>CompleteDataListIncluded</elementName>
<asnElementName>completeDataListIncluded</asnElementName>
<elementTypeName>CompleteDataListIncluded</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLsaOnlyAccessIndicator</name>
<signature>void SetLsaOnlyAccessIndicator(LSAOnlyAccessIndicator* element)</signature>
<elmentName>LsaOnlyAccessIndicator</elmentName>
<asnElementName>lsaOnlyAccessIndicator</asnElementName>
<elementTypeName>LSAOnlyAccessIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLsaOnlyAccessIndicator</name>
<signature>void SetLsaOnlyAccessIndicator(const LSAOnlyAccessIndicator&amp; element)</signature>
<elementName>LsaOnlyAccessIndicator</elementName>
<asnElementName>lsaOnlyAccessIndicator</asnElementName>
<elementTypeName>LSAOnlyAccessIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLsaOnlyAccessIndicator</name>
<signature>const LSAOnlyAccessIndicator&amp; GetLsaOnlyAccessIndicator() const</signature>
<elementName>LsaOnlyAccessIndicator</elementName>
<asnElementName>lsaOnlyAccessIndicator</asnElementName>
<elementTypeName>LSAOnlyAccessIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLsaOnlyAccessIndicator</name>
<signature>bool OptionLsaOnlyAccessIndicator() const</signature>
<elementName>LsaOnlyAccessIndicator</elementName>
<asnElementName>lsaOnlyAccessIndicator</asnElementName>
<elementTypeName>LSAOnlyAccessIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLsaDataList</name>
<signature>void SetLsaDataList(LSADataList* element)</signature>
<elmentName>LsaDataList</elmentName>
<asnElementName>lsaDataList</asnElementName>
<elementTypeName>LSADataList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLsaDataList</name>
<signature>void SetLsaDataList(const LSADataList&amp; element)</signature>
<elementName>LsaDataList</elementName>
<asnElementName>lsaDataList</asnElementName>
<elementTypeName>LSADataList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLsaDataList</name>
<signature>const LSADataList&amp; GetLsaDataList() const</signature>
<elementName>LsaDataList</elementName>
<asnElementName>lsaDataList</asnElementName>
<elementTypeName>LSADataList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLsaDataList</name>
<signature>bool OptionLsaDataList() const</signature>
<elementName>LsaDataList</elementName>
<asnElementName>lsaDataList</asnElementName>
<elementTypeName>LSADataList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- LSAInformation information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>LSAInformation ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    completeDataListIncluded NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lsaOnlyAccessIndicator [1] IMPLICIT LSAOnlyAccessIndicator -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lsaDataList [2] IMPLICIT LSADataList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [3] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

