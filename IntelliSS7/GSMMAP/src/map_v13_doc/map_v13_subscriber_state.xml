<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>SubscriberState</className>
<asnTypeName>SubscriberState</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceAssumedIdle</name>
<signature>void SetChoiceAssumedIdle(AssumedIdle* choice)</signature>
<choiceName>AssumedIdle</choiceName>
<asnChoiceName>assumedIdle</asnChoiceName>
<choiceTypeName>AssumedIdle</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceAssumedIdle</name>
<signature>void SetChoiceAssumedIdle(const AssumedIdle&amp; choice)</signature>
<choiceName>AssumedIdle</choiceName>
<asnChoiceName>assumedIdle</asnChoiceName>
<choiceTypeName>AssumedIdle</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceAssumedIdle</name>
<signature>const AssumedIdle&amp; GetChoiceAssumedIdle() const</signature>
<choiceName>AssumedIdle</choiceName>
<asnChoiceName>assumedIdle</asnChoiceName>
<choiceTypeName>AssumedIdle</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceAssumedIdle</name>
<signature>bool ChoiceAssumedIdle() const</signature>
<choiceName>AssumedIdle</choiceName>
<asnChoiceName>assumedIdle</asnChoiceName>
<choiceTypeName>AssumedIdle</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCamelBusy</name>
<signature>void SetChoiceCamelBusy(CamelBusy* choice)</signature>
<choiceName>CamelBusy</choiceName>
<asnChoiceName>camelBusy</asnChoiceName>
<choiceTypeName>CamelBusy</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCamelBusy</name>
<signature>void SetChoiceCamelBusy(const CamelBusy&amp; choice)</signature>
<choiceName>CamelBusy</choiceName>
<asnChoiceName>camelBusy</asnChoiceName>
<choiceTypeName>CamelBusy</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCamelBusy</name>
<signature>const CamelBusy&amp; GetChoiceCamelBusy() const</signature>
<choiceName>CamelBusy</choiceName>
<asnChoiceName>camelBusy</asnChoiceName>
<choiceTypeName>CamelBusy</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCamelBusy</name>
<signature>bool ChoiceCamelBusy() const</signature>
<choiceName>CamelBusy</choiceName>
<asnChoiceName>camelBusy</asnChoiceName>
<choiceTypeName>CamelBusy</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceNetDetNotReachable</name>
<signature>void SetChoiceNetDetNotReachable(NotReachableReason* choice)</signature>
<choiceName>NetDetNotReachable</choiceName>
<asnChoiceName>netDetNotReachable</asnChoiceName>
<choiceTypeName>NotReachableReason</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceNetDetNotReachable</name>
<signature>void SetChoiceNetDetNotReachable(const NotReachableReason&amp; choice)</signature>
<choiceName>NetDetNotReachable</choiceName>
<asnChoiceName>netDetNotReachable</asnChoiceName>
<choiceTypeName>NotReachableReason</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceNetDetNotReachable</name>
<signature>const NotReachableReason&amp; GetChoiceNetDetNotReachable() const</signature>
<choiceName>NetDetNotReachable</choiceName>
<asnChoiceName>netDetNotReachable</asnChoiceName>
<choiceTypeName>NotReachableReason</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceNetDetNotReachable</name>
<signature>bool ChoiceNetDetNotReachable() const</signature>
<choiceName>NetDetNotReachable</choiceName>
<asnChoiceName>netDetNotReachable</asnChoiceName>
<choiceTypeName>NotReachableReason</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceNotProvidedFromVLR</name>
<signature>void SetChoiceNotProvidedFromVLR(NotProvidedFromVLR* choice)</signature>
<choiceName>NotProvidedFromVLR</choiceName>
<asnChoiceName>notProvidedFromVLR</asnChoiceName>
<choiceTypeName>NotProvidedFromVLR</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceNotProvidedFromVLR</name>
<signature>void SetChoiceNotProvidedFromVLR(const NotProvidedFromVLR&amp; choice)</signature>
<choiceName>NotProvidedFromVLR</choiceName>
<asnChoiceName>notProvidedFromVLR</asnChoiceName>
<choiceTypeName>NotProvidedFromVLR</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceNotProvidedFromVLR</name>
<signature>const NotProvidedFromVLR&amp; GetChoiceNotProvidedFromVLR() const</signature>
<choiceName>NotProvidedFromVLR</choiceName>
<asnChoiceName>notProvidedFromVLR</asnChoiceName>
<choiceTypeName>NotProvidedFromVLR</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceNotProvidedFromVLR</name>
<signature>bool ChoiceNotProvidedFromVLR() const</signature>
<choiceName>NotProvidedFromVLR</choiceName>
<asnChoiceName>notProvidedFromVLR</asnChoiceName>
<choiceTypeName>NotProvidedFromVLR</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SubscriberState information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SubscriberState ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    assumedIdle [0] IMPLICIT NULL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    camelBusy [1] IMPLICIT NULL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    netDetNotReachable NotReachableReason -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    notProvidedFromVLR [2] IMPLICIT NULL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

