<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SLR_ArgExtensionContainer</className>
<asnTypeName>SLR-ArgExtensionContainer</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetPrivateExtensionList</name>
<signature>void SetPrivateExtensionList(PrivateExtensionList* element)</signature>
<elmentName>PrivateExtensionList</elmentName>
<asnElementName>privateExtensionList</asnElementName>
<elementTypeName>PrivateExtensionList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPrivateExtensionList</name>
<signature>void SetPrivateExtensionList(const PrivateExtensionList&amp; element)</signature>
<elementName>PrivateExtensionList</elementName>
<asnElementName>privateExtensionList</asnElementName>
<elementTypeName>PrivateExtensionList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPrivateExtensionList</name>
<signature>const PrivateExtensionList&amp; GetPrivateExtensionList() const</signature>
<elementName>PrivateExtensionList</elementName>
<asnElementName>privateExtensionList</asnElementName>
<elementTypeName>PrivateExtensionList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPrivateExtensionList</name>
<signature>bool OptionPrivateExtensionList() const</signature>
<elementName>PrivateExtensionList</elementName>
<asnElementName>privateExtensionList</asnElementName>
<elementTypeName>PrivateExtensionList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSlr_Arg_PCS_Extensions</name>
<signature>void SetSlr_Arg_PCS_Extensions(SLR_Arg_PCS_Extensions* element)</signature>
<elmentName>Slr_Arg_PCS_Extensions</elmentName>
<asnElementName>slr-Arg-PCS-Extensions</asnElementName>
<elementTypeName>SLR_Arg_PCS_Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSlr_Arg_PCS_Extensions</name>
<signature>void SetSlr_Arg_PCS_Extensions(const SLR_Arg_PCS_Extensions&amp; element)</signature>
<elementName>Slr_Arg_PCS_Extensions</elementName>
<asnElementName>slr-Arg-PCS-Extensions</asnElementName>
<elementTypeName>SLR_Arg_PCS_Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSlr_Arg_PCS_Extensions</name>
<signature>const SLR_Arg_PCS_Extensions&amp; GetSlr_Arg_PCS_Extensions() const</signature>
<elementName>Slr_Arg_PCS_Extensions</elementName>
<asnElementName>slr-Arg-PCS-Extensions</asnElementName>
<elementTypeName>SLR_Arg_PCS_Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSlr_Arg_PCS_Extensions</name>
<signature>bool OptionSlr_Arg_PCS_Extensions() const</signature>
<elementName>Slr_Arg_PCS_Extensions</elementName>
<asnElementName>slr-Arg-PCS-Extensions</asnElementName>
<elementTypeName>SLR_Arg_PCS_Extensions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SLR-ArgExtensionContainer information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SLR-ArgExtensionContainer ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    privateExtensionList [0] IMPLICIT PrivateExtensionList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    slr-Arg-PCS-Extensions [1] IMPLICIT SLR-Arg-PCS-Extensions -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

