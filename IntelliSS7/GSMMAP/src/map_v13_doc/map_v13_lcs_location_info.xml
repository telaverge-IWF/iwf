<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>LCSLocationInfo</className>
<asnTypeName>LCSLocationInfo</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetNetworkNode_Number</name>
<signature>void SetNetworkNode_Number(ISDN_AddressString* element)</signature>
<elmentName>NetworkNode_Number</elmentName>
<asnElementName>networkNode-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNetworkNode_Number</name>
<signature>void SetNetworkNode_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>NetworkNode_Number</elementName>
<asnElementName>networkNode-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNetworkNode_Number</name>
<signature>const ISDN_AddressString&amp; GetNetworkNode_Number() const</signature>
<elementName>NetworkNode_Number</elementName>
<asnElementName>networkNode-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetLmsi</name>
<signature>void SetLmsi(LMSI* element)</signature>
<elmentName>Lmsi</elmentName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLmsi</name>
<signature>void SetLmsi(const LMSI&amp; element)</signature>
<elementName>Lmsi</elementName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLmsi</name>
<signature>const LMSI&amp; GetLmsi() const</signature>
<elementName>Lmsi</elementName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLmsi</name>
<signature>bool OptionLmsi() const</signature>
<elementName>Lmsi</elementName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGprsNodeIndicator</name>
<signature>void SetGprsNodeIndicator(GprsNodeIndicator* element)</signature>
<elmentName>GprsNodeIndicator</elmentName>
<asnElementName>gprsNodeIndicator</asnElementName>
<elementTypeName>GprsNodeIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGprsNodeIndicator</name>
<signature>void SetGprsNodeIndicator(const GprsNodeIndicator&amp; element)</signature>
<elementName>GprsNodeIndicator</elementName>
<asnElementName>gprsNodeIndicator</asnElementName>
<elementTypeName>GprsNodeIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGprsNodeIndicator</name>
<signature>const GprsNodeIndicator&amp; GetGprsNodeIndicator() const</signature>
<elementName>GprsNodeIndicator</elementName>
<asnElementName>gprsNodeIndicator</asnElementName>
<elementTypeName>GprsNodeIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGprsNodeIndicator</name>
<signature>bool OptionGprsNodeIndicator() const</signature>
<elementName>GprsNodeIndicator</elementName>
<asnElementName>gprsNodeIndicator</asnElementName>
<elementTypeName>GprsNodeIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAdditional_Number</name>
<signature>void SetAdditional_Number(Additional_Number* element)</signature>
<elmentName>Additional_Number</elmentName>
<asnElementName>additional-Number</asnElementName>
<elementTypeName>Additional_Number</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAdditional_Number</name>
<signature>void SetAdditional_Number(const Additional_Number&amp; element)</signature>
<elementName>Additional_Number</elementName>
<asnElementName>additional-Number</asnElementName>
<elementTypeName>Additional_Number</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAdditional_Number</name>
<signature>const Additional_Number&amp; GetAdditional_Number() const</signature>
<elementName>Additional_Number</elementName>
<asnElementName>additional-Number</asnElementName>
<elementTypeName>Additional_Number</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAdditional_Number</name>
<signature>bool OptionAdditional_Number() const</signature>
<elementName>Additional_Number</elementName>
<asnElementName>additional-Number</asnElementName>
<elementTypeName>Additional_Number</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSupportedLCS_CapabilitySets</name>
<signature>void SetSupportedLCS_CapabilitySets(SupportedLCS_CapabilitySets* element)</signature>
<elmentName>SupportedLCS_CapabilitySets</elmentName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSupportedLCS_CapabilitySets</name>
<signature>void SetSupportedLCS_CapabilitySets(const SupportedLCS_CapabilitySets&amp; element)</signature>
<elementName>SupportedLCS_CapabilitySets</elementName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSupportedLCS_CapabilitySets</name>
<signature>const SupportedLCS_CapabilitySets&amp; GetSupportedLCS_CapabilitySets() const</signature>
<elementName>SupportedLCS_CapabilitySets</elementName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSupportedLCS_CapabilitySets</name>
<signature>bool OptionSupportedLCS_CapabilitySets() const</signature>
<elementName>SupportedLCS_CapabilitySets</elementName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAdditional_LCS_CapabilitySets</name>
<signature>void SetAdditional_LCS_CapabilitySets(SupportedLCS_CapabilitySets* element)</signature>
<elmentName>Additional_LCS_CapabilitySets</elmentName>
<asnElementName>additional-LCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAdditional_LCS_CapabilitySets</name>
<signature>void SetAdditional_LCS_CapabilitySets(const SupportedLCS_CapabilitySets&amp; element)</signature>
<elementName>Additional_LCS_CapabilitySets</elementName>
<asnElementName>additional-LCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAdditional_LCS_CapabilitySets</name>
<signature>const SupportedLCS_CapabilitySets&amp; GetAdditional_LCS_CapabilitySets() const</signature>
<elementName>Additional_LCS_CapabilitySets</elementName>
<asnElementName>additional-LCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAdditional_LCS_CapabilitySets</name>
<signature>bool OptionAdditional_LCS_CapabilitySets() const</signature>
<elementName>Additional_LCS_CapabilitySets</elementName>
<asnElementName>additional-LCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMme_Name</name>
<signature>void SetMme_Name(DiameterIdentity* element)</signature>
<elmentName>Mme_Name</elmentName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMme_Name</name>
<signature>void SetMme_Name(const DiameterIdentity&amp; element)</signature>
<elementName>Mme_Name</elementName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMme_Name</name>
<signature>const DiameterIdentity&amp; GetMme_Name() const</signature>
<elementName>Mme_Name</elementName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMme_Name</name>
<signature>bool OptionMme_Name() const</signature>
<elementName>Mme_Name</elementName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAaa_Server_Name</name>
<signature>void SetAaa_Server_Name(DiameterIdentity* element)</signature>
<elmentName>Aaa_Server_Name</elmentName>
<asnElementName>aaa-Server-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAaa_Server_Name</name>
<signature>void SetAaa_Server_Name(const DiameterIdentity&amp; element)</signature>
<elementName>Aaa_Server_Name</elementName>
<asnElementName>aaa-Server-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAaa_Server_Name</name>
<signature>const DiameterIdentity&amp; GetAaa_Server_Name() const</signature>
<elementName>Aaa_Server_Name</elementName>
<asnElementName>aaa-Server-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAaa_Server_Name</name>
<signature>bool OptionAaa_Server_Name() const</signature>
<elementName>Aaa_Server_Name</elementName>
<asnElementName>aaa-Server-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- LCSLocationInfo information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 3]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>LCSLocationInfo ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    networkNode-Number ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lmsi [0] IMPLICIT LMSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [1] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gprsNodeIndicator [2] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    additional-Number [3] IMPLICIT Additional-Number -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    supportedLCS-CapabilitySets [4] IMPLICIT SupportedLCS-CapabilitySets -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    additional-LCS-CapabilitySets [5] IMPLICIT SupportedLCS-CapabilitySets -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mme-Name [6] IMPLICIT DiameterIdentity -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    aaa-Server-Name [8] IMPLICIT DiameterIdentity -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

