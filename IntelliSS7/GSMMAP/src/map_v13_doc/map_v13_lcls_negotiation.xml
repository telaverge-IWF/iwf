<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnBitString>

<className>LCLS_Negotiation</className>
<asnTypeName>LCLS-Negotiation</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetPermission_indicator_spare_bit</name>
<signature>void SetPermission_indicator_spare_bit()</signature>
<bitName>Permission_indicator_spare_bit</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetPermission_indicator_spare_bit</name>
<signature>void ResetPermission_indicator_spare_bit()</signature>
<bitName>Permission_indicator_spare_bit</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsPermission_indicator_spare_bitSet</name>
<signature>bool IsPermission_indicator_spare_bitSet() const</signature>
<bitName>Permission_indicator_spare_bit</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsPermission_indicator_spare_bitDefined</name>
<signature>bool IsPermission_indicator_spare_bitDefined() const</signature>
<bitName>Permission_indicator_spare_bit</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetPermission_indicator_not_allowed_bit</name>
<signature>void SetPermission_indicator_not_allowed_bit()</signature>
<bitName>Permission_indicator_not_allowed_bit</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetPermission_indicator_not_allowed_bit</name>
<signature>void ResetPermission_indicator_not_allowed_bit()</signature>
<bitName>Permission_indicator_not_allowed_bit</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsPermission_indicator_not_allowed_bitSet</name>
<signature>bool IsPermission_indicator_not_allowed_bitSet() const</signature>
<bitName>Permission_indicator_not_allowed_bit</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsPermission_indicator_not_allowed_bitDefined</name>
<signature>bool IsPermission_indicator_not_allowed_bitDefined() const</signature>
<bitName>Permission_indicator_not_allowed_bit</bitName>
</memberFunctionIsDefined>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- LCLS-Negotiation information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>LCLS-Negotiation ::= BIT STRING</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    permission-indicator-spare-bit(1),</text>
<shift></shift>
</line>
<line>
<text>    permission-indicator-not-allowed-bit(0)</text>
<shift></shift>
</line>
<line>
<text>} (SIZE(2..8)) </text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnBitString>

</asnType>

