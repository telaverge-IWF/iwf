<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>LocationInformationEPS</className>
<asnTypeName>LocationInformationEPS</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetE_utranCellGlobalIdentity</name>
<signature>void SetE_utranCellGlobalIdentity(E_UTRAN_CGI* element)</signature>
<elmentName>E_utranCellGlobalIdentity</elmentName>
<asnElementName>e-utranCellGlobalIdentity</asnElementName>
<elementTypeName>E_UTRAN_CGI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetE_utranCellGlobalIdentity</name>
<signature>void SetE_utranCellGlobalIdentity(const E_UTRAN_CGI&amp; element)</signature>
<elementName>E_utranCellGlobalIdentity</elementName>
<asnElementName>e-utranCellGlobalIdentity</asnElementName>
<elementTypeName>E_UTRAN_CGI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetE_utranCellGlobalIdentity</name>
<signature>const E_UTRAN_CGI&amp; GetE_utranCellGlobalIdentity() const</signature>
<elementName>E_utranCellGlobalIdentity</elementName>
<asnElementName>e-utranCellGlobalIdentity</asnElementName>
<elementTypeName>E_UTRAN_CGI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionE_utranCellGlobalIdentity</name>
<signature>bool OptionE_utranCellGlobalIdentity() const</signature>
<elementName>E_utranCellGlobalIdentity</elementName>
<asnElementName>e-utranCellGlobalIdentity</asnElementName>
<elementTypeName>E_UTRAN_CGI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTrackingAreaIdentity</name>
<signature>void SetTrackingAreaIdentity(TA_Id* element)</signature>
<elmentName>TrackingAreaIdentity</elmentName>
<asnElementName>trackingAreaIdentity</asnElementName>
<elementTypeName>TA_Id</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTrackingAreaIdentity</name>
<signature>void SetTrackingAreaIdentity(const TA_Id&amp; element)</signature>
<elementName>TrackingAreaIdentity</elementName>
<asnElementName>trackingAreaIdentity</asnElementName>
<elementTypeName>TA_Id</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTrackingAreaIdentity</name>
<signature>const TA_Id&amp; GetTrackingAreaIdentity() const</signature>
<elementName>TrackingAreaIdentity</elementName>
<asnElementName>trackingAreaIdentity</asnElementName>
<elementTypeName>TA_Id</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTrackingAreaIdentity</name>
<signature>bool OptionTrackingAreaIdentity() const</signature>
<elementName>TrackingAreaIdentity</elementName>
<asnElementName>trackingAreaIdentity</asnElementName>
<elementTypeName>TA_Id</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGeographicalInformation</name>
<signature>void SetGeographicalInformation(GeographicalInformation* element)</signature>
<elmentName>GeographicalInformation</elmentName>
<asnElementName>geographicalInformation</asnElementName>
<elementTypeName>GeographicalInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGeographicalInformation</name>
<signature>void SetGeographicalInformation(const GeographicalInformation&amp; element)</signature>
<elementName>GeographicalInformation</elementName>
<asnElementName>geographicalInformation</asnElementName>
<elementTypeName>GeographicalInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGeographicalInformation</name>
<signature>const GeographicalInformation&amp; GetGeographicalInformation() const</signature>
<elementName>GeographicalInformation</elementName>
<asnElementName>geographicalInformation</asnElementName>
<elementTypeName>GeographicalInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGeographicalInformation</name>
<signature>bool OptionGeographicalInformation() const</signature>
<elementName>GeographicalInformation</elementName>
<asnElementName>geographicalInformation</asnElementName>
<elementTypeName>GeographicalInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGeodeticInformation</name>
<signature>void SetGeodeticInformation(GeodeticInformation* element)</signature>
<elmentName>GeodeticInformation</elmentName>
<asnElementName>geodeticInformation</asnElementName>
<elementTypeName>GeodeticInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGeodeticInformation</name>
<signature>void SetGeodeticInformation(const GeodeticInformation&amp; element)</signature>
<elementName>GeodeticInformation</elementName>
<asnElementName>geodeticInformation</asnElementName>
<elementTypeName>GeodeticInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGeodeticInformation</name>
<signature>const GeodeticInformation&amp; GetGeodeticInformation() const</signature>
<elementName>GeodeticInformation</elementName>
<asnElementName>geodeticInformation</asnElementName>
<elementTypeName>GeodeticInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGeodeticInformation</name>
<signature>bool OptionGeodeticInformation() const</signature>
<elementName>GeodeticInformation</elementName>
<asnElementName>geodeticInformation</asnElementName>
<elementTypeName>GeodeticInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCurrentLocationRetrieved</name>
<signature>void SetCurrentLocationRetrieved(CurrentLocationRetrieved* element)</signature>
<elmentName>CurrentLocationRetrieved</elmentName>
<asnElementName>currentLocationRetrieved</asnElementName>
<elementTypeName>CurrentLocationRetrieved</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCurrentLocationRetrieved</name>
<signature>void SetCurrentLocationRetrieved(const CurrentLocationRetrieved&amp; element)</signature>
<elementName>CurrentLocationRetrieved</elementName>
<asnElementName>currentLocationRetrieved</asnElementName>
<elementTypeName>CurrentLocationRetrieved</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCurrentLocationRetrieved</name>
<signature>const CurrentLocationRetrieved&amp; GetCurrentLocationRetrieved() const</signature>
<elementName>CurrentLocationRetrieved</elementName>
<asnElementName>currentLocationRetrieved</asnElementName>
<elementTypeName>CurrentLocationRetrieved</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCurrentLocationRetrieved</name>
<signature>bool OptionCurrentLocationRetrieved() const</signature>
<elementName>CurrentLocationRetrieved</elementName>
<asnElementName>currentLocationRetrieved</asnElementName>
<elementTypeName>CurrentLocationRetrieved</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAgeOfLocationInformation</name>
<signature>void SetAgeOfLocationInformation(AgeOfLocationInformation* element)</signature>
<elmentName>AgeOfLocationInformation</elmentName>
<asnElementName>ageOfLocationInformation</asnElementName>
<elementTypeName>AgeOfLocationInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAgeOfLocationInformation</name>
<signature>void SetAgeOfLocationInformation(const AgeOfLocationInformation&amp; element)</signature>
<elementName>AgeOfLocationInformation</elementName>
<asnElementName>ageOfLocationInformation</asnElementName>
<elementTypeName>AgeOfLocationInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAgeOfLocationInformation</name>
<signature>const AgeOfLocationInformation&amp; GetAgeOfLocationInformation() const</signature>
<elementName>AgeOfLocationInformation</elementName>
<asnElementName>ageOfLocationInformation</asnElementName>
<elementTypeName>AgeOfLocationInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAgeOfLocationInformation</name>
<signature>bool OptionAgeOfLocationInformation() const</signature>
<elementName>AgeOfLocationInformation</elementName>
<asnElementName>ageOfLocationInformation</asnElementName>
<elementTypeName>AgeOfLocationInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMme_Name</name>
<signature>void SetMme_Name(DiameterIdentity* element)</signature>
<elmentName>Mme_Name</elmentName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMme_Name</name>
<signature>void SetMme_Name(const DiameterIdentity&amp; element)</signature>
<elementName>Mme_Name</elementName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMme_Name</name>
<signature>const DiameterIdentity&amp; GetMme_Name() const</signature>
<elementName>Mme_Name</elementName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMme_Name</name>
<signature>bool OptionMme_Name() const</signature>
<elementName>Mme_Name</elementName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- LocationInformationEPS information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>LocationInformationEPS ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    e-utranCellGlobalIdentity [0] IMPLICIT E-UTRAN-CGI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    trackingAreaIdentity [1] IMPLICIT TA-Id -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [2] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    geographicalInformation [3] IMPLICIT GeographicalInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    geodeticInformation [4] IMPLICIT GeodeticInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    currentLocationRetrieved [5] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ageOfLocationInformation [6] IMPLICIT AgeOfLocationInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mme-Name [7] IMPLICIT DiameterIdentity -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

