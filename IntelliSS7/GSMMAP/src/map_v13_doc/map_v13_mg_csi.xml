<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>MG_CSI</className>
<asnTypeName>MG-CSI</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetMobilityTriggers</name>
<signature>void SetMobilityTriggers(MobilityTriggers* element)</signature>
<elmentName>MobilityTriggers</elmentName>
<asnElementName>mobilityTriggers</asnElementName>
<elementTypeName>MobilityTriggers</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMobilityTriggers</name>
<signature>void SetMobilityTriggers(const MobilityTriggers&amp; element)</signature>
<elementName>MobilityTriggers</elementName>
<asnElementName>mobilityTriggers</asnElementName>
<elementTypeName>MobilityTriggers</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMobilityTriggers</name>
<signature>const MobilityTriggers&amp; GetMobilityTriggers() const</signature>
<elementName>MobilityTriggers</elementName>
<asnElementName>mobilityTriggers</asnElementName>
<elementTypeName>MobilityTriggers</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetServiceKey</name>
<signature>void SetServiceKey(ServiceKey* element)</signature>
<elmentName>ServiceKey</elmentName>
<asnElementName>serviceKey</asnElementName>
<elementTypeName>ServiceKey</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServiceKey</name>
<signature>void SetServiceKey(const ServiceKey&amp; element)</signature>
<elementName>ServiceKey</elementName>
<asnElementName>serviceKey</asnElementName>
<elementTypeName>ServiceKey</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServiceKey</name>
<signature>const ServiceKey&amp; GetServiceKey() const</signature>
<elementName>ServiceKey</elementName>
<asnElementName>serviceKey</asnElementName>
<elementTypeName>ServiceKey</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetGsmSCF_Address</name>
<signature>void SetGsmSCF_Address(ISDN_AddressString* element)</signature>
<elmentName>GsmSCF_Address</elmentName>
<asnElementName>gsmSCF-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGsmSCF_Address</name>
<signature>void SetGsmSCF_Address(const ISDN_AddressString&amp; element)</signature>
<elementName>GsmSCF_Address</elementName>
<asnElementName>gsmSCF-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGsmSCF_Address</name>
<signature>const ISDN_AddressString&amp; GetGsmSCF_Address() const</signature>
<elementName>GsmSCF_Address</elementName>
<asnElementName>gsmSCF-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNotificationToCSE</name>
<signature>void SetNotificationToCSE(NotificationToCSE* element)</signature>
<elmentName>NotificationToCSE</elmentName>
<asnElementName>notificationToCSE</asnElementName>
<elementTypeName>NotificationToCSE</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNotificationToCSE</name>
<signature>void SetNotificationToCSE(const NotificationToCSE&amp; element)</signature>
<elementName>NotificationToCSE</elementName>
<asnElementName>notificationToCSE</asnElementName>
<elementTypeName>NotificationToCSE</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNotificationToCSE</name>
<signature>const NotificationToCSE&amp; GetNotificationToCSE() const</signature>
<elementName>NotificationToCSE</elementName>
<asnElementName>notificationToCSE</asnElementName>
<elementTypeName>NotificationToCSE</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNotificationToCSE</name>
<signature>bool OptionNotificationToCSE() const</signature>
<elementName>NotificationToCSE</elementName>
<asnElementName>notificationToCSE</asnElementName>
<elementTypeName>NotificationToCSE</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCsi_Active</name>
<signature>void SetCsi_Active(Csi_Active* element)</signature>
<elmentName>Csi_Active</elmentName>
<asnElementName>csi-Active</asnElementName>
<elementTypeName>Csi_Active</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCsi_Active</name>
<signature>void SetCsi_Active(const Csi_Active&amp; element)</signature>
<elementName>Csi_Active</elementName>
<asnElementName>csi-Active</asnElementName>
<elementTypeName>Csi_Active</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCsi_Active</name>
<signature>const Csi_Active&amp; GetCsi_Active() const</signature>
<elementName>Csi_Active</elementName>
<asnElementName>csi-Active</asnElementName>
<elementTypeName>Csi_Active</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCsi_Active</name>
<signature>bool OptionCsi_Active() const</signature>
<elementName>Csi_Active</elementName>
<asnElementName>csi-Active</asnElementName>
<elementTypeName>Csi_Active</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- MG-CSI information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>MG-CSI ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    mobilityTriggers MobilityTriggers -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    serviceKey ServiceKey -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gsmSCF-Address [0] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [1] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    notificationToCSE [2] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    csi-Active [3] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

