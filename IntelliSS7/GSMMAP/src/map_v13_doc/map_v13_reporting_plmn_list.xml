<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ReportingPLMNList</className>
<asnTypeName>ReportingPLMNList</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetPlmn_ListPrioritized</name>
<signature>void SetPlmn_ListPrioritized(Plmn_ListPrioritized* element)</signature>
<elmentName>Plmn_ListPrioritized</elmentName>
<asnElementName>plmn-ListPrioritized</asnElementName>
<elementTypeName>Plmn_ListPrioritized</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPlmn_ListPrioritized</name>
<signature>void SetPlmn_ListPrioritized(const Plmn_ListPrioritized&amp; element)</signature>
<elementName>Plmn_ListPrioritized</elementName>
<asnElementName>plmn-ListPrioritized</asnElementName>
<elementTypeName>Plmn_ListPrioritized</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPlmn_ListPrioritized</name>
<signature>const Plmn_ListPrioritized&amp; GetPlmn_ListPrioritized() const</signature>
<elementName>Plmn_ListPrioritized</elementName>
<asnElementName>plmn-ListPrioritized</asnElementName>
<elementTypeName>Plmn_ListPrioritized</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPlmn_ListPrioritized</name>
<signature>bool OptionPlmn_ListPrioritized() const</signature>
<elementName>Plmn_ListPrioritized</elementName>
<asnElementName>plmn-ListPrioritized</asnElementName>
<elementTypeName>Plmn_ListPrioritized</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetPlmn_List</name>
<signature>void SetPlmn_List(PLMNList* element)</signature>
<elmentName>Plmn_List</elmentName>
<asnElementName>plmn-List</asnElementName>
<elementTypeName>PLMNList</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPlmn_List</name>
<signature>void SetPlmn_List(const PLMNList&amp; element)</signature>
<elementName>Plmn_List</elementName>
<asnElementName>plmn-List</asnElementName>
<elementTypeName>PLMNList</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPlmn_List</name>
<signature>const PLMNList&amp; GetPlmn_List() const</signature>
<elementName>Plmn_List</elementName>
<asnElementName>plmn-List</asnElementName>
<elementTypeName>PLMNList</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ReportingPLMNList information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ReportingPLMNList ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    plmn-ListPrioritized [0] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    plmn-List [1] IMPLICIT PLMNList -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

