<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>O_BcsmCamelTDP_Criteria</className>
<asnTypeName>O-BcsmCamelTDP-Criteria</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetO_BcsmTriggerDetectionPoint</name>
<signature>void SetO_BcsmTriggerDetectionPoint(O_BcsmTriggerDetectionPoint* element)</signature>
<elmentName>O_BcsmTriggerDetectionPoint</elmentName>
<asnElementName>o-BcsmTriggerDetectionPoint</asnElementName>
<elementTypeName>O_BcsmTriggerDetectionPoint</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetO_BcsmTriggerDetectionPoint</name>
<signature>void SetO_BcsmTriggerDetectionPoint(const O_BcsmTriggerDetectionPoint&amp; element)</signature>
<elementName>O_BcsmTriggerDetectionPoint</elementName>
<asnElementName>o-BcsmTriggerDetectionPoint</asnElementName>
<elementTypeName>O_BcsmTriggerDetectionPoint</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetO_BcsmTriggerDetectionPoint</name>
<signature>const O_BcsmTriggerDetectionPoint&amp; GetO_BcsmTriggerDetectionPoint() const</signature>
<elementName>O_BcsmTriggerDetectionPoint</elementName>
<asnElementName>o-BcsmTriggerDetectionPoint</asnElementName>
<elementTypeName>O_BcsmTriggerDetectionPoint</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetDestinationNumberCriteria</name>
<signature>void SetDestinationNumberCriteria(DestinationNumberCriteria* element)</signature>
<elmentName>DestinationNumberCriteria</elmentName>
<asnElementName>destinationNumberCriteria</asnElementName>
<elementTypeName>DestinationNumberCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDestinationNumberCriteria</name>
<signature>void SetDestinationNumberCriteria(const DestinationNumberCriteria&amp; element)</signature>
<elementName>DestinationNumberCriteria</elementName>
<asnElementName>destinationNumberCriteria</asnElementName>
<elementTypeName>DestinationNumberCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDestinationNumberCriteria</name>
<signature>const DestinationNumberCriteria&amp; GetDestinationNumberCriteria() const</signature>
<elementName>DestinationNumberCriteria</elementName>
<asnElementName>destinationNumberCriteria</asnElementName>
<elementTypeName>DestinationNumberCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDestinationNumberCriteria</name>
<signature>bool OptionDestinationNumberCriteria() const</signature>
<elementName>DestinationNumberCriteria</elementName>
<asnElementName>destinationNumberCriteria</asnElementName>
<elementTypeName>DestinationNumberCriteria</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBasicServiceCriteria</name>
<signature>void SetBasicServiceCriteria(BasicServiceCriteria* element)</signature>
<elmentName>BasicServiceCriteria</elmentName>
<asnElementName>basicServiceCriteria</asnElementName>
<elementTypeName>BasicServiceCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBasicServiceCriteria</name>
<signature>void SetBasicServiceCriteria(const BasicServiceCriteria&amp; element)</signature>
<elementName>BasicServiceCriteria</elementName>
<asnElementName>basicServiceCriteria</asnElementName>
<elementTypeName>BasicServiceCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBasicServiceCriteria</name>
<signature>const BasicServiceCriteria&amp; GetBasicServiceCriteria() const</signature>
<elementName>BasicServiceCriteria</elementName>
<asnElementName>basicServiceCriteria</asnElementName>
<elementTypeName>BasicServiceCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBasicServiceCriteria</name>
<signature>bool OptionBasicServiceCriteria() const</signature>
<elementName>BasicServiceCriteria</elementName>
<asnElementName>basicServiceCriteria</asnElementName>
<elementTypeName>BasicServiceCriteria</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCallTypeCriteria</name>
<signature>void SetCallTypeCriteria(CallTypeCriteria* element)</signature>
<elmentName>CallTypeCriteria</elmentName>
<asnElementName>callTypeCriteria</asnElementName>
<elementTypeName>CallTypeCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallTypeCriteria</name>
<signature>void SetCallTypeCriteria(const CallTypeCriteria&amp; element)</signature>
<elementName>CallTypeCriteria</elementName>
<asnElementName>callTypeCriteria</asnElementName>
<elementTypeName>CallTypeCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallTypeCriteria</name>
<signature>const CallTypeCriteria&amp; GetCallTypeCriteria() const</signature>
<elementName>CallTypeCriteria</elementName>
<asnElementName>callTypeCriteria</asnElementName>
<elementTypeName>CallTypeCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCallTypeCriteria</name>
<signature>bool OptionCallTypeCriteria() const</signature>
<elementName>CallTypeCriteria</elementName>
<asnElementName>callTypeCriteria</asnElementName>
<elementTypeName>CallTypeCriteria</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetO_CauseValueCriteria</name>
<signature>void SetO_CauseValueCriteria(O_CauseValueCriteria* element)</signature>
<elmentName>O_CauseValueCriteria</elmentName>
<asnElementName>o-CauseValueCriteria</asnElementName>
<elementTypeName>O_CauseValueCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetO_CauseValueCriteria</name>
<signature>void SetO_CauseValueCriteria(const O_CauseValueCriteria&amp; element)</signature>
<elementName>O_CauseValueCriteria</elementName>
<asnElementName>o-CauseValueCriteria</asnElementName>
<elementTypeName>O_CauseValueCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetO_CauseValueCriteria</name>
<signature>const O_CauseValueCriteria&amp; GetO_CauseValueCriteria() const</signature>
<elementName>O_CauseValueCriteria</elementName>
<asnElementName>o-CauseValueCriteria</asnElementName>
<elementTypeName>O_CauseValueCriteria</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionO_CauseValueCriteria</name>
<signature>bool OptionO_CauseValueCriteria() const</signature>
<elementName>O_CauseValueCriteria</elementName>
<asnElementName>o-CauseValueCriteria</asnElementName>
<elementTypeName>O_CauseValueCriteria</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- O-BcsmCamelTDP-Criteria information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>O-BcsmCamelTDP-Criteria ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    o-BcsmTriggerDetectionPoint O-BcsmTriggerDetectionPoint -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    destinationNumberCriteria [0] IMPLICIT DestinationNumberCriteria -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    basicServiceCriteria [1] IMPLICIT BasicServiceCriteria -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callTypeCriteria [2] IMPLICIT CallTypeCriteria -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    o-CauseValueCriteria [3] IMPLICIT O-CauseValueCriteria -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [4] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

