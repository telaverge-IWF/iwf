<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>Allocation_Retention_Priority</className>
<asnTypeName>Allocation-Retention-Priority</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetPriority_level</name>
<signature>void SetPriority_level(Priority_level* element)</signature>
<elmentName>Priority_level</elmentName>
<asnElementName>priority-level</asnElementName>
<elementTypeName>Priority_level</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPriority_level</name>
<signature>void SetPriority_level(const Priority_level&amp; element)</signature>
<elementName>Priority_level</elementName>
<asnElementName>priority-level</asnElementName>
<elementTypeName>Priority_level</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPriority_level</name>
<signature>const Priority_level&amp; GetPriority_level() const</signature>
<elementName>Priority_level</elementName>
<asnElementName>priority-level</asnElementName>
<elementTypeName>Priority_level</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetPre_emption_capability</name>
<signature>void SetPre_emption_capability(Pre_emption_capability* element)</signature>
<elmentName>Pre_emption_capability</elmentName>
<asnElementName>pre-emption-capability</asnElementName>
<elementTypeName>Pre_emption_capability</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPre_emption_capability</name>
<signature>void SetPre_emption_capability(const Pre_emption_capability&amp; element)</signature>
<elementName>Pre_emption_capability</elementName>
<asnElementName>pre-emption-capability</asnElementName>
<elementTypeName>Pre_emption_capability</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPre_emption_capability</name>
<signature>const Pre_emption_capability&amp; GetPre_emption_capability() const</signature>
<elementName>Pre_emption_capability</elementName>
<asnElementName>pre-emption-capability</asnElementName>
<elementTypeName>Pre_emption_capability</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPre_emption_capability</name>
<signature>bool OptionPre_emption_capability() const</signature>
<elementName>Pre_emption_capability</elementName>
<asnElementName>pre-emption-capability</asnElementName>
<elementTypeName>Pre_emption_capability</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetPre_emption_vulnerability</name>
<signature>void SetPre_emption_vulnerability(Pre_emption_vulnerability* element)</signature>
<elmentName>Pre_emption_vulnerability</elmentName>
<asnElementName>pre-emption-vulnerability</asnElementName>
<elementTypeName>Pre_emption_vulnerability</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPre_emption_vulnerability</name>
<signature>void SetPre_emption_vulnerability(const Pre_emption_vulnerability&amp; element)</signature>
<elementName>Pre_emption_vulnerability</elementName>
<asnElementName>pre-emption-vulnerability</asnElementName>
<elementTypeName>Pre_emption_vulnerability</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPre_emption_vulnerability</name>
<signature>const Pre_emption_vulnerability&amp; GetPre_emption_vulnerability() const</signature>
<elementName>Pre_emption_vulnerability</elementName>
<asnElementName>pre-emption-vulnerability</asnElementName>
<elementTypeName>Pre_emption_vulnerability</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPre_emption_vulnerability</name>
<signature>bool OptionPre_emption_vulnerability() const</signature>
<elementName>Pre_emption_vulnerability</elementName>
<asnElementName>pre-emption-vulnerability</asnElementName>
<elementTypeName>Pre_emption_vulnerability</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- Allocation-Retention-Priority information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>Allocation-Retention-Priority ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    priority-level [0] IMPLICIT INTEGER,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pre-emption-capability [1] IMPLICIT BOOLEAN OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pre-emption-vulnerability [2] IMPLICIT BOOLEAN OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [3] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

