<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>BusySubscriberParam</className>
<asnTypeName>BusySubscriberParam</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCcbs_Possible</name>
<signature>void SetCcbs_Possible(Ccbs_Possible* element)</signature>
<elmentName>Ccbs_Possible</elmentName>
<asnElementName>ccbs-Possible</asnElementName>
<elementTypeName>Ccbs_Possible</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCcbs_Possible</name>
<signature>void SetCcbs_Possible(const Ccbs_Possible&amp; element)</signature>
<elementName>Ccbs_Possible</elementName>
<asnElementName>ccbs-Possible</asnElementName>
<elementTypeName>Ccbs_Possible</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCcbs_Possible</name>
<signature>const Ccbs_Possible&amp; GetCcbs_Possible() const</signature>
<elementName>Ccbs_Possible</elementName>
<asnElementName>ccbs-Possible</asnElementName>
<elementTypeName>Ccbs_Possible</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCcbs_Possible</name>
<signature>bool OptionCcbs_Possible() const</signature>
<elementName>Ccbs_Possible</elementName>
<asnElementName>ccbs-Possible</asnElementName>
<elementTypeName>Ccbs_Possible</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCcbs_Busy</name>
<signature>void SetCcbs_Busy(Ccbs_Busy* element)</signature>
<elmentName>Ccbs_Busy</elmentName>
<asnElementName>ccbs-Busy</asnElementName>
<elementTypeName>Ccbs_Busy</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCcbs_Busy</name>
<signature>void SetCcbs_Busy(const Ccbs_Busy&amp; element)</signature>
<elementName>Ccbs_Busy</elementName>
<asnElementName>ccbs-Busy</asnElementName>
<elementTypeName>Ccbs_Busy</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCcbs_Busy</name>
<signature>const Ccbs_Busy&amp; GetCcbs_Busy() const</signature>
<elementName>Ccbs_Busy</elementName>
<asnElementName>ccbs-Busy</asnElementName>
<elementTypeName>Ccbs_Busy</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCcbs_Busy</name>
<signature>bool OptionCcbs_Busy() const</signature>
<elementName>Ccbs_Busy</elementName>
<asnElementName>ccbs-Busy</asnElementName>
<elementTypeName>Ccbs_Busy</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- BusySubscriberParam information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>BusySubscriberParam ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    extensionContainer ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ccbs-Possible [0] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ccbs-Busy [1] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

