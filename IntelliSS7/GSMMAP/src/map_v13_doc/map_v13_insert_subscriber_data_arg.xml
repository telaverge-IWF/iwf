<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>InsertSubscriberDataArg</className>
<asnTypeName>InsertSubscriberDataArg</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionImsi</name>
<signature>bool OptionImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMsisdn</name>
<signature>void SetMsisdn(ISDN_AddressString* element)</signature>
<elmentName>Msisdn</elmentName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsisdn</name>
<signature>void SetMsisdn(const ISDN_AddressString&amp; element)</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsisdn</name>
<signature>const ISDN_AddressString&amp; GetMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMsisdn</name>
<signature>bool OptionMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCategory</name>
<signature>void SetCategory(Category* element)</signature>
<elmentName>Category</elmentName>
<asnElementName>category</asnElementName>
<elementTypeName>Category</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCategory</name>
<signature>void SetCategory(const Category&amp; element)</signature>
<elementName>Category</elementName>
<asnElementName>category</asnElementName>
<elementTypeName>Category</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCategory</name>
<signature>const Category&amp; GetCategory() const</signature>
<elementName>Category</elementName>
<asnElementName>category</asnElementName>
<elementTypeName>Category</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCategory</name>
<signature>bool OptionCategory() const</signature>
<elementName>Category</elementName>
<asnElementName>category</asnElementName>
<elementTypeName>Category</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSubscriberStatus</name>
<signature>void SetSubscriberStatus(SubscriberStatus* element)</signature>
<elmentName>SubscriberStatus</elmentName>
<asnElementName>subscriberStatus</asnElementName>
<elementTypeName>SubscriberStatus</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSubscriberStatus</name>
<signature>void SetSubscriberStatus(const SubscriberStatus&amp; element)</signature>
<elementName>SubscriberStatus</elementName>
<asnElementName>subscriberStatus</asnElementName>
<elementTypeName>SubscriberStatus</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSubscriberStatus</name>
<signature>const SubscriberStatus&amp; GetSubscriberStatus() const</signature>
<elementName>SubscriberStatus</elementName>
<asnElementName>subscriberStatus</asnElementName>
<elementTypeName>SubscriberStatus</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSubscriberStatus</name>
<signature>bool OptionSubscriberStatus() const</signature>
<elementName>SubscriberStatus</elementName>
<asnElementName>subscriberStatus</asnElementName>
<elementTypeName>SubscriberStatus</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBearerServiceList</name>
<signature>void SetBearerServiceList(BearerServiceList* element)</signature>
<elmentName>BearerServiceList</elmentName>
<asnElementName>bearerServiceList</asnElementName>
<elementTypeName>BearerServiceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBearerServiceList</name>
<signature>void SetBearerServiceList(const BearerServiceList&amp; element)</signature>
<elementName>BearerServiceList</elementName>
<asnElementName>bearerServiceList</asnElementName>
<elementTypeName>BearerServiceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBearerServiceList</name>
<signature>const BearerServiceList&amp; GetBearerServiceList() const</signature>
<elementName>BearerServiceList</elementName>
<asnElementName>bearerServiceList</asnElementName>
<elementTypeName>BearerServiceList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBearerServiceList</name>
<signature>bool OptionBearerServiceList() const</signature>
<elementName>BearerServiceList</elementName>
<asnElementName>bearerServiceList</asnElementName>
<elementTypeName>BearerServiceList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTeleserviceList</name>
<signature>void SetTeleserviceList(TeleserviceList* element)</signature>
<elmentName>TeleserviceList</elmentName>
<asnElementName>teleserviceList</asnElementName>
<elementTypeName>TeleserviceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTeleserviceList</name>
<signature>void SetTeleserviceList(const TeleserviceList&amp; element)</signature>
<elementName>TeleserviceList</elementName>
<asnElementName>teleserviceList</asnElementName>
<elementTypeName>TeleserviceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTeleserviceList</name>
<signature>const TeleserviceList&amp; GetTeleserviceList() const</signature>
<elementName>TeleserviceList</elementName>
<asnElementName>teleserviceList</asnElementName>
<elementTypeName>TeleserviceList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTeleserviceList</name>
<signature>bool OptionTeleserviceList() const</signature>
<elementName>TeleserviceList</elementName>
<asnElementName>teleserviceList</asnElementName>
<elementTypeName>TeleserviceList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetProvisionedSS</name>
<signature>void SetProvisionedSS(Ext_SS_InfoList* element)</signature>
<elmentName>ProvisionedSS</elmentName>
<asnElementName>provisionedSS</asnElementName>
<elementTypeName>Ext_SS_InfoList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetProvisionedSS</name>
<signature>void SetProvisionedSS(const Ext_SS_InfoList&amp; element)</signature>
<elementName>ProvisionedSS</elementName>
<asnElementName>provisionedSS</asnElementName>
<elementTypeName>Ext_SS_InfoList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetProvisionedSS</name>
<signature>const Ext_SS_InfoList&amp; GetProvisionedSS() const</signature>
<elementName>ProvisionedSS</elementName>
<asnElementName>provisionedSS</asnElementName>
<elementTypeName>Ext_SS_InfoList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionProvisionedSS</name>
<signature>bool OptionProvisionedSS() const</signature>
<elementName>ProvisionedSS</elementName>
<asnElementName>provisionedSS</asnElementName>
<elementTypeName>Ext_SS_InfoList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetOdb_Data</name>
<signature>void SetOdb_Data(ODB_Data* element)</signature>
<elmentName>Odb_Data</elmentName>
<asnElementName>odb-Data</asnElementName>
<elementTypeName>ODB_Data</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOdb_Data</name>
<signature>void SetOdb_Data(const ODB_Data&amp; element)</signature>
<elementName>Odb_Data</elementName>
<asnElementName>odb-Data</asnElementName>
<elementTypeName>ODB_Data</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOdb_Data</name>
<signature>const ODB_Data&amp; GetOdb_Data() const</signature>
<elementName>Odb_Data</elementName>
<asnElementName>odb-Data</asnElementName>
<elementTypeName>ODB_Data</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionOdb_Data</name>
<signature>bool OptionOdb_Data() const</signature>
<elementName>Odb_Data</elementName>
<asnElementName>odb-Data</asnElementName>
<elementTypeName>ODB_Data</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRoamingRestrictionDueToUnsupportedFeature</name>
<signature>void SetRoamingRestrictionDueToUnsupportedFeature(RoamingRestrictionDueToUnsupportedFeature* element)</signature>
<elmentName>RoamingRestrictionDueToUnsupportedFeature</elmentName>
<asnElementName>roamingRestrictionDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictionDueToUnsupportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRoamingRestrictionDueToUnsupportedFeature</name>
<signature>void SetRoamingRestrictionDueToUnsupportedFeature(const RoamingRestrictionDueToUnsupportedFeature&amp; element)</signature>
<elementName>RoamingRestrictionDueToUnsupportedFeature</elementName>
<asnElementName>roamingRestrictionDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictionDueToUnsupportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRoamingRestrictionDueToUnsupportedFeature</name>
<signature>const RoamingRestrictionDueToUnsupportedFeature&amp; GetRoamingRestrictionDueToUnsupportedFeature() const</signature>
<elementName>RoamingRestrictionDueToUnsupportedFeature</elementName>
<asnElementName>roamingRestrictionDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictionDueToUnsupportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRoamingRestrictionDueToUnsupportedFeature</name>
<signature>bool OptionRoamingRestrictionDueToUnsupportedFeature() const</signature>
<elementName>RoamingRestrictionDueToUnsupportedFeature</elementName>
<asnElementName>roamingRestrictionDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictionDueToUnsupportedFeature</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRegionalSubscriptionData</name>
<signature>void SetRegionalSubscriptionData(ZoneCodeList* element)</signature>
<elmentName>RegionalSubscriptionData</elmentName>
<asnElementName>regionalSubscriptionData</asnElementName>
<elementTypeName>ZoneCodeList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRegionalSubscriptionData</name>
<signature>void SetRegionalSubscriptionData(const ZoneCodeList&amp; element)</signature>
<elementName>RegionalSubscriptionData</elementName>
<asnElementName>regionalSubscriptionData</asnElementName>
<elementTypeName>ZoneCodeList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRegionalSubscriptionData</name>
<signature>const ZoneCodeList&amp; GetRegionalSubscriptionData() const</signature>
<elementName>RegionalSubscriptionData</elementName>
<asnElementName>regionalSubscriptionData</asnElementName>
<elementTypeName>ZoneCodeList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRegionalSubscriptionData</name>
<signature>bool OptionRegionalSubscriptionData() const</signature>
<elementName>RegionalSubscriptionData</elementName>
<asnElementName>regionalSubscriptionData</asnElementName>
<elementTypeName>ZoneCodeList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetVbsSubscriptionData</name>
<signature>void SetVbsSubscriptionData(VBSDataList* element)</signature>
<elmentName>VbsSubscriptionData</elmentName>
<asnElementName>vbsSubscriptionData</asnElementName>
<elementTypeName>VBSDataList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVbsSubscriptionData</name>
<signature>void SetVbsSubscriptionData(const VBSDataList&amp; element)</signature>
<elementName>VbsSubscriptionData</elementName>
<asnElementName>vbsSubscriptionData</asnElementName>
<elementTypeName>VBSDataList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVbsSubscriptionData</name>
<signature>const VBSDataList&amp; GetVbsSubscriptionData() const</signature>
<elementName>VbsSubscriptionData</elementName>
<asnElementName>vbsSubscriptionData</asnElementName>
<elementTypeName>VBSDataList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVbsSubscriptionData</name>
<signature>bool OptionVbsSubscriptionData() const</signature>
<elementName>VbsSubscriptionData</elementName>
<asnElementName>vbsSubscriptionData</asnElementName>
<elementTypeName>VBSDataList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetVgcsSubscriptionData</name>
<signature>void SetVgcsSubscriptionData(VGCSDataList* element)</signature>
<elmentName>VgcsSubscriptionData</elmentName>
<asnElementName>vgcsSubscriptionData</asnElementName>
<elementTypeName>VGCSDataList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVgcsSubscriptionData</name>
<signature>void SetVgcsSubscriptionData(const VGCSDataList&amp; element)</signature>
<elementName>VgcsSubscriptionData</elementName>
<asnElementName>vgcsSubscriptionData</asnElementName>
<elementTypeName>VGCSDataList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVgcsSubscriptionData</name>
<signature>const VGCSDataList&amp; GetVgcsSubscriptionData() const</signature>
<elementName>VgcsSubscriptionData</elementName>
<asnElementName>vgcsSubscriptionData</asnElementName>
<elementTypeName>VGCSDataList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVgcsSubscriptionData</name>
<signature>bool OptionVgcsSubscriptionData() const</signature>
<elementName>VgcsSubscriptionData</elementName>
<asnElementName>vgcsSubscriptionData</asnElementName>
<elementTypeName>VGCSDataList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetVlrCamelSubscriptionInfo</name>
<signature>void SetVlrCamelSubscriptionInfo(VlrCamelSubscriptionInfo* element)</signature>
<elmentName>VlrCamelSubscriptionInfo</elmentName>
<asnElementName>vlrCamelSubscriptionInfo</asnElementName>
<elementTypeName>VlrCamelSubscriptionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVlrCamelSubscriptionInfo</name>
<signature>void SetVlrCamelSubscriptionInfo(const VlrCamelSubscriptionInfo&amp; element)</signature>
<elementName>VlrCamelSubscriptionInfo</elementName>
<asnElementName>vlrCamelSubscriptionInfo</asnElementName>
<elementTypeName>VlrCamelSubscriptionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVlrCamelSubscriptionInfo</name>
<signature>const VlrCamelSubscriptionInfo&amp; GetVlrCamelSubscriptionInfo() const</signature>
<elementName>VlrCamelSubscriptionInfo</elementName>
<asnElementName>vlrCamelSubscriptionInfo</asnElementName>
<elementTypeName>VlrCamelSubscriptionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVlrCamelSubscriptionInfo</name>
<signature>bool OptionVlrCamelSubscriptionInfo() const</signature>
<elementName>VlrCamelSubscriptionInfo</elementName>
<asnElementName>vlrCamelSubscriptionInfo</asnElementName>
<elementTypeName>VlrCamelSubscriptionInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNaea_PreferredCI</name>
<signature>void SetNaea_PreferredCI(NAEA_PreferredCI* element)</signature>
<elmentName>Naea_PreferredCI</elmentName>
<asnElementName>naea-PreferredCI</asnElementName>
<elementTypeName>NAEA_PreferredCI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNaea_PreferredCI</name>
<signature>void SetNaea_PreferredCI(const NAEA_PreferredCI&amp; element)</signature>
<elementName>Naea_PreferredCI</elementName>
<asnElementName>naea-PreferredCI</asnElementName>
<elementTypeName>NAEA_PreferredCI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNaea_PreferredCI</name>
<signature>const NAEA_PreferredCI&amp; GetNaea_PreferredCI() const</signature>
<elementName>Naea_PreferredCI</elementName>
<asnElementName>naea-PreferredCI</asnElementName>
<elementTypeName>NAEA_PreferredCI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNaea_PreferredCI</name>
<signature>bool OptionNaea_PreferredCI() const</signature>
<elementName>Naea_PreferredCI</elementName>
<asnElementName>naea-PreferredCI</asnElementName>
<elementTypeName>NAEA_PreferredCI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGprsSubscriptionData</name>
<signature>void SetGprsSubscriptionData(GPRSSubscriptionData* element)</signature>
<elmentName>GprsSubscriptionData</elmentName>
<asnElementName>gprsSubscriptionData</asnElementName>
<elementTypeName>GPRSSubscriptionData</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGprsSubscriptionData</name>
<signature>void SetGprsSubscriptionData(const GPRSSubscriptionData&amp; element)</signature>
<elementName>GprsSubscriptionData</elementName>
<asnElementName>gprsSubscriptionData</asnElementName>
<elementTypeName>GPRSSubscriptionData</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGprsSubscriptionData</name>
<signature>const GPRSSubscriptionData&amp; GetGprsSubscriptionData() const</signature>
<elementName>GprsSubscriptionData</elementName>
<asnElementName>gprsSubscriptionData</asnElementName>
<elementTypeName>GPRSSubscriptionData</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGprsSubscriptionData</name>
<signature>bool OptionGprsSubscriptionData() const</signature>
<elementName>GprsSubscriptionData</elementName>
<asnElementName>gprsSubscriptionData</asnElementName>
<elementTypeName>GPRSSubscriptionData</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRoamingRestrictedInSgsnDueToUnsupportedFeature</name>
<signature>void SetRoamingRestrictedInSgsnDueToUnsupportedFeature(RoamingRestrictedInSgsnDueToUnsupportedFeature* element)</signature>
<elmentName>RoamingRestrictedInSgsnDueToUnsupportedFeature</elmentName>
<asnElementName>roamingRestrictedInSgsnDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictedInSgsnDueToUnsupportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRoamingRestrictedInSgsnDueToUnsupportedFeature</name>
<signature>void SetRoamingRestrictedInSgsnDueToUnsupportedFeature(const RoamingRestrictedInSgsnDueToUnsupportedFeature&amp; element)</signature>
<elementName>RoamingRestrictedInSgsnDueToUnsupportedFeature</elementName>
<asnElementName>roamingRestrictedInSgsnDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictedInSgsnDueToUnsupportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRoamingRestrictedInSgsnDueToUnsupportedFeature</name>
<signature>const RoamingRestrictedInSgsnDueToUnsupportedFeature&amp; GetRoamingRestrictedInSgsnDueToUnsupportedFeature() const</signature>
<elementName>RoamingRestrictedInSgsnDueToUnsupportedFeature</elementName>
<asnElementName>roamingRestrictedInSgsnDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictedInSgsnDueToUnsupportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRoamingRestrictedInSgsnDueToUnsupportedFeature</name>
<signature>bool OptionRoamingRestrictedInSgsnDueToUnsupportedFeature() const</signature>
<elementName>RoamingRestrictedInSgsnDueToUnsupportedFeature</elementName>
<asnElementName>roamingRestrictedInSgsnDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictedInSgsnDueToUnsupportedFeature</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNetworkAccessMode</name>
<signature>void SetNetworkAccessMode(NetworkAccessMode* element)</signature>
<elmentName>NetworkAccessMode</elmentName>
<asnElementName>networkAccessMode</asnElementName>
<elementTypeName>NetworkAccessMode</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNetworkAccessMode</name>
<signature>void SetNetworkAccessMode(const NetworkAccessMode&amp; element)</signature>
<elementName>NetworkAccessMode</elementName>
<asnElementName>networkAccessMode</asnElementName>
<elementTypeName>NetworkAccessMode</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNetworkAccessMode</name>
<signature>const NetworkAccessMode&amp; GetNetworkAccessMode() const</signature>
<elementName>NetworkAccessMode</elementName>
<asnElementName>networkAccessMode</asnElementName>
<elementTypeName>NetworkAccessMode</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNetworkAccessMode</name>
<signature>bool OptionNetworkAccessMode() const</signature>
<elementName>NetworkAccessMode</elementName>
<asnElementName>networkAccessMode</asnElementName>
<elementTypeName>NetworkAccessMode</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLsaInformation</name>
<signature>void SetLsaInformation(LSAInformation* element)</signature>
<elmentName>LsaInformation</elmentName>
<asnElementName>lsaInformation</asnElementName>
<elementTypeName>LSAInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLsaInformation</name>
<signature>void SetLsaInformation(const LSAInformation&amp; element)</signature>
<elementName>LsaInformation</elementName>
<asnElementName>lsaInformation</asnElementName>
<elementTypeName>LSAInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLsaInformation</name>
<signature>const LSAInformation&amp; GetLsaInformation() const</signature>
<elementName>LsaInformation</elementName>
<asnElementName>lsaInformation</asnElementName>
<elementTypeName>LSAInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLsaInformation</name>
<signature>bool OptionLsaInformation() const</signature>
<elementName>LsaInformation</elementName>
<asnElementName>lsaInformation</asnElementName>
<elementTypeName>LSAInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLmu_Indicator</name>
<signature>void SetLmu_Indicator(Lmu_Indicator* element)</signature>
<elmentName>Lmu_Indicator</elmentName>
<asnElementName>lmu-Indicator</asnElementName>
<elementTypeName>Lmu_Indicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLmu_Indicator</name>
<signature>void SetLmu_Indicator(const Lmu_Indicator&amp; element)</signature>
<elementName>Lmu_Indicator</elementName>
<asnElementName>lmu-Indicator</asnElementName>
<elementTypeName>Lmu_Indicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLmu_Indicator</name>
<signature>const Lmu_Indicator&amp; GetLmu_Indicator() const</signature>
<elementName>Lmu_Indicator</elementName>
<asnElementName>lmu-Indicator</asnElementName>
<elementTypeName>Lmu_Indicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLmu_Indicator</name>
<signature>bool OptionLmu_Indicator() const</signature>
<elementName>Lmu_Indicator</elementName>
<asnElementName>lmu-Indicator</asnElementName>
<elementTypeName>Lmu_Indicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLcsInformation</name>
<signature>void SetLcsInformation(LCSInformation* element)</signature>
<elmentName>LcsInformation</elmentName>
<asnElementName>lcsInformation</asnElementName>
<elementTypeName>LCSInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLcsInformation</name>
<signature>void SetLcsInformation(const LCSInformation&amp; element)</signature>
<elementName>LcsInformation</elementName>
<asnElementName>lcsInformation</asnElementName>
<elementTypeName>LCSInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLcsInformation</name>
<signature>const LCSInformation&amp; GetLcsInformation() const</signature>
<elementName>LcsInformation</elementName>
<asnElementName>lcsInformation</asnElementName>
<elementTypeName>LCSInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLcsInformation</name>
<signature>bool OptionLcsInformation() const</signature>
<elementName>LcsInformation</elementName>
<asnElementName>lcsInformation</asnElementName>
<elementTypeName>LCSInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIstAlertTimer</name>
<signature>void SetIstAlertTimer(IST_AlertTimerValue* element)</signature>
<elmentName>IstAlertTimer</elmentName>
<asnElementName>istAlertTimer</asnElementName>
<elementTypeName>IST_AlertTimerValue</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIstAlertTimer</name>
<signature>void SetIstAlertTimer(const IST_AlertTimerValue&amp; element)</signature>
<elementName>IstAlertTimer</elementName>
<asnElementName>istAlertTimer</asnElementName>
<elementTypeName>IST_AlertTimerValue</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIstAlertTimer</name>
<signature>const IST_AlertTimerValue&amp; GetIstAlertTimer() const</signature>
<elementName>IstAlertTimer</elementName>
<asnElementName>istAlertTimer</asnElementName>
<elementTypeName>IST_AlertTimerValue</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIstAlertTimer</name>
<signature>bool OptionIstAlertTimer() const</signature>
<elementName>IstAlertTimer</elementName>
<asnElementName>istAlertTimer</asnElementName>
<elementTypeName>IST_AlertTimerValue</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSuperChargerSupportedInHLR</name>
<signature>void SetSuperChargerSupportedInHLR(AgeIndicator* element)</signature>
<elmentName>SuperChargerSupportedInHLR</elmentName>
<asnElementName>superChargerSupportedInHLR</asnElementName>
<elementTypeName>AgeIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSuperChargerSupportedInHLR</name>
<signature>void SetSuperChargerSupportedInHLR(const AgeIndicator&amp; element)</signature>
<elementName>SuperChargerSupportedInHLR</elementName>
<asnElementName>superChargerSupportedInHLR</asnElementName>
<elementTypeName>AgeIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSuperChargerSupportedInHLR</name>
<signature>const AgeIndicator&amp; GetSuperChargerSupportedInHLR() const</signature>
<elementName>SuperChargerSupportedInHLR</elementName>
<asnElementName>superChargerSupportedInHLR</asnElementName>
<elementTypeName>AgeIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSuperChargerSupportedInHLR</name>
<signature>bool OptionSuperChargerSupportedInHLR() const</signature>
<elementName>SuperChargerSupportedInHLR</elementName>
<asnElementName>superChargerSupportedInHLR</asnElementName>
<elementTypeName>AgeIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMc_SS_Info</name>
<signature>void SetMc_SS_Info(MC_SS_Info* element)</signature>
<elmentName>Mc_SS_Info</elmentName>
<asnElementName>mc-SS-Info</asnElementName>
<elementTypeName>MC_SS_Info</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMc_SS_Info</name>
<signature>void SetMc_SS_Info(const MC_SS_Info&amp; element)</signature>
<elementName>Mc_SS_Info</elementName>
<asnElementName>mc-SS-Info</asnElementName>
<elementTypeName>MC_SS_Info</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMc_SS_Info</name>
<signature>const MC_SS_Info&amp; GetMc_SS_Info() const</signature>
<elementName>Mc_SS_Info</elementName>
<asnElementName>mc-SS-Info</asnElementName>
<elementTypeName>MC_SS_Info</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMc_SS_Info</name>
<signature>bool OptionMc_SS_Info() const</signature>
<elementName>Mc_SS_Info</elementName>
<asnElementName>mc-SS-Info</asnElementName>
<elementTypeName>MC_SS_Info</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCs_AllocationRetentionPriority</name>
<signature>void SetCs_AllocationRetentionPriority(CS_AllocationRetentionPriority* element)</signature>
<elmentName>Cs_AllocationRetentionPriority</elmentName>
<asnElementName>cs-AllocationRetentionPriority</asnElementName>
<elementTypeName>CS_AllocationRetentionPriority</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCs_AllocationRetentionPriority</name>
<signature>void SetCs_AllocationRetentionPriority(const CS_AllocationRetentionPriority&amp; element)</signature>
<elementName>Cs_AllocationRetentionPriority</elementName>
<asnElementName>cs-AllocationRetentionPriority</asnElementName>
<elementTypeName>CS_AllocationRetentionPriority</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCs_AllocationRetentionPriority</name>
<signature>const CS_AllocationRetentionPriority&amp; GetCs_AllocationRetentionPriority() const</signature>
<elementName>Cs_AllocationRetentionPriority</elementName>
<asnElementName>cs-AllocationRetentionPriority</asnElementName>
<elementTypeName>CS_AllocationRetentionPriority</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCs_AllocationRetentionPriority</name>
<signature>bool OptionCs_AllocationRetentionPriority() const</signature>
<elementName>Cs_AllocationRetentionPriority</elementName>
<asnElementName>cs-AllocationRetentionPriority</asnElementName>
<elementTypeName>CS_AllocationRetentionPriority</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSgsn_CAMEL_SubscriptionInfo</name>
<signature>void SetSgsn_CAMEL_SubscriptionInfo(SGSN_CAMEL_SubscriptionInfo* element)</signature>
<elmentName>Sgsn_CAMEL_SubscriptionInfo</elmentName>
<asnElementName>sgsn-CAMEL-SubscriptionInfo</asnElementName>
<elementTypeName>SGSN_CAMEL_SubscriptionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSgsn_CAMEL_SubscriptionInfo</name>
<signature>void SetSgsn_CAMEL_SubscriptionInfo(const SGSN_CAMEL_SubscriptionInfo&amp; element)</signature>
<elementName>Sgsn_CAMEL_SubscriptionInfo</elementName>
<asnElementName>sgsn-CAMEL-SubscriptionInfo</asnElementName>
<elementTypeName>SGSN_CAMEL_SubscriptionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSgsn_CAMEL_SubscriptionInfo</name>
<signature>const SGSN_CAMEL_SubscriptionInfo&amp; GetSgsn_CAMEL_SubscriptionInfo() const</signature>
<elementName>Sgsn_CAMEL_SubscriptionInfo</elementName>
<asnElementName>sgsn-CAMEL-SubscriptionInfo</asnElementName>
<elementTypeName>SGSN_CAMEL_SubscriptionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSgsn_CAMEL_SubscriptionInfo</name>
<signature>bool OptionSgsn_CAMEL_SubscriptionInfo() const</signature>
<elementName>Sgsn_CAMEL_SubscriptionInfo</elementName>
<asnElementName>sgsn-CAMEL-SubscriptionInfo</asnElementName>
<elementTypeName>SGSN_CAMEL_SubscriptionInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetChargingCharacteristics</name>
<signature>void SetChargingCharacteristics(ChargingCharacteristics* element)</signature>
<elmentName>ChargingCharacteristics</elmentName>
<asnElementName>chargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChargingCharacteristics</name>
<signature>void SetChargingCharacteristics(const ChargingCharacteristics&amp; element)</signature>
<elementName>ChargingCharacteristics</elementName>
<asnElementName>chargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChargingCharacteristics</name>
<signature>const ChargingCharacteristics&amp; GetChargingCharacteristics() const</signature>
<elementName>ChargingCharacteristics</elementName>
<asnElementName>chargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionChargingCharacteristics</name>
<signature>bool OptionChargingCharacteristics() const</signature>
<elementName>ChargingCharacteristics</elementName>
<asnElementName>chargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAccessRestrictionData</name>
<signature>void SetAccessRestrictionData(AccessRestrictionData* element)</signature>
<elmentName>AccessRestrictionData</elmentName>
<asnElementName>accessRestrictionData</asnElementName>
<elementTypeName>AccessRestrictionData</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAccessRestrictionData</name>
<signature>void SetAccessRestrictionData(const AccessRestrictionData&amp; element)</signature>
<elementName>AccessRestrictionData</elementName>
<asnElementName>accessRestrictionData</asnElementName>
<elementTypeName>AccessRestrictionData</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAccessRestrictionData</name>
<signature>const AccessRestrictionData&amp; GetAccessRestrictionData() const</signature>
<elementName>AccessRestrictionData</elementName>
<asnElementName>accessRestrictionData</asnElementName>
<elementTypeName>AccessRestrictionData</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAccessRestrictionData</name>
<signature>bool OptionAccessRestrictionData() const</signature>
<elementName>AccessRestrictionData</elementName>
<asnElementName>accessRestrictionData</asnElementName>
<elementTypeName>AccessRestrictionData</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIcs_Indicator</name>
<signature>void SetIcs_Indicator(Ics_Indicator* element)</signature>
<elmentName>Ics_Indicator</elmentName>
<asnElementName>ics-Indicator</asnElementName>
<elementTypeName>Ics_Indicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIcs_Indicator</name>
<signature>void SetIcs_Indicator(const Ics_Indicator&amp; element)</signature>
<elementName>Ics_Indicator</elementName>
<asnElementName>ics-Indicator</asnElementName>
<elementTypeName>Ics_Indicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIcs_Indicator</name>
<signature>const Ics_Indicator&amp; GetIcs_Indicator() const</signature>
<elementName>Ics_Indicator</elementName>
<asnElementName>ics-Indicator</asnElementName>
<elementTypeName>Ics_Indicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIcs_Indicator</name>
<signature>bool OptionIcs_Indicator() const</signature>
<elementName>Ics_Indicator</elementName>
<asnElementName>ics-Indicator</asnElementName>
<elementTypeName>Ics_Indicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetEps_SubscriptionData</name>
<signature>void SetEps_SubscriptionData(EPS_SubscriptionData* element)</signature>
<elmentName>Eps_SubscriptionData</elmentName>
<asnElementName>eps-SubscriptionData</asnElementName>
<elementTypeName>EPS_SubscriptionData</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEps_SubscriptionData</name>
<signature>void SetEps_SubscriptionData(const EPS_SubscriptionData&amp; element)</signature>
<elementName>Eps_SubscriptionData</elementName>
<asnElementName>eps-SubscriptionData</asnElementName>
<elementTypeName>EPS_SubscriptionData</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEps_SubscriptionData</name>
<signature>const EPS_SubscriptionData&amp; GetEps_SubscriptionData() const</signature>
<elementName>Eps_SubscriptionData</elementName>
<asnElementName>eps-SubscriptionData</asnElementName>
<elementTypeName>EPS_SubscriptionData</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionEps_SubscriptionData</name>
<signature>bool OptionEps_SubscriptionData() const</signature>
<elementName>Eps_SubscriptionData</elementName>
<asnElementName>eps-SubscriptionData</asnElementName>
<elementTypeName>EPS_SubscriptionData</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCsg_SubscriptionDataList</name>
<signature>void SetCsg_SubscriptionDataList(CSG_SubscriptionDataList* element)</signature>
<elmentName>Csg_SubscriptionDataList</elmentName>
<asnElementName>csg-SubscriptionDataList</asnElementName>
<elementTypeName>CSG_SubscriptionDataList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCsg_SubscriptionDataList</name>
<signature>void SetCsg_SubscriptionDataList(const CSG_SubscriptionDataList&amp; element)</signature>
<elementName>Csg_SubscriptionDataList</elementName>
<asnElementName>csg-SubscriptionDataList</asnElementName>
<elementTypeName>CSG_SubscriptionDataList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCsg_SubscriptionDataList</name>
<signature>const CSG_SubscriptionDataList&amp; GetCsg_SubscriptionDataList() const</signature>
<elementName>Csg_SubscriptionDataList</elementName>
<asnElementName>csg-SubscriptionDataList</asnElementName>
<elementTypeName>CSG_SubscriptionDataList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCsg_SubscriptionDataList</name>
<signature>bool OptionCsg_SubscriptionDataList() const</signature>
<elementName>Csg_SubscriptionDataList</elementName>
<asnElementName>csg-SubscriptionDataList</asnElementName>
<elementTypeName>CSG_SubscriptionDataList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetUe_ReachabilityRequestIndicator</name>
<signature>void SetUe_ReachabilityRequestIndicator(Ue_ReachabilityRequestIndicator* element)</signature>
<elmentName>Ue_ReachabilityRequestIndicator</elmentName>
<asnElementName>ue-ReachabilityRequestIndicator</asnElementName>
<elementTypeName>Ue_ReachabilityRequestIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetUe_ReachabilityRequestIndicator</name>
<signature>void SetUe_ReachabilityRequestIndicator(const Ue_ReachabilityRequestIndicator&amp; element)</signature>
<elementName>Ue_ReachabilityRequestIndicator</elementName>
<asnElementName>ue-ReachabilityRequestIndicator</asnElementName>
<elementTypeName>Ue_ReachabilityRequestIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetUe_ReachabilityRequestIndicator</name>
<signature>const Ue_ReachabilityRequestIndicator&amp; GetUe_ReachabilityRequestIndicator() const</signature>
<elementName>Ue_ReachabilityRequestIndicator</elementName>
<asnElementName>ue-ReachabilityRequestIndicator</asnElementName>
<elementTypeName>Ue_ReachabilityRequestIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionUe_ReachabilityRequestIndicator</name>
<signature>bool OptionUe_ReachabilityRequestIndicator() const</signature>
<elementName>Ue_ReachabilityRequestIndicator</elementName>
<asnElementName>ue-ReachabilityRequestIndicator</asnElementName>
<elementTypeName>Ue_ReachabilityRequestIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSgsn_Number</name>
<signature>void SetSgsn_Number(ISDN_AddressString* element)</signature>
<elmentName>Sgsn_Number</elmentName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSgsn_Number</name>
<signature>void SetSgsn_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>Sgsn_Number</elementName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSgsn_Number</name>
<signature>const ISDN_AddressString&amp; GetSgsn_Number() const</signature>
<elementName>Sgsn_Number</elementName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSgsn_Number</name>
<signature>bool OptionSgsn_Number() const</signature>
<elementName>Sgsn_Number</elementName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMme_Name</name>
<signature>void SetMme_Name(DiameterIdentity* element)</signature>
<elmentName>Mme_Name</elmentName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMme_Name</name>
<signature>void SetMme_Name(const DiameterIdentity&amp; element)</signature>
<elementName>Mme_Name</elementName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMme_Name</name>
<signature>const DiameterIdentity&amp; GetMme_Name() const</signature>
<elementName>Mme_Name</elementName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMme_Name</name>
<signature>bool OptionMme_Name() const</signature>
<elementName>Mme_Name</elementName>
<asnElementName>mme-Name</asnElementName>
<elementTypeName>DiameterIdentity</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSubscribedPeriodicRAUTAUtimer</name>
<signature>void SetSubscribedPeriodicRAUTAUtimer(SubscribedPeriodicRAUTAUtimer* element)</signature>
<elmentName>SubscribedPeriodicRAUTAUtimer</elmentName>
<asnElementName>subscribedPeriodicRAUTAUtimer</asnElementName>
<elementTypeName>SubscribedPeriodicRAUTAUtimer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSubscribedPeriodicRAUTAUtimer</name>
<signature>void SetSubscribedPeriodicRAUTAUtimer(const SubscribedPeriodicRAUTAUtimer&amp; element)</signature>
<elementName>SubscribedPeriodicRAUTAUtimer</elementName>
<asnElementName>subscribedPeriodicRAUTAUtimer</asnElementName>
<elementTypeName>SubscribedPeriodicRAUTAUtimer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSubscribedPeriodicRAUTAUtimer</name>
<signature>const SubscribedPeriodicRAUTAUtimer&amp; GetSubscribedPeriodicRAUTAUtimer() const</signature>
<elementName>SubscribedPeriodicRAUTAUtimer</elementName>
<asnElementName>subscribedPeriodicRAUTAUtimer</asnElementName>
<elementTypeName>SubscribedPeriodicRAUTAUtimer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSubscribedPeriodicRAUTAUtimer</name>
<signature>bool OptionSubscribedPeriodicRAUTAUtimer() const</signature>
<elementName>SubscribedPeriodicRAUTAUtimer</elementName>
<asnElementName>subscribedPeriodicRAUTAUtimer</asnElementName>
<elementTypeName>SubscribedPeriodicRAUTAUtimer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetVplmnLIPAAllowed</name>
<signature>void SetVplmnLIPAAllowed(VplmnLIPAAllowed* element)</signature>
<elmentName>VplmnLIPAAllowed</elmentName>
<asnElementName>vplmnLIPAAllowed</asnElementName>
<elementTypeName>VplmnLIPAAllowed</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVplmnLIPAAllowed</name>
<signature>void SetVplmnLIPAAllowed(const VplmnLIPAAllowed&amp; element)</signature>
<elementName>VplmnLIPAAllowed</elementName>
<asnElementName>vplmnLIPAAllowed</asnElementName>
<elementTypeName>VplmnLIPAAllowed</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVplmnLIPAAllowed</name>
<signature>const VplmnLIPAAllowed&amp; GetVplmnLIPAAllowed() const</signature>
<elementName>VplmnLIPAAllowed</elementName>
<asnElementName>vplmnLIPAAllowed</asnElementName>
<elementTypeName>VplmnLIPAAllowed</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVplmnLIPAAllowed</name>
<signature>bool OptionVplmnLIPAAllowed() const</signature>
<elementName>VplmnLIPAAllowed</elementName>
<asnElementName>vplmnLIPAAllowed</asnElementName>
<elementTypeName>VplmnLIPAAllowed</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMdtUserConsent</name>
<signature>void SetMdtUserConsent(MdtUserConsent* element)</signature>
<elmentName>MdtUserConsent</elmentName>
<asnElementName>mdtUserConsent</asnElementName>
<elementTypeName>MdtUserConsent</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMdtUserConsent</name>
<signature>void SetMdtUserConsent(const MdtUserConsent&amp; element)</signature>
<elementName>MdtUserConsent</elementName>
<asnElementName>mdtUserConsent</asnElementName>
<elementTypeName>MdtUserConsent</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMdtUserConsent</name>
<signature>const MdtUserConsent&amp; GetMdtUserConsent() const</signature>
<elementName>MdtUserConsent</elementName>
<asnElementName>mdtUserConsent</asnElementName>
<elementTypeName>MdtUserConsent</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMdtUserConsent</name>
<signature>bool OptionMdtUserConsent() const</signature>
<elementName>MdtUserConsent</elementName>
<asnElementName>mdtUserConsent</asnElementName>
<elementTypeName>MdtUserConsent</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSubscribedPeriodicLAUtimer</name>
<signature>void SetSubscribedPeriodicLAUtimer(SubscribedPeriodicLAUtimer* element)</signature>
<elmentName>SubscribedPeriodicLAUtimer</elmentName>
<asnElementName>subscribedPeriodicLAUtimer</asnElementName>
<elementTypeName>SubscribedPeriodicLAUtimer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSubscribedPeriodicLAUtimer</name>
<signature>void SetSubscribedPeriodicLAUtimer(const SubscribedPeriodicLAUtimer&amp; element)</signature>
<elementName>SubscribedPeriodicLAUtimer</elementName>
<asnElementName>subscribedPeriodicLAUtimer</asnElementName>
<elementTypeName>SubscribedPeriodicLAUtimer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSubscribedPeriodicLAUtimer</name>
<signature>const SubscribedPeriodicLAUtimer&amp; GetSubscribedPeriodicLAUtimer() const</signature>
<elementName>SubscribedPeriodicLAUtimer</elementName>
<asnElementName>subscribedPeriodicLAUtimer</asnElementName>
<elementTypeName>SubscribedPeriodicLAUtimer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSubscribedPeriodicLAUtimer</name>
<signature>bool OptionSubscribedPeriodicLAUtimer() const</signature>
<elementName>SubscribedPeriodicLAUtimer</elementName>
<asnElementName>subscribedPeriodicLAUtimer</asnElementName>
<elementTypeName>SubscribedPeriodicLAUtimer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- InsertSubscriberDataArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>InsertSubscriberDataArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    imsi [0] IMPLICIT IMSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    COMPONENTS OF SubscriberData -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [14] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    naea-PreferredCI [15] IMPLICIT NAEA-PreferredCI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gprsSubscriptionData [16] IMPLICIT GPRSSubscriptionData -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    roamingRestrictedInSgsnDueToUnsupportedFeature [23] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    networkAccessMode [24] IMPLICIT NetworkAccessMode -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lsaInformation [25] IMPLICIT LSAInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lmu-Indicator [21] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lcsInformation [22] IMPLICIT LCSInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    istAlertTimer [26] IMPLICIT IST-AlertTimerValue -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    superChargerSupportedInHLR [27] IMPLICIT AgeIndicator -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mc-SS-Info [28] IMPLICIT MC-SS-Info -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cs-AllocationRetentionPriority [29] IMPLICIT CS-AllocationRetentionPriority -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sgsn-CAMEL-SubscriptionInfo [17] IMPLICIT SGSN-CAMEL-SubscriptionInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    chargingCharacteristics [18] IMPLICIT ChargingCharacteristics -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    accessRestrictionData [19] IMPLICIT AccessRestrictionData -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ics-Indicator [20] IMPLICIT BOOLEAN OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    eps-SubscriptionData [31] IMPLICIT EPS-SubscriptionData -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    csg-SubscriptionDataList [32] IMPLICIT CSG-SubscriptionDataList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ue-ReachabilityRequestIndicator [33] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sgsn-Number [34] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mme-Name [35] IMPLICIT DiameterIdentity -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    subscribedPeriodicRAUTAUtimer [36] IMPLICIT SubscribedPeriodicRAUTAUtimer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    vplmnLIPAAllowed [37] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mdtUserConsent [38] IMPLICIT BOOLEAN OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    subscribedPeriodicLAUtimer [39] IMPLICIT SubscribedPeriodicLAUtimer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

