<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ReportSM_DeliveryStatusArg</className>
<asnTypeName>ReportSM-DeliveryStatusArg</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetMsisdn</name>
<signature>void SetMsisdn(ISDN_AddressString* element)</signature>
<elmentName>Msisdn</elmentName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsisdn</name>
<signature>void SetMsisdn(const ISDN_AddressString&amp; element)</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsisdn</name>
<signature>const ISDN_AddressString&amp; GetMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetServiceCentreAddress</name>
<signature>void SetServiceCentreAddress(AddressString* element)</signature>
<elmentName>ServiceCentreAddress</elmentName>
<asnElementName>serviceCentreAddress</asnElementName>
<elementTypeName>AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServiceCentreAddress</name>
<signature>void SetServiceCentreAddress(const AddressString&amp; element)</signature>
<elementName>ServiceCentreAddress</elementName>
<asnElementName>serviceCentreAddress</asnElementName>
<elementTypeName>AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServiceCentreAddress</name>
<signature>const AddressString&amp; GetServiceCentreAddress() const</signature>
<elementName>ServiceCentreAddress</elementName>
<asnElementName>serviceCentreAddress</asnElementName>
<elementTypeName>AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetSm_DeliveryOutcome</name>
<signature>void SetSm_DeliveryOutcome(SM_DeliveryOutcome* element)</signature>
<elmentName>Sm_DeliveryOutcome</elmentName>
<asnElementName>sm-DeliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSm_DeliveryOutcome</name>
<signature>void SetSm_DeliveryOutcome(const SM_DeliveryOutcome&amp; element)</signature>
<elementName>Sm_DeliveryOutcome</elementName>
<asnElementName>sm-DeliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSm_DeliveryOutcome</name>
<signature>const SM_DeliveryOutcome&amp; GetSm_DeliveryOutcome() const</signature>
<elementName>Sm_DeliveryOutcome</elementName>
<asnElementName>sm-DeliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetAbsentSubscriberDiagnosticSM</name>
<signature>void SetAbsentSubscriberDiagnosticSM(AbsentSubscriberDiagnosticSM* element)</signature>
<elmentName>AbsentSubscriberDiagnosticSM</elmentName>
<asnElementName>absentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAbsentSubscriberDiagnosticSM</name>
<signature>void SetAbsentSubscriberDiagnosticSM(const AbsentSubscriberDiagnosticSM&amp; element)</signature>
<elementName>AbsentSubscriberDiagnosticSM</elementName>
<asnElementName>absentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAbsentSubscriberDiagnosticSM</name>
<signature>const AbsentSubscriberDiagnosticSM&amp; GetAbsentSubscriberDiagnosticSM() const</signature>
<elementName>AbsentSubscriberDiagnosticSM</elementName>
<asnElementName>absentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAbsentSubscriberDiagnosticSM</name>
<signature>bool OptionAbsentSubscriberDiagnosticSM() const</signature>
<elementName>AbsentSubscriberDiagnosticSM</elementName>
<asnElementName>absentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGprsSupportIndicator</name>
<signature>void SetGprsSupportIndicator(GprsSupportIndicator* element)</signature>
<elmentName>GprsSupportIndicator</elmentName>
<asnElementName>gprsSupportIndicator</asnElementName>
<elementTypeName>GprsSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGprsSupportIndicator</name>
<signature>void SetGprsSupportIndicator(const GprsSupportIndicator&amp; element)</signature>
<elementName>GprsSupportIndicator</elementName>
<asnElementName>gprsSupportIndicator</asnElementName>
<elementTypeName>GprsSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGprsSupportIndicator</name>
<signature>const GprsSupportIndicator&amp; GetGprsSupportIndicator() const</signature>
<elementName>GprsSupportIndicator</elementName>
<asnElementName>gprsSupportIndicator</asnElementName>
<elementTypeName>GprsSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGprsSupportIndicator</name>
<signature>bool OptionGprsSupportIndicator() const</signature>
<elementName>GprsSupportIndicator</elementName>
<asnElementName>gprsSupportIndicator</asnElementName>
<elementTypeName>GprsSupportIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetDeliveryOutcomeIndicator</name>
<signature>void SetDeliveryOutcomeIndicator(DeliveryOutcomeIndicator* element)</signature>
<elmentName>DeliveryOutcomeIndicator</elmentName>
<asnElementName>deliveryOutcomeIndicator</asnElementName>
<elementTypeName>DeliveryOutcomeIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDeliveryOutcomeIndicator</name>
<signature>void SetDeliveryOutcomeIndicator(const DeliveryOutcomeIndicator&amp; element)</signature>
<elementName>DeliveryOutcomeIndicator</elementName>
<asnElementName>deliveryOutcomeIndicator</asnElementName>
<elementTypeName>DeliveryOutcomeIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDeliveryOutcomeIndicator</name>
<signature>const DeliveryOutcomeIndicator&amp; GetDeliveryOutcomeIndicator() const</signature>
<elementName>DeliveryOutcomeIndicator</elementName>
<asnElementName>deliveryOutcomeIndicator</asnElementName>
<elementTypeName>DeliveryOutcomeIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDeliveryOutcomeIndicator</name>
<signature>bool OptionDeliveryOutcomeIndicator() const</signature>
<elementName>DeliveryOutcomeIndicator</elementName>
<asnElementName>deliveryOutcomeIndicator</asnElementName>
<elementTypeName>DeliveryOutcomeIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAdditionalSM_DeliveryOutcome</name>
<signature>void SetAdditionalSM_DeliveryOutcome(SM_DeliveryOutcome* element)</signature>
<elmentName>AdditionalSM_DeliveryOutcome</elmentName>
<asnElementName>additionalSM-DeliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAdditionalSM_DeliveryOutcome</name>
<signature>void SetAdditionalSM_DeliveryOutcome(const SM_DeliveryOutcome&amp; element)</signature>
<elementName>AdditionalSM_DeliveryOutcome</elementName>
<asnElementName>additionalSM-DeliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAdditionalSM_DeliveryOutcome</name>
<signature>const SM_DeliveryOutcome&amp; GetAdditionalSM_DeliveryOutcome() const</signature>
<elementName>AdditionalSM_DeliveryOutcome</elementName>
<asnElementName>additionalSM-DeliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAdditionalSM_DeliveryOutcome</name>
<signature>bool OptionAdditionalSM_DeliveryOutcome() const</signature>
<elementName>AdditionalSM_DeliveryOutcome</elementName>
<asnElementName>additionalSM-DeliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAdditionalAbsentSubscriberDiagnosticSM</name>
<signature>void SetAdditionalAbsentSubscriberDiagnosticSM(AbsentSubscriberDiagnosticSM* element)</signature>
<elmentName>AdditionalAbsentSubscriberDiagnosticSM</elmentName>
<asnElementName>additionalAbsentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAdditionalAbsentSubscriberDiagnosticSM</name>
<signature>void SetAdditionalAbsentSubscriberDiagnosticSM(const AbsentSubscriberDiagnosticSM&amp; element)</signature>
<elementName>AdditionalAbsentSubscriberDiagnosticSM</elementName>
<asnElementName>additionalAbsentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAdditionalAbsentSubscriberDiagnosticSM</name>
<signature>const AbsentSubscriberDiagnosticSM&amp; GetAdditionalAbsentSubscriberDiagnosticSM() const</signature>
<elementName>AdditionalAbsentSubscriberDiagnosticSM</elementName>
<asnElementName>additionalAbsentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAdditionalAbsentSubscriberDiagnosticSM</name>
<signature>bool OptionAdditionalAbsentSubscriberDiagnosticSM() const</signature>
<elementName>AdditionalAbsentSubscriberDiagnosticSM</elementName>
<asnElementName>additionalAbsentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIp_sm_gw_Indicator</name>
<signature>void SetIp_sm_gw_Indicator(Ip_sm_gw_Indicator* element)</signature>
<elmentName>Ip_sm_gw_Indicator</elmentName>
<asnElementName>ip-sm-gw-Indicator</asnElementName>
<elementTypeName>Ip_sm_gw_Indicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIp_sm_gw_Indicator</name>
<signature>void SetIp_sm_gw_Indicator(const Ip_sm_gw_Indicator&amp; element)</signature>
<elementName>Ip_sm_gw_Indicator</elementName>
<asnElementName>ip-sm-gw-Indicator</asnElementName>
<elementTypeName>Ip_sm_gw_Indicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIp_sm_gw_Indicator</name>
<signature>const Ip_sm_gw_Indicator&amp; GetIp_sm_gw_Indicator() const</signature>
<elementName>Ip_sm_gw_Indicator</elementName>
<asnElementName>ip-sm-gw-Indicator</asnElementName>
<elementTypeName>Ip_sm_gw_Indicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIp_sm_gw_Indicator</name>
<signature>bool OptionIp_sm_gw_Indicator() const</signature>
<elementName>Ip_sm_gw_Indicator</elementName>
<asnElementName>ip-sm-gw-Indicator</asnElementName>
<elementTypeName>Ip_sm_gw_Indicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIp_sm_gw_sm_deliveryOutcome</name>
<signature>void SetIp_sm_gw_sm_deliveryOutcome(SM_DeliveryOutcome* element)</signature>
<elmentName>Ip_sm_gw_sm_deliveryOutcome</elmentName>
<asnElementName>ip-sm-gw-sm-deliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIp_sm_gw_sm_deliveryOutcome</name>
<signature>void SetIp_sm_gw_sm_deliveryOutcome(const SM_DeliveryOutcome&amp; element)</signature>
<elementName>Ip_sm_gw_sm_deliveryOutcome</elementName>
<asnElementName>ip-sm-gw-sm-deliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIp_sm_gw_sm_deliveryOutcome</name>
<signature>const SM_DeliveryOutcome&amp; GetIp_sm_gw_sm_deliveryOutcome() const</signature>
<elementName>Ip_sm_gw_sm_deliveryOutcome</elementName>
<asnElementName>ip-sm-gw-sm-deliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIp_sm_gw_sm_deliveryOutcome</name>
<signature>bool OptionIp_sm_gw_sm_deliveryOutcome() const</signature>
<elementName>Ip_sm_gw_sm_deliveryOutcome</elementName>
<asnElementName>ip-sm-gw-sm-deliveryOutcome</asnElementName>
<elementTypeName>SM_DeliveryOutcome</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIp_sm_gw_absentSubscriberDiagnosticSM</name>
<signature>void SetIp_sm_gw_absentSubscriberDiagnosticSM(AbsentSubscriberDiagnosticSM* element)</signature>
<elmentName>Ip_sm_gw_absentSubscriberDiagnosticSM</elmentName>
<asnElementName>ip-sm-gw-absentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIp_sm_gw_absentSubscriberDiagnosticSM</name>
<signature>void SetIp_sm_gw_absentSubscriberDiagnosticSM(const AbsentSubscriberDiagnosticSM&amp; element)</signature>
<elementName>Ip_sm_gw_absentSubscriberDiagnosticSM</elementName>
<asnElementName>ip-sm-gw-absentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIp_sm_gw_absentSubscriberDiagnosticSM</name>
<signature>const AbsentSubscriberDiagnosticSM&amp; GetIp_sm_gw_absentSubscriberDiagnosticSM() const</signature>
<elementName>Ip_sm_gw_absentSubscriberDiagnosticSM</elementName>
<asnElementName>ip-sm-gw-absentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIp_sm_gw_absentSubscriberDiagnosticSM</name>
<signature>bool OptionIp_sm_gw_absentSubscriberDiagnosticSM() const</signature>
<elementName>Ip_sm_gw_absentSubscriberDiagnosticSM</elementName>
<asnElementName>ip-sm-gw-absentSubscriberDiagnosticSM</asnElementName>
<elementTypeName>AbsentSubscriberDiagnosticSM</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ReportSM-DeliveryStatusArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ReportSM-DeliveryStatusArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    msisdn ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    serviceCentreAddress AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sm-DeliveryOutcome SM-DeliveryOutcome -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    absentSubscriberDiagnosticSM [0] IMPLICIT AbsentSubscriberDiagnosticSM -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [1] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gprsSupportIndicator [2] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    deliveryOutcomeIndicator [3] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    additionalSM-DeliveryOutcome [4] IMPLICIT SM-DeliveryOutcome -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    additionalAbsentSubscriberDiagnosticSM [5] IMPLICIT AbsentSubscriberDiagnosticSM -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ip-sm-gw-Indicator [6] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ip-sm-gw-sm-deliveryOutcome [7] IMPLICIT SM-DeliveryOutcome -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ip-sm-gw-absentSubscriberDiagnosticSM [8] IMPLICIT AbsentSubscriberDiagnosticSM -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

