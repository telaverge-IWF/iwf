<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>TracePropagationList</className>
<asnTypeName>TracePropagationList</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetTraceReference</name>
<signature>void SetTraceReference(TraceReference* element)</signature>
<elmentName>TraceReference</elmentName>
<asnElementName>traceReference</asnElementName>
<elementTypeName>TraceReference</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTraceReference</name>
<signature>void SetTraceReference(const TraceReference&amp; element)</signature>
<elementName>TraceReference</elementName>
<asnElementName>traceReference</asnElementName>
<elementTypeName>TraceReference</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTraceReference</name>
<signature>const TraceReference&amp; GetTraceReference() const</signature>
<elementName>TraceReference</elementName>
<asnElementName>traceReference</asnElementName>
<elementTypeName>TraceReference</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTraceReference</name>
<signature>bool OptionTraceReference() const</signature>
<elementName>TraceReference</elementName>
<asnElementName>traceReference</asnElementName>
<elementTypeName>TraceReference</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTraceType</name>
<signature>void SetTraceType(TraceType* element)</signature>
<elmentName>TraceType</elmentName>
<asnElementName>traceType</asnElementName>
<elementTypeName>TraceType</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTraceType</name>
<signature>void SetTraceType(const TraceType&amp; element)</signature>
<elementName>TraceType</elementName>
<asnElementName>traceType</asnElementName>
<elementTypeName>TraceType</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTraceType</name>
<signature>const TraceType&amp; GetTraceType() const</signature>
<elementName>TraceType</elementName>
<asnElementName>traceType</asnElementName>
<elementTypeName>TraceType</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTraceType</name>
<signature>bool OptionTraceType() const</signature>
<elementName>TraceType</elementName>
<asnElementName>traceType</asnElementName>
<elementTypeName>TraceType</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTraceReference2</name>
<signature>void SetTraceReference2(TraceReference2* element)</signature>
<elmentName>TraceReference2</elmentName>
<asnElementName>traceReference2</asnElementName>
<elementTypeName>TraceReference2</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTraceReference2</name>
<signature>void SetTraceReference2(const TraceReference2&amp; element)</signature>
<elementName>TraceReference2</elementName>
<asnElementName>traceReference2</asnElementName>
<elementTypeName>TraceReference2</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTraceReference2</name>
<signature>const TraceReference2&amp; GetTraceReference2() const</signature>
<elementName>TraceReference2</elementName>
<asnElementName>traceReference2</asnElementName>
<elementTypeName>TraceReference2</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTraceReference2</name>
<signature>bool OptionTraceReference2() const</signature>
<elementName>TraceReference2</elementName>
<asnElementName>traceReference2</asnElementName>
<elementTypeName>TraceReference2</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTraceRecordingSessionReference</name>
<signature>void SetTraceRecordingSessionReference(TraceRecordingSessionReference* element)</signature>
<elmentName>TraceRecordingSessionReference</elmentName>
<asnElementName>traceRecordingSessionReference</asnElementName>
<elementTypeName>TraceRecordingSessionReference</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTraceRecordingSessionReference</name>
<signature>void SetTraceRecordingSessionReference(const TraceRecordingSessionReference&amp; element)</signature>
<elementName>TraceRecordingSessionReference</elementName>
<asnElementName>traceRecordingSessionReference</asnElementName>
<elementTypeName>TraceRecordingSessionReference</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTraceRecordingSessionReference</name>
<signature>const TraceRecordingSessionReference&amp; GetTraceRecordingSessionReference() const</signature>
<elementName>TraceRecordingSessionReference</elementName>
<asnElementName>traceRecordingSessionReference</asnElementName>
<elementTypeName>TraceRecordingSessionReference</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTraceRecordingSessionReference</name>
<signature>bool OptionTraceRecordingSessionReference() const</signature>
<elementName>TraceRecordingSessionReference</elementName>
<asnElementName>traceRecordingSessionReference</asnElementName>
<elementTypeName>TraceRecordingSessionReference</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRnc_TraceDepth</name>
<signature>void SetRnc_TraceDepth(TraceDepth* element)</signature>
<elmentName>Rnc_TraceDepth</elmentName>
<asnElementName>rnc-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRnc_TraceDepth</name>
<signature>void SetRnc_TraceDepth(const TraceDepth&amp; element)</signature>
<elementName>Rnc_TraceDepth</elementName>
<asnElementName>rnc-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRnc_TraceDepth</name>
<signature>const TraceDepth&amp; GetRnc_TraceDepth() const</signature>
<elementName>Rnc_TraceDepth</elementName>
<asnElementName>rnc-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRnc_TraceDepth</name>
<signature>bool OptionRnc_TraceDepth() const</signature>
<elementName>Rnc_TraceDepth</elementName>
<asnElementName>rnc-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRnc_InterfaceList</name>
<signature>void SetRnc_InterfaceList(RNC_InterfaceList* element)</signature>
<elmentName>Rnc_InterfaceList</elmentName>
<asnElementName>rnc-InterfaceList</asnElementName>
<elementTypeName>RNC_InterfaceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRnc_InterfaceList</name>
<signature>void SetRnc_InterfaceList(const RNC_InterfaceList&amp; element)</signature>
<elementName>Rnc_InterfaceList</elementName>
<asnElementName>rnc-InterfaceList</asnElementName>
<elementTypeName>RNC_InterfaceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRnc_InterfaceList</name>
<signature>const RNC_InterfaceList&amp; GetRnc_InterfaceList() const</signature>
<elementName>Rnc_InterfaceList</elementName>
<asnElementName>rnc-InterfaceList</asnElementName>
<elementTypeName>RNC_InterfaceList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRnc_InterfaceList</name>
<signature>bool OptionRnc_InterfaceList() const</signature>
<elementName>Rnc_InterfaceList</elementName>
<asnElementName>rnc-InterfaceList</asnElementName>
<elementTypeName>RNC_InterfaceList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMsc_s_TraceDepth</name>
<signature>void SetMsc_s_TraceDepth(TraceDepth* element)</signature>
<elmentName>Msc_s_TraceDepth</elmentName>
<asnElementName>msc-s-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsc_s_TraceDepth</name>
<signature>void SetMsc_s_TraceDepth(const TraceDepth&amp; element)</signature>
<elementName>Msc_s_TraceDepth</elementName>
<asnElementName>msc-s-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsc_s_TraceDepth</name>
<signature>const TraceDepth&amp; GetMsc_s_TraceDepth() const</signature>
<elementName>Msc_s_TraceDepth</elementName>
<asnElementName>msc-s-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMsc_s_TraceDepth</name>
<signature>bool OptionMsc_s_TraceDepth() const</signature>
<elementName>Msc_s_TraceDepth</elementName>
<asnElementName>msc-s-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMsc_s_InterfaceList</name>
<signature>void SetMsc_s_InterfaceList(MSC_S_InterfaceList* element)</signature>
<elmentName>Msc_s_InterfaceList</elmentName>
<asnElementName>msc-s-InterfaceList</asnElementName>
<elementTypeName>MSC_S_InterfaceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsc_s_InterfaceList</name>
<signature>void SetMsc_s_InterfaceList(const MSC_S_InterfaceList&amp; element)</signature>
<elementName>Msc_s_InterfaceList</elementName>
<asnElementName>msc-s-InterfaceList</asnElementName>
<elementTypeName>MSC_S_InterfaceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsc_s_InterfaceList</name>
<signature>const MSC_S_InterfaceList&amp; GetMsc_s_InterfaceList() const</signature>
<elementName>Msc_s_InterfaceList</elementName>
<asnElementName>msc-s-InterfaceList</asnElementName>
<elementTypeName>MSC_S_InterfaceList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMsc_s_InterfaceList</name>
<signature>bool OptionMsc_s_InterfaceList() const</signature>
<elementName>Msc_s_InterfaceList</elementName>
<asnElementName>msc-s-InterfaceList</asnElementName>
<elementTypeName>MSC_S_InterfaceList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMsc_s_EventList</name>
<signature>void SetMsc_s_EventList(MSC_S_EventList* element)</signature>
<elmentName>Msc_s_EventList</elmentName>
<asnElementName>msc-s-EventList</asnElementName>
<elementTypeName>MSC_S_EventList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsc_s_EventList</name>
<signature>void SetMsc_s_EventList(const MSC_S_EventList&amp; element)</signature>
<elementName>Msc_s_EventList</elementName>
<asnElementName>msc-s-EventList</asnElementName>
<elementTypeName>MSC_S_EventList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsc_s_EventList</name>
<signature>const MSC_S_EventList&amp; GetMsc_s_EventList() const</signature>
<elementName>Msc_s_EventList</elementName>
<asnElementName>msc-s-EventList</asnElementName>
<elementTypeName>MSC_S_EventList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMsc_s_EventList</name>
<signature>bool OptionMsc_s_EventList() const</signature>
<elementName>Msc_s_EventList</elementName>
<asnElementName>msc-s-EventList</asnElementName>
<elementTypeName>MSC_S_EventList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMgw_TraceDepth</name>
<signature>void SetMgw_TraceDepth(TraceDepth* element)</signature>
<elmentName>Mgw_TraceDepth</elmentName>
<asnElementName>mgw-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMgw_TraceDepth</name>
<signature>void SetMgw_TraceDepth(const TraceDepth&amp; element)</signature>
<elementName>Mgw_TraceDepth</elementName>
<asnElementName>mgw-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMgw_TraceDepth</name>
<signature>const TraceDepth&amp; GetMgw_TraceDepth() const</signature>
<elementName>Mgw_TraceDepth</elementName>
<asnElementName>mgw-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMgw_TraceDepth</name>
<signature>bool OptionMgw_TraceDepth() const</signature>
<elementName>Mgw_TraceDepth</elementName>
<asnElementName>mgw-TraceDepth</asnElementName>
<elementTypeName>TraceDepth</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMgw_InterfaceList</name>
<signature>void SetMgw_InterfaceList(MGW_InterfaceList* element)</signature>
<elmentName>Mgw_InterfaceList</elmentName>
<asnElementName>mgw-InterfaceList</asnElementName>
<elementTypeName>MGW_InterfaceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMgw_InterfaceList</name>
<signature>void SetMgw_InterfaceList(const MGW_InterfaceList&amp; element)</signature>
<elementName>Mgw_InterfaceList</elementName>
<asnElementName>mgw-InterfaceList</asnElementName>
<elementTypeName>MGW_InterfaceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMgw_InterfaceList</name>
<signature>const MGW_InterfaceList&amp; GetMgw_InterfaceList() const</signature>
<elementName>Mgw_InterfaceList</elementName>
<asnElementName>mgw-InterfaceList</asnElementName>
<elementTypeName>MGW_InterfaceList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMgw_InterfaceList</name>
<signature>bool OptionMgw_InterfaceList() const</signature>
<elementName>Mgw_InterfaceList</elementName>
<asnElementName>mgw-InterfaceList</asnElementName>
<elementTypeName>MGW_InterfaceList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMgw_EventList</name>
<signature>void SetMgw_EventList(MGW_EventList* element)</signature>
<elmentName>Mgw_EventList</elmentName>
<asnElementName>mgw-EventList</asnElementName>
<elementTypeName>MGW_EventList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMgw_EventList</name>
<signature>void SetMgw_EventList(const MGW_EventList&amp; element)</signature>
<elementName>Mgw_EventList</elementName>
<asnElementName>mgw-EventList</asnElementName>
<elementTypeName>MGW_EventList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMgw_EventList</name>
<signature>const MGW_EventList&amp; GetMgw_EventList() const</signature>
<elementName>Mgw_EventList</elementName>
<asnElementName>mgw-EventList</asnElementName>
<elementTypeName>MGW_EventList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMgw_EventList</name>
<signature>bool OptionMgw_EventList() const</signature>
<elementName>Mgw_EventList</elementName>
<asnElementName>mgw-EventList</asnElementName>
<elementTypeName>MGW_EventList</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- TracePropagationList information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>TracePropagationList ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    traceReference [0] IMPLICIT TraceReference -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    traceType [1] IMPLICIT TraceType -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    traceReference2 [2] IMPLICIT TraceReference2 -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    traceRecordingSessionReference [3] IMPLICIT TraceRecordingSessionReference -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    rnc-TraceDepth [4] IMPLICIT TraceDepth -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    rnc-InterfaceList [5] IMPLICIT RNC-InterfaceList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    msc-s-TraceDepth [6] IMPLICIT TraceDepth -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    msc-s-InterfaceList [7] IMPLICIT MSC-S-InterfaceList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    msc-s-EventList [8] IMPLICIT MSC-S-EventList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mgw-TraceDepth [9] IMPLICIT TraceDepth -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mgw-InterfaceList [10] IMPLICIT MGW-InterfaceList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mgw-EventList [11] IMPLICIT MGW-EventList -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

