<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>CancelLocationArg</className>
<asnTypeName>CancelLocationArg</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetIdentity</name>
<signature>void SetIdentity(Identity* element)</signature>
<elmentName>Identity</elmentName>
<asnElementName>identity</asnElementName>
<elementTypeName>Identity</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIdentity</name>
<signature>void SetIdentity(const Identity&amp; element)</signature>
<elementName>Identity</elementName>
<asnElementName>identity</asnElementName>
<elementTypeName>Identity</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIdentity</name>
<signature>const Identity&amp; GetIdentity() const</signature>
<elementName>Identity</elementName>
<asnElementName>identity</asnElementName>
<elementTypeName>Identity</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCancellationType</name>
<signature>void SetCancellationType(CancellationType* element)</signature>
<elmentName>CancellationType</elmentName>
<asnElementName>cancellationType</asnElementName>
<elementTypeName>CancellationType</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCancellationType</name>
<signature>void SetCancellationType(const CancellationType&amp; element)</signature>
<elementName>CancellationType</elementName>
<asnElementName>cancellationType</asnElementName>
<elementTypeName>CancellationType</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCancellationType</name>
<signature>const CancellationType&amp; GetCancellationType() const</signature>
<elementName>CancellationType</elementName>
<asnElementName>cancellationType</asnElementName>
<elementTypeName>CancellationType</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCancellationType</name>
<signature>bool OptionCancellationType() const</signature>
<elementName>CancellationType</elementName>
<asnElementName>cancellationType</asnElementName>
<elementTypeName>CancellationType</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTypeOfUpdate</name>
<signature>void SetTypeOfUpdate(TypeOfUpdate* element)</signature>
<elmentName>TypeOfUpdate</elmentName>
<asnElementName>typeOfUpdate</asnElementName>
<elementTypeName>TypeOfUpdate</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTypeOfUpdate</name>
<signature>void SetTypeOfUpdate(const TypeOfUpdate&amp; element)</signature>
<elementName>TypeOfUpdate</elementName>
<asnElementName>typeOfUpdate</asnElementName>
<elementTypeName>TypeOfUpdate</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTypeOfUpdate</name>
<signature>const TypeOfUpdate&amp; GetTypeOfUpdate() const</signature>
<elementName>TypeOfUpdate</elementName>
<asnElementName>typeOfUpdate</asnElementName>
<elementTypeName>TypeOfUpdate</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTypeOfUpdate</name>
<signature>bool OptionTypeOfUpdate() const</signature>
<elementName>TypeOfUpdate</elementName>
<asnElementName>typeOfUpdate</asnElementName>
<elementTypeName>TypeOfUpdate</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMtrf_SupportedAndAuthorized</name>
<signature>void SetMtrf_SupportedAndAuthorized(Mtrf_SupportedAndAuthorized* element)</signature>
<elmentName>Mtrf_SupportedAndAuthorized</elmentName>
<asnElementName>mtrf-SupportedAndAuthorized</asnElementName>
<elementTypeName>Mtrf_SupportedAndAuthorized</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMtrf_SupportedAndAuthorized</name>
<signature>void SetMtrf_SupportedAndAuthorized(const Mtrf_SupportedAndAuthorized&amp; element)</signature>
<elementName>Mtrf_SupportedAndAuthorized</elementName>
<asnElementName>mtrf-SupportedAndAuthorized</asnElementName>
<elementTypeName>Mtrf_SupportedAndAuthorized</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMtrf_SupportedAndAuthorized</name>
<signature>const Mtrf_SupportedAndAuthorized&amp; GetMtrf_SupportedAndAuthorized() const</signature>
<elementName>Mtrf_SupportedAndAuthorized</elementName>
<asnElementName>mtrf-SupportedAndAuthorized</asnElementName>
<elementTypeName>Mtrf_SupportedAndAuthorized</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMtrf_SupportedAndAuthorized</name>
<signature>bool OptionMtrf_SupportedAndAuthorized() const</signature>
<elementName>Mtrf_SupportedAndAuthorized</elementName>
<asnElementName>mtrf-SupportedAndAuthorized</asnElementName>
<elementTypeName>Mtrf_SupportedAndAuthorized</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMtrf_SupportedAndNotAuthorized</name>
<signature>void SetMtrf_SupportedAndNotAuthorized(Mtrf_SupportedAndNotAuthorized* element)</signature>
<elmentName>Mtrf_SupportedAndNotAuthorized</elmentName>
<asnElementName>mtrf-SupportedAndNotAuthorized</asnElementName>
<elementTypeName>Mtrf_SupportedAndNotAuthorized</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMtrf_SupportedAndNotAuthorized</name>
<signature>void SetMtrf_SupportedAndNotAuthorized(const Mtrf_SupportedAndNotAuthorized&amp; element)</signature>
<elementName>Mtrf_SupportedAndNotAuthorized</elementName>
<asnElementName>mtrf-SupportedAndNotAuthorized</asnElementName>
<elementTypeName>Mtrf_SupportedAndNotAuthorized</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMtrf_SupportedAndNotAuthorized</name>
<signature>const Mtrf_SupportedAndNotAuthorized&amp; GetMtrf_SupportedAndNotAuthorized() const</signature>
<elementName>Mtrf_SupportedAndNotAuthorized</elementName>
<asnElementName>mtrf-SupportedAndNotAuthorized</asnElementName>
<elementTypeName>Mtrf_SupportedAndNotAuthorized</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMtrf_SupportedAndNotAuthorized</name>
<signature>bool OptionMtrf_SupportedAndNotAuthorized() const</signature>
<elementName>Mtrf_SupportedAndNotAuthorized</elementName>
<asnElementName>mtrf-SupportedAndNotAuthorized</asnElementName>
<elementTypeName>Mtrf_SupportedAndNotAuthorized</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNewMSC_Number</name>
<signature>void SetNewMSC_Number(ISDN_AddressString* element)</signature>
<elmentName>NewMSC_Number</elmentName>
<asnElementName>newMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNewMSC_Number</name>
<signature>void SetNewMSC_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>NewMSC_Number</elementName>
<asnElementName>newMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNewMSC_Number</name>
<signature>const ISDN_AddressString&amp; GetNewMSC_Number() const</signature>
<elementName>NewMSC_Number</elementName>
<asnElementName>newMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNewMSC_Number</name>
<signature>bool OptionNewMSC_Number() const</signature>
<elementName>NewMSC_Number</elementName>
<asnElementName>newMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNewVLR_Number</name>
<signature>void SetNewVLR_Number(ISDN_AddressString* element)</signature>
<elmentName>NewVLR_Number</elmentName>
<asnElementName>newVLR-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNewVLR_Number</name>
<signature>void SetNewVLR_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>NewVLR_Number</elementName>
<asnElementName>newVLR-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNewVLR_Number</name>
<signature>const ISDN_AddressString&amp; GetNewVLR_Number() const</signature>
<elementName>NewVLR_Number</elementName>
<asnElementName>newVLR-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNewVLR_Number</name>
<signature>bool OptionNewVLR_Number() const</signature>
<elementName>NewVLR_Number</elementName>
<asnElementName>newVLR-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNew_lmsi</name>
<signature>void SetNew_lmsi(LMSI* element)</signature>
<elmentName>New_lmsi</elmentName>
<asnElementName>new-lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNew_lmsi</name>
<signature>void SetNew_lmsi(const LMSI&amp; element)</signature>
<elementName>New_lmsi</elementName>
<asnElementName>new-lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNew_lmsi</name>
<signature>const LMSI&amp; GetNew_lmsi() const</signature>
<elementName>New_lmsi</elementName>
<asnElementName>new-lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNew_lmsi</name>
<signature>bool OptionNew_lmsi() const</signature>
<elementName>New_lmsi</elementName>
<asnElementName>new-lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CancelLocationArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CancelLocationArg ::= [3] IMPLICIT SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    identity Identity -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cancellationType CancellationType -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    typeOfUpdate [0] IMPLICIT TypeOfUpdate -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mtrf-SupportedAndAuthorized [1] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mtrf-SupportedAndNotAuthorized [2] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    newMSC-Number [3] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    newVLR-Number [4] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    new-lmsi [5] IMPLICIT LMSI -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

