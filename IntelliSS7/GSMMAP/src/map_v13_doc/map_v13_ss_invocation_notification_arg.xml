<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SS_InvocationNotificationArg</className>
<asnTypeName>SS-InvocationNotificationArg</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetMsisdn</name>
<signature>void SetMsisdn(ISDN_AddressString* element)</signature>
<elmentName>Msisdn</elmentName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsisdn</name>
<signature>void SetMsisdn(const ISDN_AddressString&amp; element)</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsisdn</name>
<signature>const ISDN_AddressString&amp; GetMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetSs_Event</name>
<signature>void SetSs_Event(SS_Code* element)</signature>
<elmentName>Ss_Event</elmentName>
<asnElementName>ss-Event</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_Event</name>
<signature>void SetSs_Event(const SS_Code&amp; element)</signature>
<elementName>Ss_Event</elementName>
<asnElementName>ss-Event</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_Event</name>
<signature>const SS_Code&amp; GetSs_Event() const</signature>
<elementName>Ss_Event</elementName>
<asnElementName>ss-Event</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetSs_EventSpecification</name>
<signature>void SetSs_EventSpecification(SS_EventSpecification* element)</signature>
<elmentName>Ss_EventSpecification</elmentName>
<asnElementName>ss-EventSpecification</asnElementName>
<elementTypeName>SS_EventSpecification</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_EventSpecification</name>
<signature>void SetSs_EventSpecification(const SS_EventSpecification&amp; element)</signature>
<elementName>Ss_EventSpecification</elementName>
<asnElementName>ss-EventSpecification</asnElementName>
<elementTypeName>SS_EventSpecification</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_EventSpecification</name>
<signature>const SS_EventSpecification&amp; GetSs_EventSpecification() const</signature>
<elementName>Ss_EventSpecification</elementName>
<asnElementName>ss-EventSpecification</asnElementName>
<elementTypeName>SS_EventSpecification</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSs_EventSpecification</name>
<signature>bool OptionSs_EventSpecification() const</signature>
<elementName>Ss_EventSpecification</elementName>
<asnElementName>ss-EventSpecification</asnElementName>
<elementTypeName>SS_EventSpecification</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetB_subscriberNumber</name>
<signature>void SetB_subscriberNumber(ISDN_AddressString* element)</signature>
<elmentName>B_subscriberNumber</elmentName>
<asnElementName>b-subscriberNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetB_subscriberNumber</name>
<signature>void SetB_subscriberNumber(const ISDN_AddressString&amp; element)</signature>
<elementName>B_subscriberNumber</elementName>
<asnElementName>b-subscriberNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetB_subscriberNumber</name>
<signature>const ISDN_AddressString&amp; GetB_subscriberNumber() const</signature>
<elementName>B_subscriberNumber</elementName>
<asnElementName>b-subscriberNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionB_subscriberNumber</name>
<signature>bool OptionB_subscriberNumber() const</signature>
<elementName>B_subscriberNumber</elementName>
<asnElementName>b-subscriberNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCcbs_RequestState</name>
<signature>void SetCcbs_RequestState(CCBS_RequestState* element)</signature>
<elmentName>Ccbs_RequestState</elmentName>
<asnElementName>ccbs-RequestState</asnElementName>
<elementTypeName>CCBS_RequestState</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCcbs_RequestState</name>
<signature>void SetCcbs_RequestState(const CCBS_RequestState&amp; element)</signature>
<elementName>Ccbs_RequestState</elementName>
<asnElementName>ccbs-RequestState</asnElementName>
<elementTypeName>CCBS_RequestState</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCcbs_RequestState</name>
<signature>const CCBS_RequestState&amp; GetCcbs_RequestState() const</signature>
<elementName>Ccbs_RequestState</elementName>
<asnElementName>ccbs-RequestState</asnElementName>
<elementTypeName>CCBS_RequestState</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCcbs_RequestState</name>
<signature>bool OptionCcbs_RequestState() const</signature>
<elementName>Ccbs_RequestState</elementName>
<asnElementName>ccbs-RequestState</asnElementName>
<elementTypeName>CCBS_RequestState</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SS-InvocationNotificationArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SS-InvocationNotificationArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    imsi [0] IMPLICIT IMSI -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    msisdn [1] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-Event [2] IMPLICIT SS-Code -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-EventSpecification [3] IMPLICIT SS-EventSpecification -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [4] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    b-subscriberNumber [5] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ccbs-RequestState [6] IMPLICIT CCBS-RequestState -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

