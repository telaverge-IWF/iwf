<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>DestinationNumberCriteria</className>
<asnTypeName>DestinationNumberCriteria</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetMatchType</name>
<signature>void SetMatchType(MatchType* element)</signature>
<elmentName>MatchType</elmentName>
<asnElementName>matchType</asnElementName>
<elementTypeName>MatchType</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMatchType</name>
<signature>void SetMatchType(const MatchType&amp; element)</signature>
<elementName>MatchType</elementName>
<asnElementName>matchType</asnElementName>
<elementTypeName>MatchType</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMatchType</name>
<signature>const MatchType&amp; GetMatchType() const</signature>
<elementName>MatchType</elementName>
<asnElementName>matchType</asnElementName>
<elementTypeName>MatchType</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetDestinationNumberList</name>
<signature>void SetDestinationNumberList(DestinationNumberList* element)</signature>
<elmentName>DestinationNumberList</elmentName>
<asnElementName>destinationNumberList</asnElementName>
<elementTypeName>DestinationNumberList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDestinationNumberList</name>
<signature>void SetDestinationNumberList(const DestinationNumberList&amp; element)</signature>
<elementName>DestinationNumberList</elementName>
<asnElementName>destinationNumberList</asnElementName>
<elementTypeName>DestinationNumberList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDestinationNumberList</name>
<signature>const DestinationNumberList&amp; GetDestinationNumberList() const</signature>
<elementName>DestinationNumberList</elementName>
<asnElementName>destinationNumberList</asnElementName>
<elementTypeName>DestinationNumberList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDestinationNumberList</name>
<signature>bool OptionDestinationNumberList() const</signature>
<elementName>DestinationNumberList</elementName>
<asnElementName>destinationNumberList</asnElementName>
<elementTypeName>DestinationNumberList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetDestinationNumberLengthList</name>
<signature>void SetDestinationNumberLengthList(DestinationNumberLengthList* element)</signature>
<elmentName>DestinationNumberLengthList</elmentName>
<asnElementName>destinationNumberLengthList</asnElementName>
<elementTypeName>DestinationNumberLengthList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDestinationNumberLengthList</name>
<signature>void SetDestinationNumberLengthList(const DestinationNumberLengthList&amp; element)</signature>
<elementName>DestinationNumberLengthList</elementName>
<asnElementName>destinationNumberLengthList</asnElementName>
<elementTypeName>DestinationNumberLengthList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDestinationNumberLengthList</name>
<signature>const DestinationNumberLengthList&amp; GetDestinationNumberLengthList() const</signature>
<elementName>DestinationNumberLengthList</elementName>
<asnElementName>destinationNumberLengthList</asnElementName>
<elementTypeName>DestinationNumberLengthList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDestinationNumberLengthList</name>
<signature>bool OptionDestinationNumberLengthList() const</signature>
<elementName>DestinationNumberLengthList</elementName>
<asnElementName>destinationNumberLengthList</asnElementName>
<elementTypeName>DestinationNumberLengthList</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- DestinationNumberCriteria information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>DestinationNumberCriteria ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    matchType [0] IMPLICIT MatchType -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    destinationNumberList [1] IMPLICIT DestinationNumberList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    destinationNumberLengthList [2] IMPLICIT DestinationNumberLengthList -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

