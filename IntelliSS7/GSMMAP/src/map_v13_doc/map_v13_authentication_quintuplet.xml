<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>AuthenticationQuintuplet</className>
<asnTypeName>AuthenticationQuintuplet</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetRand</name>
<signature>void SetRand(RAND* element)</signature>
<elmentName>Rand</elmentName>
<asnElementName>rand</asnElementName>
<elementTypeName>RAND</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRand</name>
<signature>void SetRand(const RAND&amp; element)</signature>
<elementName>Rand</elementName>
<asnElementName>rand</asnElementName>
<elementTypeName>RAND</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRand</name>
<signature>const RAND&amp; GetRand() const</signature>
<elementName>Rand</elementName>
<asnElementName>rand</asnElementName>
<elementTypeName>RAND</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetXres</name>
<signature>void SetXres(XRES* element)</signature>
<elmentName>Xres</elmentName>
<asnElementName>xres</asnElementName>
<elementTypeName>XRES</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetXres</name>
<signature>void SetXres(const XRES&amp; element)</signature>
<elementName>Xres</elementName>
<asnElementName>xres</asnElementName>
<elementTypeName>XRES</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetXres</name>
<signature>const XRES&amp; GetXres() const</signature>
<elementName>Xres</elementName>
<asnElementName>xres</asnElementName>
<elementTypeName>XRES</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCk</name>
<signature>void SetCk(CK* element)</signature>
<elmentName>Ck</elmentName>
<asnElementName>ck</asnElementName>
<elementTypeName>CK</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCk</name>
<signature>void SetCk(const CK&amp; element)</signature>
<elementName>Ck</elementName>
<asnElementName>ck</asnElementName>
<elementTypeName>CK</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCk</name>
<signature>const CK&amp; GetCk() const</signature>
<elementName>Ck</elementName>
<asnElementName>ck</asnElementName>
<elementTypeName>CK</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetIk</name>
<signature>void SetIk(IK* element)</signature>
<elmentName>Ik</elmentName>
<asnElementName>ik</asnElementName>
<elementTypeName>IK</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIk</name>
<signature>void SetIk(const IK&amp; element)</signature>
<elementName>Ik</elementName>
<asnElementName>ik</asnElementName>
<elementTypeName>IK</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIk</name>
<signature>const IK&amp; GetIk() const</signature>
<elementName>Ik</elementName>
<asnElementName>ik</asnElementName>
<elementTypeName>IK</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetAutn</name>
<signature>void SetAutn(AUTN* element)</signature>
<elmentName>Autn</elmentName>
<asnElementName>autn</asnElementName>
<elementTypeName>AUTN</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAutn</name>
<signature>void SetAutn(const AUTN&amp; element)</signature>
<elementName>Autn</elementName>
<asnElementName>autn</asnElementName>
<elementTypeName>AUTN</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAutn</name>
<signature>const AUTN&amp; GetAutn() const</signature>
<elementName>Autn</elementName>
<asnElementName>autn</asnElementName>
<elementTypeName>AUTN</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- AuthenticationQuintuplet information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>AuthenticationQuintuplet ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    rand RAND -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    xres XRES -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ck CK -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ik IK -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    autn AUTN -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

