<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>UpdateLocationArg</className>
<asnTypeName>UpdateLocationArg</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetMsc_Number</name>
<signature>void SetMsc_Number(ISDN_AddressString* element)</signature>
<elmentName>Msc_Number</elmentName>
<asnElementName>msc-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsc_Number</name>
<signature>void SetMsc_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>Msc_Number</elementName>
<asnElementName>msc-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsc_Number</name>
<signature>const ISDN_AddressString&amp; GetMsc_Number() const</signature>
<elementName>Msc_Number</elementName>
<asnElementName>msc-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetVlr_Number</name>
<signature>void SetVlr_Number(ISDN_AddressString* element)</signature>
<elmentName>Vlr_Number</elmentName>
<asnElementName>vlr-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVlr_Number</name>
<signature>void SetVlr_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>Vlr_Number</elementName>
<asnElementName>vlr-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVlr_Number</name>
<signature>const ISDN_AddressString&amp; GetVlr_Number() const</signature>
<elementName>Vlr_Number</elementName>
<asnElementName>vlr-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetLmsi</name>
<signature>void SetLmsi(LMSI* element)</signature>
<elmentName>Lmsi</elmentName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLmsi</name>
<signature>void SetLmsi(const LMSI&amp; element)</signature>
<elementName>Lmsi</elementName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLmsi</name>
<signature>const LMSI&amp; GetLmsi() const</signature>
<elementName>Lmsi</elementName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLmsi</name>
<signature>bool OptionLmsi() const</signature>
<elementName>Lmsi</elementName>
<asnElementName>lmsi</asnElementName>
<elementTypeName>LMSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetVlr_Capability</name>
<signature>void SetVlr_Capability(VLR_Capability* element)</signature>
<elmentName>Vlr_Capability</elmentName>
<asnElementName>vlr-Capability</asnElementName>
<elementTypeName>VLR_Capability</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVlr_Capability</name>
<signature>void SetVlr_Capability(const VLR_Capability&amp; element)</signature>
<elementName>Vlr_Capability</elementName>
<asnElementName>vlr-Capability</asnElementName>
<elementTypeName>VLR_Capability</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVlr_Capability</name>
<signature>const VLR_Capability&amp; GetVlr_Capability() const</signature>
<elementName>Vlr_Capability</elementName>
<asnElementName>vlr-Capability</asnElementName>
<elementTypeName>VLR_Capability</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVlr_Capability</name>
<signature>bool OptionVlr_Capability() const</signature>
<elementName>Vlr_Capability</elementName>
<asnElementName>vlr-Capability</asnElementName>
<elementTypeName>VLR_Capability</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetInformPreviousNetworkEntity</name>
<signature>void SetInformPreviousNetworkEntity(InformPreviousNetworkEntity* element)</signature>
<elmentName>InformPreviousNetworkEntity</elmentName>
<asnElementName>informPreviousNetworkEntity</asnElementName>
<elementTypeName>InformPreviousNetworkEntity</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetInformPreviousNetworkEntity</name>
<signature>void SetInformPreviousNetworkEntity(const InformPreviousNetworkEntity&amp; element)</signature>
<elementName>InformPreviousNetworkEntity</elementName>
<asnElementName>informPreviousNetworkEntity</asnElementName>
<elementTypeName>InformPreviousNetworkEntity</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetInformPreviousNetworkEntity</name>
<signature>const InformPreviousNetworkEntity&amp; GetInformPreviousNetworkEntity() const</signature>
<elementName>InformPreviousNetworkEntity</elementName>
<asnElementName>informPreviousNetworkEntity</asnElementName>
<elementTypeName>InformPreviousNetworkEntity</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionInformPreviousNetworkEntity</name>
<signature>bool OptionInformPreviousNetworkEntity() const</signature>
<elementName>InformPreviousNetworkEntity</elementName>
<asnElementName>informPreviousNetworkEntity</asnElementName>
<elementTypeName>InformPreviousNetworkEntity</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCs_LCS_NotSupportedByUE</name>
<signature>void SetCs_LCS_NotSupportedByUE(Cs_LCS_NotSupportedByUE* element)</signature>
<elmentName>Cs_LCS_NotSupportedByUE</elmentName>
<asnElementName>cs-LCS-NotSupportedByUE</asnElementName>
<elementTypeName>Cs_LCS_NotSupportedByUE</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCs_LCS_NotSupportedByUE</name>
<signature>void SetCs_LCS_NotSupportedByUE(const Cs_LCS_NotSupportedByUE&amp; element)</signature>
<elementName>Cs_LCS_NotSupportedByUE</elementName>
<asnElementName>cs-LCS-NotSupportedByUE</asnElementName>
<elementTypeName>Cs_LCS_NotSupportedByUE</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCs_LCS_NotSupportedByUE</name>
<signature>const Cs_LCS_NotSupportedByUE&amp; GetCs_LCS_NotSupportedByUE() const</signature>
<elementName>Cs_LCS_NotSupportedByUE</elementName>
<asnElementName>cs-LCS-NotSupportedByUE</asnElementName>
<elementTypeName>Cs_LCS_NotSupportedByUE</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCs_LCS_NotSupportedByUE</name>
<signature>bool OptionCs_LCS_NotSupportedByUE() const</signature>
<elementName>Cs_LCS_NotSupportedByUE</elementName>
<asnElementName>cs-LCS-NotSupportedByUE</asnElementName>
<elementTypeName>Cs_LCS_NotSupportedByUE</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetV_gmlc_Address</name>
<signature>void SetV_gmlc_Address(GSN_Address* element)</signature>
<elmentName>V_gmlc_Address</elmentName>
<asnElementName>v-gmlc-Address</asnElementName>
<elementTypeName>GSN_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetV_gmlc_Address</name>
<signature>void SetV_gmlc_Address(const GSN_Address&amp; element)</signature>
<elementName>V_gmlc_Address</elementName>
<asnElementName>v-gmlc-Address</asnElementName>
<elementTypeName>GSN_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetV_gmlc_Address</name>
<signature>const GSN_Address&amp; GetV_gmlc_Address() const</signature>
<elementName>V_gmlc_Address</elementName>
<asnElementName>v-gmlc-Address</asnElementName>
<elementTypeName>GSN_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionV_gmlc_Address</name>
<signature>bool OptionV_gmlc_Address() const</signature>
<elementName>V_gmlc_Address</elementName>
<asnElementName>v-gmlc-Address</asnElementName>
<elementTypeName>GSN_Address</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAdd_info</name>
<signature>void SetAdd_info(ADD_Info* element)</signature>
<elmentName>Add_info</elmentName>
<asnElementName>add-info</asnElementName>
<elementTypeName>ADD_Info</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAdd_info</name>
<signature>void SetAdd_info(const ADD_Info&amp; element)</signature>
<elementName>Add_info</elementName>
<asnElementName>add-info</asnElementName>
<elementTypeName>ADD_Info</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAdd_info</name>
<signature>const ADD_Info&amp; GetAdd_info() const</signature>
<elementName>Add_info</elementName>
<asnElementName>add-info</asnElementName>
<elementTypeName>ADD_Info</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAdd_info</name>
<signature>bool OptionAdd_info() const</signature>
<elementName>Add_info</elementName>
<asnElementName>add-info</asnElementName>
<elementTypeName>ADD_Info</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetPagingArea</name>
<signature>void SetPagingArea(PagingArea* element)</signature>
<elmentName>PagingArea</elmentName>
<asnElementName>pagingArea</asnElementName>
<elementTypeName>PagingArea</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPagingArea</name>
<signature>void SetPagingArea(const PagingArea&amp; element)</signature>
<elementName>PagingArea</elementName>
<asnElementName>pagingArea</asnElementName>
<elementTypeName>PagingArea</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPagingArea</name>
<signature>const PagingArea&amp; GetPagingArea() const</signature>
<elementName>PagingArea</elementName>
<asnElementName>pagingArea</asnElementName>
<elementTypeName>PagingArea</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPagingArea</name>
<signature>bool OptionPagingArea() const</signature>
<elementName>PagingArea</elementName>
<asnElementName>pagingArea</asnElementName>
<elementTypeName>PagingArea</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSkipSubscriberDataUpdate</name>
<signature>void SetSkipSubscriberDataUpdate(SkipSubscriberDataUpdate* element)</signature>
<elmentName>SkipSubscriberDataUpdate</elmentName>
<asnElementName>skipSubscriberDataUpdate</asnElementName>
<elementTypeName>SkipSubscriberDataUpdate</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSkipSubscriberDataUpdate</name>
<signature>void SetSkipSubscriberDataUpdate(const SkipSubscriberDataUpdate&amp; element)</signature>
<elementName>SkipSubscriberDataUpdate</elementName>
<asnElementName>skipSubscriberDataUpdate</asnElementName>
<elementTypeName>SkipSubscriberDataUpdate</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSkipSubscriberDataUpdate</name>
<signature>const SkipSubscriberDataUpdate&amp; GetSkipSubscriberDataUpdate() const</signature>
<elementName>SkipSubscriberDataUpdate</elementName>
<asnElementName>skipSubscriberDataUpdate</asnElementName>
<elementTypeName>SkipSubscriberDataUpdate</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSkipSubscriberDataUpdate</name>
<signature>bool OptionSkipSubscriberDataUpdate() const</signature>
<elementName>SkipSubscriberDataUpdate</elementName>
<asnElementName>skipSubscriberDataUpdate</asnElementName>
<elementTypeName>SkipSubscriberDataUpdate</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRestorationIndicator</name>
<signature>void SetRestorationIndicator(RestorationIndicator* element)</signature>
<elmentName>RestorationIndicator</elmentName>
<asnElementName>restorationIndicator</asnElementName>
<elementTypeName>RestorationIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRestorationIndicator</name>
<signature>void SetRestorationIndicator(const RestorationIndicator&amp; element)</signature>
<elementName>RestorationIndicator</elementName>
<asnElementName>restorationIndicator</asnElementName>
<elementTypeName>RestorationIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRestorationIndicator</name>
<signature>const RestorationIndicator&amp; GetRestorationIndicator() const</signature>
<elementName>RestorationIndicator</elementName>
<asnElementName>restorationIndicator</asnElementName>
<elementTypeName>RestorationIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRestorationIndicator</name>
<signature>bool OptionRestorationIndicator() const</signature>
<elementName>RestorationIndicator</elementName>
<asnElementName>restorationIndicator</asnElementName>
<elementTypeName>RestorationIndicator</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- UpdateLocationArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>UpdateLocationArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    imsi IMSI -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    msc-Number [1] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    vlr-Number ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lmsi [10] IMPLICIT LMSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    vlr-Capability [6] IMPLICIT VLR-Capability -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    informPreviousNetworkEntity [11] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cs-LCS-NotSupportedByUE [12] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    v-gmlc-Address [2] IMPLICIT GSN-Address -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    add-info [13] IMPLICIT ADD-Info -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pagingArea [14] IMPLICIT PagingArea -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    skipSubscriberDataUpdate [15] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    restorationIndicator [16] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

