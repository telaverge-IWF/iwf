<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SendGroupCallInfoRes</className>
<asnTypeName>SendGroupCallInfoRes</asnTypeName>
<moduleName>MAP_V13</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetAnchorMSC_Address</name>
<signature>void SetAnchorMSC_Address(ISDN_AddressString* element)</signature>
<elmentName>AnchorMSC_Address</elmentName>
<asnElementName>anchorMSC-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAnchorMSC_Address</name>
<signature>void SetAnchorMSC_Address(const ISDN_AddressString&amp; element)</signature>
<elementName>AnchorMSC_Address</elementName>
<asnElementName>anchorMSC-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAnchorMSC_Address</name>
<signature>const ISDN_AddressString&amp; GetAnchorMSC_Address() const</signature>
<elementName>AnchorMSC_Address</elementName>
<asnElementName>anchorMSC-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAnchorMSC_Address</name>
<signature>bool OptionAnchorMSC_Address() const</signature>
<elementName>AnchorMSC_Address</elementName>
<asnElementName>anchorMSC-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAsciCallReference</name>
<signature>void SetAsciCallReference(ASCI_CallReference* element)</signature>
<elmentName>AsciCallReference</elmentName>
<asnElementName>asciCallReference</asnElementName>
<elementTypeName>ASCI_CallReference</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAsciCallReference</name>
<signature>void SetAsciCallReference(const ASCI_CallReference&amp; element)</signature>
<elementName>AsciCallReference</elementName>
<asnElementName>asciCallReference</asnElementName>
<elementTypeName>ASCI_CallReference</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAsciCallReference</name>
<signature>const ASCI_CallReference&amp; GetAsciCallReference() const</signature>
<elementName>AsciCallReference</elementName>
<asnElementName>asciCallReference</asnElementName>
<elementTypeName>ASCI_CallReference</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAsciCallReference</name>
<signature>bool OptionAsciCallReference() const</signature>
<elementName>AsciCallReference</elementName>
<asnElementName>asciCallReference</asnElementName>
<elementTypeName>ASCI_CallReference</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionImsi</name>
<signature>bool OptionImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAdditionalInfo</name>
<signature>void SetAdditionalInfo(AdditionalInfo* element)</signature>
<elmentName>AdditionalInfo</elmentName>
<asnElementName>additionalInfo</asnElementName>
<elementTypeName>AdditionalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAdditionalInfo</name>
<signature>void SetAdditionalInfo(const AdditionalInfo&amp; element)</signature>
<elementName>AdditionalInfo</elementName>
<asnElementName>additionalInfo</asnElementName>
<elementTypeName>AdditionalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAdditionalInfo</name>
<signature>const AdditionalInfo&amp; GetAdditionalInfo() const</signature>
<elementName>AdditionalInfo</elementName>
<asnElementName>additionalInfo</asnElementName>
<elementTypeName>AdditionalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAdditionalInfo</name>
<signature>bool OptionAdditionalInfo() const</signature>
<elementName>AdditionalInfo</elementName>
<asnElementName>additionalInfo</asnElementName>
<elementTypeName>AdditionalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAdditionalSubscriptions</name>
<signature>void SetAdditionalSubscriptions(AdditionalSubscriptions* element)</signature>
<elmentName>AdditionalSubscriptions</elmentName>
<asnElementName>additionalSubscriptions</asnElementName>
<elementTypeName>AdditionalSubscriptions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAdditionalSubscriptions</name>
<signature>void SetAdditionalSubscriptions(const AdditionalSubscriptions&amp; element)</signature>
<elementName>AdditionalSubscriptions</elementName>
<asnElementName>additionalSubscriptions</asnElementName>
<elementTypeName>AdditionalSubscriptions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAdditionalSubscriptions</name>
<signature>const AdditionalSubscriptions&amp; GetAdditionalSubscriptions() const</signature>
<elementName>AdditionalSubscriptions</elementName>
<asnElementName>additionalSubscriptions</asnElementName>
<elementTypeName>AdditionalSubscriptions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAdditionalSubscriptions</name>
<signature>bool OptionAdditionalSubscriptions() const</signature>
<elementName>AdditionalSubscriptions</elementName>
<asnElementName>additionalSubscriptions</asnElementName>
<elementTypeName>AdditionalSubscriptions</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetKc</name>
<signature>void SetKc(Kc* element)</signature>
<elmentName>Kc</elmentName>
<asnElementName>kc</asnElementName>
<elementTypeName>Kc</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetKc</name>
<signature>void SetKc(const Kc&amp; element)</signature>
<elementName>Kc</elementName>
<asnElementName>kc</asnElementName>
<elementTypeName>Kc</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetKc</name>
<signature>const Kc&amp; GetKc() const</signature>
<elementName>Kc</elementName>
<asnElementName>kc</asnElementName>
<elementTypeName>Kc</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionKc</name>
<signature>bool OptionKc() const</signature>
<elementName>Kc</elementName>
<asnElementName>kc</asnElementName>
<elementTypeName>Kc</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SendGroupCallInfoRes information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SendGroupCallInfoRes ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    anchorMSC-Address [0] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    asciCallReference [1] IMPLICIT ASCI-CallReference -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    imsi [2] IMPLICIT IMSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    additionalInfo [3] IMPLICIT AdditionalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    additionalSubscriptions [4] IMPLICIT AdditionalSubscriptions -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    kc [5] IMPLICIT Kc -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [6] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

