//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#include <map_v13_register_cc_entry_res.h>

#include <AsnDescSequence.h>


using namespace its;
using namespace map_v13;




////////// Begin Nested Class(es) //////////


// Type CCBS_Feature is a reference => no code generated.

////////// End Nested Class(es) //////////

AsnDescObject* RegisterCC_EntryRes::GetStaticDescription()
{
    static volatile bool initialized = false;
    static AsnDescObject* result = NULL;
    static AsnDescSequence staticDesc(1);

    if (initialized)
    {
        return result;
    }

    Asn::Lock();

    if (initialized)
    {
        Asn::Unlock();
        return result;
    }
    else
    {
        staticDesc.SetCloneForFactory(new RegisterCC_EntryRes(&staticDesc));
        staticDesc.TagAddLevel(new Tag(Tag::ASN_CLASS_UNIVERSAL, Tag::ASN_CONSTRUCTED, 16));
        staticDesc._clauseExtensible = true;
        staticDesc._elementVect[0] = GetCcbs_FeatureStaticDescription();
        staticDesc.SetTypeName("RegisterCC-EntryRes");
        result = &staticDesc;
        initialized = true;
        Asn::Unlock();
        return result;
    }
}

AsnDescObject* RegisterCC_EntryRes::GetCcbs_FeatureStaticDescription()
{
    static volatile bool initialized = false;
    static AsnDescObject* result = NULL;
    static AsnDescSequence staticDesc(4);

    if (initialized)
    {
        return result;
    }

    Asn::Lock();

    if (initialized)
    {
        Asn::Unlock();
        return result;
    }
    else
    {
        staticDesc.SetCloneForFactory(new CCBS_Feature(&staticDesc));
        staticDesc.TagAddLevel(new Tag(Tag::ASN_CLASS_CONTEXT_SPECIFIC, Tag::ASN_CONSTRUCTED, 0));
        staticDesc._clauseOptional = true;
        staticDesc._clauseExtensible = true;
        staticDesc._elementVect[0] = CCBS_Feature::GetCcbs_IndexStaticDescription();
        staticDesc._elementVect[1] = CCBS_Feature::GetB_subscriberNumberStaticDescription();
        staticDesc._elementVect[2] = CCBS_Feature::GetB_subscriberSubaddressStaticDescription();
        staticDesc._elementVect[3] = CCBS_Feature::GetBasicServiceGroupStaticDescription();
        staticDesc.SetNamedTypeName("ccbs-Feature");
        result = &staticDesc;
        initialized = true;
        Asn::Unlock();
        return result;
    }
}





