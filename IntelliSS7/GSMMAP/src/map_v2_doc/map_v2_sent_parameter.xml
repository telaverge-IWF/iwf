<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>SentParameter</className>
<asnTypeName>SentParameter</asnTypeName>
<moduleName>MAP_V2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceImsi</name>
<signature>void SetChoiceImsi(IMSI* choice)</signature>
<choiceName>Imsi</choiceName>
<asnChoiceName>imsi</asnChoiceName>
<choiceTypeName>IMSI</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceImsi</name>
<signature>void SetChoiceImsi(const IMSI&amp; choice)</signature>
<choiceName>Imsi</choiceName>
<asnChoiceName>imsi</asnChoiceName>
<choiceTypeName>IMSI</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceImsi</name>
<signature>const IMSI&amp; GetChoiceImsi() const</signature>
<choiceName>Imsi</choiceName>
<asnChoiceName>imsi</asnChoiceName>
<choiceTypeName>IMSI</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceImsi</name>
<signature>bool ChoiceImsi() const</signature>
<choiceName>Imsi</choiceName>
<asnChoiceName>imsi</asnChoiceName>
<choiceTypeName>IMSI</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceAuthenticationSet</name>
<signature>void SetChoiceAuthenticationSet(AuthenticationSet* choice)</signature>
<choiceName>AuthenticationSet</choiceName>
<asnChoiceName>authenticationSet</asnChoiceName>
<choiceTypeName>AuthenticationSet</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceAuthenticationSet</name>
<signature>void SetChoiceAuthenticationSet(const AuthenticationSet&amp; choice)</signature>
<choiceName>AuthenticationSet</choiceName>
<asnChoiceName>authenticationSet</asnChoiceName>
<choiceTypeName>AuthenticationSet</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceAuthenticationSet</name>
<signature>const AuthenticationSet&amp; GetChoiceAuthenticationSet() const</signature>
<choiceName>AuthenticationSet</choiceName>
<asnChoiceName>authenticationSet</asnChoiceName>
<choiceTypeName>AuthenticationSet</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceAuthenticationSet</name>
<signature>bool ChoiceAuthenticationSet() const</signature>
<choiceName>AuthenticationSet</choiceName>
<asnChoiceName>authenticationSet</asnChoiceName>
<choiceTypeName>AuthenticationSet</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceSubscriberData</name>
<signature>void SetChoiceSubscriberData(SubscriberData* choice)</signature>
<choiceName>SubscriberData</choiceName>
<asnChoiceName>subscriberData</asnChoiceName>
<choiceTypeName>SubscriberData</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceSubscriberData</name>
<signature>void SetChoiceSubscriberData(const SubscriberData&amp; choice)</signature>
<choiceName>SubscriberData</choiceName>
<asnChoiceName>subscriberData</asnChoiceName>
<choiceTypeName>SubscriberData</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceSubscriberData</name>
<signature>const SubscriberData&amp; GetChoiceSubscriberData() const</signature>
<choiceName>SubscriberData</choiceName>
<asnChoiceName>subscriberData</asnChoiceName>
<choiceTypeName>SubscriberData</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceSubscriberData</name>
<signature>bool ChoiceSubscriberData() const</signature>
<choiceName>SubscriberData</choiceName>
<asnChoiceName>subscriberData</asnChoiceName>
<choiceTypeName>SubscriberData</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceKi</name>
<signature>void SetChoiceKi(Ki* choice)</signature>
<choiceName>Ki</choiceName>
<asnChoiceName>ki</asnChoiceName>
<choiceTypeName>Ki</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceKi</name>
<signature>void SetChoiceKi(const Ki&amp; choice)</signature>
<choiceName>Ki</choiceName>
<asnChoiceName>ki</asnChoiceName>
<choiceTypeName>Ki</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceKi</name>
<signature>const Ki&amp; GetChoiceKi() const</signature>
<choiceName>Ki</choiceName>
<asnChoiceName>ki</asnChoiceName>
<choiceTypeName>Ki</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceKi</name>
<signature>bool ChoiceKi() const</signature>
<choiceName>Ki</choiceName>
<asnChoiceName>ki</asnChoiceName>
<choiceTypeName>Ki</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SentParameter information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SentParameter ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    imsi [0] IMPLICIT IMSI -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    authenticationSet [1] IMPLICIT AuthenticationSet -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    subscriberData [2] IMPLICIT SubscriberData -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ki [4] IMPLICIT Ki -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

