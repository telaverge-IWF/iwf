<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>PerformSubsequentHO_Arg</className>
<asnTypeName>PerformSubsequentHO-Arg</asnTypeName>
<moduleName>MAP_V2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetTargetCellId</name>
<signature>void SetTargetCellId(GlobalCellId* element)</signature>
<elmentName>TargetCellId</elmentName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTargetCellId</name>
<signature>void SetTargetCellId(const GlobalCellId&amp; element)</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTargetCellId</name>
<signature>const GlobalCellId&amp; GetTargetCellId() const</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetServingCellId</name>
<signature>void SetServingCellId(GlobalCellId* element)</signature>
<elmentName>ServingCellId</elmentName>
<asnElementName>servingCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServingCellId</name>
<signature>void SetServingCellId(const GlobalCellId&amp; element)</signature>
<elementName>ServingCellId</elementName>
<asnElementName>servingCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServingCellId</name>
<signature>const GlobalCellId&amp; GetServingCellId() const</signature>
<elementName>ServingCellId</elementName>
<asnElementName>servingCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetTargetMSC_Number</name>
<signature>void SetTargetMSC_Number(ISDN_AddressString* element)</signature>
<elmentName>TargetMSC_Number</elmentName>
<asnElementName>targetMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTargetMSC_Number</name>
<signature>void SetTargetMSC_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>TargetMSC_Number</elementName>
<asnElementName>targetMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTargetMSC_Number</name>
<signature>const ISDN_AddressString&amp; GetTargetMSC_Number() const</signature>
<elementName>TargetMSC_Number</elementName>
<asnElementName>targetMSC-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetClassmarkInfo</name>
<signature>void SetClassmarkInfo(ClassmarkInfo* element)</signature>
<elmentName>ClassmarkInfo</elmentName>
<asnElementName>classmarkInfo</asnElementName>
<elementTypeName>ClassmarkInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetClassmarkInfo</name>
<signature>void SetClassmarkInfo(const ClassmarkInfo&amp; element)</signature>
<elementName>ClassmarkInfo</elementName>
<asnElementName>classmarkInfo</asnElementName>
<elementTypeName>ClassmarkInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetClassmarkInfo</name>
<signature>const ClassmarkInfo&amp; GetClassmarkInfo() const</signature>
<elementName>ClassmarkInfo</elementName>
<asnElementName>classmarkInfo</asnElementName>
<elementTypeName>ClassmarkInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionClassmarkInfo</name>
<signature>bool OptionClassmarkInfo() const</signature>
<elementName>ClassmarkInfo</elementName>
<asnElementName>classmarkInfo</asnElementName>
<elementTypeName>ClassmarkInfo</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- PerformSubsequentHO-Arg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>PerformSubsequentHO-Arg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    targetCellId GlobalCellId -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    servingCellId GlobalCellId -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    targetMSC-Number ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    classmarkInfo [10] IMPLICIT ClassmarkInfo -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

