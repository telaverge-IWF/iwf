<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>NoteInternalHO_Arg</className>
<asnTypeName>NoteInternalHO-Arg</asnTypeName>
<moduleName>MAP_V2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetHandoverType</name>
<signature>void SetHandoverType(HandoverType* element)</signature>
<elmentName>HandoverType</elmentName>
<asnElementName>handoverType</asnElementName>
<elementTypeName>HandoverType</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetHandoverType</name>
<signature>void SetHandoverType(const HandoverType&amp; element)</signature>
<elementName>HandoverType</elementName>
<asnElementName>handoverType</asnElementName>
<elementTypeName>HandoverType</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetHandoverType</name>
<signature>const HandoverType&amp; GetHandoverType() const</signature>
<elementName>HandoverType</elementName>
<asnElementName>handoverType</asnElementName>
<elementTypeName>HandoverType</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetTargetCellId</name>
<signature>void SetTargetCellId(GlobalCellId* element)</signature>
<elmentName>TargetCellId</elmentName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTargetCellId</name>
<signature>void SetTargetCellId(const GlobalCellId&amp; element)</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTargetCellId</name>
<signature>const GlobalCellId&amp; GetTargetCellId() const</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTargetCellId</name>
<signature>bool OptionTargetCellId() const</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetChannelId</name>
<signature>void SetChannelId(ExternalSignalInfo* element)</signature>
<elmentName>ChannelId</elmentName>
<asnElementName>channelId</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChannelId</name>
<signature>void SetChannelId(const ExternalSignalInfo&amp; element)</signature>
<elementName>ChannelId</elementName>
<asnElementName>channelId</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChannelId</name>
<signature>const ExternalSignalInfo&amp; GetChannelId() const</signature>
<elementName>ChannelId</elementName>
<asnElementName>channelId</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionChannelId</name>
<signature>bool OptionChannelId() const</signature>
<elementName>ChannelId</elementName>
<asnElementName>channelId</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- NoteInternalHO-Arg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>NoteInternalHO-Arg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    handoverType HandoverType -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    targetCellId [1] IMPLICIT GlobalCellId -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    channelId [2] IMPLICIT ExternalSignalInfo -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

