<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>PerformSubsequentHandoverArg</className>
<asnTypeName>PerformSubsequentHandoverArg</asnTypeName>
<moduleName>MAP_V1</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetTargetCellId</name>
<signature>void SetTargetCellId(GlobalCellId* element)</signature>
<elmentName>TargetCellId</elmentName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTargetCellId</name>
<signature>void SetTargetCellId(const GlobalCellId&amp; element)</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTargetCellId</name>
<signature>const GlobalCellId&amp; GetTargetCellId() const</signature>
<elementName>TargetCellId</elementName>
<asnElementName>targetCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetServingCellId</name>
<signature>void SetServingCellId(GlobalCellId* element)</signature>
<elmentName>ServingCellId</elmentName>
<asnElementName>servingCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServingCellId</name>
<signature>void SetServingCellId(const GlobalCellId&amp; element)</signature>
<elementName>ServingCellId</elementName>
<asnElementName>servingCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServingCellId</name>
<signature>const GlobalCellId&amp; GetServingCellId() const</signature>
<elementName>ServingCellId</elementName>
<asnElementName>servingCellId</asnElementName>
<elementTypeName>GlobalCellId</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetTargetMscNumber</name>
<signature>void SetTargetMscNumber(ISDN_AddressString* element)</signature>
<elmentName>TargetMscNumber</elmentName>
<asnElementName>targetMscNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTargetMscNumber</name>
<signature>void SetTargetMscNumber(const ISDN_AddressString&amp; element)</signature>
<elementName>TargetMscNumber</elementName>
<asnElementName>targetMscNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTargetMscNumber</name>
<signature>const ISDN_AddressString&amp; GetTargetMscNumber() const</signature>
<elementName>TargetMscNumber</elementName>
<asnElementName>targetMscNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetClassmarkInformation</name>
<signature>void SetClassmarkInformation(ClassmarkInformation* element)</signature>
<elmentName>ClassmarkInformation</elmentName>
<asnElementName>classmarkInformation</asnElementName>
<elementTypeName>ClassmarkInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetClassmarkInformation</name>
<signature>void SetClassmarkInformation(const ClassmarkInformation&amp; element)</signature>
<elementName>ClassmarkInformation</elementName>
<asnElementName>classmarkInformation</asnElementName>
<elementTypeName>ClassmarkInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetClassmarkInformation</name>
<signature>const ClassmarkInformation&amp; GetClassmarkInformation() const</signature>
<elementName>ClassmarkInformation</elementName>
<asnElementName>classmarkInformation</asnElementName>
<elementTypeName>ClassmarkInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionClassmarkInformation</name>
<signature>bool OptionClassmarkInformation() const</signature>
<elementName>ClassmarkInformation</elementName>
<asnElementName>classmarkInformation</asnElementName>
<elementTypeName>ClassmarkInformation</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- PerformSubsequentHandoverArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>PerformSubsequentHandoverArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    targetCellId GlobalCellId -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    servingCellId GlobalCellId -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    targetMscNumber ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    classmarkInformation [10] IMPLICIT ClassmarkInformation -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

