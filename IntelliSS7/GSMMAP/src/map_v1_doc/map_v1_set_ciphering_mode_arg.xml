<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SetCipheringModeArg</className>
<asnTypeName>SetCipheringModeArg</asnTypeName>
<moduleName>MAP_V1</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCipheringMode</name>
<signature>void SetCipheringMode(CipheringMode* element)</signature>
<elmentName>CipheringMode</elmentName>
<asnElementName>cipheringMode</asnElementName>
<elementTypeName>CipheringMode</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCipheringMode</name>
<signature>void SetCipheringMode(const CipheringMode&amp; element)</signature>
<elementName>CipheringMode</elementName>
<asnElementName>cipheringMode</asnElementName>
<elementTypeName>CipheringMode</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCipheringMode</name>
<signature>const CipheringMode&amp; GetCipheringMode() const</signature>
<elementName>CipheringMode</elementName>
<asnElementName>cipheringMode</asnElementName>
<elementTypeName>CipheringMode</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetKc</name>
<signature>void SetKc(Kc* element)</signature>
<elmentName>Kc</elmentName>
<asnElementName>kc</asnElementName>
<elementTypeName>Kc</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetKc</name>
<signature>void SetKc(const Kc&amp; element)</signature>
<elementName>Kc</elementName>
<asnElementName>kc</asnElementName>
<elementTypeName>Kc</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetKc</name>
<signature>const Kc&amp; GetKc() const</signature>
<elementName>Kc</elementName>
<asnElementName>kc</asnElementName>
<elementTypeName>Kc</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionKc</name>
<signature>bool OptionKc() const</signature>
<elementName>Kc</elementName>
<asnElementName>kc</asnElementName>
<elementTypeName>Kc</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SetCipheringModeArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SetCipheringModeArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    cipheringMode CipheringMode -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    kc Kc -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

