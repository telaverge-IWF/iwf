<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ForwardSsNotificationArg</className>
<asnTypeName>ForwardSsNotificationArg</asnTypeName>
<moduleName>MAP_V1</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionImsi</name>
<signature>bool OptionImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSs_Code</name>
<signature>void SetSs_Code(SS_Code* element)</signature>
<elmentName>Ss_Code</elmentName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_Code</name>
<signature>void SetSs_Code(const SS_Code&amp; element)</signature>
<elementName>Ss_Code</elementName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_Code</name>
<signature>const SS_Code&amp; GetSs_Code() const</signature>
<elementName>Ss_Code</elementName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSs_Code</name>
<signature>bool OptionSs_Code() const</signature>
<elementName>Ss_Code</elementName>
<asnElementName>ss-Code</asnElementName>
<elementTypeName>SS_Code</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTeleservice</name>
<signature>void SetTeleservice(TeleserviceCode* element)</signature>
<elmentName>Teleservice</elmentName>
<asnElementName>teleservice</asnElementName>
<elementTypeName>TeleserviceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTeleservice</name>
<signature>void SetTeleservice(const TeleserviceCode&amp; element)</signature>
<elementName>Teleservice</elementName>
<asnElementName>teleservice</asnElementName>
<elementTypeName>TeleserviceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTeleservice</name>
<signature>const TeleserviceCode&amp; GetTeleservice() const</signature>
<elementName>Teleservice</elementName>
<asnElementName>teleservice</asnElementName>
<elementTypeName>TeleserviceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTeleservice</name>
<signature>bool OptionTeleservice() const</signature>
<elementName>Teleservice</elementName>
<asnElementName>teleservice</asnElementName>
<elementTypeName>TeleserviceCode</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBearerService</name>
<signature>void SetBearerService(BearerServiceCode* element)</signature>
<elmentName>BearerService</elmentName>
<asnElementName>bearerService</asnElementName>
<elementTypeName>BearerServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBearerService</name>
<signature>void SetBearerService(const BearerServiceCode&amp; element)</signature>
<elementName>BearerService</elementName>
<asnElementName>bearerService</asnElementName>
<elementTypeName>BearerServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBearerService</name>
<signature>const BearerServiceCode&amp; GetBearerService() const</signature>
<elementName>BearerService</elementName>
<asnElementName>bearerService</asnElementName>
<elementTypeName>BearerServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBearerService</name>
<signature>bool OptionBearerService() const</signature>
<elementName>BearerService</elementName>
<asnElementName>bearerService</asnElementName>
<elementTypeName>BearerServiceCode</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSs_Status</name>
<signature>void SetSs_Status(SS_Status* element)</signature>
<elmentName>Ss_Status</elmentName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>SS_Status</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_Status</name>
<signature>void SetSs_Status(const SS_Status&amp; element)</signature>
<elementName>Ss_Status</elementName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>SS_Status</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_Status</name>
<signature>const SS_Status&amp; GetSs_Status() const</signature>
<elementName>Ss_Status</elementName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>SS_Status</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSs_Status</name>
<signature>bool OptionSs_Status() const</signature>
<elementName>Ss_Status</elementName>
<asnElementName>ss-Status</asnElementName>
<elementTypeName>SS_Status</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSs_Notification</name>
<signature>void SetSs_Notification(SS_Notification* element)</signature>
<elmentName>Ss_Notification</elmentName>
<asnElementName>ss-Notification</asnElementName>
<elementTypeName>SS_Notification</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_Notification</name>
<signature>void SetSs_Notification(const SS_Notification&amp; element)</signature>
<elementName>Ss_Notification</elementName>
<asnElementName>ss-Notification</asnElementName>
<elementTypeName>SS_Notification</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_Notification</name>
<signature>const SS_Notification&amp; GetSs_Notification() const</signature>
<elementName>Ss_Notification</elementName>
<asnElementName>ss-Notification</asnElementName>
<elementTypeName>SS_Notification</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSs_Notification</name>
<signature>bool OptionSs_Notification() const</signature>
<elementName>Ss_Notification</elementName>
<asnElementName>ss-Notification</asnElementName>
<elementTypeName>SS_Notification</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ForwardSsNotificationArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ForwardSsNotificationArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    imsi [0] IMPLICIT IMSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-Code [1] IMPLICIT SS-Code -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    teleservice [2] IMPLICIT TeleserviceCode -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    bearerService [3] IMPLICIT BearerServiceCode -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-Status [4] IMPLICIT SS-Status -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-Notification [5] IMPLICIT SS-Notification -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

