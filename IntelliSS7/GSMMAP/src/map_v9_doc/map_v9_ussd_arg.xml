<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>USSD_Arg</className>
<asnTypeName>USSD-Arg</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetUssd_DataCodingScheme</name>
<signature>void SetUssd_DataCodingScheme(USSD_DataCodingScheme* element)</signature>
<elmentName>Ussd_DataCodingScheme</elmentName>
<asnElementName>ussd-DataCodingScheme</asnElementName>
<elementTypeName>USSD_DataCodingScheme</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetUssd_DataCodingScheme</name>
<signature>void SetUssd_DataCodingScheme(const USSD_DataCodingScheme&amp; element)</signature>
<elementName>Ussd_DataCodingScheme</elementName>
<asnElementName>ussd-DataCodingScheme</asnElementName>
<elementTypeName>USSD_DataCodingScheme</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetUssd_DataCodingScheme</name>
<signature>const USSD_DataCodingScheme&amp; GetUssd_DataCodingScheme() const</signature>
<elementName>Ussd_DataCodingScheme</elementName>
<asnElementName>ussd-DataCodingScheme</asnElementName>
<elementTypeName>USSD_DataCodingScheme</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetUssd_String</name>
<signature>void SetUssd_String(USSD_String* element)</signature>
<elmentName>Ussd_String</elmentName>
<asnElementName>ussd-String</asnElementName>
<elementTypeName>USSD_String</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetUssd_String</name>
<signature>void SetUssd_String(const USSD_String&amp; element)</signature>
<elementName>Ussd_String</elementName>
<asnElementName>ussd-String</asnElementName>
<elementTypeName>USSD_String</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetUssd_String</name>
<signature>const USSD_String&amp; GetUssd_String() const</signature>
<elementName>Ussd_String</elementName>
<asnElementName>ussd-String</asnElementName>
<elementTypeName>USSD_String</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetAlertingPattern</name>
<signature>void SetAlertingPattern(AlertingPattern* element)</signature>
<elmentName>AlertingPattern</elmentName>
<asnElementName>alertingPattern</asnElementName>
<elementTypeName>AlertingPattern</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAlertingPattern</name>
<signature>void SetAlertingPattern(const AlertingPattern&amp; element)</signature>
<elementName>AlertingPattern</elementName>
<asnElementName>alertingPattern</asnElementName>
<elementTypeName>AlertingPattern</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAlertingPattern</name>
<signature>const AlertingPattern&amp; GetAlertingPattern() const</signature>
<elementName>AlertingPattern</elementName>
<asnElementName>alertingPattern</asnElementName>
<elementTypeName>AlertingPattern</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAlertingPattern</name>
<signature>bool OptionAlertingPattern() const</signature>
<elementName>AlertingPattern</elementName>
<asnElementName>alertingPattern</asnElementName>
<elementTypeName>AlertingPattern</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMsisdn</name>
<signature>void SetMsisdn(ISDN_AddressString* element)</signature>
<elmentName>Msisdn</elmentName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsisdn</name>
<signature>void SetMsisdn(const ISDN_AddressString&amp; element)</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsisdn</name>
<signature>const ISDN_AddressString&amp; GetMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMsisdn</name>
<signature>bool OptionMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- USSD-Arg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>USSD-Arg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    ussd-DataCodingScheme USSD-DataCodingScheme -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ussd-String USSD-String -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    alertingPattern AlertingPattern -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    msisdn [0] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

