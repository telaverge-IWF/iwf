<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SIWFSSignallingModifyArg</className>
<asnTypeName>SIWFSSignallingModifyArg</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetChannelType</name>
<signature>void SetChannelType(ExternalSignalInfo* element)</signature>
<elmentName>ChannelType</elmentName>
<asnElementName>channelType</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChannelType</name>
<signature>void SetChannelType(const ExternalSignalInfo&amp; element)</signature>
<elementName>ChannelType</elementName>
<asnElementName>channelType</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChannelType</name>
<signature>const ExternalSignalInfo&amp; GetChannelType() const</signature>
<elementName>ChannelType</elementName>
<asnElementName>channelType</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionChannelType</name>
<signature>bool OptionChannelType() const</signature>
<elementName>ChannelType</elementName>
<asnElementName>channelType</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetChosenChannel</name>
<signature>void SetChosenChannel(ExternalSignalInfo* element)</signature>
<elmentName>ChosenChannel</elmentName>
<asnElementName>chosenChannel</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChosenChannel</name>
<signature>void SetChosenChannel(const ExternalSignalInfo&amp; element)</signature>
<elementName>ChosenChannel</elementName>
<asnElementName>chosenChannel</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChosenChannel</name>
<signature>const ExternalSignalInfo&amp; GetChosenChannel() const</signature>
<elementName>ChosenChannel</elementName>
<asnElementName>chosenChannel</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionChosenChannel</name>
<signature>bool OptionChosenChannel() const</signature>
<elementName>ChosenChannel</elementName>
<asnElementName>chosenChannel</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SIWFSSignallingModifyArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SIWFSSignallingModifyArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    channelType [0] IMPLICIT ExternalSignalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    chosenChannel [1] IMPLICIT ExternalSignalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [2] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

