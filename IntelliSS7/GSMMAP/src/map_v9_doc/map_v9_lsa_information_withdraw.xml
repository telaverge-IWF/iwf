<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>LSAInformationWithdraw</className>
<asnTypeName>LSAInformationWithdraw</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceAllLSAData</name>
<signature>void SetChoiceAllLSAData(AllLSAData* choice)</signature>
<choiceName>AllLSAData</choiceName>
<asnChoiceName>allLSAData</asnChoiceName>
<choiceTypeName>AllLSAData</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceAllLSAData</name>
<signature>void SetChoiceAllLSAData(const AllLSAData&amp; choice)</signature>
<choiceName>AllLSAData</choiceName>
<asnChoiceName>allLSAData</asnChoiceName>
<choiceTypeName>AllLSAData</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceAllLSAData</name>
<signature>const AllLSAData&amp; GetChoiceAllLSAData() const</signature>
<choiceName>AllLSAData</choiceName>
<asnChoiceName>allLSAData</asnChoiceName>
<choiceTypeName>AllLSAData</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceAllLSAData</name>
<signature>bool ChoiceAllLSAData() const</signature>
<choiceName>AllLSAData</choiceName>
<asnChoiceName>allLSAData</asnChoiceName>
<choiceTypeName>AllLSAData</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceLsaIdentityList</name>
<signature>void SetChoiceLsaIdentityList(LSAIdentityList* choice)</signature>
<choiceName>LsaIdentityList</choiceName>
<asnChoiceName>lsaIdentityList</asnChoiceName>
<choiceTypeName>LSAIdentityList</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceLsaIdentityList</name>
<signature>void SetChoiceLsaIdentityList(const LSAIdentityList&amp; choice)</signature>
<choiceName>LsaIdentityList</choiceName>
<asnChoiceName>lsaIdentityList</asnChoiceName>
<choiceTypeName>LSAIdentityList</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceLsaIdentityList</name>
<signature>const LSAIdentityList&amp; GetChoiceLsaIdentityList() const</signature>
<choiceName>LsaIdentityList</choiceName>
<asnChoiceName>lsaIdentityList</asnChoiceName>
<choiceTypeName>LSAIdentityList</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceLsaIdentityList</name>
<signature>bool ChoiceLsaIdentityList() const</signature>
<choiceName>LsaIdentityList</choiceName>
<asnChoiceName>lsaIdentityList</asnChoiceName>
<choiceTypeName>LSAIdentityList</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- LSAInformationWithdraw information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>LSAInformationWithdraw ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    allLSAData NULL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lsaIdentityList LSAIdentityList -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

