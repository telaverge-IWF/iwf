<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ResumeCallHandlingArg</className>
<asnTypeName>ResumeCallHandlingArg</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCallReferenceNumber</name>
<signature>void SetCallReferenceNumber(CallReferenceNumber* element)</signature>
<elmentName>CallReferenceNumber</elmentName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallReferenceNumber</name>
<signature>void SetCallReferenceNumber(const CallReferenceNumber&amp; element)</signature>
<elementName>CallReferenceNumber</elementName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallReferenceNumber</name>
<signature>const CallReferenceNumber&amp; GetCallReferenceNumber() const</signature>
<elementName>CallReferenceNumber</elementName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCallReferenceNumber</name>
<signature>bool OptionCallReferenceNumber() const</signature>
<elementName>CallReferenceNumber</elementName>
<asnElementName>callReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBasicServiceGroup</name>
<signature>void SetBasicServiceGroup(Ext_BasicServiceCode* element)</signature>
<elmentName>BasicServiceGroup</elmentName>
<asnElementName>basicServiceGroup</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBasicServiceGroup</name>
<signature>void SetBasicServiceGroup(const Ext_BasicServiceCode&amp; element)</signature>
<elementName>BasicServiceGroup</elementName>
<asnElementName>basicServiceGroup</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBasicServiceGroup</name>
<signature>const Ext_BasicServiceCode&amp; GetBasicServiceGroup() const</signature>
<elementName>BasicServiceGroup</elementName>
<asnElementName>basicServiceGroup</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBasicServiceGroup</name>
<signature>bool OptionBasicServiceGroup() const</signature>
<elementName>BasicServiceGroup</elementName>
<asnElementName>basicServiceGroup</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetForwardingData</name>
<signature>void SetForwardingData(ForwardingData* element)</signature>
<elmentName>ForwardingData</elmentName>
<asnElementName>forwardingData</asnElementName>
<elementTypeName>ForwardingData</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetForwardingData</name>
<signature>void SetForwardingData(const ForwardingData&amp; element)</signature>
<elementName>ForwardingData</elementName>
<asnElementName>forwardingData</asnElementName>
<elementTypeName>ForwardingData</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetForwardingData</name>
<signature>const ForwardingData&amp; GetForwardingData() const</signature>
<elementName>ForwardingData</elementName>
<asnElementName>forwardingData</asnElementName>
<elementTypeName>ForwardingData</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionForwardingData</name>
<signature>bool OptionForwardingData() const</signature>
<elementName>ForwardingData</elementName>
<asnElementName>forwardingData</asnElementName>
<elementTypeName>ForwardingData</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionImsi</name>
<signature>bool OptionImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCug_CheckInfo</name>
<signature>void SetCug_CheckInfo(CUG_CheckInfo* element)</signature>
<elmentName>Cug_CheckInfo</elmentName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCug_CheckInfo</name>
<signature>void SetCug_CheckInfo(const CUG_CheckInfo&amp; element)</signature>
<elementName>Cug_CheckInfo</elementName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCug_CheckInfo</name>
<signature>const CUG_CheckInfo&amp; GetCug_CheckInfo() const</signature>
<elementName>Cug_CheckInfo</elementName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCug_CheckInfo</name>
<signature>bool OptionCug_CheckInfo() const</signature>
<elementName>Cug_CheckInfo</elementName>
<asnElementName>cug-CheckInfo</asnElementName>
<elementTypeName>CUG_CheckInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetO_CSI</name>
<signature>void SetO_CSI(O_CSI* element)</signature>
<elmentName>O_CSI</elmentName>
<asnElementName>o-CSI</asnElementName>
<elementTypeName>O_CSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetO_CSI</name>
<signature>void SetO_CSI(const O_CSI&amp; element)</signature>
<elementName>O_CSI</elementName>
<asnElementName>o-CSI</asnElementName>
<elementTypeName>O_CSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetO_CSI</name>
<signature>const O_CSI&amp; GetO_CSI() const</signature>
<elementName>O_CSI</elementName>
<asnElementName>o-CSI</asnElementName>
<elementTypeName>O_CSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionO_CSI</name>
<signature>bool OptionO_CSI() const</signature>
<elementName>O_CSI</elementName>
<asnElementName>o-CSI</asnElementName>
<elementTypeName>O_CSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCcbs_Possible</name>
<signature>void SetCcbs_Possible(Ccbs_Possible* element)</signature>
<elmentName>Ccbs_Possible</elmentName>
<asnElementName>ccbs-Possible</asnElementName>
<elementTypeName>Ccbs_Possible</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCcbs_Possible</name>
<signature>void SetCcbs_Possible(const Ccbs_Possible&amp; element)</signature>
<elementName>Ccbs_Possible</elementName>
<asnElementName>ccbs-Possible</asnElementName>
<elementTypeName>Ccbs_Possible</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCcbs_Possible</name>
<signature>const Ccbs_Possible&amp; GetCcbs_Possible() const</signature>
<elementName>Ccbs_Possible</elementName>
<asnElementName>ccbs-Possible</asnElementName>
<elementTypeName>Ccbs_Possible</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCcbs_Possible</name>
<signature>bool OptionCcbs_Possible() const</signature>
<elementName>Ccbs_Possible</elementName>
<asnElementName>ccbs-Possible</asnElementName>
<elementTypeName>Ccbs_Possible</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMsisdn</name>
<signature>void SetMsisdn(ISDN_AddressString* element)</signature>
<elmentName>Msisdn</elmentName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMsisdn</name>
<signature>void SetMsisdn(const ISDN_AddressString&amp; element)</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMsisdn</name>
<signature>const ISDN_AddressString&amp; GetMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMsisdn</name>
<signature>bool OptionMsisdn() const</signature>
<elementName>Msisdn</elementName>
<asnElementName>msisdn</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetUu_Data</name>
<signature>void SetUu_Data(UU_Data* element)</signature>
<elmentName>Uu_Data</elmentName>
<asnElementName>uu-Data</asnElementName>
<elementTypeName>UU_Data</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetUu_Data</name>
<signature>void SetUu_Data(const UU_Data&amp; element)</signature>
<elementName>Uu_Data</elementName>
<asnElementName>uu-Data</asnElementName>
<elementTypeName>UU_Data</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetUu_Data</name>
<signature>const UU_Data&amp; GetUu_Data() const</signature>
<elementName>Uu_Data</elementName>
<asnElementName>uu-Data</asnElementName>
<elementTypeName>UU_Data</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionUu_Data</name>
<signature>bool OptionUu_Data() const</signature>
<elementName>Uu_Data</elementName>
<asnElementName>uu-Data</asnElementName>
<elementTypeName>UU_Data</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAllInformationSent</name>
<signature>void SetAllInformationSent(AllInformationSent* element)</signature>
<elmentName>AllInformationSent</elmentName>
<asnElementName>allInformationSent</asnElementName>
<elementTypeName>AllInformationSent</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAllInformationSent</name>
<signature>void SetAllInformationSent(const AllInformationSent&amp; element)</signature>
<elementName>AllInformationSent</elementName>
<asnElementName>allInformationSent</asnElementName>
<elementTypeName>AllInformationSent</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAllInformationSent</name>
<signature>const AllInformationSent&amp; GetAllInformationSent() const</signature>
<elementName>AllInformationSent</elementName>
<asnElementName>allInformationSent</asnElementName>
<elementTypeName>AllInformationSent</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAllInformationSent</name>
<signature>bool OptionAllInformationSent() const</signature>
<elementName>AllInformationSent</elementName>
<asnElementName>allInformationSent</asnElementName>
<elementTypeName>AllInformationSent</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetD_csi</name>
<signature>void SetD_csi(D_CSI* element)</signature>
<elmentName>D_csi</elmentName>
<asnElementName>d-csi</asnElementName>
<elementTypeName>D_CSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetD_csi</name>
<signature>void SetD_csi(const D_CSI&amp; element)</signature>
<elementName>D_csi</elementName>
<asnElementName>d-csi</asnElementName>
<elementTypeName>D_CSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetD_csi</name>
<signature>const D_CSI&amp; GetD_csi() const</signature>
<elementName>D_csi</elementName>
<asnElementName>d-csi</asnElementName>
<elementTypeName>D_CSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionD_csi</name>
<signature>bool OptionD_csi() const</signature>
<elementName>D_csi</elementName>
<asnElementName>d-csi</asnElementName>
<elementTypeName>D_CSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetO_BcsmCamelTDPCriteriaList</name>
<signature>void SetO_BcsmCamelTDPCriteriaList(O_BcsmCamelTDPCriteriaList* element)</signature>
<elmentName>O_BcsmCamelTDPCriteriaList</elmentName>
<asnElementName>o-BcsmCamelTDPCriteriaList</asnElementName>
<elementTypeName>O_BcsmCamelTDPCriteriaList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetO_BcsmCamelTDPCriteriaList</name>
<signature>void SetO_BcsmCamelTDPCriteriaList(const O_BcsmCamelTDPCriteriaList&amp; element)</signature>
<elementName>O_BcsmCamelTDPCriteriaList</elementName>
<asnElementName>o-BcsmCamelTDPCriteriaList</asnElementName>
<elementTypeName>O_BcsmCamelTDPCriteriaList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetO_BcsmCamelTDPCriteriaList</name>
<signature>const O_BcsmCamelTDPCriteriaList&amp; GetO_BcsmCamelTDPCriteriaList() const</signature>
<elementName>O_BcsmCamelTDPCriteriaList</elementName>
<asnElementName>o-BcsmCamelTDPCriteriaList</asnElementName>
<elementTypeName>O_BcsmCamelTDPCriteriaList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionO_BcsmCamelTDPCriteriaList</name>
<signature>bool OptionO_BcsmCamelTDPCriteriaList() const</signature>
<elementName>O_BcsmCamelTDPCriteriaList</elementName>
<asnElementName>o-BcsmCamelTDPCriteriaList</asnElementName>
<elementTypeName>O_BcsmCamelTDPCriteriaList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBasicServiceGroup2</name>
<signature>void SetBasicServiceGroup2(Ext_BasicServiceCode* element)</signature>
<elmentName>BasicServiceGroup2</elmentName>
<asnElementName>basicServiceGroup2</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBasicServiceGroup2</name>
<signature>void SetBasicServiceGroup2(const Ext_BasicServiceCode&amp; element)</signature>
<elementName>BasicServiceGroup2</elementName>
<asnElementName>basicServiceGroup2</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBasicServiceGroup2</name>
<signature>const Ext_BasicServiceCode&amp; GetBasicServiceGroup2() const</signature>
<elementName>BasicServiceGroup2</elementName>
<asnElementName>basicServiceGroup2</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBasicServiceGroup2</name>
<signature>bool OptionBasicServiceGroup2() const</signature>
<elementName>BasicServiceGroup2</elementName>
<asnElementName>basicServiceGroup2</asnElementName>
<elementTypeName>Ext_BasicServiceCode</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ResumeCallHandlingArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ResumeCallHandlingArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    callReferenceNumber [0] IMPLICIT CallReferenceNumber -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    basicServiceGroup [1] IMPLICIT Ext-BasicServiceCode -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    forwardingData [2] IMPLICIT ForwardingData -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    imsi [3] IMPLICIT IMSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cug-CheckInfo [4] IMPLICIT CUG-CheckInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    o-CSI [5] IMPLICIT O-CSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [7] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ccbs-Possible [8] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    msisdn [9] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    uu-Data [10] IMPLICIT UU-Data -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    allInformationSent [11] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    d-csi [12] IMPLICIT D-CSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    o-BcsmCamelTDPCriteriaList [13] IMPLICIT O-BcsmCamelTDPCriteriaList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    basicServiceGroup2 [14] IMPLICIT Ext-BasicServiceCode -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

