<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>VLR_Capability</className>
<asnTypeName>VLR-Capability</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetSupportedCamelPhases</name>
<signature>void SetSupportedCamelPhases(SupportedCamelPhases* element)</signature>
<elmentName>SupportedCamelPhases</elmentName>
<asnElementName>supportedCamelPhases</asnElementName>
<elementTypeName>SupportedCamelPhases</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSupportedCamelPhases</name>
<signature>void SetSupportedCamelPhases(const SupportedCamelPhases&amp; element)</signature>
<elementName>SupportedCamelPhases</elementName>
<asnElementName>supportedCamelPhases</asnElementName>
<elementTypeName>SupportedCamelPhases</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSupportedCamelPhases</name>
<signature>const SupportedCamelPhases&amp; GetSupportedCamelPhases() const</signature>
<elementName>SupportedCamelPhases</elementName>
<asnElementName>supportedCamelPhases</asnElementName>
<elementTypeName>SupportedCamelPhases</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSupportedCamelPhases</name>
<signature>bool OptionSupportedCamelPhases() const</signature>
<elementName>SupportedCamelPhases</elementName>
<asnElementName>supportedCamelPhases</asnElementName>
<elementTypeName>SupportedCamelPhases</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSolsaSupportIndicator</name>
<signature>void SetSolsaSupportIndicator(SolsaSupportIndicator* element)</signature>
<elmentName>SolsaSupportIndicator</elmentName>
<asnElementName>solsaSupportIndicator</asnElementName>
<elementTypeName>SolsaSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSolsaSupportIndicator</name>
<signature>void SetSolsaSupportIndicator(const SolsaSupportIndicator&amp; element)</signature>
<elementName>SolsaSupportIndicator</elementName>
<asnElementName>solsaSupportIndicator</asnElementName>
<elementTypeName>SolsaSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSolsaSupportIndicator</name>
<signature>const SolsaSupportIndicator&amp; GetSolsaSupportIndicator() const</signature>
<elementName>SolsaSupportIndicator</elementName>
<asnElementName>solsaSupportIndicator</asnElementName>
<elementTypeName>SolsaSupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSolsaSupportIndicator</name>
<signature>bool OptionSolsaSupportIndicator() const</signature>
<elementName>SolsaSupportIndicator</elementName>
<asnElementName>solsaSupportIndicator</asnElementName>
<elementTypeName>SolsaSupportIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIstSupportIndicator</name>
<signature>void SetIstSupportIndicator(IST_SupportIndicator* element)</signature>
<elmentName>IstSupportIndicator</elmentName>
<asnElementName>istSupportIndicator</asnElementName>
<elementTypeName>IST_SupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIstSupportIndicator</name>
<signature>void SetIstSupportIndicator(const IST_SupportIndicator&amp; element)</signature>
<elementName>IstSupportIndicator</elementName>
<asnElementName>istSupportIndicator</asnElementName>
<elementTypeName>IST_SupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIstSupportIndicator</name>
<signature>const IST_SupportIndicator&amp; GetIstSupportIndicator() const</signature>
<elementName>IstSupportIndicator</elementName>
<asnElementName>istSupportIndicator</asnElementName>
<elementTypeName>IST_SupportIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIstSupportIndicator</name>
<signature>bool OptionIstSupportIndicator() const</signature>
<elementName>IstSupportIndicator</elementName>
<asnElementName>istSupportIndicator</asnElementName>
<elementTypeName>IST_SupportIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSuperChargerSupportedInServingNetworkEntity</name>
<signature>void SetSuperChargerSupportedInServingNetworkEntity(SuperChargerInfo* element)</signature>
<elmentName>SuperChargerSupportedInServingNetworkEntity</elmentName>
<asnElementName>superChargerSupportedInServingNetworkEntity</asnElementName>
<elementTypeName>SuperChargerInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSuperChargerSupportedInServingNetworkEntity</name>
<signature>void SetSuperChargerSupportedInServingNetworkEntity(const SuperChargerInfo&amp; element)</signature>
<elementName>SuperChargerSupportedInServingNetworkEntity</elementName>
<asnElementName>superChargerSupportedInServingNetworkEntity</asnElementName>
<elementTypeName>SuperChargerInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSuperChargerSupportedInServingNetworkEntity</name>
<signature>const SuperChargerInfo&amp; GetSuperChargerSupportedInServingNetworkEntity() const</signature>
<elementName>SuperChargerSupportedInServingNetworkEntity</elementName>
<asnElementName>superChargerSupportedInServingNetworkEntity</asnElementName>
<elementTypeName>SuperChargerInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSuperChargerSupportedInServingNetworkEntity</name>
<signature>bool OptionSuperChargerSupportedInServingNetworkEntity() const</signature>
<elementName>SuperChargerSupportedInServingNetworkEntity</elementName>
<asnElementName>superChargerSupportedInServingNetworkEntity</asnElementName>
<elementTypeName>SuperChargerInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLongFTN_Supported</name>
<signature>void SetLongFTN_Supported(LongFTN_Supported* element)</signature>
<elmentName>LongFTN_Supported</elmentName>
<asnElementName>longFTN-Supported</asnElementName>
<elementTypeName>LongFTN_Supported</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLongFTN_Supported</name>
<signature>void SetLongFTN_Supported(const LongFTN_Supported&amp; element)</signature>
<elementName>LongFTN_Supported</elementName>
<asnElementName>longFTN-Supported</asnElementName>
<elementTypeName>LongFTN_Supported</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLongFTN_Supported</name>
<signature>const LongFTN_Supported&amp; GetLongFTN_Supported() const</signature>
<elementName>LongFTN_Supported</elementName>
<asnElementName>longFTN-Supported</asnElementName>
<elementTypeName>LongFTN_Supported</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLongFTN_Supported</name>
<signature>bool OptionLongFTN_Supported() const</signature>
<elementName>LongFTN_Supported</elementName>
<asnElementName>longFTN-Supported</asnElementName>
<elementTypeName>LongFTN_Supported</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSupportedLCS_CapabilitySets</name>
<signature>void SetSupportedLCS_CapabilitySets(SupportedLCS_CapabilitySets* element)</signature>
<elmentName>SupportedLCS_CapabilitySets</elmentName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSupportedLCS_CapabilitySets</name>
<signature>void SetSupportedLCS_CapabilitySets(const SupportedLCS_CapabilitySets&amp; element)</signature>
<elementName>SupportedLCS_CapabilitySets</elementName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSupportedLCS_CapabilitySets</name>
<signature>const SupportedLCS_CapabilitySets&amp; GetSupportedLCS_CapabilitySets() const</signature>
<elementName>SupportedLCS_CapabilitySets</elementName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSupportedLCS_CapabilitySets</name>
<signature>bool OptionSupportedLCS_CapabilitySets() const</signature>
<elementName>SupportedLCS_CapabilitySets</elementName>
<asnElementName>supportedLCS-CapabilitySets</asnElementName>
<elementTypeName>SupportedLCS_CapabilitySets</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetOfferedCamel4CSIs</name>
<signature>void SetOfferedCamel4CSIs(OfferedCamel4CSIs* element)</signature>
<elmentName>OfferedCamel4CSIs</elmentName>
<asnElementName>offeredCamel4CSIs</asnElementName>
<elementTypeName>OfferedCamel4CSIs</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOfferedCamel4CSIs</name>
<signature>void SetOfferedCamel4CSIs(const OfferedCamel4CSIs&amp; element)</signature>
<elementName>OfferedCamel4CSIs</elementName>
<asnElementName>offeredCamel4CSIs</asnElementName>
<elementTypeName>OfferedCamel4CSIs</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOfferedCamel4CSIs</name>
<signature>const OfferedCamel4CSIs&amp; GetOfferedCamel4CSIs() const</signature>
<elementName>OfferedCamel4CSIs</elementName>
<asnElementName>offeredCamel4CSIs</asnElementName>
<elementTypeName>OfferedCamel4CSIs</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionOfferedCamel4CSIs</name>
<signature>bool OptionOfferedCamel4CSIs() const</signature>
<elementName>OfferedCamel4CSIs</elementName>
<asnElementName>offeredCamel4CSIs</asnElementName>
<elementTypeName>OfferedCamel4CSIs</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- VLR-Capability information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>VLR-Capability ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    supportedCamelPhases [0] IMPLICIT SupportedCamelPhases -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    solsaSupportIndicator [2] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    istSupportIndicator [1] IMPLICIT IST-SupportIndicator -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    superChargerSupportedInServingNetworkEntity [3] IMPLICIT SuperChargerInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    longFTN-Supported [4] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    supportedLCS-CapabilitySets [5] IMPLICIT SupportedLCS-CapabilitySets -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    offeredCamel4CSIs [6] IMPLICIT OfferedCamel4CSIs -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

