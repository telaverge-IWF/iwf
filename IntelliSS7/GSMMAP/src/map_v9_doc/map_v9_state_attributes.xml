<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>StateAttributes</className>
<asnTypeName>StateAttributes</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetDownlinkAttached</name>
<signature>void SetDownlinkAttached(DownlinkAttached* element)</signature>
<elmentName>DownlinkAttached</elmentName>
<asnElementName>downlinkAttached</asnElementName>
<elementTypeName>DownlinkAttached</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDownlinkAttached</name>
<signature>void SetDownlinkAttached(const DownlinkAttached&amp; element)</signature>
<elementName>DownlinkAttached</elementName>
<asnElementName>downlinkAttached</asnElementName>
<elementTypeName>DownlinkAttached</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDownlinkAttached</name>
<signature>const DownlinkAttached&amp; GetDownlinkAttached() const</signature>
<elementName>DownlinkAttached</elementName>
<asnElementName>downlinkAttached</asnElementName>
<elementTypeName>DownlinkAttached</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDownlinkAttached</name>
<signature>bool OptionDownlinkAttached() const</signature>
<elementName>DownlinkAttached</elementName>
<asnElementName>downlinkAttached</asnElementName>
<elementTypeName>DownlinkAttached</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetUplinkAttached</name>
<signature>void SetUplinkAttached(UplinkAttached* element)</signature>
<elmentName>UplinkAttached</elmentName>
<asnElementName>uplinkAttached</asnElementName>
<elementTypeName>UplinkAttached</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetUplinkAttached</name>
<signature>void SetUplinkAttached(const UplinkAttached&amp; element)</signature>
<elementName>UplinkAttached</elementName>
<asnElementName>uplinkAttached</asnElementName>
<elementTypeName>UplinkAttached</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetUplinkAttached</name>
<signature>const UplinkAttached&amp; GetUplinkAttached() const</signature>
<elementName>UplinkAttached</elementName>
<asnElementName>uplinkAttached</asnElementName>
<elementTypeName>UplinkAttached</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionUplinkAttached</name>
<signature>bool OptionUplinkAttached() const</signature>
<elementName>UplinkAttached</elementName>
<asnElementName>uplinkAttached</asnElementName>
<elementTypeName>UplinkAttached</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetDualCommunication</name>
<signature>void SetDualCommunication(DualCommunication* element)</signature>
<elmentName>DualCommunication</elmentName>
<asnElementName>dualCommunication</asnElementName>
<elementTypeName>DualCommunication</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDualCommunication</name>
<signature>void SetDualCommunication(const DualCommunication&amp; element)</signature>
<elementName>DualCommunication</elementName>
<asnElementName>dualCommunication</asnElementName>
<elementTypeName>DualCommunication</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDualCommunication</name>
<signature>const DualCommunication&amp; GetDualCommunication() const</signature>
<elementName>DualCommunication</elementName>
<asnElementName>dualCommunication</asnElementName>
<elementTypeName>DualCommunication</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDualCommunication</name>
<signature>bool OptionDualCommunication() const</signature>
<elementName>DualCommunication</elementName>
<asnElementName>dualCommunication</asnElementName>
<elementTypeName>DualCommunication</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCallOriginator</name>
<signature>void SetCallOriginator(CallOriginator* element)</signature>
<elmentName>CallOriginator</elmentName>
<asnElementName>callOriginator</asnElementName>
<elementTypeName>CallOriginator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallOriginator</name>
<signature>void SetCallOriginator(const CallOriginator&amp; element)</signature>
<elementName>CallOriginator</elementName>
<asnElementName>callOriginator</asnElementName>
<elementTypeName>CallOriginator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallOriginator</name>
<signature>const CallOriginator&amp; GetCallOriginator() const</signature>
<elementName>CallOriginator</elementName>
<asnElementName>callOriginator</asnElementName>
<elementTypeName>CallOriginator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCallOriginator</name>
<signature>bool OptionCallOriginator() const</signature>
<elementName>CallOriginator</elementName>
<asnElementName>callOriginator</asnElementName>
<elementTypeName>CallOriginator</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- StateAttributes information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>StateAttributes ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    downlinkAttached [5] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    uplinkAttached [6] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    dualCommunication [7] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callOriginator [8] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

