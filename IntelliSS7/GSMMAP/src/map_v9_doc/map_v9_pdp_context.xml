<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>PDP_Context</className>
<asnTypeName>PDP-Context</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetPdp_ContextId</name>
<signature>void SetPdp_ContextId(ContextId* element)</signature>
<elmentName>Pdp_ContextId</elmentName>
<asnElementName>pdp-ContextId</asnElementName>
<elementTypeName>ContextId</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPdp_ContextId</name>
<signature>void SetPdp_ContextId(const ContextId&amp; element)</signature>
<elementName>Pdp_ContextId</elementName>
<asnElementName>pdp-ContextId</asnElementName>
<elementTypeName>ContextId</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPdp_ContextId</name>
<signature>const ContextId&amp; GetPdp_ContextId() const</signature>
<elementName>Pdp_ContextId</elementName>
<asnElementName>pdp-ContextId</asnElementName>
<elementTypeName>ContextId</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetPdp_Type</name>
<signature>void SetPdp_Type(PDP_Type* element)</signature>
<elmentName>Pdp_Type</elmentName>
<asnElementName>pdp-Type</asnElementName>
<elementTypeName>PDP_Type</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPdp_Type</name>
<signature>void SetPdp_Type(const PDP_Type&amp; element)</signature>
<elementName>Pdp_Type</elementName>
<asnElementName>pdp-Type</asnElementName>
<elementTypeName>PDP_Type</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPdp_Type</name>
<signature>const PDP_Type&amp; GetPdp_Type() const</signature>
<elementName>Pdp_Type</elementName>
<asnElementName>pdp-Type</asnElementName>
<elementTypeName>PDP_Type</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetPdp_Address</name>
<signature>void SetPdp_Address(PDP_Address* element)</signature>
<elmentName>Pdp_Address</elmentName>
<asnElementName>pdp-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPdp_Address</name>
<signature>void SetPdp_Address(const PDP_Address&amp; element)</signature>
<elementName>Pdp_Address</elementName>
<asnElementName>pdp-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPdp_Address</name>
<signature>const PDP_Address&amp; GetPdp_Address() const</signature>
<elementName>Pdp_Address</elementName>
<asnElementName>pdp-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPdp_Address</name>
<signature>bool OptionPdp_Address() const</signature>
<elementName>Pdp_Address</elementName>
<asnElementName>pdp-Address</asnElementName>
<elementTypeName>PDP_Address</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetQos_Subscribed</name>
<signature>void SetQos_Subscribed(QoS_Subscribed* element)</signature>
<elmentName>Qos_Subscribed</elmentName>
<asnElementName>qos-Subscribed</asnElementName>
<elementTypeName>QoS_Subscribed</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetQos_Subscribed</name>
<signature>void SetQos_Subscribed(const QoS_Subscribed&amp; element)</signature>
<elementName>Qos_Subscribed</elementName>
<asnElementName>qos-Subscribed</asnElementName>
<elementTypeName>QoS_Subscribed</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetQos_Subscribed</name>
<signature>const QoS_Subscribed&amp; GetQos_Subscribed() const</signature>
<elementName>Qos_Subscribed</elementName>
<asnElementName>qos-Subscribed</asnElementName>
<elementTypeName>QoS_Subscribed</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetVplmnAddressAllowed</name>
<signature>void SetVplmnAddressAllowed(VplmnAddressAllowed* element)</signature>
<elmentName>VplmnAddressAllowed</elmentName>
<asnElementName>vplmnAddressAllowed</asnElementName>
<elementTypeName>VplmnAddressAllowed</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVplmnAddressAllowed</name>
<signature>void SetVplmnAddressAllowed(const VplmnAddressAllowed&amp; element)</signature>
<elementName>VplmnAddressAllowed</elementName>
<asnElementName>vplmnAddressAllowed</asnElementName>
<elementTypeName>VplmnAddressAllowed</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVplmnAddressAllowed</name>
<signature>const VplmnAddressAllowed&amp; GetVplmnAddressAllowed() const</signature>
<elementName>VplmnAddressAllowed</elementName>
<asnElementName>vplmnAddressAllowed</asnElementName>
<elementTypeName>VplmnAddressAllowed</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVplmnAddressAllowed</name>
<signature>bool OptionVplmnAddressAllowed() const</signature>
<elementName>VplmnAddressAllowed</elementName>
<asnElementName>vplmnAddressAllowed</asnElementName>
<elementTypeName>VplmnAddressAllowed</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetApn</name>
<signature>void SetApn(APN* element)</signature>
<elmentName>Apn</elmentName>
<asnElementName>apn</asnElementName>
<elementTypeName>APN</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetApn</name>
<signature>void SetApn(const APN&amp; element)</signature>
<elementName>Apn</elementName>
<asnElementName>apn</asnElementName>
<elementTypeName>APN</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetApn</name>
<signature>const APN&amp; GetApn() const</signature>
<elementName>Apn</elementName>
<asnElementName>apn</asnElementName>
<elementTypeName>APN</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExt_QoS_Subscribed</name>
<signature>void SetExt_QoS_Subscribed(Ext_QoS_Subscribed* element)</signature>
<elmentName>Ext_QoS_Subscribed</elmentName>
<asnElementName>ext-QoS-Subscribed</asnElementName>
<elementTypeName>Ext_QoS_Subscribed</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExt_QoS_Subscribed</name>
<signature>void SetExt_QoS_Subscribed(const Ext_QoS_Subscribed&amp; element)</signature>
<elementName>Ext_QoS_Subscribed</elementName>
<asnElementName>ext-QoS-Subscribed</asnElementName>
<elementTypeName>Ext_QoS_Subscribed</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExt_QoS_Subscribed</name>
<signature>const Ext_QoS_Subscribed&amp; GetExt_QoS_Subscribed() const</signature>
<elementName>Ext_QoS_Subscribed</elementName>
<asnElementName>ext-QoS-Subscribed</asnElementName>
<elementTypeName>Ext_QoS_Subscribed</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExt_QoS_Subscribed</name>
<signature>bool OptionExt_QoS_Subscribed() const</signature>
<elementName>Ext_QoS_Subscribed</elementName>
<asnElementName>ext-QoS-Subscribed</asnElementName>
<elementTypeName>Ext_QoS_Subscribed</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetPdp_ChargingCharacteristics</name>
<signature>void SetPdp_ChargingCharacteristics(ChargingCharacteristics* element)</signature>
<elmentName>Pdp_ChargingCharacteristics</elmentName>
<asnElementName>pdp-ChargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPdp_ChargingCharacteristics</name>
<signature>void SetPdp_ChargingCharacteristics(const ChargingCharacteristics&amp; element)</signature>
<elementName>Pdp_ChargingCharacteristics</elementName>
<asnElementName>pdp-ChargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPdp_ChargingCharacteristics</name>
<signature>const ChargingCharacteristics&amp; GetPdp_ChargingCharacteristics() const</signature>
<elementName>Pdp_ChargingCharacteristics</elementName>
<asnElementName>pdp-ChargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPdp_ChargingCharacteristics</name>
<signature>bool OptionPdp_ChargingCharacteristics() const</signature>
<elementName>Pdp_ChargingCharacteristics</elementName>
<asnElementName>pdp-ChargingCharacteristics</asnElementName>
<elementTypeName>ChargingCharacteristics</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExt2_QoS_Subscribed</name>
<signature>void SetExt2_QoS_Subscribed(Ext2_QoS_Subscribed* element)</signature>
<elmentName>Ext2_QoS_Subscribed</elmentName>
<asnElementName>ext2-QoS-Subscribed</asnElementName>
<elementTypeName>Ext2_QoS_Subscribed</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExt2_QoS_Subscribed</name>
<signature>void SetExt2_QoS_Subscribed(const Ext2_QoS_Subscribed&amp; element)</signature>
<elementName>Ext2_QoS_Subscribed</elementName>
<asnElementName>ext2-QoS-Subscribed</asnElementName>
<elementTypeName>Ext2_QoS_Subscribed</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExt2_QoS_Subscribed</name>
<signature>const Ext2_QoS_Subscribed&amp; GetExt2_QoS_Subscribed() const</signature>
<elementName>Ext2_QoS_Subscribed</elementName>
<asnElementName>ext2-QoS-Subscribed</asnElementName>
<elementTypeName>Ext2_QoS_Subscribed</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExt2_QoS_Subscribed</name>
<signature>bool OptionExt2_QoS_Subscribed() const</signature>
<elementName>Ext2_QoS_Subscribed</elementName>
<asnElementName>ext2-QoS-Subscribed</asnElementName>
<elementTypeName>Ext2_QoS_Subscribed</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- PDP-Context information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>PDP-Context ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    pdp-ContextId ContextId -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pdp-Type [16] IMPLICIT PDP-Type -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pdp-Address [17] IMPLICIT PDP-Address -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    qos-Subscribed [18] IMPLICIT QoS-Subscribed -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    vplmnAddressAllowed [19] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    apn [20] IMPLICIT APN -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [21] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ext-QoS-Subscribed [0] IMPLICIT Ext-QoS-Subscribed -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pdp-ChargingCharacteristics [1] IMPLICIT ChargingCharacteristics -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ext2-QoS-Subscribed [2] IMPLICIT Ext2-QoS-Subscribed -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

