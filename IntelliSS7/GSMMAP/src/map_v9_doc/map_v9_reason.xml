<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnEnumerated>

<className>Reason</className>
<asnTypeName>Reason</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetNoReasonGiven</name>
<signature>void SetNoReasonGiven()</signature>
<enumItemName>noReasonGiven</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsNoReasonGiven</name>
<signature>bool IsNoReasonGiven() const</signature>
<enumItemName>noReasonGiven</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetInvalidDestinationReference</name>
<signature>void SetInvalidDestinationReference()</signature>
<enumItemName>invalidDestinationReference</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsInvalidDestinationReference</name>
<signature>bool IsInvalidDestinationReference() const</signature>
<enumItemName>invalidDestinationReference</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetInvalidOriginatingReference</name>
<signature>void SetInvalidOriginatingReference()</signature>
<enumItemName>invalidOriginatingReference</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsInvalidOriginatingReference</name>
<signature>bool IsInvalidOriginatingReference() const</signature>
<enumItemName>invalidOriginatingReference</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetEncapsulatedAC_NotSupported</name>
<signature>void SetEncapsulatedAC_NotSupported()</signature>
<enumItemName>encapsulatedAC-NotSupported</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsEncapsulatedAC_NotSupported</name>
<signature>bool IsEncapsulatedAC_NotSupported() const</signature>
<enumItemName>encapsulatedAC-NotSupported</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTransportProtectionNotAdequate</name>
<signature>void SetTransportProtectionNotAdequate()</signature>
<enumItemName>transportProtectionNotAdequate</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTransportProtectionNotAdequate</name>
<signature>bool IsTransportProtectionNotAdequate() const</signature>
<enumItemName>transportProtectionNotAdequate</enumItemName>
</memberFunctionIs>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- Reason information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>Reason ::= ENUMERATED</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    noReasonGiven(0),</text>
<shift></shift>
</line>
<line>
<text>    invalidDestinationReference(1),</text>
<shift></shift>
</line>
<line>
<text>    invalidOriginatingReference(2),</text>
<shift></shift>
</line>
<line>
<text>    encapsulatedAC-NotSupported(3),</text>
<shift></shift>
</line>
<line>
<text>    transportProtectionNotAdequate(4)</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnEnumerated>

</asnType>

