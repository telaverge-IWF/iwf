<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>AnyTimeInterrogationArg</className>
<asnTypeName>AnyTimeInterrogationArg</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetSubscriberIdentity</name>
<signature>void SetSubscriberIdentity(SubscriberIdentity* element)</signature>
<elmentName>SubscriberIdentity</elmentName>
<asnElementName>subscriberIdentity</asnElementName>
<elementTypeName>SubscriberIdentity</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSubscriberIdentity</name>
<signature>void SetSubscriberIdentity(const SubscriberIdentity&amp; element)</signature>
<elementName>SubscriberIdentity</elementName>
<asnElementName>subscriberIdentity</asnElementName>
<elementTypeName>SubscriberIdentity</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSubscriberIdentity</name>
<signature>const SubscriberIdentity&amp; GetSubscriberIdentity() const</signature>
<elementName>SubscriberIdentity</elementName>
<asnElementName>subscriberIdentity</asnElementName>
<elementTypeName>SubscriberIdentity</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetRequestedInfo</name>
<signature>void SetRequestedInfo(RequestedInfo* element)</signature>
<elmentName>RequestedInfo</elmentName>
<asnElementName>requestedInfo</asnElementName>
<elementTypeName>RequestedInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRequestedInfo</name>
<signature>void SetRequestedInfo(const RequestedInfo&amp; element)</signature>
<elementName>RequestedInfo</elementName>
<asnElementName>requestedInfo</asnElementName>
<elementTypeName>RequestedInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRequestedInfo</name>
<signature>const RequestedInfo&amp; GetRequestedInfo() const</signature>
<elementName>RequestedInfo</elementName>
<asnElementName>requestedInfo</asnElementName>
<elementTypeName>RequestedInfo</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetGsmSCF_Address</name>
<signature>void SetGsmSCF_Address(ISDN_AddressString* element)</signature>
<elmentName>GsmSCF_Address</elmentName>
<asnElementName>gsmSCF-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGsmSCF_Address</name>
<signature>void SetGsmSCF_Address(const ISDN_AddressString&amp; element)</signature>
<elementName>GsmSCF_Address</elementName>
<asnElementName>gsmSCF-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGsmSCF_Address</name>
<signature>const ISDN_AddressString&amp; GetGsmSCF_Address() const</signature>
<elementName>GsmSCF_Address</elementName>
<asnElementName>gsmSCF-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- AnyTimeInterrogationArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>AnyTimeInterrogationArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    subscriberIdentity [0] IMPLICIT SubscriberIdentity -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    requestedInfo [1] IMPLICIT RequestedInfo -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gsmSCF-Address [3] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [2] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

