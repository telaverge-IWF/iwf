<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>CUG_Subscription</className>
<asnTypeName>CUG-Subscription</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCug_Index</name>
<signature>void SetCug_Index(CUG_Index* element)</signature>
<elmentName>Cug_Index</elmentName>
<asnElementName>cug-Index</asnElementName>
<elementTypeName>CUG_Index</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCug_Index</name>
<signature>void SetCug_Index(const CUG_Index&amp; element)</signature>
<elementName>Cug_Index</elementName>
<asnElementName>cug-Index</asnElementName>
<elementTypeName>CUG_Index</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCug_Index</name>
<signature>const CUG_Index&amp; GetCug_Index() const</signature>
<elementName>Cug_Index</elementName>
<asnElementName>cug-Index</asnElementName>
<elementTypeName>CUG_Index</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCug_Interlock</name>
<signature>void SetCug_Interlock(CUG_Interlock* element)</signature>
<elmentName>Cug_Interlock</elmentName>
<asnElementName>cug-Interlock</asnElementName>
<elementTypeName>CUG_Interlock</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCug_Interlock</name>
<signature>void SetCug_Interlock(const CUG_Interlock&amp; element)</signature>
<elementName>Cug_Interlock</elementName>
<asnElementName>cug-Interlock</asnElementName>
<elementTypeName>CUG_Interlock</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCug_Interlock</name>
<signature>const CUG_Interlock&amp; GetCug_Interlock() const</signature>
<elementName>Cug_Interlock</elementName>
<asnElementName>cug-Interlock</asnElementName>
<elementTypeName>CUG_Interlock</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetIntraCUG_Options</name>
<signature>void SetIntraCUG_Options(IntraCUG_Options* element)</signature>
<elmentName>IntraCUG_Options</elmentName>
<asnElementName>intraCUG-Options</asnElementName>
<elementTypeName>IntraCUG_Options</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIntraCUG_Options</name>
<signature>void SetIntraCUG_Options(const IntraCUG_Options&amp; element)</signature>
<elementName>IntraCUG_Options</elementName>
<asnElementName>intraCUG-Options</asnElementName>
<elementTypeName>IntraCUG_Options</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIntraCUG_Options</name>
<signature>const IntraCUG_Options&amp; GetIntraCUG_Options() const</signature>
<elementName>IntraCUG_Options</elementName>
<asnElementName>intraCUG-Options</asnElementName>
<elementTypeName>IntraCUG_Options</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetBasicServiceGroupList</name>
<signature>void SetBasicServiceGroupList(Ext_BasicServiceGroupList* element)</signature>
<elmentName>BasicServiceGroupList</elmentName>
<asnElementName>basicServiceGroupList</asnElementName>
<elementTypeName>Ext_BasicServiceGroupList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBasicServiceGroupList</name>
<signature>void SetBasicServiceGroupList(const Ext_BasicServiceGroupList&amp; element)</signature>
<elementName>BasicServiceGroupList</elementName>
<asnElementName>basicServiceGroupList</asnElementName>
<elementTypeName>Ext_BasicServiceGroupList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBasicServiceGroupList</name>
<signature>const Ext_BasicServiceGroupList&amp; GetBasicServiceGroupList() const</signature>
<elementName>BasicServiceGroupList</elementName>
<asnElementName>basicServiceGroupList</asnElementName>
<elementTypeName>Ext_BasicServiceGroupList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBasicServiceGroupList</name>
<signature>bool OptionBasicServiceGroupList() const</signature>
<elementName>BasicServiceGroupList</elementName>
<asnElementName>basicServiceGroupList</asnElementName>
<elementTypeName>Ext_BasicServiceGroupList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CUG-Subscription information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CUG-Subscription ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    cug-Index CUG-Index -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cug-Interlock CUG-Interlock -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    intraCUG-Options IntraCUG-Options -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    basicServiceGroupList Ext-BasicServiceGroupList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [0] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

