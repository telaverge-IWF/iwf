<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SecurityHeader</className>
<asnTypeName>SecurityHeader</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetSecurityParametersIndex</name>
<signature>void SetSecurityParametersIndex(SecurityParametersIndex* element)</signature>
<elmentName>SecurityParametersIndex</elmentName>
<asnElementName>securityParametersIndex</asnElementName>
<elementTypeName>SecurityParametersIndex</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSecurityParametersIndex</name>
<signature>void SetSecurityParametersIndex(const SecurityParametersIndex&amp; element)</signature>
<elementName>SecurityParametersIndex</elementName>
<asnElementName>securityParametersIndex</asnElementName>
<elementTypeName>SecurityParametersIndex</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSecurityParametersIndex</name>
<signature>const SecurityParametersIndex&amp; GetSecurityParametersIndex() const</signature>
<elementName>SecurityParametersIndex</elementName>
<asnElementName>securityParametersIndex</asnElementName>
<elementTypeName>SecurityParametersIndex</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetOriginalComponentIdentifier</name>
<signature>void SetOriginalComponentIdentifier(OriginalComponentIdentifier* element)</signature>
<elmentName>OriginalComponentIdentifier</elmentName>
<asnElementName>originalComponentIdentifier</asnElementName>
<elementTypeName>OriginalComponentIdentifier</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOriginalComponentIdentifier</name>
<signature>void SetOriginalComponentIdentifier(const OriginalComponentIdentifier&amp; element)</signature>
<elementName>OriginalComponentIdentifier</elementName>
<asnElementName>originalComponentIdentifier</asnElementName>
<elementTypeName>OriginalComponentIdentifier</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOriginalComponentIdentifier</name>
<signature>const OriginalComponentIdentifier&amp; GetOriginalComponentIdentifier() const</signature>
<elementName>OriginalComponentIdentifier</elementName>
<asnElementName>originalComponentIdentifier</asnElementName>
<elementTypeName>OriginalComponentIdentifier</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetInitialisationVector</name>
<signature>void SetInitialisationVector(InitialisationVector* element)</signature>
<elmentName>InitialisationVector</elmentName>
<asnElementName>initialisationVector</asnElementName>
<elementTypeName>InitialisationVector</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetInitialisationVector</name>
<signature>void SetInitialisationVector(const InitialisationVector&amp; element)</signature>
<elementName>InitialisationVector</elementName>
<asnElementName>initialisationVector</asnElementName>
<elementTypeName>InitialisationVector</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetInitialisationVector</name>
<signature>const InitialisationVector&amp; GetInitialisationVector() const</signature>
<elementName>InitialisationVector</elementName>
<asnElementName>initialisationVector</asnElementName>
<elementTypeName>InitialisationVector</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionInitialisationVector</name>
<signature>bool OptionInitialisationVector() const</signature>
<elementName>InitialisationVector</elementName>
<asnElementName>initialisationVector</asnElementName>
<elementTypeName>InitialisationVector</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SecurityHeader information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 4]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SecurityHeader ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    securityParametersIndex SecurityParametersIndex -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    originalComponentIdentifier OriginalComponentIdentifier -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    initialisationVector InitialisationVector -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

