<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>PrepareHO_Res</className>
<asnTypeName>PrepareHO-Res</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetHandoverNumber</name>
<signature>void SetHandoverNumber(ISDN_AddressString* element)</signature>
<elmentName>HandoverNumber</elmentName>
<asnElementName>handoverNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetHandoverNumber</name>
<signature>void SetHandoverNumber(const ISDN_AddressString&amp; element)</signature>
<elementName>HandoverNumber</elementName>
<asnElementName>handoverNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetHandoverNumber</name>
<signature>const ISDN_AddressString&amp; GetHandoverNumber() const</signature>
<elementName>HandoverNumber</elementName>
<asnElementName>handoverNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionHandoverNumber</name>
<signature>bool OptionHandoverNumber() const</signature>
<elementName>HandoverNumber</elementName>
<asnElementName>handoverNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRelocationNumberList</name>
<signature>void SetRelocationNumberList(RelocationNumberList* element)</signature>
<elmentName>RelocationNumberList</elmentName>
<asnElementName>relocationNumberList</asnElementName>
<elementTypeName>RelocationNumberList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRelocationNumberList</name>
<signature>void SetRelocationNumberList(const RelocationNumberList&amp; element)</signature>
<elementName>RelocationNumberList</elementName>
<asnElementName>relocationNumberList</asnElementName>
<elementTypeName>RelocationNumberList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRelocationNumberList</name>
<signature>const RelocationNumberList&amp; GetRelocationNumberList() const</signature>
<elementName>RelocationNumberList</elementName>
<asnElementName>relocationNumberList</asnElementName>
<elementTypeName>RelocationNumberList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRelocationNumberList</name>
<signature>bool OptionRelocationNumberList() const</signature>
<elementName>RelocationNumberList</elementName>
<asnElementName>relocationNumberList</asnElementName>
<elementTypeName>RelocationNumberList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAn_APDU</name>
<signature>void SetAn_APDU(AccessNetworkSignalInfo* element)</signature>
<elmentName>An_APDU</elmentName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAn_APDU</name>
<signature>void SetAn_APDU(const AccessNetworkSignalInfo&amp; element)</signature>
<elementName>An_APDU</elementName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAn_APDU</name>
<signature>const AccessNetworkSignalInfo&amp; GetAn_APDU() const</signature>
<elementName>An_APDU</elementName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAn_APDU</name>
<signature>bool OptionAn_APDU() const</signature>
<elementName>An_APDU</elementName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMulticallBearerInfo</name>
<signature>void SetMulticallBearerInfo(MulticallBearerInfo* element)</signature>
<elmentName>MulticallBearerInfo</elmentName>
<asnElementName>multicallBearerInfo</asnElementName>
<elementTypeName>MulticallBearerInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMulticallBearerInfo</name>
<signature>void SetMulticallBearerInfo(const MulticallBearerInfo&amp; element)</signature>
<elementName>MulticallBearerInfo</elementName>
<asnElementName>multicallBearerInfo</asnElementName>
<elementTypeName>MulticallBearerInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMulticallBearerInfo</name>
<signature>const MulticallBearerInfo&amp; GetMulticallBearerInfo() const</signature>
<elementName>MulticallBearerInfo</elementName>
<asnElementName>multicallBearerInfo</asnElementName>
<elementTypeName>MulticallBearerInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMulticallBearerInfo</name>
<signature>bool OptionMulticallBearerInfo() const</signature>
<elementName>MulticallBearerInfo</elementName>
<asnElementName>multicallBearerInfo</asnElementName>
<elementTypeName>MulticallBearerInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMultipleBearerNotSupported</name>
<signature>void SetMultipleBearerNotSupported(MultipleBearerNotSupported* element)</signature>
<elmentName>MultipleBearerNotSupported</elmentName>
<asnElementName>multipleBearerNotSupported</asnElementName>
<elementTypeName>MultipleBearerNotSupported</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMultipleBearerNotSupported</name>
<signature>void SetMultipleBearerNotSupported(const MultipleBearerNotSupported&amp; element)</signature>
<elementName>MultipleBearerNotSupported</elementName>
<asnElementName>multipleBearerNotSupported</asnElementName>
<elementTypeName>MultipleBearerNotSupported</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMultipleBearerNotSupported</name>
<signature>const MultipleBearerNotSupported&amp; GetMultipleBearerNotSupported() const</signature>
<elementName>MultipleBearerNotSupported</elementName>
<asnElementName>multipleBearerNotSupported</asnElementName>
<elementTypeName>MultipleBearerNotSupported</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMultipleBearerNotSupported</name>
<signature>bool OptionMultipleBearerNotSupported() const</signature>
<elementName>MultipleBearerNotSupported</elementName>
<asnElementName>multipleBearerNotSupported</asnElementName>
<elementTypeName>MultipleBearerNotSupported</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSelectedUMTS_Algorithms</name>
<signature>void SetSelectedUMTS_Algorithms(SelectedUMTS_Algorithms* element)</signature>
<elmentName>SelectedUMTS_Algorithms</elmentName>
<asnElementName>selectedUMTS-Algorithms</asnElementName>
<elementTypeName>SelectedUMTS_Algorithms</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSelectedUMTS_Algorithms</name>
<signature>void SetSelectedUMTS_Algorithms(const SelectedUMTS_Algorithms&amp; element)</signature>
<elementName>SelectedUMTS_Algorithms</elementName>
<asnElementName>selectedUMTS-Algorithms</asnElementName>
<elementTypeName>SelectedUMTS_Algorithms</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSelectedUMTS_Algorithms</name>
<signature>const SelectedUMTS_Algorithms&amp; GetSelectedUMTS_Algorithms() const</signature>
<elementName>SelectedUMTS_Algorithms</elementName>
<asnElementName>selectedUMTS-Algorithms</asnElementName>
<elementTypeName>SelectedUMTS_Algorithms</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSelectedUMTS_Algorithms</name>
<signature>bool OptionSelectedUMTS_Algorithms() const</signature>
<elementName>SelectedUMTS_Algorithms</elementName>
<asnElementName>selectedUMTS-Algorithms</asnElementName>
<elementTypeName>SelectedUMTS_Algorithms</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetChosenRadioResourceInformation</name>
<signature>void SetChosenRadioResourceInformation(ChosenRadioResourceInformation* element)</signature>
<elmentName>ChosenRadioResourceInformation</elmentName>
<asnElementName>chosenRadioResourceInformation</asnElementName>
<elementTypeName>ChosenRadioResourceInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChosenRadioResourceInformation</name>
<signature>void SetChosenRadioResourceInformation(const ChosenRadioResourceInformation&amp; element)</signature>
<elementName>ChosenRadioResourceInformation</elementName>
<asnElementName>chosenRadioResourceInformation</asnElementName>
<elementTypeName>ChosenRadioResourceInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChosenRadioResourceInformation</name>
<signature>const ChosenRadioResourceInformation&amp; GetChosenRadioResourceInformation() const</signature>
<elementName>ChosenRadioResourceInformation</elementName>
<asnElementName>chosenRadioResourceInformation</asnElementName>
<elementTypeName>ChosenRadioResourceInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionChosenRadioResourceInformation</name>
<signature>bool OptionChosenRadioResourceInformation() const</signature>
<elementName>ChosenRadioResourceInformation</elementName>
<asnElementName>chosenRadioResourceInformation</asnElementName>
<elementTypeName>ChosenRadioResourceInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIuSelectedCodec</name>
<signature>void SetIuSelectedCodec(Codec* element)</signature>
<elmentName>IuSelectedCodec</elmentName>
<asnElementName>iuSelectedCodec</asnElementName>
<elementTypeName>Codec</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIuSelectedCodec</name>
<signature>void SetIuSelectedCodec(const Codec&amp; element)</signature>
<elementName>IuSelectedCodec</elementName>
<asnElementName>iuSelectedCodec</asnElementName>
<elementTypeName>Codec</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIuSelectedCodec</name>
<signature>const Codec&amp; GetIuSelectedCodec() const</signature>
<elementName>IuSelectedCodec</elementName>
<asnElementName>iuSelectedCodec</asnElementName>
<elementTypeName>Codec</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIuSelectedCodec</name>
<signature>bool OptionIuSelectedCodec() const</signature>
<elementName>IuSelectedCodec</elementName>
<asnElementName>iuSelectedCodec</asnElementName>
<elementTypeName>Codec</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIuAvailableCodecsList</name>
<signature>void SetIuAvailableCodecsList(CodecList* element)</signature>
<elmentName>IuAvailableCodecsList</elmentName>
<asnElementName>iuAvailableCodecsList</asnElementName>
<elementTypeName>CodecList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIuAvailableCodecsList</name>
<signature>void SetIuAvailableCodecsList(const CodecList&amp; element)</signature>
<elementName>IuAvailableCodecsList</elementName>
<asnElementName>iuAvailableCodecsList</asnElementName>
<elementTypeName>CodecList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIuAvailableCodecsList</name>
<signature>const CodecList&amp; GetIuAvailableCodecsList() const</signature>
<elementName>IuAvailableCodecsList</elementName>
<asnElementName>iuAvailableCodecsList</asnElementName>
<elementTypeName>CodecList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIuAvailableCodecsList</name>
<signature>bool OptionIuAvailableCodecsList() const</signature>
<elementName>IuAvailableCodecsList</elementName>
<asnElementName>iuAvailableCodecsList</asnElementName>
<elementTypeName>CodecList</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- PrepareHO-Res information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>PrepareHO-Res ::= [3] IMPLICIT SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    handoverNumber [0] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    relocationNumberList [1] IMPLICIT RelocationNumberList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    an-APDU [2] IMPLICIT AccessNetworkSignalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    multicallBearerInfo [3] IMPLICIT MulticallBearerInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    multipleBearerNotSupported NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    selectedUMTS-Algorithms [5] IMPLICIT SelectedUMTS-Algorithms -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    chosenRadioResourceInformation [6] IMPLICIT ChosenRadioResourceInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [4] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    iuSelectedCodec [7] IMPLICIT Codec -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    iuAvailableCodecsList [8] IMPLICIT CodecList -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

