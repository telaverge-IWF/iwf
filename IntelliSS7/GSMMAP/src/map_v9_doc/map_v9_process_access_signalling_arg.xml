<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ProcessAccessSignalling_Arg</className>
<asnTypeName>ProcessAccessSignalling-Arg</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetAn_APDU</name>
<signature>void SetAn_APDU(AccessNetworkSignalInfo* element)</signature>
<elmentName>An_APDU</elmentName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAn_APDU</name>
<signature>void SetAn_APDU(const AccessNetworkSignalInfo&amp; element)</signature>
<elementName>An_APDU</elementName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAn_APDU</name>
<signature>const AccessNetworkSignalInfo&amp; GetAn_APDU() const</signature>
<elementName>An_APDU</elementName>
<asnElementName>an-APDU</asnElementName>
<elementTypeName>AccessNetworkSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetSelectedUMTS_Algorithms</name>
<signature>void SetSelectedUMTS_Algorithms(SelectedUMTS_Algorithms* element)</signature>
<elmentName>SelectedUMTS_Algorithms</elmentName>
<asnElementName>selectedUMTS-Algorithms</asnElementName>
<elementTypeName>SelectedUMTS_Algorithms</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSelectedUMTS_Algorithms</name>
<signature>void SetSelectedUMTS_Algorithms(const SelectedUMTS_Algorithms&amp; element)</signature>
<elementName>SelectedUMTS_Algorithms</elementName>
<asnElementName>selectedUMTS-Algorithms</asnElementName>
<elementTypeName>SelectedUMTS_Algorithms</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSelectedUMTS_Algorithms</name>
<signature>const SelectedUMTS_Algorithms&amp; GetSelectedUMTS_Algorithms() const</signature>
<elementName>SelectedUMTS_Algorithms</elementName>
<asnElementName>selectedUMTS-Algorithms</asnElementName>
<elementTypeName>SelectedUMTS_Algorithms</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSelectedUMTS_Algorithms</name>
<signature>bool OptionSelectedUMTS_Algorithms() const</signature>
<elementName>SelectedUMTS_Algorithms</elementName>
<asnElementName>selectedUMTS-Algorithms</asnElementName>
<elementTypeName>SelectedUMTS_Algorithms</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSelectedGSM_Algorithm</name>
<signature>void SetSelectedGSM_Algorithm(SelectedGSM_Algorithm* element)</signature>
<elmentName>SelectedGSM_Algorithm</elmentName>
<asnElementName>selectedGSM-Algorithm</asnElementName>
<elementTypeName>SelectedGSM_Algorithm</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSelectedGSM_Algorithm</name>
<signature>void SetSelectedGSM_Algorithm(const SelectedGSM_Algorithm&amp; element)</signature>
<elementName>SelectedGSM_Algorithm</elementName>
<asnElementName>selectedGSM-Algorithm</asnElementName>
<elementTypeName>SelectedGSM_Algorithm</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSelectedGSM_Algorithm</name>
<signature>const SelectedGSM_Algorithm&amp; GetSelectedGSM_Algorithm() const</signature>
<elementName>SelectedGSM_Algorithm</elementName>
<asnElementName>selectedGSM-Algorithm</asnElementName>
<elementTypeName>SelectedGSM_Algorithm</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSelectedGSM_Algorithm</name>
<signature>bool OptionSelectedGSM_Algorithm() const</signature>
<elementName>SelectedGSM_Algorithm</elementName>
<asnElementName>selectedGSM-Algorithm</asnElementName>
<elementTypeName>SelectedGSM_Algorithm</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetChosenRadioResourceInformation</name>
<signature>void SetChosenRadioResourceInformation(ChosenRadioResourceInformation* element)</signature>
<elmentName>ChosenRadioResourceInformation</elmentName>
<asnElementName>chosenRadioResourceInformation</asnElementName>
<elementTypeName>ChosenRadioResourceInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChosenRadioResourceInformation</name>
<signature>void SetChosenRadioResourceInformation(const ChosenRadioResourceInformation&amp; element)</signature>
<elementName>ChosenRadioResourceInformation</elementName>
<asnElementName>chosenRadioResourceInformation</asnElementName>
<elementTypeName>ChosenRadioResourceInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChosenRadioResourceInformation</name>
<signature>const ChosenRadioResourceInformation&amp; GetChosenRadioResourceInformation() const</signature>
<elementName>ChosenRadioResourceInformation</elementName>
<asnElementName>chosenRadioResourceInformation</asnElementName>
<elementTypeName>ChosenRadioResourceInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionChosenRadioResourceInformation</name>
<signature>bool OptionChosenRadioResourceInformation() const</signature>
<elementName>ChosenRadioResourceInformation</elementName>
<asnElementName>chosenRadioResourceInformation</asnElementName>
<elementTypeName>ChosenRadioResourceInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSelectedRab_Id</name>
<signature>void SetSelectedRab_Id(RAB_Id* element)</signature>
<elmentName>SelectedRab_Id</elmentName>
<asnElementName>selectedRab-Id</asnElementName>
<elementTypeName>RAB_Id</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSelectedRab_Id</name>
<signature>void SetSelectedRab_Id(const RAB_Id&amp; element)</signature>
<elementName>SelectedRab_Id</elementName>
<asnElementName>selectedRab-Id</asnElementName>
<elementTypeName>RAB_Id</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSelectedRab_Id</name>
<signature>const RAB_Id&amp; GetSelectedRab_Id() const</signature>
<elementName>SelectedRab_Id</elementName>
<asnElementName>selectedRab-Id</asnElementName>
<elementTypeName>RAB_Id</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSelectedRab_Id</name>
<signature>bool OptionSelectedRab_Id() const</signature>
<elementName>SelectedRab_Id</elementName>
<asnElementName>selectedRab-Id</asnElementName>
<elementTypeName>RAB_Id</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIUselectedCodec</name>
<signature>void SetIUselectedCodec(Codec* element)</signature>
<elmentName>IUselectedCodec</elmentName>
<asnElementName>iUselectedCodec</asnElementName>
<elementTypeName>Codec</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIUselectedCodec</name>
<signature>void SetIUselectedCodec(const Codec&amp; element)</signature>
<elementName>IUselectedCodec</elementName>
<asnElementName>iUselectedCodec</asnElementName>
<elementTypeName>Codec</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIUselectedCodec</name>
<signature>const Codec&amp; GetIUselectedCodec() const</signature>
<elementName>IUselectedCodec</elementName>
<asnElementName>iUselectedCodec</asnElementName>
<elementTypeName>Codec</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIUselectedCodec</name>
<signature>bool OptionIUselectedCodec() const</signature>
<elementName>IUselectedCodec</elementName>
<asnElementName>iUselectedCodec</asnElementName>
<elementTypeName>Codec</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIuAvailableCodecsList</name>
<signature>void SetIuAvailableCodecsList(CodecList* element)</signature>
<elmentName>IuAvailableCodecsList</elmentName>
<asnElementName>iuAvailableCodecsList</asnElementName>
<elementTypeName>CodecList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIuAvailableCodecsList</name>
<signature>void SetIuAvailableCodecsList(const CodecList&amp; element)</signature>
<elementName>IuAvailableCodecsList</elementName>
<asnElementName>iuAvailableCodecsList</asnElementName>
<elementTypeName>CodecList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIuAvailableCodecsList</name>
<signature>const CodecList&amp; GetIuAvailableCodecsList() const</signature>
<elementName>IuAvailableCodecsList</elementName>
<asnElementName>iuAvailableCodecsList</asnElementName>
<elementTypeName>CodecList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIuAvailableCodecsList</name>
<signature>bool OptionIuAvailableCodecsList() const</signature>
<elementName>IuAvailableCodecsList</elementName>
<asnElementName>iuAvailableCodecsList</asnElementName>
<elementTypeName>CodecList</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ProcessAccessSignalling-Arg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ProcessAccessSignalling-Arg ::= [3] IMPLICIT SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    an-APDU AccessNetworkSignalInfo -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    selectedUMTS-Algorithms [1] IMPLICIT SelectedUMTS-Algorithms -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    selectedGSM-Algorithm [2] IMPLICIT SelectedGSM-Algorithm -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    chosenRadioResourceInformation [3] IMPLICIT ChosenRadioResourceInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    selectedRab-Id [4] IMPLICIT RAB-Id -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [0] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    iUselectedCodec [5] IMPLICIT Codec -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    iuAvailableCodecsList [6] IMPLICIT CodecList -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

