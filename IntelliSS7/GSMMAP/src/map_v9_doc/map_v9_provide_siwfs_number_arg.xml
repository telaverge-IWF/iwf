<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ProvideSIWFSNumberArg</className>
<asnTypeName>ProvideSIWFSNumberArg</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetGsm_BearerCapability</name>
<signature>void SetGsm_BearerCapability(ExternalSignalInfo* element)</signature>
<elmentName>Gsm_BearerCapability</elmentName>
<asnElementName>gsm-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGsm_BearerCapability</name>
<signature>void SetGsm_BearerCapability(const ExternalSignalInfo&amp; element)</signature>
<elementName>Gsm_BearerCapability</elementName>
<asnElementName>gsm-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGsm_BearerCapability</name>
<signature>const ExternalSignalInfo&amp; GetGsm_BearerCapability() const</signature>
<elementName>Gsm_BearerCapability</elementName>
<asnElementName>gsm-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetIsdn_BearerCapability</name>
<signature>void SetIsdn_BearerCapability(ExternalSignalInfo* element)</signature>
<elmentName>Isdn_BearerCapability</elmentName>
<asnElementName>isdn-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIsdn_BearerCapability</name>
<signature>void SetIsdn_BearerCapability(const ExternalSignalInfo&amp; element)</signature>
<elementName>Isdn_BearerCapability</elementName>
<asnElementName>isdn-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIsdn_BearerCapability</name>
<signature>const ExternalSignalInfo&amp; GetIsdn_BearerCapability() const</signature>
<elementName>Isdn_BearerCapability</elementName>
<asnElementName>isdn-BearerCapability</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCall_Direction</name>
<signature>void SetCall_Direction(CallDirection* element)</signature>
<elmentName>Call_Direction</elmentName>
<asnElementName>call-Direction</asnElementName>
<elementTypeName>CallDirection</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCall_Direction</name>
<signature>void SetCall_Direction(const CallDirection&amp; element)</signature>
<elementName>Call_Direction</elementName>
<asnElementName>call-Direction</asnElementName>
<elementTypeName>CallDirection</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCall_Direction</name>
<signature>const CallDirection&amp; GetCall_Direction() const</signature>
<elementName>Call_Direction</elementName>
<asnElementName>call-Direction</asnElementName>
<elementTypeName>CallDirection</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetB_Subscriber_Address</name>
<signature>void SetB_Subscriber_Address(ISDN_AddressString* element)</signature>
<elmentName>B_Subscriber_Address</elmentName>
<asnElementName>b-Subscriber-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetB_Subscriber_Address</name>
<signature>void SetB_Subscriber_Address(const ISDN_AddressString&amp; element)</signature>
<elementName>B_Subscriber_Address</elementName>
<asnElementName>b-Subscriber-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetB_Subscriber_Address</name>
<signature>const ISDN_AddressString&amp; GetB_Subscriber_Address() const</signature>
<elementName>B_Subscriber_Address</elementName>
<asnElementName>b-Subscriber-Address</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetChosenChannel</name>
<signature>void SetChosenChannel(ExternalSignalInfo* element)</signature>
<elmentName>ChosenChannel</elmentName>
<asnElementName>chosenChannel</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChosenChannel</name>
<signature>void SetChosenChannel(const ExternalSignalInfo&amp; element)</signature>
<elementName>ChosenChannel</elementName>
<asnElementName>chosenChannel</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChosenChannel</name>
<signature>const ExternalSignalInfo&amp; GetChosenChannel() const</signature>
<elementName>ChosenChannel</elementName>
<asnElementName>chosenChannel</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetLowerLayerCompatibility</name>
<signature>void SetLowerLayerCompatibility(ExternalSignalInfo* element)</signature>
<elmentName>LowerLayerCompatibility</elmentName>
<asnElementName>lowerLayerCompatibility</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLowerLayerCompatibility</name>
<signature>void SetLowerLayerCompatibility(const ExternalSignalInfo&amp; element)</signature>
<elementName>LowerLayerCompatibility</elementName>
<asnElementName>lowerLayerCompatibility</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLowerLayerCompatibility</name>
<signature>const ExternalSignalInfo&amp; GetLowerLayerCompatibility() const</signature>
<elementName>LowerLayerCompatibility</elementName>
<asnElementName>lowerLayerCompatibility</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLowerLayerCompatibility</name>
<signature>bool OptionLowerLayerCompatibility() const</signature>
<elementName>LowerLayerCompatibility</elementName>
<asnElementName>lowerLayerCompatibility</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetHighLayerCompatibility</name>
<signature>void SetHighLayerCompatibility(ExternalSignalInfo* element)</signature>
<elmentName>HighLayerCompatibility</elmentName>
<asnElementName>highLayerCompatibility</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetHighLayerCompatibility</name>
<signature>void SetHighLayerCompatibility(const ExternalSignalInfo&amp; element)</signature>
<elementName>HighLayerCompatibility</elementName>
<asnElementName>highLayerCompatibility</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetHighLayerCompatibility</name>
<signature>const ExternalSignalInfo&amp; GetHighLayerCompatibility() const</signature>
<elementName>HighLayerCompatibility</elementName>
<asnElementName>highLayerCompatibility</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionHighLayerCompatibility</name>
<signature>bool OptionHighLayerCompatibility() const</signature>
<elementName>HighLayerCompatibility</elementName>
<asnElementName>highLayerCompatibility</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ProvideSIWFSNumberArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ProvideSIWFSNumberArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    gsm-BearerCapability [0] IMPLICIT ExternalSignalInfo -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    isdn-BearerCapability [1] IMPLICIT ExternalSignalInfo -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    call-Direction [2] IMPLICIT CallDirection -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    b-Subscriber-Address [3] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    chosenChannel [4] IMPLICIT ExternalSignalInfo -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lowerLayerCompatibility [5] IMPLICIT ExternalSignalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    highLayerCompatibility [6] IMPLICIT ExternalSignalInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [7] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

