<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>RemoteUserFreeArg</className>
<asnTypeName>RemoteUserFreeArg</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCallInfo</name>
<signature>void SetCallInfo(ExternalSignalInfo* element)</signature>
<elmentName>CallInfo</elmentName>
<asnElementName>callInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallInfo</name>
<signature>void SetCallInfo(const ExternalSignalInfo&amp; element)</signature>
<elementName>CallInfo</elementName>
<asnElementName>callInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallInfo</name>
<signature>const ExternalSignalInfo&amp; GetCallInfo() const</signature>
<elementName>CallInfo</elementName>
<asnElementName>callInfo</asnElementName>
<elementTypeName>ExternalSignalInfo</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCcbs_Feature</name>
<signature>void SetCcbs_Feature(CCBS_Feature* element)</signature>
<elmentName>Ccbs_Feature</elmentName>
<asnElementName>ccbs-Feature</asnElementName>
<elementTypeName>CCBS_Feature</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCcbs_Feature</name>
<signature>void SetCcbs_Feature(const CCBS_Feature&amp; element)</signature>
<elementName>Ccbs_Feature</elementName>
<asnElementName>ccbs-Feature</asnElementName>
<elementTypeName>CCBS_Feature</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCcbs_Feature</name>
<signature>const CCBS_Feature&amp; GetCcbs_Feature() const</signature>
<elementName>Ccbs_Feature</elementName>
<asnElementName>ccbs-Feature</asnElementName>
<elementTypeName>CCBS_Feature</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetTranslatedB_Number</name>
<signature>void SetTranslatedB_Number(ISDN_AddressString* element)</signature>
<elmentName>TranslatedB_Number</elmentName>
<asnElementName>translatedB-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTranslatedB_Number</name>
<signature>void SetTranslatedB_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>TranslatedB_Number</elementName>
<asnElementName>translatedB-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTranslatedB_Number</name>
<signature>const ISDN_AddressString&amp; GetTranslatedB_Number() const</signature>
<elementName>TranslatedB_Number</elementName>
<asnElementName>translatedB-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetReplaceB_Number</name>
<signature>void SetReplaceB_Number(ReplaceB_Number* element)</signature>
<elmentName>ReplaceB_Number</elmentName>
<asnElementName>replaceB-Number</asnElementName>
<elementTypeName>ReplaceB_Number</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetReplaceB_Number</name>
<signature>void SetReplaceB_Number(const ReplaceB_Number&amp; element)</signature>
<elementName>ReplaceB_Number</elementName>
<asnElementName>replaceB-Number</asnElementName>
<elementTypeName>ReplaceB_Number</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetReplaceB_Number</name>
<signature>const ReplaceB_Number&amp; GetReplaceB_Number() const</signature>
<elementName>ReplaceB_Number</elementName>
<asnElementName>replaceB-Number</asnElementName>
<elementTypeName>ReplaceB_Number</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionReplaceB_Number</name>
<signature>bool OptionReplaceB_Number() const</signature>
<elementName>ReplaceB_Number</elementName>
<asnElementName>replaceB-Number</asnElementName>
<elementTypeName>ReplaceB_Number</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAlertingPattern</name>
<signature>void SetAlertingPattern(AlertingPattern* element)</signature>
<elmentName>AlertingPattern</elmentName>
<asnElementName>alertingPattern</asnElementName>
<elementTypeName>AlertingPattern</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAlertingPattern</name>
<signature>void SetAlertingPattern(const AlertingPattern&amp; element)</signature>
<elementName>AlertingPattern</elementName>
<asnElementName>alertingPattern</asnElementName>
<elementTypeName>AlertingPattern</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAlertingPattern</name>
<signature>const AlertingPattern&amp; GetAlertingPattern() const</signature>
<elementName>AlertingPattern</elementName>
<asnElementName>alertingPattern</asnElementName>
<elementTypeName>AlertingPattern</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAlertingPattern</name>
<signature>bool OptionAlertingPattern() const</signature>
<elementName>AlertingPattern</elementName>
<asnElementName>alertingPattern</asnElementName>
<elementTypeName>AlertingPattern</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- RemoteUserFreeArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>RemoteUserFreeArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    imsi [0] IMPLICIT IMSI -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callInfo [1] IMPLICIT ExternalSignalInfo -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ccbs-Feature [2] IMPLICIT CCBS-Feature -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    translatedB-Number [3] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    replaceB-Number [4] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    alertingPattern [5] IMPLICIT AlertingPattern -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [6] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

