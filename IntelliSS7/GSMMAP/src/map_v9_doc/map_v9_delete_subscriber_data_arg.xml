<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>DeleteSubscriberDataArg</className>
<asnTypeName>DeleteSubscriberDataArg</asnTypeName>
<moduleName>MAP_V9</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetImsi</name>
<signature>void SetImsi(IMSI* element)</signature>
<elmentName>Imsi</elmentName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImsi</name>
<signature>void SetImsi(const IMSI&amp; element)</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImsi</name>
<signature>const IMSI&amp; GetImsi() const</signature>
<elementName>Imsi</elementName>
<asnElementName>imsi</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetBasicServiceList</name>
<signature>void SetBasicServiceList(BasicServiceList* element)</signature>
<elmentName>BasicServiceList</elmentName>
<asnElementName>basicServiceList</asnElementName>
<elementTypeName>BasicServiceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBasicServiceList</name>
<signature>void SetBasicServiceList(const BasicServiceList&amp; element)</signature>
<elementName>BasicServiceList</elementName>
<asnElementName>basicServiceList</asnElementName>
<elementTypeName>BasicServiceList</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBasicServiceList</name>
<signature>const BasicServiceList&amp; GetBasicServiceList() const</signature>
<elementName>BasicServiceList</elementName>
<asnElementName>basicServiceList</asnElementName>
<elementTypeName>BasicServiceList</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBasicServiceList</name>
<signature>bool OptionBasicServiceList() const</signature>
<elementName>BasicServiceList</elementName>
<asnElementName>basicServiceList</asnElementName>
<elementTypeName>BasicServiceList</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSs_List</name>
<signature>void SetSs_List(SS_List* element)</signature>
<elmentName>Ss_List</elmentName>
<asnElementName>ss-List</asnElementName>
<elementTypeName>SS_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSs_List</name>
<signature>void SetSs_List(const SS_List&amp; element)</signature>
<elementName>Ss_List</elementName>
<asnElementName>ss-List</asnElementName>
<elementTypeName>SS_List</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSs_List</name>
<signature>const SS_List&amp; GetSs_List() const</signature>
<elementName>Ss_List</elementName>
<asnElementName>ss-List</asnElementName>
<elementTypeName>SS_List</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSs_List</name>
<signature>bool OptionSs_List() const</signature>
<elementName>Ss_List</elementName>
<asnElementName>ss-List</asnElementName>
<elementTypeName>SS_List</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRoamingRestrictionDueToUnsupportedFeature</name>
<signature>void SetRoamingRestrictionDueToUnsupportedFeature(RoamingRestrictionDueToUnsupportedFeature* element)</signature>
<elmentName>RoamingRestrictionDueToUnsupportedFeature</elmentName>
<asnElementName>roamingRestrictionDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictionDueToUnsupportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRoamingRestrictionDueToUnsupportedFeature</name>
<signature>void SetRoamingRestrictionDueToUnsupportedFeature(const RoamingRestrictionDueToUnsupportedFeature&amp; element)</signature>
<elementName>RoamingRestrictionDueToUnsupportedFeature</elementName>
<asnElementName>roamingRestrictionDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictionDueToUnsupportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRoamingRestrictionDueToUnsupportedFeature</name>
<signature>const RoamingRestrictionDueToUnsupportedFeature&amp; GetRoamingRestrictionDueToUnsupportedFeature() const</signature>
<elementName>RoamingRestrictionDueToUnsupportedFeature</elementName>
<asnElementName>roamingRestrictionDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictionDueToUnsupportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRoamingRestrictionDueToUnsupportedFeature</name>
<signature>bool OptionRoamingRestrictionDueToUnsupportedFeature() const</signature>
<elementName>RoamingRestrictionDueToUnsupportedFeature</elementName>
<asnElementName>roamingRestrictionDueToUnsupportedFeature</asnElementName>
<elementTypeName>RoamingRestrictionDueToUnsupportedFeature</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRegionalSubscriptionIdentifier</name>
<signature>void SetRegionalSubscriptionIdentifier(ZoneCode* element)</signature>
<elmentName>RegionalSubscriptionIdentifier</elmentName>
<asnElementName>regionalSubscriptionIdentifier</asnElementName>
<elementTypeName>ZoneCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRegionalSubscriptionIdentifier</name>
<signature>void SetRegionalSubscriptionIdentifier(const ZoneCode&amp; element)</signature>
<elementName>RegionalSubscriptionIdentifier</elementName>
<asnElementName>regionalSubscriptionIdentifier</asnElementName>
<elementTypeName>ZoneCode</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRegionalSubscriptionIdentifier</name>
<signature>const ZoneCode&amp; GetRegionalSubscriptionIdentifier() const</signature>
<elementName>RegionalSubscriptionIdentifier</elementName>
<asnElementName>regionalSubscriptionIdentifier</asnElementName>
<elementTypeName>ZoneCode</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRegionalSubscriptionIdentifier</name>
<signature>bool OptionRegionalSubscriptionIdentifier() const</signature>
<elementName>RegionalSubscriptionIdentifier</elementName>
<asnElementName>regionalSubscriptionIdentifier</asnElementName>
<elementTypeName>ZoneCode</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetVbsGroupIndication</name>
<signature>void SetVbsGroupIndication(VbsGroupIndication* element)</signature>
<elmentName>VbsGroupIndication</elmentName>
<asnElementName>vbsGroupIndication</asnElementName>
<elementTypeName>VbsGroupIndication</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVbsGroupIndication</name>
<signature>void SetVbsGroupIndication(const VbsGroupIndication&amp; element)</signature>
<elementName>VbsGroupIndication</elementName>
<asnElementName>vbsGroupIndication</asnElementName>
<elementTypeName>VbsGroupIndication</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVbsGroupIndication</name>
<signature>const VbsGroupIndication&amp; GetVbsGroupIndication() const</signature>
<elementName>VbsGroupIndication</elementName>
<asnElementName>vbsGroupIndication</asnElementName>
<elementTypeName>VbsGroupIndication</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVbsGroupIndication</name>
<signature>bool OptionVbsGroupIndication() const</signature>
<elementName>VbsGroupIndication</elementName>
<asnElementName>vbsGroupIndication</asnElementName>
<elementTypeName>VbsGroupIndication</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetVgcsGroupIndication</name>
<signature>void SetVgcsGroupIndication(VgcsGroupIndication* element)</signature>
<elmentName>VgcsGroupIndication</elmentName>
<asnElementName>vgcsGroupIndication</asnElementName>
<elementTypeName>VgcsGroupIndication</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVgcsGroupIndication</name>
<signature>void SetVgcsGroupIndication(const VgcsGroupIndication&amp; element)</signature>
<elementName>VgcsGroupIndication</elementName>
<asnElementName>vgcsGroupIndication</asnElementName>
<elementTypeName>VgcsGroupIndication</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVgcsGroupIndication</name>
<signature>const VgcsGroupIndication&amp; GetVgcsGroupIndication() const</signature>
<elementName>VgcsGroupIndication</elementName>
<asnElementName>vgcsGroupIndication</asnElementName>
<elementTypeName>VgcsGroupIndication</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVgcsGroupIndication</name>
<signature>bool OptionVgcsGroupIndication() const</signature>
<elementName>VgcsGroupIndication</elementName>
<asnElementName>vgcsGroupIndication</asnElementName>
<elementTypeName>VgcsGroupIndication</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCamelSubscriptionInfoWithdraw</name>
<signature>void SetCamelSubscriptionInfoWithdraw(CamelSubscriptionInfoWithdraw* element)</signature>
<elmentName>CamelSubscriptionInfoWithdraw</elmentName>
<asnElementName>camelSubscriptionInfoWithdraw</asnElementName>
<elementTypeName>CamelSubscriptionInfoWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCamelSubscriptionInfoWithdraw</name>
<signature>void SetCamelSubscriptionInfoWithdraw(const CamelSubscriptionInfoWithdraw&amp; element)</signature>
<elementName>CamelSubscriptionInfoWithdraw</elementName>
<asnElementName>camelSubscriptionInfoWithdraw</asnElementName>
<elementTypeName>CamelSubscriptionInfoWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCamelSubscriptionInfoWithdraw</name>
<signature>const CamelSubscriptionInfoWithdraw&amp; GetCamelSubscriptionInfoWithdraw() const</signature>
<elementName>CamelSubscriptionInfoWithdraw</elementName>
<asnElementName>camelSubscriptionInfoWithdraw</asnElementName>
<elementTypeName>CamelSubscriptionInfoWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCamelSubscriptionInfoWithdraw</name>
<signature>bool OptionCamelSubscriptionInfoWithdraw() const</signature>
<elementName>CamelSubscriptionInfoWithdraw</elementName>
<asnElementName>camelSubscriptionInfoWithdraw</asnElementName>
<elementTypeName>CamelSubscriptionInfoWithdraw</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(ExtensionContainer* element)</signature>
<elmentName>ExtensionContainer</elmentName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensionContainer</name>
<signature>void SetExtensionContainer(const ExtensionContainer&amp; element)</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensionContainer</name>
<signature>const ExtensionContainer&amp; GetExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensionContainer</name>
<signature>bool OptionExtensionContainer() const</signature>
<elementName>ExtensionContainer</elementName>
<asnElementName>extensionContainer</asnElementName>
<elementTypeName>ExtensionContainer</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGprsSubscriptionDataWithdraw</name>
<signature>void SetGprsSubscriptionDataWithdraw(GPRSSubscriptionDataWithdraw* element)</signature>
<elmentName>GprsSubscriptionDataWithdraw</elmentName>
<asnElementName>gprsSubscriptionDataWithdraw</asnElementName>
<elementTypeName>GPRSSubscriptionDataWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGprsSubscriptionDataWithdraw</name>
<signature>void SetGprsSubscriptionDataWithdraw(const GPRSSubscriptionDataWithdraw&amp; element)</signature>
<elementName>GprsSubscriptionDataWithdraw</elementName>
<asnElementName>gprsSubscriptionDataWithdraw</asnElementName>
<elementTypeName>GPRSSubscriptionDataWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGprsSubscriptionDataWithdraw</name>
<signature>const GPRSSubscriptionDataWithdraw&amp; GetGprsSubscriptionDataWithdraw() const</signature>
<elementName>GprsSubscriptionDataWithdraw</elementName>
<asnElementName>gprsSubscriptionDataWithdraw</asnElementName>
<elementTypeName>GPRSSubscriptionDataWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGprsSubscriptionDataWithdraw</name>
<signature>bool OptionGprsSubscriptionDataWithdraw() const</signature>
<elementName>GprsSubscriptionDataWithdraw</elementName>
<asnElementName>gprsSubscriptionDataWithdraw</asnElementName>
<elementTypeName>GPRSSubscriptionDataWithdraw</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRoamingRestrictedInSgsnDueToUnsuppportedFeature</name>
<signature>void SetRoamingRestrictedInSgsnDueToUnsuppportedFeature(RoamingRestrictedInSgsnDueToUnsuppportedFeature* element)</signature>
<elmentName>RoamingRestrictedInSgsnDueToUnsuppportedFeature</elmentName>
<asnElementName>roamingRestrictedInSgsnDueToUnsuppportedFeature</asnElementName>
<elementTypeName>RoamingRestrictedInSgsnDueToUnsuppportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRoamingRestrictedInSgsnDueToUnsuppportedFeature</name>
<signature>void SetRoamingRestrictedInSgsnDueToUnsuppportedFeature(const RoamingRestrictedInSgsnDueToUnsuppportedFeature&amp; element)</signature>
<elementName>RoamingRestrictedInSgsnDueToUnsuppportedFeature</elementName>
<asnElementName>roamingRestrictedInSgsnDueToUnsuppportedFeature</asnElementName>
<elementTypeName>RoamingRestrictedInSgsnDueToUnsuppportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRoamingRestrictedInSgsnDueToUnsuppportedFeature</name>
<signature>const RoamingRestrictedInSgsnDueToUnsuppportedFeature&amp; GetRoamingRestrictedInSgsnDueToUnsuppportedFeature() const</signature>
<elementName>RoamingRestrictedInSgsnDueToUnsuppportedFeature</elementName>
<asnElementName>roamingRestrictedInSgsnDueToUnsuppportedFeature</asnElementName>
<elementTypeName>RoamingRestrictedInSgsnDueToUnsuppportedFeature</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRoamingRestrictedInSgsnDueToUnsuppportedFeature</name>
<signature>bool OptionRoamingRestrictedInSgsnDueToUnsuppportedFeature() const</signature>
<elementName>RoamingRestrictedInSgsnDueToUnsuppportedFeature</elementName>
<asnElementName>roamingRestrictedInSgsnDueToUnsuppportedFeature</asnElementName>
<elementTypeName>RoamingRestrictedInSgsnDueToUnsuppportedFeature</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLsaInformationWithdraw</name>
<signature>void SetLsaInformationWithdraw(LSAInformationWithdraw* element)</signature>
<elmentName>LsaInformationWithdraw</elmentName>
<asnElementName>lsaInformationWithdraw</asnElementName>
<elementTypeName>LSAInformationWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLsaInformationWithdraw</name>
<signature>void SetLsaInformationWithdraw(const LSAInformationWithdraw&amp; element)</signature>
<elementName>LsaInformationWithdraw</elementName>
<asnElementName>lsaInformationWithdraw</asnElementName>
<elementTypeName>LSAInformationWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLsaInformationWithdraw</name>
<signature>const LSAInformationWithdraw&amp; GetLsaInformationWithdraw() const</signature>
<elementName>LsaInformationWithdraw</elementName>
<asnElementName>lsaInformationWithdraw</asnElementName>
<elementTypeName>LSAInformationWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLsaInformationWithdraw</name>
<signature>bool OptionLsaInformationWithdraw() const</signature>
<elementName>LsaInformationWithdraw</elementName>
<asnElementName>lsaInformationWithdraw</asnElementName>
<elementTypeName>LSAInformationWithdraw</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetGmlc_ListWithdraw</name>
<signature>void SetGmlc_ListWithdraw(Gmlc_ListWithdraw* element)</signature>
<elmentName>Gmlc_ListWithdraw</elmentName>
<asnElementName>gmlc-ListWithdraw</asnElementName>
<elementTypeName>Gmlc_ListWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGmlc_ListWithdraw</name>
<signature>void SetGmlc_ListWithdraw(const Gmlc_ListWithdraw&amp; element)</signature>
<elementName>Gmlc_ListWithdraw</elementName>
<asnElementName>gmlc-ListWithdraw</asnElementName>
<elementTypeName>Gmlc_ListWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGmlc_ListWithdraw</name>
<signature>const Gmlc_ListWithdraw&amp; GetGmlc_ListWithdraw() const</signature>
<elementName>Gmlc_ListWithdraw</elementName>
<asnElementName>gmlc-ListWithdraw</asnElementName>
<elementTypeName>Gmlc_ListWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGmlc_ListWithdraw</name>
<signature>bool OptionGmlc_ListWithdraw() const</signature>
<elementName>Gmlc_ListWithdraw</elementName>
<asnElementName>gmlc-ListWithdraw</asnElementName>
<elementTypeName>Gmlc_ListWithdraw</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIstInformationWithdraw</name>
<signature>void SetIstInformationWithdraw(IstInformationWithdraw* element)</signature>
<elmentName>IstInformationWithdraw</elmentName>
<asnElementName>istInformationWithdraw</asnElementName>
<elementTypeName>IstInformationWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIstInformationWithdraw</name>
<signature>void SetIstInformationWithdraw(const IstInformationWithdraw&amp; element)</signature>
<elementName>IstInformationWithdraw</elementName>
<asnElementName>istInformationWithdraw</asnElementName>
<elementTypeName>IstInformationWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIstInformationWithdraw</name>
<signature>const IstInformationWithdraw&amp; GetIstInformationWithdraw() const</signature>
<elementName>IstInformationWithdraw</elementName>
<asnElementName>istInformationWithdraw</asnElementName>
<elementTypeName>IstInformationWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIstInformationWithdraw</name>
<signature>bool OptionIstInformationWithdraw() const</signature>
<elementName>IstInformationWithdraw</elementName>
<asnElementName>istInformationWithdraw</asnElementName>
<elementTypeName>IstInformationWithdraw</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSpecificCSI_Withdraw</name>
<signature>void SetSpecificCSI_Withdraw(SpecificCSI_Withdraw* element)</signature>
<elmentName>SpecificCSI_Withdraw</elmentName>
<asnElementName>specificCSI-Withdraw</asnElementName>
<elementTypeName>SpecificCSI_Withdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSpecificCSI_Withdraw</name>
<signature>void SetSpecificCSI_Withdraw(const SpecificCSI_Withdraw&amp; element)</signature>
<elementName>SpecificCSI_Withdraw</elementName>
<asnElementName>specificCSI-Withdraw</asnElementName>
<elementTypeName>SpecificCSI_Withdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSpecificCSI_Withdraw</name>
<signature>const SpecificCSI_Withdraw&amp; GetSpecificCSI_Withdraw() const</signature>
<elementName>SpecificCSI_Withdraw</elementName>
<asnElementName>specificCSI-Withdraw</asnElementName>
<elementTypeName>SpecificCSI_Withdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSpecificCSI_Withdraw</name>
<signature>bool OptionSpecificCSI_Withdraw() const</signature>
<elementName>SpecificCSI_Withdraw</elementName>
<asnElementName>specificCSI-Withdraw</asnElementName>
<elementTypeName>SpecificCSI_Withdraw</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetChargingCharacteristicsWithdraw</name>
<signature>void SetChargingCharacteristicsWithdraw(ChargingCharacteristicsWithdraw* element)</signature>
<elmentName>ChargingCharacteristicsWithdraw</elmentName>
<asnElementName>chargingCharacteristicsWithdraw</asnElementName>
<elementTypeName>ChargingCharacteristicsWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChargingCharacteristicsWithdraw</name>
<signature>void SetChargingCharacteristicsWithdraw(const ChargingCharacteristicsWithdraw&amp; element)</signature>
<elementName>ChargingCharacteristicsWithdraw</elementName>
<asnElementName>chargingCharacteristicsWithdraw</asnElementName>
<elementTypeName>ChargingCharacteristicsWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChargingCharacteristicsWithdraw</name>
<signature>const ChargingCharacteristicsWithdraw&amp; GetChargingCharacteristicsWithdraw() const</signature>
<elementName>ChargingCharacteristicsWithdraw</elementName>
<asnElementName>chargingCharacteristicsWithdraw</asnElementName>
<elementTypeName>ChargingCharacteristicsWithdraw</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionChargingCharacteristicsWithdraw</name>
<signature>bool OptionChargingCharacteristicsWithdraw() const</signature>
<elementName>ChargingCharacteristicsWithdraw</elementName>
<asnElementName>chargingCharacteristicsWithdraw</asnElementName>
<elementTypeName>ChargingCharacteristicsWithdraw</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- DeleteSubscriberDataArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>DeleteSubscriberDataArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    imsi [0] IMPLICIT IMSI -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    basicServiceList [1] IMPLICIT BasicServiceList -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-List [2] IMPLICIT SS-List -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    roamingRestrictionDueToUnsupportedFeature [4] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    regionalSubscriptionIdentifier [5] IMPLICIT ZoneCode -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    vbsGroupIndication [7] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    vgcsGroupIndication [8] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    camelSubscriptionInfoWithdraw [9] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensionContainer [6] IMPLICIT ExtensionContainer -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gprsSubscriptionDataWithdraw [10] IMPLICIT GPRSSubscriptionDataWithdraw -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    roamingRestrictedInSgsnDueToUnsuppportedFeature [11] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lsaInformationWithdraw [12] IMPLICIT LSAInformationWithdraw -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gmlc-ListWithdraw [13] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    istInformationWithdraw [14] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    specificCSI-Withdraw [15] IMPLICIT SpecificCSI-Withdraw -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    chargingCharacteristicsWithdraw [16] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

