//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#include <map_v3_t_bcsm_camel_tdp_data_list.h>

#include <AsnDescSequenceOf.h>
#include <AsnDescSequence.h>


using namespace its;
using namespace map_v3;




////////// Begin Nested Class //////////


// Type T_BcsmCamelTDPData is a reference => no code generated.

////////// End Nested Class //////////

AsnDescObject* T_BcsmCamelTDPDataList::GetStaticDescription()
{
    static volatile bool initialized = false;
    static AsnDescObject* result = NULL;
    static AsnDescSequenceOf staticDesc;

    if (initialized)
    {
        return result;
    }

    Asn::Lock();

    if (initialized)
    {
        Asn::Unlock();
        return result;
    }
    else
    {
        if (CheckLicense(ITS_LIC_CAP_GSMMAP) != ITS_TRUE)
        {
            Asn::Unlock();
            exit(0);
        }

        staticDesc.SetCloneForFactory(new T_BcsmCamelTDPDataList(&staticDesc));
        staticDesc.TagAddLevel(new Tag(Tag::ASN_CLASS_UNIVERSAL, Tag::ASN_CONSTRUCTED, 16));
        staticDesc._clauseSize = true;
        staticDesc._minSize = 1;
        staticDesc._maxSize = 10;
        staticDesc._element = GetT_BcsmCamelTDPDataStaticDescription();
        staticDesc.SetTypeName("T-BcsmCamelTDPDataList");
        result = &staticDesc;
        initialized = true;
        Asn::Unlock();
        return result;
    }
}

AsnDescObject* T_BcsmCamelTDPDataList::GetT_BcsmCamelTDPDataStaticDescription()
{
    static volatile bool initialized = false;
    static AsnDescObject* result = NULL;
    static AsnDescSequence staticDesc(5);

    if (initialized)
    {
        return result;
    }

    Asn::Lock();

    if (initialized)
    {
        Asn::Unlock();
        return result;
    }
    else
    {
        staticDesc.SetCloneForFactory(new T_BcsmCamelTDPData(&staticDesc));
        staticDesc.TagAddLevel(new Tag(Tag::ASN_CLASS_UNIVERSAL, Tag::ASN_CONSTRUCTED, 16));
        staticDesc._clauseExtensible = true;
        staticDesc._elementVect[0] = T_BcsmCamelTDPData::GetT_BcsmTriggerDetectionPointStaticDescription();
        staticDesc._elementVect[1] = T_BcsmCamelTDPData::GetServiceKeyStaticDescription();
        staticDesc._elementVect[2] = T_BcsmCamelTDPData::GetGsmSCF_AddressStaticDescription();
        staticDesc._elementVect[3] = T_BcsmCamelTDPData::GetDefaultCallHandlingStaticDescription();
        staticDesc._elementVect[4] = T_BcsmCamelTDPData::GetExtensionContainerStaticDescription();
        result = &staticDesc;
        initialized = true;
        Asn::Unlock();
        return result;
    }
}





