############################################################################
#                                                                          #
#     Copyright 1997 IntelliNet Technologies, Inc. All Rights Reserved.    #
#             Manufactured in the United States of America.                #
#       1990 W. New Haven Ste. 312, Melbourne, Florida, 32904 U.S.A.       #
#                                                                          #
#   This product and related documentation is protected by copyright and   #
#   distributed under licenses restricting its use, copying, distribution  #
#   and decompilation.  No part of this product or related documentation   #
#   may be reproduced in any form by any means without prior written       #
#   authorization of IntelliNet Technologies and its licensors, if any.    #
#                                                                          #
#   RESTRICTED RIGHTS LEGEND:  Use, duplication, or disclosure by the      #
#   government is subject to restrictions as set forth in subparagraph     #
#   (c)(1)(ii) of the Rights in Technical Data and Computer Software       #
#   clause at DFARS 252.227-7013 and FAR 52.227-19.                        #
#                                                                          #
############################################################################
#                                                                          #
# CONTRACT: INTERNAL                                                       #
#                                                                          #
############################################################################
#
#  ID: $Id: vxconfig.vars,v 9.1 2005/03/23 12:51:01 cvsadmin Exp $
#
# LOG: $Log: vxconfig.vars,v $
# LOG: Revision 9.1  2005/03/23 12:51:01  cvsadmin
# LOG: Begin PR6.5
# LOG:
# LOG: Revision 8.2  2005/03/21 13:49:06  cvsadmin
# LOG: PR6.4.2 Source Propagated to Current
# LOG:
# LOG: Revision 7.1  2002/08/26 22:08:32  mmiers
# LOG: Begin PR6.2
# LOG:
# LOG: Revision 6.1  2002/02/28 16:13:16  mmiers
# LOG: Begin PR7.
# LOG:
# LOG: Revision 5.1  2001/08/16 20:45:05  mmiers
# LOG: Start PR6.
# LOG:
# LOG: Revision 1.3  2001/08/16 19:49:05  lbana
# LOG: board specific package variables
# LOG:
#  CONFIG VARS for VxWorks platform.
#  Define and update following environment variables.
#  ex. 1. WIND_BASE=C:\Tornado
#      2. WIND_HOST_TYPE=x86-win32
#      3. PATH=$(WIND_BASE)/host/$(WIND_HOST_TYPE)/bin:$(PATH)
#
#  Define the project type to load the output into 
#  the taget system(vxWorks). project types: 
#  1. vxApp    : To build relocatable objects.
#  2. vxWorks  : To build bootable image.
#
#
PRJ_TYPE=           vxApp
BUILD_SPEC=         PENTIUMgnu
#
## build-configuration info
#

ifeq ($(BUILD_SPEC),PENTIUMgnu)
CPU=                PENTIUM
TOOL=               gnu
endif
#  This is just a start. It needs more cleaning.
#  
# to tell what compiler and cpu to use
BUILD_SPEC=    PENTIUMgnu
TOOLENV=       pentium
TOOL=          gnu
VX_CPU_FAMILY= 386
ARCH_DIR=      i86

ifeq ($(LIBNAME),)
LIBNAME=    lib$(CPU)$(TOOL)vx.a
endif

ifeq ($(LIBDIRNAME),)
LIBDIRNAME=    obj$(CPU)$(TOOL)vx
endif

TGT_DIR=      $(WIND_BASE)/target
BIN_DIR=      $(WIND_BASE)/host/$(WIND_HOST_TYPE)/bin
CONFIG_ALL=   $(WIND_BASE)/config/all
LIB_DIR=      $(TGT_DIR)/lib/$(LIBDIRNAME)
RESOURCE_DIR= $(WIND_BASE)/host/resource

# Define DEFAULT_RULE in the top level makefile.
#
OBJCPY=           objcopy
SIZE=             size$(TOOLENV)
TCL=              wtxtcl
EXTRACT_BIN_NAME= aoutToBin
BINXSYM_NAME=     xsymDec
BIN_HEX_NAME=     hexDec
MXR_GEN=          $(TCL) $(WIND_BASE)/host/src/hutils/mxrGen.tcl
CXR_GEN=          $(TCL) $(WIND_BASE)/host/src/hutils/cxrGen.tcl
CFG_GEN=          $(TCL) $(WIND_BASE)/host/src/hutils/configGen.tcl
TRIM_GEN=         $(TCL) $(WIND_BASE)/host/src/hutils/trim.tcl

#
# ToolChain binaries.
# Define GNU tool chain variable for 
# assembler, compiler, linker and preprocessor.
# The whole config is meant for GNU only.
#
USE_GNU_TOOLS=    true

MUNCH=            wtxtcl $(WIND_BASE)/host/src/hutils/munch.tcl $(MUNCH_FLAGS)

# module cross reference macros
# by default, just generate xref's for the main vxWorks archive,
# and regenerate the xref every time the archive changes

MXR_LIBS=         $(TGT_DIR)/lib/lib$(CPU)$(TOOL)vx.a
MXR_USR_OBJS=     $(filter-out linkSyms.o prjConfig.o, $(VX_PRJ_OBJS))
MXR_DEPEND=       $(MXR_LIBS)

# Not very important to build vxApp.
#
# bsp flags
ROM_ENTRY=        _romInit
SYS_ENTRY=        _sysInit
USR_ENTRY=        _usrEntry

LDFLAGS=          -X -N
LD_PARTIAL_FLAGS= -X -r

# These are flags to pass to the linker the last time we do a
# relocatable link. They never get used by a bootable project
# and they only get used once by a downloadable project.

LD_PARTIAL_LAST_FLAGS=

OPTION_OBJECT_ONLY=  -c
OPTION_INCLUDE_DIR=  -I
OPTION_DEFINE_MACRO= -D
COMPILE_TRADITIONAL= $(CC) -c -fdollars-in-identifiers $(CFLAGS)
COMPILE_SYMTBL=      $(CC) -c -fdollars-in-identifiers $(CFLAGS)

COMP_DIR=            $(TGT_DIR)/config/comps
DATA_SEG_PAD_C=      $(COMP_DIR)/src/dataSegPad.c
VERSION_C=           $(COMP_DIR)/src/version.c
USR_ENTRY_C=         $(COMP_DIR)/src/usrEntry.c

## libraries

LIBS =               $(LIB_EXTRA) $(TGT_DIR)/lib/lib$(CPU)$(TOOL)vx.a

#
# define VX_PRJ_OBJ in top level make file.
#
PRJ_OBJS_FOR_LD_PARTIAL= $(VX_PRJ_OBJ)
PRJ_OBJS_FOR_LD=         $(VX_PRJ_OBJ)
PRJ_OBJS_FOR_NM=         $(VX_PRJ_OBJ)
PRJ_OBJS_FOR_AR=         $(VX_PRJ_OBJ)

#
# vxworks tools
#
EXTRACT_BIN=  $(BIN_DIR)/$(EXTRACT_BIN_NAME)
BINXSYM=      $(BIN_DIR)/$(BINXSYM_NAME)
BINHEX=       $(BIN_DIR)/$(BINHEX_NAME)
COMPRESS=     $(BIN_DIR)/deflate
ROMSIZEPROG=  $(BIN_DIR)/romsize $(VX_CPU_FAMILY)
VXSIZEPROG=   $(BIN_DIR)/vxsize $(VX_CPU_FAMILY)
MKSYMTBL=     $(BIN_DIR)/makeSymTbl $(VX_CPU_FAMILY)
BINTOASM=     $(BIN_DIR)/binToAsm
WTXTCL=       $(BIN_DIR)/wtxtcl.exe
REFGEN=       $(WTXTCL) $(RESOURCE_DIR)/doctools/refgen.tcl
HTMLLINK=     $(WTXTCL) $(RESOURCE_DIR)/doctools/htmlLink.tcl
HTMLBOOK=     $(WTXTCL) $(RESOURCE_DIR)/doctools/htmlBook.tcl
LDOUT_SYMS=   @rem
LDOUT_CONV=   @rem
LDOUT_HOST=   @rem
MV_BIN=       @rem
RM=           vxrm
MV=           move
ECHO=         echo
CP=           cp
CPP=          $(CC) -E -P -xc
ASM_P1=       type
ASM_P2=       type
MKPREP=       $(BIN_DIR)/mkprep
TARGET=
BSPBUILD_TCL= $(BIN_DIR)/bspBuild.tcl

NOP=          rem

#
# files for building image.
#
USRCONFIG=    $(CONFIG_ALL)/usrConfig.c
BOOTCONFIG=   $(CONFIG_ALL)/bootConfig.c
BOOTINIT=     $(CONFIG_ALL)/bootInit.c 
DATASEGPAD=   $(CONFIG_ALL)/dataSegPad.c
CONFIG_ALL_H= $(CONFIG_ALL)/configAll.h

#
# Rules from make.PENTIUMgnu
#
CC_OPTIM_DRIVER= -fvolatile -nostdlib -fno-builtin -fno-defer-pop
CC_OPTIM_NORMAL= -O2 -nostdlib -fno-builtin -fno-defer-pop
CC_OPTIM_TARGET= -O2 -fvolatile -nostdlib -fno-builtin -fno-defer-pop
CC_ARCH_SPEC=    -mpentium

# For an explanation of this flag and our template instantiation strategy
# See defs.default
C++_TEMPLATE_INST = -fno-implicit-templates -DVXW_EXPLICIT_TEMPLATES

RANLIB=    ranlibpentium
