############################################################################
#                                                                          #
#     Copyright 1997 IntelliNet Technologies, Inc. All Rights Reserved.    #
#             Manufactured in the United States of America.                #
#       1990 W. New Haven Ste. 312, Melbourne, Florida, 32904 U.S.A.       #
#                                                                          #
#   This product and related documentation is protected by copyright and   #
#   distributed under licenses restricting its use, copying, distribution  #
#   and decompilation.  No part of this product or related documentation   #
#   may be reproduced in any form by any means without prior written       #
#   authorization of IntelliNet Technologies and its licensors, if any.    #
#                                                                          #
#   RESTRICTED RIGHTS LEGEND:  Use, duplication, or disclosure by the      #
#   government is subject to restrictions as set forth in subparagraph     #
#   (c)(1)(ii) of the Rights in Technical Data and Computer Software       #
#   clause at DFARS 252.227-7013 and FAR 52.227-19.                        #
#                                                                          #
############################################################################
#                                                                          #
# CONTRACT: INTERNAL                                                       #
#                                                                          #
############################################################################
#
#  ID: $Id: Makefile,v 9.7 2008/06/24 07:14:13 ssingh Exp $
#
# LOG: $Log: Makefile,v $
# LOG: Revision 9.7  2008/06/24 07:14:13  ssingh
# LOG:  CGI Project:: fixing unit-testing issue #1005
# LOG:
# LOG: Revision 9.6  2008/06/17 06:28:01  nvijikumar
# LOG: Updated for ITU over TTC and ITU over PRC support (split Stacks).
# LOG: ACC-CG-SDS-SS7-V1.0.02::D7030,D7040, D7070,D7080
# LOG:
# LOG: Revision 9.5  2008/06/04 06:37:49  ssingh
# LOG: ALU porting, B-0100LX-LUSG-00 (june 04,2008 base)
# LOG:
# LOG: Revision 9.4  2008/05/08 12:39:36  kramesh
# LOG: Unit test bug fix for 1-4 Byte TID issue.
# LOG:
# LOG: Revision 9.3  2008/04/22 09:54:12  kramesh
# LOG: Propagated TCS issue 1024. 1-4 Byte TID for ITU TCAP.
# LOG:
# LOG: Revision 9.2  2007/01/18 10:34:59  yranade
# LOG: Port 6.5.3 and Lucent changes
# LOG:
# LOG: Revision 9.1.10.1  2006/12/23 09:46:19  randresol
# LOG: Modifications to allow TTC and CCITT stack to run in parallel
# LOG:
# LOG: Revision 9.1  2005/03/23 12:52:37  cvsadmin
# LOG: Begin PR6.5
# LOG:
# LOG: Revision 8.2  2005/03/21 13:50:36  cvsadmin
# LOG: PR6.4.2 Source Propagated to Current
# LOG:
# LOG: Revision 7.2.40.1  2005/01/31 09:30:00  dsatish
# LOG: ANSI over TTC, ANSI over PRC split stack changes merged in DVLP branch.
# LOG:
# LOG: Revision 7.2  2003/02/04 07:22:01  yranade
# LOG: Manual TCAP Codec Integration.
# LOG:
# LOG: Revision 7.1  2002/08/26 22:09:33  mmiers
# LOG: Begin PR6.2
# LOG:
# LOG: Revision 6.5  2002/07/09 14:30:36  omayor
# LOG: ANSI-96 changes tested in PR5 ported to current. Now to be tested.
# LOG:
# LOG: Revision 6.4  2002/06/10 21:40:50  mmiers
# LOG: Add ANSI dialogue portion.
# LOG:
# LOG: Revision 6.3  2002/03/26 23:58:26  hcho
# LOG: Resolve build problem.
# LOG:
# LOG: Revision 6.2  2002/03/20 17:56:24  mmiers
# LOG: Move the codecs back.  It's consistent, so I'll just deal
# LOG: with the VFrame pain (ASN).
# LOG:
# LOG: Revision 6.1  2002/02/28 16:14:03  mmiers
# LOG: Begin PR7.
# LOG:
# LOG: Revision 5.2  2001/12/17 00:17:17  mmiers
# LOG: Clean up the build.
# LOG:
# LOG: Revision 5.1  2001/08/16 20:45:52  mmiers
# LOG: Start PR6.
# LOG:
# LOG: Revision 4.1  2001/05/01 00:53:12  mmiers
# LOG: Begin PR5
# LOG:
# LOG: Revision 3.4  2001/03/13 02:26:22  mmiers
# LOG: UNIX build is a heck of a lot easier to set up.
# LOG:
# LOG: Revision 3.3  2001/01/04 17:57:39  hdivoux
# LOG: Cleanup
# LOG:
# LOG: Revision 3.2  2000/09/01 15:35:52  mmiers
# LOG: Fix a bunch of Makefiles and make the C++ hash interface public.
# LOG:
# LOG: Revision 3.1  2000/08/16 00:02:43  mmiers
# LOG:
# LOG: Begin round 4.
# LOG:
# LOG: Revision 2.0  1999/12/03 23:25:06  mmiers
# LOG:
# LOG: Begin third iteration.
# LOG:
# LOG: Revision 1.27  1999/09/17 15:48:54  labuser
# LOG:
# LOG:
# LOG: Add converter libs into build.
# LOG:
# LOG: Revision 1.26  1999/09/17 14:12:17  mmiers
# LOG:
# LOG:
# LOG: Commit modified Makefile
# LOG:
# LOG: Revision 1.25  1999/08/26 01:25:23  mmiers
# LOG:
# LOG:
# LOG: Add sanity checking to build.
# LOG:
# LOG: Revision 1.24  1999/08/03 16:19:52  mmiers
# LOG:
# LOG:
# LOG: Adjustments for using ANSI SCCP with ITU TCAP.
# LOG:
# LOG: Revision 1.23  1999/07/01 02:29:13  mmiers
# LOG:
# LOG: On Solaris, you build C++ libraries with the compiler, of all
# LOG: things.  Add new make variables accordingly.
# LOG:
# LOG: Revision 1.22  1999/06/17 15:56:35  labuser
# LOG:
# LOG:
# LOG: Modify build rule for CCITT
# LOG:
# LOG: Revision 1.21  1999/05/25 00:25:54  mmiers
# LOG:
# LOG:
# LOG: Update for UNIX build.
# LOG:
# LOG: Revision 1.20  1999/05/24 20:42:04  mmiers
# LOG:
# LOG:
# LOG: Add the codec to the make.
# LOG:
# LOG: Revision 1.19  1999/03/03 15:51:02  mmiers
# LOG:
# LOG:
# LOG: Add doc generation to Makefiles.
# LOG:
# LOG: Revision 1.18  1998/11/18 00:23:42  jrao
# LOG: Changed Library Suffix (LIBSUFFIX) to Debug Suffix (DBGSUFFIX)
# LOG:
# LOG: Revision 1.17  1998/11/17 23:57:42  jrao
# LOG: Changed Library Suffix (DBGSUFFIX) wherever it occured to Debug Suffix (DBGSUFFIX)
# LOG:
# LOG: Revision 1.16  1998/11/17 16:43:06  jrao
# LOG: Added facility to produce Release and Debug versions of the library.
# LOG: Also targets for both ANSI and CCITT.
# LOG:
# LOG: Revision 1.15  1998/09/26 15:52:50  mmiers
# LOG: Update for MTP3.
# LOG:
# LOG: Revision 1.14  1998/09/22 23:56:31  jrao
# LOG: Changes made to accomodate HPUX code
# LOG:
# LOG: Revision 1.13  1998/06/23 02:31:07  mmiers
# LOG: Update Solaris build environment.  Part of getting SCCP working.
# LOG:
# LOG: Revision 1.12  1998/06/17 21:07:46  mmiers
# LOG: Move IntelliNet as-a-vendor files to the vendor tree.
# LOG:
# LOG: Revision 1.11  1998/05/31 22:20:12  mmiers
# LOG: A BUNCH of updates to get the test8 (infrastructure test) to link on
# LOG: Solaris.
# LOG:
# LOG: Revision 1.10  1998/05/29 03:31:27  mmiers
# LOG: More work on documentation.  Most of this is just adding interface
# LOG: description boxes without actually adding text.  Some of this is
# LOG: genuine bug fixing.
# LOG:
# LOG: Revision 1.9  1998/05/21 02:15:27  mmiers
# LOG: General cleanup to reflect TCAP changes (INAP, IS41).  Some missing
# LOG: files in builds.  Update the test to include the SCCP library.  I'll
# LOG: have to modify TCAP tomorrow to use SCCP_SendEvent instead of
# LOG: TRANSPORT_PutEvent().  Less efficient, but more useable with someone
# LOG: else's SCCP.
# LOG:
# LOG: Revision 1.8  1998/05/19 02:38:49  mmiers
# LOG: Modify itu/tcap.h to remove the redundant structures (such as rrl/rrnl,
# LOG: uerror/lerror, etc.).  If you have problems with this, update tcap.h
# LOG: using "cvs update -r 1.11 tcap.h (for itu/tcap.h).
# LOG:
# LOG: Revision 1.7  1998/05/05 02:03:55  mmiers
# LOG: Add .depend target to clean rule.
# LOG:
# LOG: Revision 1.6  1998/05/05 01:59:00  mmiers
# LOG: Sanitize the build environment a bit.  This gets the Solaris
# LOG: environment to build cleanly.
# LOG:
# LOG: Revision 1.5  1998/04/23 02:33:00  mmiers
# LOG: More work on our TCAP implementation.  Made this single threaded,
# LOG: multiple threads didn't buy anything, but did cost a *bunch* of
# LOG: unnecessary hops between threads.  We're down to 3/2 hops in/out
# LOG: of a process.
# LOG:
# LOG: Revision 1.4  1998/03/19 16:34:36  mmiers
# LOG: More work on TCAP.
# LOG:
# LOG: Revision 1.3  1998/03/13 04:46:44  mmiers
# LOG: For the most part, TCAP modifications.  Quite a few of these files are false
# LOG: positive due to timestamps.
# LOG:
# LOG: Revision 1.2  1998/03/11 23:05:34  mmiers
# LOG: TCAP implementation for ANSI.  Not quite there yet.
# LOG:
# LOG: Revision 1.1  1998/02/10 22:32:09  mmiers
# LOG: Separate out the PART specific stuff from its.h.  Everything is now in
# LOG: its appropriate place.  The TCAP headers moved from common to TCAP.  The
# LOG: state machine code has been added to the tree.
# LOG:
#
############################################################################

#
# get the vars
#
include $(ITS_ROOT)/config.vars

ifeq ($(PROTOCOL),ANSI)
POBJS=  ANSI-TCAP_tables.o  ansi-tcap_cvt.o ansi-tcap_codec.o
endif
ifeq ($(PROTOCOL),CCITT)
POBJS=  ITU-TCAP_tables.o ITU-TCAP-APDU_tables.o itu-tcap_cvt.o itu-tcap_codec.o
endif
ifeq ($(PROTOCOL),TTC)
POBJS=  TTC-TCAP_tables.o TTC-TCAP-APDU_tables.o ttc-tcap_cvt.o ttc-tcap_codec.o
endif
ifeq ($(PROTOCOL),PRC)
POBJS=  PRC-TCAP_tables.o PRC-TCAP-APDU_tables.o prc-tcap_cvt.o prc-tcap_codec.o
endif



OBJS=$(POBJS) tcap.o cmn-tcap_codec.o

CFLAGS := $(CFLAGS) -I../include -I$(ITS_ROOT)/MTP2/include \
	 -I$(ITS_ROOT)/MTP3/include \
         -I$(ITS_ROOT)/SCCP/include -I$(ITS_ROOT)/TCAP/include \
	 -I../include/ansi -I../include/itu  \
	 -I../include/japan -I../include/china \
         -DINCLUDE_CODEC

CXXFLAGS := $(CXXFLAGS) -I../include -I$(ITS_ROOT)/MTP2/include \
	 -I$(ITS_ROOT)/MTP3/include \
         -I$(ITS_ROOT)/SCCP/include -I$(ITS_ROOT)/TCAP/include
ifeq ($(PROTOCOL),ANSI)
ifeq ($(SCCPPROT),CCITT)
CFLAGS := $(CFLAGS) -DUSE_ITU_SCCP
CXXFLAGS := $(CXXFLAGS) -DUSE_ITU_SCCP
endif
endif
ifeq ($(PROTOCOL),CCITT)
ifeq ($(SCCPPROT),ANSI)
CFLAGS := $(CFLAGS) -DUSE_ANSI_SCCP
CXXFLAGS := $(CXXFLAGS) -DUSE_ANSI_SCCP
endif
endif
ifeq ($(PROTOCOL),ANSI)
ifeq ($(SCCPPROT),TTC)
CFLAGS := $(CFLAGS) -DUSE_TTC_SCCP
CXXFLAGS := $(CXXFLAGS) -DUSE_TTC_SCCP
endif
endif
ifeq ($(PROTOCOL),ANSI)
ifeq ($(SCCPPROT),PRC)
CFLAGS := $(CFLAGS) -DUSE_PRC_SCCP
CXXFLAGS := $(CXXFLAGS) -DUSE_PRC_SCCP
endif
endif
ifeq ($(PROTOCOL),CCITT)
ifeq ($(SCCPPROT),PRC)
CFLAGS := $(CFLAGS) -DUSE_PRC_SCCP
CXXFLAGS := $(CXXFLAGS) -DUSE_PRC_SCCP
endif
endif
ifeq ($(PROTOCOL),CCITT)
ifeq ($(SCCPPROT),TTC)
CFLAGS := $(CFLAGS) -DUSE_TTC_SCCP
CXXFLAGS := $(CXXFLAGS) -DUSE_TTC_SCCP
endif
endif

ifeq ($(PROTOCOL),$(SCCPPROT))

all: ../lib/lib$(PROTOCOL)-TCAP$(DBGSUFFIX).a

clean:
	$(RM) $(OBJS) ../lib/lib$(PROTOCOL)-TCAP$(DBGSUFFIX).a .depend \
		ANSI-TCAP_tables.c  \
		ITU-TCAP_tables.c ITU-TCAP-APDU_tables.c \
		TTC-TCAP_tables.c TTC-TCAP-APDU_tables.c \
		PRC-TCAP_tables.c PRC-TCAP-APDU_tables.c
else

ifeq ($(SCCPPROT),)

all: ../lib/lib$(PROTOCOL)-TCAP$(DBGSUFFIX).a

clean:
	$(RM) $(OBJS) ../lib/lib$(PROTOCOL)-TCAP$(DBGSUFFIX).a .depend \
		ANSI-TCAP_tables.c \
		ITU-TCAP_tables.c ITU-TCAP-APDU_tables.c \
		TTC-TCAP_tables.c TTC-TCAP-APDU_tables.c \
		PRC-TCAP_tables.c PRC-TCAP-APDU_tables.c

else

all: ../lib/lib$(PROTOCOL)-$(SCCPPROT)-TCAP$(DBGSUFFIX).a

clean:
	$(RM) $(OBJS) .depend \
		../lib/lib$(PROTOCOL)-$(SCCPPROT)-TCAP$(DBGSUFFIX).a \
		ANSI-TCAP_tables.c \
		ITU-TCAP_tables.c ITU-TCAP-APDU_tables.c \
		TTC-TCAP_tables.c TTC-TCAP-APDU_tables.c \
		PRC-TCAP_tables.c PRC-TCAP-APDU_tables.c



endif

endif

../lib/lib$(PROTOCOL)-TCAP$(DBGSUFFIX).a: $(OBJS)
	$(CXXAR) $(CXXARFLAGS) ../lib/lib$(PROTOCOL)-TCAP$(DBGSUFFIX).a \
		$(OBJS)
	sh ./generate

../lib/lib$(PROTOCOL)-$(SCCPPROT)-TCAP$(DBGSUFFIX).a: $(OBJS)
	$(CXXAR) $(CXXARFLAGS) \
		../lib/lib$(PROTOCOL)-$(SCCPPROT)-TCAP$(DBGSUFFIX).a \
		$(OBJS)
	sh ./generate

ANSI-TCAP_tables.c: ansiTCAP.asn
	$(ITS_ROOT)/tools/bin/asnc$(DBGSUFFIX) -A -a -f -h ansiTCAP.asn 
	$(MV) ANSI-TCAP-types.h ../include/ansi

ITU-TCAP_tables.c: ituTCAP.asn
	$(ITS_ROOT)/tools/bin/asnc$(DBGSUFFIX) -A -a -f -h ituTCAP.asn 
	$(MV) ITU-TCAP-types.h ../include/itu

ITU-TCAP-APDU_tables.c: ituTCAP-APDU.asn
	$(ITS_ROOT)/tools/bin/asnc$(DBGSUFFIX) -A -a -f -h ituTCAP-APDU.asn 
	$(MV) ITU-TCAP-APDU-types.h ../include/itu

TTC-TCAP_tables.c: ttcTCAP.asn
	$(ITS_ROOT)/tools/bin/asnc$(DBGSUFFIX) -A -a -f -h ttcTCAP.asn 
	$(MV) TTC-TCAP-types.h ../include/japan

TTC-TCAP-APDU_tables.c: ttcTCAP-APDU.asn
	$(ITS_ROOT)/tools/bin/asnc$(DBGSUFFIX) -A -a -f -h ttcTCAP-APDU.asn 
	$(MV) TTC-TCAP-APDU-types.h ../include/japan

PRC-TCAP_tables.c: prcTCAP.asn
	$(ITS_ROOT)/tools/bin/asnc$(DBGSUFFIX) -A -a -f -h prcTCAP.asn 
	$(MV) PRC-TCAP-types.h ../include/china

PRC-TCAP-APDU_tables.c: prcTCAP-APDU.asn
	$(ITS_ROOT)/tools/bin/asnc$(DBGSUFFIX) -A -a -f -h prcTCAP-APDU.asn 
	$(MV) PRC-TCAP-APDU-types.h ../include/china



#
# get the rules
#
include $(ITS_ROOT)/config.rules
