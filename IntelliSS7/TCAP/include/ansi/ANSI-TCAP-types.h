/* automatically generated by asncomp 1.0, do not edit! */

#ifndef	_module_ANSI__TCAP_defined_
#define	_module_ANSI__TCAP_defined_

#ifndef	PEPSY_VERSION
#define	PEPSY_VERSION		2
#endif

#include <asn-c/AsnC.h>
#include <asn-c/UNIV-types.h>

#ifdef __cplusplus
extern "C"
{
#endif


extern SS7DLLAPI modtyp	_ZANSI_TCAP_mod;
#define _ZReturnResultANSI_TCAP	10
#define _ZGeneralProblemANSI_TCAP	3
#define _ZTransactionIDANSI_TCAP	15
#define _ZAbortANSI_TCAP	24
#define _ZProtocolVersionANSI_TCAP	16
#define _ZUniTransactionPDUANSI_TCAP	25
#define _ZReturnErrorProblemANSI_TCAP	6
#define _ZComponentIDANSI_TCAP	0
#define _ZUserAbortInformationANSI_TCAP	23
#define _ZOperationCodeANSI_TCAP	1
#define _ZReturnErrorANSI_TCAP	11
#define _ZObjectIDApplicationContextANSI_TCAP	18
#define _ZProblemANSI_TCAP	8
#define _ZTransactionPortionProblemANSI_TCAP	7
#define _ZPackageTypeANSI_TCAP	27
#define _ZInvokeProblemANSI_TCAP	4
#define _ZErrorCodeANSI_TCAP	2
#define _ZApplicationContextANSI_TCAP	19
#define _ZP_Abort_CauseANSI_TCAP	22
#define _ZRejectANSI_TCAP	12
#define _ZReturnResultProblemANSI_TCAP	5
#define _ZComponentPDUANSI_TCAP	13
#define _ZUserInformationANSI_TCAP	20
#define _ZIntegerApplicationContextANSI_TCAP	17
#define _ZComponentSequenceANSI_TCAP	14
#define _ZTransactionPDUANSI_TCAP	26
#define _ZDialoguePortionANSI_TCAP	21
#define _ZInvokeANSI_TCAP	9

#ifndef	lint
#define encode_ANSI__TCAP_ComponentID(pe, top, len, buffer, parm) \
    enc_f(_ZComponentIDANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ComponentID(pe, top, len, buffer, parm) \
    dec_f(_ZComponentIDANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ComponentID(pe, top, len, buffer, parm) \
    prnt_f(_ZComponentIDANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ComponentID_P    _ZComponentIDANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_OperationCode(pe, top, len, buffer, parm) \
    enc_f(_ZOperationCodeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_OperationCode(pe, top, len, buffer, parm) \
    dec_f(_ZOperationCodeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_OperationCode(pe, top, len, buffer, parm) \
    prnt_f(_ZOperationCodeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_OperationCode_P    _ZOperationCodeANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ErrorCode(pe, top, len, buffer, parm) \
    enc_f(_ZErrorCodeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ErrorCode(pe, top, len, buffer, parm) \
    dec_f(_ZErrorCodeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ErrorCode(pe, top, len, buffer, parm) \
    prnt_f(_ZErrorCodeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ErrorCode_P    _ZErrorCodeANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_GeneralProblem(pe, top, len, buffer, parm) \
    enc_f(_ZGeneralProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_GeneralProblem(pe, top, len, buffer, parm) \
    dec_f(_ZGeneralProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_GeneralProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZGeneralProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_GeneralProblem_P    _ZGeneralProblemANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_InvokeProblem(pe, top, len, buffer, parm) \
    enc_f(_ZInvokeProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_InvokeProblem(pe, top, len, buffer, parm) \
    dec_f(_ZInvokeProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_InvokeProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZInvokeProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_InvokeProblem_P    _ZInvokeProblemANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ReturnResultProblem(pe, top, len, buffer, parm) \
    enc_f(_ZReturnResultProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ReturnResultProblem(pe, top, len, buffer, parm) \
    dec_f(_ZReturnResultProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ReturnResultProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZReturnResultProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ReturnResultProblem_P    _ZReturnResultProblemANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ReturnErrorProblem(pe, top, len, buffer, parm) \
    enc_f(_ZReturnErrorProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ReturnErrorProblem(pe, top, len, buffer, parm) \
    dec_f(_ZReturnErrorProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ReturnErrorProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZReturnErrorProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ReturnErrorProblem_P    _ZReturnErrorProblemANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_TransactionPortionProblem(pe, top, len, buffer, parm) \
    enc_f(_ZTransactionPortionProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_TransactionPortionProblem(pe, top, len, buffer, parm) \
    dec_f(_ZTransactionPortionProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_TransactionPortionProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZTransactionPortionProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_TransactionPortionProblem_P    _ZTransactionPortionProblemANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_Problem(pe, top, len, buffer, parm) \
    enc_f(_ZProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_Problem(pe, top, len, buffer, parm) \
    dec_f(_ZProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_Problem(pe, top, len, buffer, parm) \
    prnt_f(_ZProblemANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_Problem_P    _ZProblemANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_Invoke(pe, top, len, buffer, parm) \
    enc_f(_ZInvokeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_Invoke(pe, top, len, buffer, parm) \
    dec_f(_ZInvokeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_Invoke(pe, top, len, buffer, parm) \
    prnt_f(_ZInvokeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_Invoke_P    _ZInvokeANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ReturnResult(pe, top, len, buffer, parm) \
    enc_f(_ZReturnResultANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ReturnResult(pe, top, len, buffer, parm) \
    dec_f(_ZReturnResultANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ReturnResult(pe, top, len, buffer, parm) \
    prnt_f(_ZReturnResultANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ReturnResult_P    _ZReturnResultANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ReturnError(pe, top, len, buffer, parm) \
    enc_f(_ZReturnErrorANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ReturnError(pe, top, len, buffer, parm) \
    dec_f(_ZReturnErrorANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ReturnError(pe, top, len, buffer, parm) \
    prnt_f(_ZReturnErrorANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ReturnError_P    _ZReturnErrorANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_Reject(pe, top, len, buffer, parm) \
    enc_f(_ZRejectANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_Reject(pe, top, len, buffer, parm) \
    dec_f(_ZRejectANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_Reject(pe, top, len, buffer, parm) \
    prnt_f(_ZRejectANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_Reject_P    _ZRejectANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ComponentPDU(pe, top, len, buffer, parm) \
    enc_f(_ZComponentPDUANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ComponentPDU(pe, top, len, buffer, parm) \
    dec_f(_ZComponentPDUANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ComponentPDU(pe, top, len, buffer, parm) \
    prnt_f(_ZComponentPDUANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ComponentPDU_P    _ZComponentPDUANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ComponentSequence(pe, top, len, buffer, parm) \
    enc_f(_ZComponentSequenceANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ComponentSequence(pe, top, len, buffer, parm) \
    dec_f(_ZComponentSequenceANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ComponentSequence(pe, top, len, buffer, parm) \
    prnt_f(_ZComponentSequenceANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ComponentSequence_P    _ZComponentSequenceANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_TransactionID(pe, top, len, buffer, parm) \
    enc_f(_ZTransactionIDANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_TransactionID(pe, top, len, buffer, parm) \
    dec_f(_ZTransactionIDANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_TransactionID(pe, top, len, buffer, parm) \
    prnt_f(_ZTransactionIDANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_TransactionID_P    _ZTransactionIDANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ProtocolVersion(pe, top, len, buffer, parm) \
    enc_f(_ZProtocolVersionANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ProtocolVersion(pe, top, len, buffer, parm) \
    dec_f(_ZProtocolVersionANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ProtocolVersion(pe, top, len, buffer, parm) \
    prnt_f(_ZProtocolVersionANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ProtocolVersion_P    _ZProtocolVersionANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_IntegerApplicationContext(pe, top, len, buffer, parm) \
    enc_f(_ZIntegerApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_IntegerApplicationContext(pe, top, len, buffer, parm) \
    dec_f(_ZIntegerApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_IntegerApplicationContext(pe, top, len, buffer, parm) \
    prnt_f(_ZIntegerApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_IntegerApplicationContext_P    _ZIntegerApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ObjectIDApplicationContext(pe, top, len, buffer, parm) \
    enc_f(_ZObjectIDApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ObjectIDApplicationContext(pe, top, len, buffer, parm) \
    dec_f(_ZObjectIDApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ObjectIDApplicationContext(pe, top, len, buffer, parm) \
    prnt_f(_ZObjectIDApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ObjectIDApplicationContext_P    _ZObjectIDApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_ApplicationContext(pe, top, len, buffer, parm) \
    enc_f(_ZApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_ApplicationContext(pe, top, len, buffer, parm) \
    dec_f(_ZApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_ApplicationContext(pe, top, len, buffer, parm) \
    prnt_f(_ZApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_ApplicationContext_P    _ZApplicationContextANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_UserInformation(pe, top, len, buffer, parm) \
    enc_f(_ZUserInformationANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_UserInformation(pe, top, len, buffer, parm) \
    dec_f(_ZUserInformationANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_UserInformation(pe, top, len, buffer, parm) \
    prnt_f(_ZUserInformationANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_UserInformation_P    _ZUserInformationANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_DialoguePortion(pe, top, len, buffer, parm) \
    enc_f(_ZDialoguePortionANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_DialoguePortion(pe, top, len, buffer, parm) \
    dec_f(_ZDialoguePortionANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_DialoguePortion(pe, top, len, buffer, parm) \
    prnt_f(_ZDialoguePortionANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_DialoguePortion_P    _ZDialoguePortionANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_P__Abort__Cause(pe, top, len, buffer, parm) \
    enc_f(_ZP_Abort_CauseANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_P__Abort__Cause(pe, top, len, buffer, parm) \
    dec_f(_ZP_Abort_CauseANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_P__Abort__Cause(pe, top, len, buffer, parm) \
    prnt_f(_ZP_Abort_CauseANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_P__Abort__Cause_P    _ZP_Abort_CauseANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_UserAbortInformation(pe, top, len, buffer, parm) \
    enc_f(_ZUserAbortInformationANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_UserAbortInformation(pe, top, len, buffer, parm) \
    dec_f(_ZUserAbortInformationANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_UserAbortInformation(pe, top, len, buffer, parm) \
    prnt_f(_ZUserAbortInformationANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_UserAbortInformation_P    _ZUserAbortInformationANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_Abort(pe, top, len, buffer, parm) \
    enc_f(_ZAbortANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_Abort(pe, top, len, buffer, parm) \
    dec_f(_ZAbortANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_Abort(pe, top, len, buffer, parm) \
    prnt_f(_ZAbortANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_Abort_P    _ZAbortANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_UniTransactionPDU(pe, top, len, buffer, parm) \
    enc_f(_ZUniTransactionPDUANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_UniTransactionPDU(pe, top, len, buffer, parm) \
    dec_f(_ZUniTransactionPDUANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_UniTransactionPDU(pe, top, len, buffer, parm) \
    prnt_f(_ZUniTransactionPDUANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_UniTransactionPDU_P    _ZUniTransactionPDUANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_TransactionPDU(pe, top, len, buffer, parm) \
    enc_f(_ZTransactionPDUANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_TransactionPDU(pe, top, len, buffer, parm) \
    dec_f(_ZTransactionPDUANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_TransactionPDU(pe, top, len, buffer, parm) \
    prnt_f(_ZTransactionPDUANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_TransactionPDU_P    _ZTransactionPDUANSI_TCAP, &_ZANSI_TCAP_mod

#define encode_ANSI__TCAP_PackageType(pe, top, len, buffer, parm) \
    enc_f(_ZPackageTypeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_ANSI__TCAP_PackageType(pe, top, len, buffer, parm) \
    dec_f(_ZPackageTypeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_ANSI__TCAP_PackageType(pe, top, len, buffer, parm) \
    prnt_f(_ZPackageTypeANSI_TCAP, &_ZANSI_TCAP_mod, pe, top, len, buffer)
#define print_ANSI__TCAP_PackageType_P    _ZPackageTypeANSI_TCAP, &_ZANSI_TCAP_mod


#endif   /* lint */

                /* OCTET STRING */
#define	type_ANSI__TCAP_ComponentID	qbuf
#define	free_ANSI__TCAP_ComponentID	qb_free

                /* OCTET STRING */
#define	type_ANSI__TCAP_TransactionID	qbuf
#define	free_ANSI__TCAP_TransactionID	qb_free

                /* OCTET STRING */
#define	type_ANSI__TCAP_ProtocolVersion	qbuf
#define	free_ANSI__TCAP_ProtocolVersion	qb_free

                /* OBJECT IDENTIFIER */
#define	type_ANSI__TCAP_ObjectIDApplicationContext	OIDentifier
#define	free_ANSI__TCAP_ObjectIDApplicationContext	oid_free

                /* ANY */
#define	type_ANSI__TCAP_UserAbortInformation	PElement
#define	free_ANSI__TCAP_UserAbortInformation	pe_free

                /* CHOICE */
struct type_ANSI__TCAP_OperationCode {
    int         offset;
#define	type_ANSI__TCAP_OperationCode_nationalOperation	1
#define	type_ANSI__TCAP_OperationCode_privateOperation	2

    union {
                        /* INTEGER */
        integer     nationalOperation;

                        /* INTEGER */
        integer     privateOperation;
    }       un;
};
#define	free_ANSI__TCAP_OperationCode(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZOperationCodeANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* CHOICE */
struct type_ANSI__TCAP_ErrorCode {
    int         offset;
#define	type_ANSI__TCAP_ErrorCode_nationalError	1
#define	type_ANSI__TCAP_ErrorCode_privateError	2

    union {
                        /* INTEGER */
        integer     nationalError;

                        /* INTEGER */
        integer     privateError;
    }       un;
};
#define	free_ANSI__TCAP_ErrorCode(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZErrorCodeANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* INTEGER */
struct type_ANSI__TCAP_GeneralProblem {
                    /* INTEGER */
    integer     parm;
#define	int_ANSI__TCAP_GeneralProblem_unrecognizedComponent	257
#define	int_ANSI__TCAP_GeneralProblem_incorrectComponentPortion	258
#define	int_ANSI__TCAP_GeneralProblem_badlyStructuredComponentPortion	259
};
#define	free_ANSI__TCAP_GeneralProblem(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZGeneralProblemANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* INTEGER */
struct type_ANSI__TCAP_InvokeProblem {
                    /* INTEGER */
    integer     parm;
#define	int_ANSI__TCAP_InvokeProblem_duplicateInvokeID	513
#define	int_ANSI__TCAP_InvokeProblem_unrecognizedOperationCode	514
#define	int_ANSI__TCAP_InvokeProblem_incorrectParameter	515
#define	int_ANSI__TCAP_InvokeProblem_unrecognizedCorrelationID	516
};
#define	free_ANSI__TCAP_InvokeProblem(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZInvokeProblemANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* INTEGER */
struct type_ANSI__TCAP_ReturnResultProblem {
                    /* INTEGER */
    integer     parm;
#define	int_ANSI__TCAP_ReturnResultProblem_unrecognizedCorrelationID	769
#define	int_ANSI__TCAP_ReturnResultProblem_unexpectedReturnResult	770
#define	int_ANSI__TCAP_ReturnResultProblem_incorrectParameter	771
};
#define	free_ANSI__TCAP_ReturnResultProblem(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZReturnResultProblemANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* INTEGER */
struct type_ANSI__TCAP_ReturnErrorProblem {
                    /* INTEGER */
    integer     parm;
#define	int_ANSI__TCAP_ReturnErrorProblem_unrecognizedCorrelationID	1025
#define	int_ANSI__TCAP_ReturnErrorProblem_unexpectedReturnError	1026
#define	int_ANSI__TCAP_ReturnErrorProblem_unrecognizedError	1027
#define	int_ANSI__TCAP_ReturnErrorProblem_unexpectedError	1028
#define	int_ANSI__TCAP_ReturnErrorProblem_incorrectParameter	1029
};
#define	free_ANSI__TCAP_ReturnErrorProblem(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZReturnErrorProblemANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* INTEGER */
struct type_ANSI__TCAP_TransactionPortionProblem {
                    /* INTEGER */
    integer     parm;
#define	int_ANSI__TCAP_TransactionPortionProblem_unrecognizedPackageType	1281
#define	int_ANSI__TCAP_TransactionPortionProblem_incorrectTransPortion	1282
#define	int_ANSI__TCAP_TransactionPortionProblem_badlyStructuredTransPortion	1283
#define	int_ANSI__TCAP_TransactionPortionProblem_unrecognizedTransID	1284
#define	int_ANSI__TCAP_TransactionPortionProblem_permissionToReleaseProblem	1285
#define	int_ANSI__TCAP_TransactionPortionProblem_resourceUnavailable	1286
};
#define	free_ANSI__TCAP_TransactionPortionProblem(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZTransactionPortionProblemANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* CHOICE */
struct type_ANSI__TCAP_Problem {
    int         offset;
#define	type_ANSI__TCAP_Problem_1	1
#define	type_ANSI__TCAP_Problem_2	2
#define	type_ANSI__TCAP_Problem_3	3
#define	type_ANSI__TCAP_Problem_4	4
#define	type_ANSI__TCAP_Problem_5	5

    union {
                        /* GeneralProblem */
        struct type_ANSI__TCAP_GeneralProblem *choice_ANSI__TCAP_0;

                        /* InvokeProblem */
        struct type_ANSI__TCAP_InvokeProblem *choice_ANSI__TCAP_1;

                        /* ReturnResultProblem */
        struct type_ANSI__TCAP_ReturnResultProblem *choice_ANSI__TCAP_2;

                        /* ReturnErrorProblem */
        struct type_ANSI__TCAP_ReturnErrorProblem *choice_ANSI__TCAP_3;

                        /* TransactionPortionProblem */
        struct type_ANSI__TCAP_TransactionPortionProblem *choice_ANSI__TCAP_4;
    }       un;
};
#define	free_ANSI__TCAP_Problem(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZProblemANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE */
struct type_ANSI__TCAP_Invoke {
                    /* ComponentID */
    struct type_ANSI__TCAP_ComponentID *componentID;

                    /* OperationCode */
    struct type_ANSI__TCAP_OperationCode *operationCode;

                    /* ANY */
    PE      parameter;
};
#define	free_ANSI__TCAP_Invoke(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZInvokeANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE */
struct type_ANSI__TCAP_ReturnResult {
                    /* ComponentID */
    struct type_ANSI__TCAP_ComponentID *componentID;

                    /* ANY */
    PE      parameter;
};
#define	free_ANSI__TCAP_ReturnResult(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZReturnResultANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE */
struct type_ANSI__TCAP_ReturnError {
                    /* ComponentID */
    struct type_ANSI__TCAP_ComponentID *componentID;

                    /* ErrorCode */
    struct type_ANSI__TCAP_ErrorCode *errorCode;

                    /* ANY */
    PE      parameter;
};
#define	free_ANSI__TCAP_ReturnError(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZReturnErrorANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE */
struct type_ANSI__TCAP_Reject {
                    /* ComponentID */
    struct type_ANSI__TCAP_ComponentID *componentID;

                    /* Problem */
    struct type_ANSI__TCAP_Problem *problem;

                    /* ANY */
    PE      parameter;
};
#define	free_ANSI__TCAP_Reject(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZRejectANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* CHOICE */
struct type_ANSI__TCAP_ComponentPDU {
    int         offset;
#define	type_ANSI__TCAP_ComponentPDU_invoke	1
#define	type_ANSI__TCAP_ComponentPDU_returnResultLast	2
#define	type_ANSI__TCAP_ComponentPDU_returnError	3
#define	type_ANSI__TCAP_ComponentPDU_reject	4
#define	type_ANSI__TCAP_ComponentPDU_invokeNotLast	5
#define	type_ANSI__TCAP_ComponentPDU_returnResultNotLast	6

    union {
                        /* Invoke */
        struct type_ANSI__TCAP_Invoke *invoke;

                        /* ReturnResult */
        struct type_ANSI__TCAP_ReturnResult *returnResultLast;

                        /* ReturnError */
        struct type_ANSI__TCAP_ReturnError *returnError;

                        /* Reject */
        struct type_ANSI__TCAP_Reject *reject;

                        /* Invoke */
        struct type_ANSI__TCAP_Invoke *invokeNotLast;

                        /* ReturnResult */
        struct type_ANSI__TCAP_ReturnResult *returnResultNotLast;
    }       un;
};
#define	free_ANSI__TCAP_ComponentPDU(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZComponentPDUANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE OF */
struct type_ANSI__TCAP_ComponentSequence {
                        /* ComponentPDU */
        struct type_ANSI__TCAP_ComponentPDU *ComponentPDU;

        struct type_ANSI__TCAP_ComponentSequence *next;
};
#define	free_ANSI__TCAP_ComponentSequence(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZComponentSequenceANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* INTEGER */
struct type_ANSI__TCAP_IntegerApplicationContext {
                    /* INTEGER */
    integer     parm;
};
#define	free_ANSI__TCAP_IntegerApplicationContext(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZIntegerApplicationContextANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* CHOICE */
struct type_ANSI__TCAP_ApplicationContext {
    int         offset;
#define	type_ANSI__TCAP_ApplicationContext_integerApplicationContext	1
#define	type_ANSI__TCAP_ApplicationContext_objectIDApplicationContext	2

    union {
                        /* IntegerApplicationContext */
        struct type_ANSI__TCAP_IntegerApplicationContext *integerApplicationContext;

                        /* ObjectIDApplicationContext */
        struct type_ANSI__TCAP_ObjectIDApplicationContext *objectIDApplicationContext;
    }       un;
};
#define	free_ANSI__TCAP_ApplicationContext(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZApplicationContextANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE OF */
struct type_ANSI__TCAP_UserInformation {
                        /* EXTERNAL */
        struct	type_UNIV_EXTERNAL	*EXTERNAL;

        struct type_ANSI__TCAP_UserInformation *next;
};
#define	free_ANSI__TCAP_UserInformation(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZUserInformationANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE */
struct type_ANSI__TCAP_DialoguePortion {
                    /* ProtocolVersion */
    struct type_ANSI__TCAP_ProtocolVersion *protocolVersion;

                    /* ApplicationContext */
    struct type_ANSI__TCAP_ApplicationContext *applicationContext;

                    /* UserInformation */
    struct type_ANSI__TCAP_UserInformation *userInformation;

                    /* CHOICE */
    struct choice_ANSI__TCAP_5 {
        int         offset;
#define	choice_ANSI__TCAP_5_integerSecurityContext	1
#define	choice_ANSI__TCAP_5_objectIDSecurityContext	2

        union {
                            /* INTEGER */
            integer     integerSecurityContext;

                            /* OBJECT IDENTIFIER */
            OID     objectIDSecurityContext;
        }       un;
    } *securityContext;

                    /* SEQUENCE */
    struct element_ANSI__TCAP_0 {
                        /* CHOICE */
        struct choice_ANSI__TCAP_6 {
            int         offset;
#define	choice_ANSI__TCAP_6_integerSecurityContext	1
#define	choice_ANSI__TCAP_6_objectIDSecurityContext	2

            union {
                                /* INTEGER */
                integer     integerSecurityContext;

                                /* OBJECT IDENTIFIER */
                OID     objectIDSecurityContext;
            }       un;
        } *confidentialityAlgorithmID;

                        /* ANY */
        PE      confidentialityValue;
    } *confidentiality;
};
#define	free_ANSI__TCAP_DialoguePortion(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZDialoguePortionANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* INTEGER */
struct type_ANSI__TCAP_P__Abort__Cause {
                    /* INTEGER */
    integer     parm;
#define	int_ANSI__TCAP_P__Abort__Cause_unrecognizedPackageType	1
#define	int_ANSI__TCAP_P__Abort__Cause_incorrectTransactionPortion	2
#define	int_ANSI__TCAP_P__Abort__Cause_badlyStructuredTransactionPortion	3
#define	int_ANSI__TCAP_P__Abort__Cause_unrecognizedTransactionID	4
#define	int_ANSI__TCAP_P__Abort__Cause_permissionToReleaseProblem	5
#define	int_ANSI__TCAP_P__Abort__Cause_resourceUnavailable	6
#define	int_ANSI__TCAP_P__Abort__Cause_unrecognizedDialoguePortionID	7
#define	int_ANSI__TCAP_P__Abort__Cause_badlyStructuredDialoguePortion	8
#define	int_ANSI__TCAP_P__Abort__Cause_missingDialoguePortion	9
#define	int_ANSI__TCAP_P__Abort__Cause_inconsistenDialoguePortion	10
};
#define	free_ANSI__TCAP_P__Abort__Cause(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZP_Abort_CauseANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE */
struct type_ANSI__TCAP_Abort {
                    /* TransactionID */
    struct type_ANSI__TCAP_TransactionID *transactionID;

                    /* DialoguePortion */
    struct type_ANSI__TCAP_DialoguePortion *dialoguePortion;

                    /* CHOICE */
    struct choice_ANSI__TCAP_7 {
        int         offset;
#define	choice_ANSI__TCAP_7_1	1
#define	choice_ANSI__TCAP_7_2	2

        union {
                            /* P-Abort-Cause */
            struct type_ANSI__TCAP_P__Abort__Cause *choice_ANSI__TCAP_8;

                            /* UserAbortInformation */
            struct type_ANSI__TCAP_UserAbortInformation *choice_ANSI__TCAP_9;
        }       un;
    } *element_ANSI__TCAP_1;
};
#define	free_ANSI__TCAP_Abort(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZAbortANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE */
struct type_ANSI__TCAP_UniTransactionPDU {
                    /* TransactionID */
    struct type_ANSI__TCAP_TransactionID *transactionID;

                    /* DialoguePortion */
    struct type_ANSI__TCAP_DialoguePortion *dialoguePortion;

                    /* ComponentSequence */
    struct type_ANSI__TCAP_ComponentSequence *componentSequence;
};
#define	free_ANSI__TCAP_UniTransactionPDU(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZUniTransactionPDUANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* SEQUENCE */
struct type_ANSI__TCAP_TransactionPDU {
                    /* TransactionID */
    struct type_ANSI__TCAP_TransactionID *transactionID;

                    /* DialoguePortion */
    struct type_ANSI__TCAP_DialoguePortion *dialoguePortion;

                    /* ComponentSequence */
    struct type_ANSI__TCAP_ComponentSequence *componentSequence;
};
#define	free_ANSI__TCAP_TransactionPDU(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZTransactionPDUANSI_TCAP], &_ZANSI_TCAP_mod, 1)

                /* CHOICE */
struct type_ANSI__TCAP_PackageType {
    int         offset;
#define	type_ANSI__TCAP_PackageType_unidirectional	1
#define	type_ANSI__TCAP_PackageType_queryWithPerm	2
#define	type_ANSI__TCAP_PackageType_queryWithoutPerm	3
#define	type_ANSI__TCAP_PackageType_response	4
#define	type_ANSI__TCAP_PackageType_conversationWithPerm	5
#define	type_ANSI__TCAP_PackageType_conversationWithoutPerm	6
#define	type_ANSI__TCAP_PackageType_abort	7

    union {
                        /* UniTransactionPDU */
        struct type_ANSI__TCAP_UniTransactionPDU *unidirectional;

                        /* TransactionPDU */
        struct type_ANSI__TCAP_TransactionPDU *queryWithPerm;

                        /* TransactionPDU */
        struct type_ANSI__TCAP_TransactionPDU *queryWithoutPerm;

                        /* TransactionPDU */
        struct type_ANSI__TCAP_TransactionPDU *response;

                        /* TransactionPDU */
        struct type_ANSI__TCAP_TransactionPDU *conversationWithPerm;

                        /* TransactionPDU */
        struct type_ANSI__TCAP_TransactionPDU *conversationWithoutPerm;

                        /* Abort */
        struct type_ANSI__TCAP_Abort *abort;
    }       un;
};
#define	free_ANSI__TCAP_PackageType(parm)\
	(void) fre_obj((char *) parm, _ZANSI_TCAP_mod.md_dtab[_ZPackageTypeANSI_TCAP], &_ZANSI_TCAP_mod, 1)
#ifdef __cplusplus
}
#endif

#endif
