/* automatically generated by asncomp 1.0, do not edit! */

#ifndef	_module_PRC__TCAP_defined_
#define	_module_PRC__TCAP_defined_

#ifndef	PEPSY_VERSION
#define	PEPSY_VERSION		2
#endif

#include <asn-c/AsnC.h>
#include <asn-c/UNIV-types.h>

#ifdef __cplusplus
extern "C"
{
#endif


extern SS7DLLAPI modtyp	_ZPRC_TCAP_mod;
#define _ZUnidirectionalPRC_TCAP	17
#define _ZReturnResultPRC_TCAP	8
#define _ZGeneralProblemPRC_TCAP	3
#define _ZErrorPRC_TCAP	2
#define _ZP_AbortCausePRC_TCAP	15
#define _ZAbortPRC_TCAP	21
#define _ZInvokeIdTypePRC_TCAP	0
#define _ZReturnErrorProblemPRC_TCAP	6
#define _ZContinuePRC_TCAP	20
#define _ZEndPRC_TCAP	19
#define _ZBeginPRC_TCAP	18
#define _ZReturnErrorPRC_TCAP	9
#define _ZDestTransactionIDPRC_TCAP	14
#define _ZMessageTypePRC_TCAP	22
#define _ZOperationPRC_TCAP	1
#define _ZInvokeProblemPRC_TCAP	4
#define _ZRejectPRC_TCAP	10
#define _ZReturnResultProblemPRC_TCAP	5
#define _ZOrigTransactionIDPRC_TCAP	13
#define _ZComponentPDUPRC_TCAP	11
#define _ZDialoguePortionPRC_TCAP	16
#define _ZComponentPortionPRC_TCAP	12
#define _ZInvokePRC_TCAP	7

#ifndef	lint
#define encode_PRC__TCAP_InvokeIdType(pe, top, len, buffer, parm) \
    enc_f(_ZInvokeIdTypePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_InvokeIdType(pe, top, len, buffer, parm) \
    dec_f(_ZInvokeIdTypePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_InvokeIdType(pe, top, len, buffer, parm) \
    prnt_f(_ZInvokeIdTypePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_InvokeIdType_P    _ZInvokeIdTypePRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_Operation(pe, top, len, buffer, parm) \
    enc_f(_ZOperationPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_Operation(pe, top, len, buffer, parm) \
    dec_f(_ZOperationPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_Operation(pe, top, len, buffer, parm) \
    prnt_f(_ZOperationPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_Operation_P    _ZOperationPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_Error(pe, top, len, buffer, parm) \
    enc_f(_ZErrorPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_Error(pe, top, len, buffer, parm) \
    dec_f(_ZErrorPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_Error(pe, top, len, buffer, parm) \
    prnt_f(_ZErrorPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_Error_P    _ZErrorPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_GeneralProblem(pe, top, len, buffer, parm) \
    enc_f(_ZGeneralProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_GeneralProblem(pe, top, len, buffer, parm) \
    dec_f(_ZGeneralProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_GeneralProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZGeneralProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_GeneralProblem_P    _ZGeneralProblemPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_InvokeProblem(pe, top, len, buffer, parm) \
    enc_f(_ZInvokeProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_InvokeProblem(pe, top, len, buffer, parm) \
    dec_f(_ZInvokeProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_InvokeProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZInvokeProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_InvokeProblem_P    _ZInvokeProblemPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_ReturnResultProblem(pe, top, len, buffer, parm) \
    enc_f(_ZReturnResultProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_ReturnResultProblem(pe, top, len, buffer, parm) \
    dec_f(_ZReturnResultProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_ReturnResultProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZReturnResultProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_ReturnResultProblem_P    _ZReturnResultProblemPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_ReturnErrorProblem(pe, top, len, buffer, parm) \
    enc_f(_ZReturnErrorProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_ReturnErrorProblem(pe, top, len, buffer, parm) \
    dec_f(_ZReturnErrorProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_ReturnErrorProblem(pe, top, len, buffer, parm) \
    prnt_f(_ZReturnErrorProblemPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_ReturnErrorProblem_P    _ZReturnErrorProblemPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_Invoke(pe, top, len, buffer, parm) \
    enc_f(_ZInvokePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_Invoke(pe, top, len, buffer, parm) \
    dec_f(_ZInvokePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_Invoke(pe, top, len, buffer, parm) \
    prnt_f(_ZInvokePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_Invoke_P    _ZInvokePRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_ReturnResult(pe, top, len, buffer, parm) \
    enc_f(_ZReturnResultPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_ReturnResult(pe, top, len, buffer, parm) \
    dec_f(_ZReturnResultPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_ReturnResult(pe, top, len, buffer, parm) \
    prnt_f(_ZReturnResultPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_ReturnResult_P    _ZReturnResultPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_ReturnError(pe, top, len, buffer, parm) \
    enc_f(_ZReturnErrorPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_ReturnError(pe, top, len, buffer, parm) \
    dec_f(_ZReturnErrorPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_ReturnError(pe, top, len, buffer, parm) \
    prnt_f(_ZReturnErrorPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_ReturnError_P    _ZReturnErrorPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_Reject(pe, top, len, buffer, parm) \
    enc_f(_ZRejectPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_Reject(pe, top, len, buffer, parm) \
    dec_f(_ZRejectPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_Reject(pe, top, len, buffer, parm) \
    prnt_f(_ZRejectPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_Reject_P    _ZRejectPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_ComponentPDU(pe, top, len, buffer, parm) \
    enc_f(_ZComponentPDUPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_ComponentPDU(pe, top, len, buffer, parm) \
    dec_f(_ZComponentPDUPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_ComponentPDU(pe, top, len, buffer, parm) \
    prnt_f(_ZComponentPDUPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_ComponentPDU_P    _ZComponentPDUPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_ComponentPortion(pe, top, len, buffer, parm) \
    enc_f(_ZComponentPortionPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_ComponentPortion(pe, top, len, buffer, parm) \
    dec_f(_ZComponentPortionPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_ComponentPortion(pe, top, len, buffer, parm) \
    prnt_f(_ZComponentPortionPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_ComponentPortion_P    _ZComponentPortionPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_OrigTransactionID(pe, top, len, buffer, parm) \
    enc_f(_ZOrigTransactionIDPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_OrigTransactionID(pe, top, len, buffer, parm) \
    dec_f(_ZOrigTransactionIDPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_OrigTransactionID(pe, top, len, buffer, parm) \
    prnt_f(_ZOrigTransactionIDPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_OrigTransactionID_P    _ZOrigTransactionIDPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_DestTransactionID(pe, top, len, buffer, parm) \
    enc_f(_ZDestTransactionIDPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_DestTransactionID(pe, top, len, buffer, parm) \
    dec_f(_ZDestTransactionIDPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_DestTransactionID(pe, top, len, buffer, parm) \
    prnt_f(_ZDestTransactionIDPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_DestTransactionID_P    _ZDestTransactionIDPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_P__AbortCause(pe, top, len, buffer, parm) \
    enc_f(_ZP_AbortCausePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_P__AbortCause(pe, top, len, buffer, parm) \
    dec_f(_ZP_AbortCausePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_P__AbortCause(pe, top, len, buffer, parm) \
    prnt_f(_ZP_AbortCausePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_P__AbortCause_P    _ZP_AbortCausePRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_DialoguePortion(pe, top, len, buffer, parm) \
    enc_f(_ZDialoguePortionPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_DialoguePortion(pe, top, len, buffer, parm) \
    dec_f(_ZDialoguePortionPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_DialoguePortion(pe, top, len, buffer, parm) \
    prnt_f(_ZDialoguePortionPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_DialoguePortion_P    _ZDialoguePortionPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_Unidirectional(pe, top, len, buffer, parm) \
    enc_f(_ZUnidirectionalPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_Unidirectional(pe, top, len, buffer, parm) \
    dec_f(_ZUnidirectionalPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_Unidirectional(pe, top, len, buffer, parm) \
    prnt_f(_ZUnidirectionalPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_Unidirectional_P    _ZUnidirectionalPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_Begin(pe, top, len, buffer, parm) \
    enc_f(_ZBeginPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_Begin(pe, top, len, buffer, parm) \
    dec_f(_ZBeginPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_Begin(pe, top, len, buffer, parm) \
    prnt_f(_ZBeginPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_Begin_P    _ZBeginPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_End(pe, top, len, buffer, parm) \
    enc_f(_ZEndPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_End(pe, top, len, buffer, parm) \
    dec_f(_ZEndPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_End(pe, top, len, buffer, parm) \
    prnt_f(_ZEndPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_End_P    _ZEndPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_Continue(pe, top, len, buffer, parm) \
    enc_f(_ZContinuePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_Continue(pe, top, len, buffer, parm) \
    dec_f(_ZContinuePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_Continue(pe, top, len, buffer, parm) \
    prnt_f(_ZContinuePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_Continue_P    _ZContinuePRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_Abort(pe, top, len, buffer, parm) \
    enc_f(_ZAbortPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_Abort(pe, top, len, buffer, parm) \
    dec_f(_ZAbortPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_Abort(pe, top, len, buffer, parm) \
    prnt_f(_ZAbortPRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_Abort_P    _ZAbortPRC_TCAP, &_ZPRC_TCAP_mod

#define encode_PRC__TCAP_MessageType(pe, top, len, buffer, parm) \
    enc_f(_ZMessageTypePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char *) parm)

#define decode_PRC__TCAP_MessageType(pe, top, len, buffer, parm) \
    dec_f(_ZMessageTypePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer, (char **) parm)

#define print_PRC__TCAP_MessageType(pe, top, len, buffer, parm) \
    prnt_f(_ZMessageTypePRC_TCAP, &_ZPRC_TCAP_mod, pe, top, len, buffer)
#define print_PRC__TCAP_MessageType_P    _ZMessageTypePRC_TCAP, &_ZPRC_TCAP_mod


#endif   /* lint */

                /* OCTET STRING */
#define	type_PRC__TCAP_OrigTransactionID	qbuf
#define	free_PRC__TCAP_OrigTransactionID	qb_free

                /* OCTET STRING */
#define	type_PRC__TCAP_DestTransactionID	qbuf
#define	free_PRC__TCAP_DestTransactionID	qb_free

                /* ANY */
#define	type_PRC__TCAP_DialoguePortion	PElement
#define	free_PRC__TCAP_DialoguePortion	pe_free

                /* INTEGER */
struct type_PRC__TCAP_InvokeIdType {
                    /* INTEGER */
    integer     parm;
};
#define	free_PRC__TCAP_InvokeIdType(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZInvokeIdTypePRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* CHOICE */
struct type_PRC__TCAP_Operation {
    int         offset;
#define	type_PRC__TCAP_Operation_localCode	1
#define	type_PRC__TCAP_Operation_globalCode	2

    union {
                        /* INTEGER */
        integer     localCode;

                        /* OBJECT IDENTIFIER */
        OID     globalCode;
    }       un;
};
#define	free_PRC__TCAP_Operation(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZOperationPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* CHOICE */
struct type_PRC__TCAP_Error {
    int         offset;
#define	type_PRC__TCAP_Error_localCode	1
#define	type_PRC__TCAP_Error_globalCode	2

    union {
                        /* INTEGER */
        integer     localCode;

                        /* OBJECT IDENTIFIER */
        OID     globalCode;
    }       un;
};
#define	free_PRC__TCAP_Error(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZErrorPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* INTEGER */
struct type_PRC__TCAP_GeneralProblem {
                    /* INTEGER */
    integer     parm;
#define	int_PRC__TCAP_GeneralProblem_unrecognizedComponent	0
#define	int_PRC__TCAP_GeneralProblem_mistypedComponent	1
#define	int_PRC__TCAP_GeneralProblem_badlyStructuredComponent	2
};
#define	free_PRC__TCAP_GeneralProblem(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZGeneralProblemPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* INTEGER */
struct type_PRC__TCAP_InvokeProblem {
                    /* INTEGER */
    integer     parm;
#define	int_PRC__TCAP_InvokeProblem_duplicateInvokeID	0
#define	int_PRC__TCAP_InvokeProblem_unrecognizedOperation	1
#define	int_PRC__TCAP_InvokeProblem_mistypedParameter	2
#define	int_PRC__TCAP_InvokeProblem_resourceLimitation	3
#define	int_PRC__TCAP_InvokeProblem_initiatingRelease	4
#define	int_PRC__TCAP_InvokeProblem_unrecognizedLinkedID	5
#define	int_PRC__TCAP_InvokeProblem_linkedResponseUnexpected	6
#define	int_PRC__TCAP_InvokeProblem_unexpectedLinkedOperation	7
};
#define	free_PRC__TCAP_InvokeProblem(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZInvokeProblemPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* INTEGER */
struct type_PRC__TCAP_ReturnResultProblem {
                    /* INTEGER */
    integer     parm;
#define	int_PRC__TCAP_ReturnResultProblem_unrecognizedInvokeID	0
#define	int_PRC__TCAP_ReturnResultProblem_returnResultUnexpected	1
#define	int_PRC__TCAP_ReturnResultProblem_mistypedParameter	2
};
#define	free_PRC__TCAP_ReturnResultProblem(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZReturnResultProblemPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* INTEGER */
struct type_PRC__TCAP_ReturnErrorProblem {
                    /* INTEGER */
    integer     parm;
#define	int_PRC__TCAP_ReturnErrorProblem_unrecognizedInvokeID	0
#define	int_PRC__TCAP_ReturnErrorProblem_returnErrorUnexpected	1
#define	int_PRC__TCAP_ReturnErrorProblem_unrecognizedError	2
#define	int_PRC__TCAP_ReturnErrorProblem_unexpectedError	3
#define	int_PRC__TCAP_ReturnErrorProblem_mistypedParameter	4
};
#define	free_PRC__TCAP_ReturnErrorProblem(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZReturnErrorProblemPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE */
struct type_PRC__TCAP_Invoke {
                    /* InvokeIdType */
    struct type_PRC__TCAP_InvokeIdType *invokeID;

                    /* InvokeIdType */
    struct type_PRC__TCAP_InvokeIdType *linkedID;

                    /* Operation */
    struct type_PRC__TCAP_Operation *operationCode;

                    /* ANY */
    PE      parameter;
};
#define	free_PRC__TCAP_Invoke(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZInvokePRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE */
struct type_PRC__TCAP_ReturnResult {
                    /* InvokeIdType */
    struct type_PRC__TCAP_InvokeIdType *invokeID;

                    /* SEQUENCE */
    struct element_PRC__TCAP_0 {
                        /* Operation */
        struct type_PRC__TCAP_Operation *operationCode;

                        /* ANY */
        PE      parameter;
    } *result;
};
#define	free_PRC__TCAP_ReturnResult(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZReturnResultPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE */
struct type_PRC__TCAP_ReturnError {
                    /* InvokeIdType */
    struct type_PRC__TCAP_InvokeIdType *invokeID;

                    /* Error */
    struct type_PRC__TCAP_Error *errorCode;

                    /* ANY */
    PE      parameter;
};
#define	free_PRC__TCAP_ReturnError(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZReturnErrorPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE */
struct type_PRC__TCAP_Reject {
                    /* CHOICE */
    struct choice_PRC__TCAP_0 {
        int         offset;
#define	choice_PRC__TCAP_0_derivable	1
#define	choice_PRC__TCAP_0_not__derivable	2

        union {
                            /* InvokeIdType */
            struct type_PRC__TCAP_InvokeIdType *derivable;

                            /* NULL */
            char    not__derivable;
        }       un;
    } *invokeID;

                    /* CHOICE */
    struct choice_PRC__TCAP_1 {
        int         offset;
#define	choice_PRC__TCAP_1_generalProblem	1
#define	choice_PRC__TCAP_1_invokeProblem	2
#define	choice_PRC__TCAP_1_returnResultProblem	3
#define	choice_PRC__TCAP_1_returnErrorProblem	4

        union {
                            /* GeneralProblem */
            struct type_PRC__TCAP_GeneralProblem *generalProblem;

                            /* InvokeProblem */
            struct type_PRC__TCAP_InvokeProblem *invokeProblem;

                            /* ReturnResultProblem */
            struct type_PRC__TCAP_ReturnResultProblem *returnResultProblem;

                            /* ReturnErrorProblem */
            struct type_PRC__TCAP_ReturnErrorProblem *returnErrorProblem;
        }       un;
    } *problem;
};
#define	free_PRC__TCAP_Reject(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZRejectPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* CHOICE */
struct type_PRC__TCAP_ComponentPDU {
    int         offset;
#define	type_PRC__TCAP_ComponentPDU_invoke	1
#define	type_PRC__TCAP_ComponentPDU_returnResultLast	2
#define	type_PRC__TCAP_ComponentPDU_returnError	3
#define	type_PRC__TCAP_ComponentPDU_reject	4
#define	type_PRC__TCAP_ComponentPDU_returnResultNotLast	5

    union {
                        /* Invoke */
        struct type_PRC__TCAP_Invoke *invoke;

                        /* ReturnResult */
        struct type_PRC__TCAP_ReturnResult *returnResultLast;

                        /* ReturnError */
        struct type_PRC__TCAP_ReturnError *returnError;

                        /* Reject */
        struct type_PRC__TCAP_Reject *reject;

                        /* ReturnResult */
        struct type_PRC__TCAP_ReturnResult *returnResultNotLast;
    }       un;
};
#define	free_PRC__TCAP_ComponentPDU(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZComponentPDUPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE OF */
struct type_PRC__TCAP_ComponentPortion {
                        /* ComponentPDU */
        struct type_PRC__TCAP_ComponentPDU *ComponentPDU;

        struct type_PRC__TCAP_ComponentPortion *next;
};
#define	free_PRC__TCAP_ComponentPortion(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZComponentPortionPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* INTEGER */
struct type_PRC__TCAP_P__AbortCause {
                    /* INTEGER */
    integer     parm;
#define	int_PRC__TCAP_P__AbortCause_unrecognizedMessageType	0
#define	int_PRC__TCAP_P__AbortCause_unrecognizedTransactionID	1
#define	int_PRC__TCAP_P__AbortCause_badlyFormattedTransactionPortion	2
#define	int_PRC__TCAP_P__AbortCause_incorrectTransactionPortion	3
#define	int_PRC__TCAP_P__AbortCause_resourceLimitation	4
};
#define	free_PRC__TCAP_P__AbortCause(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZP_AbortCausePRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE */
struct type_PRC__TCAP_Unidirectional {
                    /* DialoguePortion */
    struct type_PRC__TCAP_DialoguePortion *dialoguePortion;

                    /* ComponentPortion */
    struct type_PRC__TCAP_ComponentPortion *components;
};
#define	free_PRC__TCAP_Unidirectional(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZUnidirectionalPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE */
struct type_PRC__TCAP_Begin {
                    /* OrigTransactionID */
    struct type_PRC__TCAP_OrigTransactionID *otid;

                    /* DialoguePortion */
    struct type_PRC__TCAP_DialoguePortion *dialoguePortion;

                    /* ComponentPortion */
    struct type_PRC__TCAP_ComponentPortion *components;
};
#define	free_PRC__TCAP_Begin(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZBeginPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE */
struct type_PRC__TCAP_End {
                    /* DestTransactionID */
    struct type_PRC__TCAP_DestTransactionID *dtid;

                    /* DialoguePortion */
    struct type_PRC__TCAP_DialoguePortion *dialoguePortion;

                    /* ComponentPortion */
    struct type_PRC__TCAP_ComponentPortion *components;
};
#define	free_PRC__TCAP_End(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZEndPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE */
struct type_PRC__TCAP_Continue {
                    /* OrigTransactionID */
    struct type_PRC__TCAP_OrigTransactionID *otid;

                    /* DestTransactionID */
    struct type_PRC__TCAP_DestTransactionID *dtid;

                    /* DialoguePortion */
    struct type_PRC__TCAP_DialoguePortion *dialoguePortion;

                    /* ComponentPortion */
    struct type_PRC__TCAP_ComponentPortion *components;
};
#define	free_PRC__TCAP_Continue(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZContinuePRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* SEQUENCE */
struct type_PRC__TCAP_Abort {
                    /* DestTransactionID */
    struct type_PRC__TCAP_DestTransactionID *dtid;

                    /* CHOICE */
    struct choice_PRC__TCAP_2 {
        int         offset;
#define	choice_PRC__TCAP_2_p__abort__cause	1
#define	choice_PRC__TCAP_2_dialoguePortion	2

        union {
                            /* P-AbortCause */
            struct type_PRC__TCAP_P__AbortCause *p__abort__cause;

                            /* DialoguePortion */
            struct type_PRC__TCAP_DialoguePortion *dialoguePortion;
        }       un;
    } *reason;
};
#define	free_PRC__TCAP_Abort(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZAbortPRC_TCAP], &_ZPRC_TCAP_mod, 1)

                /* CHOICE */
struct type_PRC__TCAP_MessageType {
    int         offset;
#define	type_PRC__TCAP_MessageType_unidirectional	1
#define	type_PRC__TCAP_MessageType_begin	2
#define	type_PRC__TCAP_MessageType_end	3
#define	type_PRC__TCAP_MessageType_contin	4
#define	type_PRC__TCAP_MessageType_abort	5

    union {
                        /* Unidirectional */
        struct type_PRC__TCAP_Unidirectional *unidirectional;

                        /* Begin */
        struct type_PRC__TCAP_Begin *begin;

                        /* End */
        struct type_PRC__TCAP_End *end;

                        /* Continue */
        struct type_PRC__TCAP_Continue *contin;

                        /* Abort */
        struct type_PRC__TCAP_Abort *abort;
    }       un;
};
#define	free_PRC__TCAP_MessageType(parm)\
	(void) fre_obj((char *) parm, _ZPRC_TCAP_mod.md_dtab[_ZMessageTypePRC_TCAP], &_ZPRC_TCAP_mod, 1)
#ifdef __cplusplus
}
#endif

#endif
