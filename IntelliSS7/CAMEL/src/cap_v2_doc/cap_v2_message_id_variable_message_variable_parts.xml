<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequenceOf>

<className>MessageID::VariableMessage::VariableParts</className>
<asnTypeName>MessageID::variableMessage::variableParts</asnTypeName>
<moduleName>CAP_V2</moduleName>


<memberFunctions>

<memberFunctionAdd>
<name>AddElement</name>
<signature>void AddElement(VariablePart* element)</signature>
<elementTypeName>VariablePart</elementTypeName>
</memberFunctionAdd>

<memberFunctionAddWithRef>
<name>AddElement</name>
<signature>void AddElement(const VariablePart&amp; element)</signature>
<elementTypeName>VariablePart</elementTypeName>
</memberFunctionAddWithRef>

<memberFunctionAt>
<name>ElementAt</name>
<signature>const VariablePart&amp; ElementAt(size_t index) const</signature>
<elementTypeName>VariablePart</elementTypeName>
</memberFunctionAt>

</memberFunctions>



<asnDefinition>

<line>
<text>-- Note: the ASN.1 type definition containing the inner type is showed.</text>
</line>
<line>
<text></text>
</line>
<line>
<text>-- MessageID information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>MessageID ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    elementaryMessageID [0] IMPLICIT Integer4 -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    text [1] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        messageContent [0] IMPLICIT IA5String -- [linked] -- (SIZE(minMessageContentLength -- [linked] --..maxMessageContentLength -- [linked] --)) ,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        attributes [1] IMPLICIT OCTET STRING (SIZE(minAttributesLength -- [linked] --..maxAttributesLength -- [linked] --))  OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    elementaryMessageIDs [29] IMPLICIT SEQUENCE (SIZE(1..numOfMessageIDs -- [linked] --)) OF Integer4 -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    variableMessage [30] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        elementaryMessageID [0] IMPLICIT Integer4 -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        variableParts [1] IMPLICIT SEQUENCE (SIZE(1..5)) OF VariablePart -- [linked] --</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequenceOf>

</asnType>

