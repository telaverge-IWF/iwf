<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>NACarrierInformation</className>
<asnTypeName>NACarrierInformation</asnTypeName>
<moduleName>CAP_V2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetNaCarrierId</name>
<signature>void SetNaCarrierId(NAEA_CIC* element)</signature>
<elmentName>NaCarrierId</elmentName>
<asnElementName>naCarrierId</asnElementName>
<elementTypeName>NAEA_CIC</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNaCarrierId</name>
<signature>void SetNaCarrierId(const NAEA_CIC&amp; element)</signature>
<elementName>NaCarrierId</elementName>
<asnElementName>naCarrierId</asnElementName>
<elementTypeName>NAEA_CIC</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNaCarrierId</name>
<signature>const NAEA_CIC&amp; GetNaCarrierId() const</signature>
<elementName>NaCarrierId</elementName>
<asnElementName>naCarrierId</asnElementName>
<elementTypeName>NAEA_CIC</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNaCarrierId</name>
<signature>bool OptionNaCarrierId() const</signature>
<elementName>NaCarrierId</elementName>
<asnElementName>naCarrierId</asnElementName>
<elementTypeName>NAEA_CIC</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNaCICSelectionType</name>
<signature>void SetNaCICSelectionType(NACarrierSelectionInfo* element)</signature>
<elmentName>NaCICSelectionType</elmentName>
<asnElementName>naCICSelectionType</asnElementName>
<elementTypeName>NACarrierSelectionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNaCICSelectionType</name>
<signature>void SetNaCICSelectionType(const NACarrierSelectionInfo&amp; element)</signature>
<elementName>NaCICSelectionType</elementName>
<asnElementName>naCICSelectionType</asnElementName>
<elementTypeName>NACarrierSelectionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNaCICSelectionType</name>
<signature>const NACarrierSelectionInfo&amp; GetNaCICSelectionType() const</signature>
<elementName>NaCICSelectionType</elementName>
<asnElementName>naCICSelectionType</asnElementName>
<elementTypeName>NACarrierSelectionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNaCICSelectionType</name>
<signature>bool OptionNaCICSelectionType() const</signature>
<elementName>NaCICSelectionType</elementName>
<asnElementName>naCICSelectionType</asnElementName>
<elementTypeName>NACarrierSelectionInfo</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- NACarrierInformation information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>NACarrierInformation ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    naCarrierId [0] IMPLICIT NAEA-CIC -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    naCICSelectionType [1] IMPLICIT NACarrierSelectionInfo -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

