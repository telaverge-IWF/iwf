<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>EventSpecificInformationBCSM</className>
<asnTypeName>EventSpecificInformationBCSM</asnTypeName>
<moduleName>CAP_V2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceRouteSelectFailureSpecificInfo</name>
<signature>void SetChoiceRouteSelectFailureSpecificInfo(RouteSelectFailureSpecificInfo* choice)</signature>
<choiceName>RouteSelectFailureSpecificInfo</choiceName>
<asnChoiceName>routeSelectFailureSpecificInfo</asnChoiceName>
<choiceTypeName>RouteSelectFailureSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceRouteSelectFailureSpecificInfo</name>
<signature>void SetChoiceRouteSelectFailureSpecificInfo(const RouteSelectFailureSpecificInfo&amp; choice)</signature>
<choiceName>RouteSelectFailureSpecificInfo</choiceName>
<asnChoiceName>routeSelectFailureSpecificInfo</asnChoiceName>
<choiceTypeName>RouteSelectFailureSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceRouteSelectFailureSpecificInfo</name>
<signature>const RouteSelectFailureSpecificInfo&amp; GetChoiceRouteSelectFailureSpecificInfo() const</signature>
<choiceName>RouteSelectFailureSpecificInfo</choiceName>
<asnChoiceName>routeSelectFailureSpecificInfo</asnChoiceName>
<choiceTypeName>RouteSelectFailureSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceRouteSelectFailureSpecificInfo</name>
<signature>bool ChoiceRouteSelectFailureSpecificInfo() const</signature>
<choiceName>RouteSelectFailureSpecificInfo</choiceName>
<asnChoiceName>routeSelectFailureSpecificInfo</asnChoiceName>
<choiceTypeName>RouteSelectFailureSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOCalledPartyBusySpecificInfo</name>
<signature>void SetChoiceOCalledPartyBusySpecificInfo(OCalledPartyBusySpecificInfo* choice)</signature>
<choiceName>OCalledPartyBusySpecificInfo</choiceName>
<asnChoiceName>oCalledPartyBusySpecificInfo</asnChoiceName>
<choiceTypeName>OCalledPartyBusySpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOCalledPartyBusySpecificInfo</name>
<signature>void SetChoiceOCalledPartyBusySpecificInfo(const OCalledPartyBusySpecificInfo&amp; choice)</signature>
<choiceName>OCalledPartyBusySpecificInfo</choiceName>
<asnChoiceName>oCalledPartyBusySpecificInfo</asnChoiceName>
<choiceTypeName>OCalledPartyBusySpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOCalledPartyBusySpecificInfo</name>
<signature>const OCalledPartyBusySpecificInfo&amp; GetChoiceOCalledPartyBusySpecificInfo() const</signature>
<choiceName>OCalledPartyBusySpecificInfo</choiceName>
<asnChoiceName>oCalledPartyBusySpecificInfo</asnChoiceName>
<choiceTypeName>OCalledPartyBusySpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOCalledPartyBusySpecificInfo</name>
<signature>bool ChoiceOCalledPartyBusySpecificInfo() const</signature>
<choiceName>OCalledPartyBusySpecificInfo</choiceName>
<asnChoiceName>oCalledPartyBusySpecificInfo</asnChoiceName>
<choiceTypeName>OCalledPartyBusySpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceONoAnswerSpecificInfo</name>
<signature>void SetChoiceONoAnswerSpecificInfo(ONoAnswerSpecificInfo* choice)</signature>
<choiceName>ONoAnswerSpecificInfo</choiceName>
<asnChoiceName>oNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>ONoAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceONoAnswerSpecificInfo</name>
<signature>void SetChoiceONoAnswerSpecificInfo(const ONoAnswerSpecificInfo&amp; choice)</signature>
<choiceName>ONoAnswerSpecificInfo</choiceName>
<asnChoiceName>oNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>ONoAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceONoAnswerSpecificInfo</name>
<signature>const ONoAnswerSpecificInfo&amp; GetChoiceONoAnswerSpecificInfo() const</signature>
<choiceName>ONoAnswerSpecificInfo</choiceName>
<asnChoiceName>oNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>ONoAnswerSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceONoAnswerSpecificInfo</name>
<signature>bool ChoiceONoAnswerSpecificInfo() const</signature>
<choiceName>ONoAnswerSpecificInfo</choiceName>
<asnChoiceName>oNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>ONoAnswerSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOAnswerSpecificInfo</name>
<signature>void SetChoiceOAnswerSpecificInfo(OAnswerSpecificInfo* choice)</signature>
<choiceName>OAnswerSpecificInfo</choiceName>
<asnChoiceName>oAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>OAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOAnswerSpecificInfo</name>
<signature>void SetChoiceOAnswerSpecificInfo(const OAnswerSpecificInfo&amp; choice)</signature>
<choiceName>OAnswerSpecificInfo</choiceName>
<asnChoiceName>oAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>OAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOAnswerSpecificInfo</name>
<signature>const OAnswerSpecificInfo&amp; GetChoiceOAnswerSpecificInfo() const</signature>
<choiceName>OAnswerSpecificInfo</choiceName>
<asnChoiceName>oAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>OAnswerSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOAnswerSpecificInfo</name>
<signature>bool ChoiceOAnswerSpecificInfo() const</signature>
<choiceName>OAnswerSpecificInfo</choiceName>
<asnChoiceName>oAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>OAnswerSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceODisconnectSpecificInfo</name>
<signature>void SetChoiceODisconnectSpecificInfo(ODisconnectSpecificInfo* choice)</signature>
<choiceName>ODisconnectSpecificInfo</choiceName>
<asnChoiceName>oDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>ODisconnectSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceODisconnectSpecificInfo</name>
<signature>void SetChoiceODisconnectSpecificInfo(const ODisconnectSpecificInfo&amp; choice)</signature>
<choiceName>ODisconnectSpecificInfo</choiceName>
<asnChoiceName>oDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>ODisconnectSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceODisconnectSpecificInfo</name>
<signature>const ODisconnectSpecificInfo&amp; GetChoiceODisconnectSpecificInfo() const</signature>
<choiceName>ODisconnectSpecificInfo</choiceName>
<asnChoiceName>oDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>ODisconnectSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceODisconnectSpecificInfo</name>
<signature>bool ChoiceODisconnectSpecificInfo() const</signature>
<choiceName>ODisconnectSpecificInfo</choiceName>
<asnChoiceName>oDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>ODisconnectSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTBusySpecificInfo</name>
<signature>void SetChoiceTBusySpecificInfo(TBusySpecificInfo* choice)</signature>
<choiceName>TBusySpecificInfo</choiceName>
<asnChoiceName>tBusySpecificInfo</asnChoiceName>
<choiceTypeName>TBusySpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTBusySpecificInfo</name>
<signature>void SetChoiceTBusySpecificInfo(const TBusySpecificInfo&amp; choice)</signature>
<choiceName>TBusySpecificInfo</choiceName>
<asnChoiceName>tBusySpecificInfo</asnChoiceName>
<choiceTypeName>TBusySpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTBusySpecificInfo</name>
<signature>const TBusySpecificInfo&amp; GetChoiceTBusySpecificInfo() const</signature>
<choiceName>TBusySpecificInfo</choiceName>
<asnChoiceName>tBusySpecificInfo</asnChoiceName>
<choiceTypeName>TBusySpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTBusySpecificInfo</name>
<signature>bool ChoiceTBusySpecificInfo() const</signature>
<choiceName>TBusySpecificInfo</choiceName>
<asnChoiceName>tBusySpecificInfo</asnChoiceName>
<choiceTypeName>TBusySpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTNoAnswerSpecificInfo</name>
<signature>void SetChoiceTNoAnswerSpecificInfo(TNoAnswerSpecificInfo* choice)</signature>
<choiceName>TNoAnswerSpecificInfo</choiceName>
<asnChoiceName>tNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TNoAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTNoAnswerSpecificInfo</name>
<signature>void SetChoiceTNoAnswerSpecificInfo(const TNoAnswerSpecificInfo&amp; choice)</signature>
<choiceName>TNoAnswerSpecificInfo</choiceName>
<asnChoiceName>tNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TNoAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTNoAnswerSpecificInfo</name>
<signature>const TNoAnswerSpecificInfo&amp; GetChoiceTNoAnswerSpecificInfo() const</signature>
<choiceName>TNoAnswerSpecificInfo</choiceName>
<asnChoiceName>tNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TNoAnswerSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTNoAnswerSpecificInfo</name>
<signature>bool ChoiceTNoAnswerSpecificInfo() const</signature>
<choiceName>TNoAnswerSpecificInfo</choiceName>
<asnChoiceName>tNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TNoAnswerSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTAnswerSpecificInfo</name>
<signature>void SetChoiceTAnswerSpecificInfo(TAnswerSpecificInfo* choice)</signature>
<choiceName>TAnswerSpecificInfo</choiceName>
<asnChoiceName>tAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTAnswerSpecificInfo</name>
<signature>void SetChoiceTAnswerSpecificInfo(const TAnswerSpecificInfo&amp; choice)</signature>
<choiceName>TAnswerSpecificInfo</choiceName>
<asnChoiceName>tAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTAnswerSpecificInfo</name>
<signature>const TAnswerSpecificInfo&amp; GetChoiceTAnswerSpecificInfo() const</signature>
<choiceName>TAnswerSpecificInfo</choiceName>
<asnChoiceName>tAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TAnswerSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTAnswerSpecificInfo</name>
<signature>bool ChoiceTAnswerSpecificInfo() const</signature>
<choiceName>TAnswerSpecificInfo</choiceName>
<asnChoiceName>tAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TAnswerSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTDisconnectSpecificInfo</name>
<signature>void SetChoiceTDisconnectSpecificInfo(TDisconnectSpecificInfo* choice)</signature>
<choiceName>TDisconnectSpecificInfo</choiceName>
<asnChoiceName>tDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>TDisconnectSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTDisconnectSpecificInfo</name>
<signature>void SetChoiceTDisconnectSpecificInfo(const TDisconnectSpecificInfo&amp; choice)</signature>
<choiceName>TDisconnectSpecificInfo</choiceName>
<asnChoiceName>tDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>TDisconnectSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTDisconnectSpecificInfo</name>
<signature>const TDisconnectSpecificInfo&amp; GetChoiceTDisconnectSpecificInfo() const</signature>
<choiceName>TDisconnectSpecificInfo</choiceName>
<asnChoiceName>tDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>TDisconnectSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTDisconnectSpecificInfo</name>
<signature>bool ChoiceTDisconnectSpecificInfo() const</signature>
<choiceName>TDisconnectSpecificInfo</choiceName>
<asnChoiceName>tDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>TDisconnectSpecificInfo</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- EventSpecificInformationBCSM information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>EventSpecificInformationBCSM ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    routeSelectFailureSpecificInfo [2] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        failureCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oCalledPartyBusySpecificInfo [3] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        busyCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oNoAnswerSpecificInfo [4] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oAnswerSpecificInfo [5] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oDisconnectSpecificInfo [7] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        releaseCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tBusySpecificInfo [8] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        busyCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        callForwarded [50] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tNoAnswerSpecificInfo [9] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        callForwarded [50] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tAnswerSpecificInfo [10] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tDisconnectSpecificInfo [12] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        releaseCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

