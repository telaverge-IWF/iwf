<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>MiscCallInfo</className>
<asnTypeName>MiscCallInfo</asnTypeName>
<moduleName>CAP_V2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetMessageType</name>
<signature>void SetMessageType(MessageType* element)</signature>
<elmentName>MessageType</elmentName>
<asnElementName>messageType</asnElementName>
<elementTypeName>MessageType</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMessageType</name>
<signature>void SetMessageType(const MessageType&amp; element)</signature>
<elementName>MessageType</elementName>
<asnElementName>messageType</asnElementName>
<elementTypeName>MessageType</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMessageType</name>
<signature>const MessageType&amp; GetMessageType() const</signature>
<elementName>MessageType</elementName>
<asnElementName>messageType</asnElementName>
<elementTypeName>MessageType</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetDpAssignment</name>
<signature>void SetDpAssignment(DpAssignment* element)</signature>
<elmentName>DpAssignment</elmentName>
<asnElementName>dpAssignment</asnElementName>
<elementTypeName>DpAssignment</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDpAssignment</name>
<signature>void SetDpAssignment(const DpAssignment&amp; element)</signature>
<elementName>DpAssignment</elementName>
<asnElementName>dpAssignment</asnElementName>
<elementTypeName>DpAssignment</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDpAssignment</name>
<signature>const DpAssignment&amp; GetDpAssignment() const</signature>
<elementName>DpAssignment</elementName>
<asnElementName>dpAssignment</asnElementName>
<elementTypeName>DpAssignment</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDpAssignment</name>
<signature>bool OptionDpAssignment() const</signature>
<elementName>DpAssignment</elementName>
<asnElementName>dpAssignment</asnElementName>
<elementTypeName>DpAssignment</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- MiscCallInfo information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>MiscCallInfo ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    messageType [0] IMPLICIT ENUMERATED</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        request(0),</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        notification(1)</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    dpAssignment [1] IMPLICIT ENUMERATED</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        individualLine(0),</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        groupBased(1),</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        officeBased(2)</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    } OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

