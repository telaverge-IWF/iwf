<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ConnectGPRSArg</className>
<asnTypeName>ConnectGPRSArg</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetAccessPointName</name>
<signature>void SetAccessPointName(AccessPointName* element)</signature>
<elmentName>AccessPointName</elmentName>
<asnElementName>accessPointName</asnElementName>
<elementTypeName>AccessPointName</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAccessPointName</name>
<signature>void SetAccessPointName(const AccessPointName&amp; element)</signature>
<elementName>AccessPointName</elementName>
<asnElementName>accessPointName</asnElementName>
<elementTypeName>AccessPointName</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAccessPointName</name>
<signature>const AccessPointName&amp; GetAccessPointName() const</signature>
<elementName>AccessPointName</elementName>
<asnElementName>accessPointName</asnElementName>
<elementTypeName>AccessPointName</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetPdpID</name>
<signature>void SetPdpID(PDPID* element)</signature>
<elmentName>PdpID</elmentName>
<asnElementName>pdpID</asnElementName>
<elementTypeName>PDPID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPdpID</name>
<signature>void SetPdpID(const PDPID&amp; element)</signature>
<elementName>PdpID</elementName>
<asnElementName>pdpID</asnElementName>
<elementTypeName>PDPID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPdpID</name>
<signature>const PDPID&amp; GetPdpID() const</signature>
<elementName>PdpID</elementName>
<asnElementName>pdpID</asnElementName>
<elementTypeName>PDPID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPdpID</name>
<signature>bool OptionPdpID() const</signature>
<elementName>PdpID</elementName>
<asnElementName>pdpID</asnElementName>
<elementTypeName>PDPID</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ConnectGPRSArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ConnectGPRSArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    accessPointName [0] IMPLICIT AccessPointName -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pdpID [1] IMPLICIT PDPID -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

