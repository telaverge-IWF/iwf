<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>EventReportSMSArg</className>
<asnTypeName>EventReportSMSArg</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetEventTypeSMS</name>
<signature>void SetEventTypeSMS(EventTypeSMS* element)</signature>
<elmentName>EventTypeSMS</elmentName>
<asnElementName>eventTypeSMS</asnElementName>
<elementTypeName>EventTypeSMS</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEventTypeSMS</name>
<signature>void SetEventTypeSMS(const EventTypeSMS&amp; element)</signature>
<elementName>EventTypeSMS</elementName>
<asnElementName>eventTypeSMS</asnElementName>
<elementTypeName>EventTypeSMS</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEventTypeSMS</name>
<signature>const EventTypeSMS&amp; GetEventTypeSMS() const</signature>
<elementName>EventTypeSMS</elementName>
<asnElementName>eventTypeSMS</asnElementName>
<elementTypeName>EventTypeSMS</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetEventSpecificInformationSMS</name>
<signature>void SetEventSpecificInformationSMS(EventSpecificInformationSMS* element)</signature>
<elmentName>EventSpecificInformationSMS</elmentName>
<asnElementName>eventSpecificInformationSMS</asnElementName>
<elementTypeName>EventSpecificInformationSMS</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEventSpecificInformationSMS</name>
<signature>void SetEventSpecificInformationSMS(const EventSpecificInformationSMS&amp; element)</signature>
<elementName>EventSpecificInformationSMS</elementName>
<asnElementName>eventSpecificInformationSMS</asnElementName>
<elementTypeName>EventSpecificInformationSMS</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEventSpecificInformationSMS</name>
<signature>const EventSpecificInformationSMS&amp; GetEventSpecificInformationSMS() const</signature>
<elementName>EventSpecificInformationSMS</elementName>
<asnElementName>eventSpecificInformationSMS</asnElementName>
<elementTypeName>EventSpecificInformationSMS</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionEventSpecificInformationSMS</name>
<signature>bool OptionEventSpecificInformationSMS() const</signature>
<elementName>EventSpecificInformationSMS</elementName>
<asnElementName>eventSpecificInformationSMS</asnElementName>
<elementTypeName>EventSpecificInformationSMS</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMiscCallInfo</name>
<signature>void SetMiscCallInfo(MiscCallInfo* element)</signature>
<elmentName>MiscCallInfo</elmentName>
<asnElementName>miscCallInfo</asnElementName>
<elementTypeName>MiscCallInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMiscCallInfo</name>
<signature>void SetMiscCallInfo(const MiscCallInfo&amp; element)</signature>
<elementName>MiscCallInfo</elementName>
<asnElementName>miscCallInfo</asnElementName>
<elementTypeName>MiscCallInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMiscCallInfo</name>
<signature>const MiscCallInfo&amp; GetMiscCallInfo() const</signature>
<elementName>MiscCallInfo</elementName>
<asnElementName>miscCallInfo</asnElementName>
<elementTypeName>MiscCallInfo</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- EventReportSMSArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>EventReportSMSArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    eventTypeSMS [0] IMPLICIT EventTypeSMS -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    eventSpecificInformationSMS [1] IMPLICIT EventSpecificInformationSMS -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    miscCallInfo [2] IMPLICIT MiscCallInfo -- [linked] -- DEFAULT ,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [10] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

