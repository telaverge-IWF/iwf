<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>InitialDPSMSArg</className>
<asnTypeName>InitialDPSMSArg</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetServiceKey</name>
<signature>void SetServiceKey(ServiceKey* element)</signature>
<elmentName>ServiceKey</elmentName>
<asnElementName>serviceKey</asnElementName>
<elementTypeName>ServiceKey</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServiceKey</name>
<signature>void SetServiceKey(const ServiceKey&amp; element)</signature>
<elementName>ServiceKey</elementName>
<asnElementName>serviceKey</asnElementName>
<elementTypeName>ServiceKey</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServiceKey</name>
<signature>const ServiceKey&amp; GetServiceKey() const</signature>
<elementName>ServiceKey</elementName>
<asnElementName>serviceKey</asnElementName>
<elementTypeName>ServiceKey</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetDestinationSubscriberNumber</name>
<signature>void SetDestinationSubscriberNumber(CalledPartyBCDNumber* element)</signature>
<elmentName>DestinationSubscriberNumber</elmentName>
<asnElementName>destinationSubscriberNumber</asnElementName>
<elementTypeName>CalledPartyBCDNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDestinationSubscriberNumber</name>
<signature>void SetDestinationSubscriberNumber(const CalledPartyBCDNumber&amp; element)</signature>
<elementName>DestinationSubscriberNumber</elementName>
<asnElementName>destinationSubscriberNumber</asnElementName>
<elementTypeName>CalledPartyBCDNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDestinationSubscriberNumber</name>
<signature>const CalledPartyBCDNumber&amp; GetDestinationSubscriberNumber() const</signature>
<elementName>DestinationSubscriberNumber</elementName>
<asnElementName>destinationSubscriberNumber</asnElementName>
<elementTypeName>CalledPartyBCDNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDestinationSubscriberNumber</name>
<signature>bool OptionDestinationSubscriberNumber() const</signature>
<elementName>DestinationSubscriberNumber</elementName>
<asnElementName>destinationSubscriberNumber</asnElementName>
<elementTypeName>CalledPartyBCDNumber</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCallingPartyNumber</name>
<signature>void SetCallingPartyNumber(ISDN_AddressString* element)</signature>
<elmentName>CallingPartyNumber</elmentName>
<asnElementName>callingPartyNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallingPartyNumber</name>
<signature>void SetCallingPartyNumber(const ISDN_AddressString&amp; element)</signature>
<elementName>CallingPartyNumber</elementName>
<asnElementName>callingPartyNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallingPartyNumber</name>
<signature>const ISDN_AddressString&amp; GetCallingPartyNumber() const</signature>
<elementName>CallingPartyNumber</elementName>
<asnElementName>callingPartyNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCallingPartyNumber</name>
<signature>bool OptionCallingPartyNumber() const</signature>
<elementName>CallingPartyNumber</elementName>
<asnElementName>callingPartyNumber</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetEventTypeSMS</name>
<signature>void SetEventTypeSMS(EventTypeSMS* element)</signature>
<elmentName>EventTypeSMS</elmentName>
<asnElementName>eventTypeSMS</asnElementName>
<elementTypeName>EventTypeSMS</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEventTypeSMS</name>
<signature>void SetEventTypeSMS(const EventTypeSMS&amp; element)</signature>
<elementName>EventTypeSMS</elementName>
<asnElementName>eventTypeSMS</asnElementName>
<elementTypeName>EventTypeSMS</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEventTypeSMS</name>
<signature>const EventTypeSMS&amp; GetEventTypeSMS() const</signature>
<elementName>EventTypeSMS</elementName>
<asnElementName>eventTypeSMS</asnElementName>
<elementTypeName>EventTypeSMS</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionEventTypeSMS</name>
<signature>bool OptionEventTypeSMS() const</signature>
<elementName>EventTypeSMS</elementName>
<asnElementName>eventTypeSMS</asnElementName>
<elementTypeName>EventTypeSMS</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetIMSI</name>
<signature>void SetIMSI(IMSI* element)</signature>
<elmentName>IMSI</elmentName>
<asnElementName>iMSI</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIMSI</name>
<signature>void SetIMSI(const IMSI&amp; element)</signature>
<elementName>IMSI</elementName>
<asnElementName>iMSI</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIMSI</name>
<signature>const IMSI&amp; GetIMSI() const</signature>
<elementName>IMSI</elementName>
<asnElementName>iMSI</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionIMSI</name>
<signature>bool OptionIMSI() const</signature>
<elementName>IMSI</elementName>
<asnElementName>iMSI</asnElementName>
<elementTypeName>IMSI</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLocationInformationMSC</name>
<signature>void SetLocationInformationMSC(LocationInformation* element)</signature>
<elmentName>LocationInformationMSC</elmentName>
<asnElementName>locationInformationMSC</asnElementName>
<elementTypeName>LocationInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLocationInformationMSC</name>
<signature>void SetLocationInformationMSC(const LocationInformation&amp; element)</signature>
<elementName>LocationInformationMSC</elementName>
<asnElementName>locationInformationMSC</asnElementName>
<elementTypeName>LocationInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLocationInformationMSC</name>
<signature>const LocationInformation&amp; GetLocationInformationMSC() const</signature>
<elementName>LocationInformationMSC</elementName>
<asnElementName>locationInformationMSC</asnElementName>
<elementTypeName>LocationInformation</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLocationInformationMSC</name>
<signature>bool OptionLocationInformationMSC() const</signature>
<elementName>LocationInformationMSC</elementName>
<asnElementName>locationInformationMSC</asnElementName>
<elementTypeName>LocationInformation</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLocationInformationGPRS</name>
<signature>void SetLocationInformationGPRS(LocationInformationGPRS* element)</signature>
<elmentName>LocationInformationGPRS</elmentName>
<asnElementName>locationInformationGPRS</asnElementName>
<elementTypeName>LocationInformationGPRS</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLocationInformationGPRS</name>
<signature>void SetLocationInformationGPRS(const LocationInformationGPRS&amp; element)</signature>
<elementName>LocationInformationGPRS</elementName>
<asnElementName>locationInformationGPRS</asnElementName>
<elementTypeName>LocationInformationGPRS</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLocationInformationGPRS</name>
<signature>const LocationInformationGPRS&amp; GetLocationInformationGPRS() const</signature>
<elementName>LocationInformationGPRS</elementName>
<asnElementName>locationInformationGPRS</asnElementName>
<elementTypeName>LocationInformationGPRS</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLocationInformationGPRS</name>
<signature>bool OptionLocationInformationGPRS() const</signature>
<elementName>LocationInformationGPRS</elementName>
<asnElementName>locationInformationGPRS</asnElementName>
<elementTypeName>LocationInformationGPRS</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSMSCAddress</name>
<signature>void SetSMSCAddress(ISDN_AddressString* element)</signature>
<elmentName>SMSCAddress</elmentName>
<asnElementName>sMSCAddress</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSMSCAddress</name>
<signature>void SetSMSCAddress(const ISDN_AddressString&amp; element)</signature>
<elementName>SMSCAddress</elementName>
<asnElementName>sMSCAddress</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSMSCAddress</name>
<signature>const ISDN_AddressString&amp; GetSMSCAddress() const</signature>
<elementName>SMSCAddress</elementName>
<asnElementName>sMSCAddress</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSMSCAddress</name>
<signature>bool OptionSMSCAddress() const</signature>
<elementName>SMSCAddress</elementName>
<asnElementName>sMSCAddress</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTimeAndTimezone</name>
<signature>void SetTimeAndTimezone(TimeAndTimezone* element)</signature>
<elmentName>TimeAndTimezone</elmentName>
<asnElementName>timeAndTimezone</asnElementName>
<elementTypeName>TimeAndTimezone</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTimeAndTimezone</name>
<signature>void SetTimeAndTimezone(const TimeAndTimezone&amp; element)</signature>
<elementName>TimeAndTimezone</elementName>
<asnElementName>timeAndTimezone</asnElementName>
<elementTypeName>TimeAndTimezone</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTimeAndTimezone</name>
<signature>const TimeAndTimezone&amp; GetTimeAndTimezone() const</signature>
<elementName>TimeAndTimezone</elementName>
<asnElementName>timeAndTimezone</asnElementName>
<elementTypeName>TimeAndTimezone</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTimeAndTimezone</name>
<signature>bool OptionTimeAndTimezone() const</signature>
<elementName>TimeAndTimezone</elementName>
<asnElementName>timeAndTimezone</asnElementName>
<elementTypeName>TimeAndTimezone</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTPShortMessageSubmissionSpecificInfo</name>
<signature>void SetTPShortMessageSubmissionSpecificInfo(TPShortMessageSubmissionInfo* element)</signature>
<elmentName>TPShortMessageSubmissionSpecificInfo</elmentName>
<asnElementName>tPShortMessageSubmissionSpecificInfo</asnElementName>
<elementTypeName>TPShortMessageSubmissionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTPShortMessageSubmissionSpecificInfo</name>
<signature>void SetTPShortMessageSubmissionSpecificInfo(const TPShortMessageSubmissionInfo&amp; element)</signature>
<elementName>TPShortMessageSubmissionSpecificInfo</elementName>
<asnElementName>tPShortMessageSubmissionSpecificInfo</asnElementName>
<elementTypeName>TPShortMessageSubmissionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTPShortMessageSubmissionSpecificInfo</name>
<signature>const TPShortMessageSubmissionInfo&amp; GetTPShortMessageSubmissionSpecificInfo() const</signature>
<elementName>TPShortMessageSubmissionSpecificInfo</elementName>
<asnElementName>tPShortMessageSubmissionSpecificInfo</asnElementName>
<elementTypeName>TPShortMessageSubmissionInfo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTPShortMessageSubmissionSpecificInfo</name>
<signature>bool OptionTPShortMessageSubmissionSpecificInfo() const</signature>
<elementName>TPShortMessageSubmissionSpecificInfo</elementName>
<asnElementName>tPShortMessageSubmissionSpecificInfo</asnElementName>
<elementTypeName>TPShortMessageSubmissionInfo</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTPProtocolIdentifier</name>
<signature>void SetTPProtocolIdentifier(TPProtocolIdentifier* element)</signature>
<elmentName>TPProtocolIdentifier</elmentName>
<asnElementName>tPProtocolIdentifier</asnElementName>
<elementTypeName>TPProtocolIdentifier</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTPProtocolIdentifier</name>
<signature>void SetTPProtocolIdentifier(const TPProtocolIdentifier&amp; element)</signature>
<elementName>TPProtocolIdentifier</elementName>
<asnElementName>tPProtocolIdentifier</asnElementName>
<elementTypeName>TPProtocolIdentifier</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTPProtocolIdentifier</name>
<signature>const TPProtocolIdentifier&amp; GetTPProtocolIdentifier() const</signature>
<elementName>TPProtocolIdentifier</elementName>
<asnElementName>tPProtocolIdentifier</asnElementName>
<elementTypeName>TPProtocolIdentifier</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTPProtocolIdentifier</name>
<signature>bool OptionTPProtocolIdentifier() const</signature>
<elementName>TPProtocolIdentifier</elementName>
<asnElementName>tPProtocolIdentifier</asnElementName>
<elementTypeName>TPProtocolIdentifier</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTPDataCodingScheme</name>
<signature>void SetTPDataCodingScheme(TPDataCodingScheme* element)</signature>
<elmentName>TPDataCodingScheme</elmentName>
<asnElementName>tPDataCodingScheme</asnElementName>
<elementTypeName>TPDataCodingScheme</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTPDataCodingScheme</name>
<signature>void SetTPDataCodingScheme(const TPDataCodingScheme&amp; element)</signature>
<elementName>TPDataCodingScheme</elementName>
<asnElementName>tPDataCodingScheme</asnElementName>
<elementTypeName>TPDataCodingScheme</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTPDataCodingScheme</name>
<signature>const TPDataCodingScheme&amp; GetTPDataCodingScheme() const</signature>
<elementName>TPDataCodingScheme</elementName>
<asnElementName>tPDataCodingScheme</asnElementName>
<elementTypeName>TPDataCodingScheme</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTPDataCodingScheme</name>
<signature>bool OptionTPDataCodingScheme() const</signature>
<elementName>TPDataCodingScheme</elementName>
<asnElementName>tPDataCodingScheme</asnElementName>
<elementTypeName>TPDataCodingScheme</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTPValidityPeriod</name>
<signature>void SetTPValidityPeriod(TPValidityPeriod* element)</signature>
<elmentName>TPValidityPeriod</elmentName>
<asnElementName>tPValidityPeriod</asnElementName>
<elementTypeName>TPValidityPeriod</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTPValidityPeriod</name>
<signature>void SetTPValidityPeriod(const TPValidityPeriod&amp; element)</signature>
<elementName>TPValidityPeriod</elementName>
<asnElementName>tPValidityPeriod</asnElementName>
<elementTypeName>TPValidityPeriod</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTPValidityPeriod</name>
<signature>const TPValidityPeriod&amp; GetTPValidityPeriod() const</signature>
<elementName>TPValidityPeriod</elementName>
<asnElementName>tPValidityPeriod</asnElementName>
<elementTypeName>TPValidityPeriod</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTPValidityPeriod</name>
<signature>bool OptionTPValidityPeriod() const</signature>
<elementName>TPValidityPeriod</elementName>
<asnElementName>tPValidityPeriod</asnElementName>
<elementTypeName>TPValidityPeriod</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSmsReferenceNumber</name>
<signature>void SetSmsReferenceNumber(CallReferenceNumber* element)</signature>
<elmentName>SmsReferenceNumber</elmentName>
<asnElementName>smsReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSmsReferenceNumber</name>
<signature>void SetSmsReferenceNumber(const CallReferenceNumber&amp; element)</signature>
<elementName>SmsReferenceNumber</elementName>
<asnElementName>smsReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSmsReferenceNumber</name>
<signature>const CallReferenceNumber&amp; GetSmsReferenceNumber() const</signature>
<elementName>SmsReferenceNumber</elementName>
<asnElementName>smsReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSmsReferenceNumber</name>
<signature>bool OptionSmsReferenceNumber() const</signature>
<elementName>SmsReferenceNumber</elementName>
<asnElementName>smsReferenceNumber</asnElementName>
<elementTypeName>CallReferenceNumber</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMscAddress</name>
<signature>void SetMscAddress(ISDN_AddressString* element)</signature>
<elmentName>MscAddress</elmentName>
<asnElementName>mscAddress</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMscAddress</name>
<signature>void SetMscAddress(const ISDN_AddressString&amp; element)</signature>
<elementName>MscAddress</elementName>
<asnElementName>mscAddress</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMscAddress</name>
<signature>const ISDN_AddressString&amp; GetMscAddress() const</signature>
<elementName>MscAddress</elementName>
<asnElementName>mscAddress</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionMscAddress</name>
<signature>bool OptionMscAddress() const</signature>
<elementName>MscAddress</elementName>
<asnElementName>mscAddress</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSgsn_Number</name>
<signature>void SetSgsn_Number(ISDN_AddressString* element)</signature>
<elmentName>Sgsn_Number</elmentName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSgsn_Number</name>
<signature>void SetSgsn_Number(const ISDN_AddressString&amp; element)</signature>
<elementName>Sgsn_Number</elementName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSgsn_Number</name>
<signature>const ISDN_AddressString&amp; GetSgsn_Number() const</signature>
<elementName>Sgsn_Number</elementName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSgsn_Number</name>
<signature>bool OptionSgsn_Number() const</signature>
<elementName>Sgsn_Number</elementName>
<asnElementName>sgsn-Number</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetImei</name>
<signature>void SetImei(IMEI* element)</signature>
<elmentName>Imei</elmentName>
<asnElementName>imei</asnElementName>
<elementTypeName>IMEI</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetImei</name>
<signature>void SetImei(const IMEI&amp; element)</signature>
<elementName>Imei</elementName>
<asnElementName>imei</asnElementName>
<elementTypeName>IMEI</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetImei</name>
<signature>const IMEI&amp; GetImei() const</signature>
<elementName>Imei</elementName>
<asnElementName>imei</asnElementName>
<elementTypeName>IMEI</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionImei</name>
<signature>bool OptionImei() const</signature>
<elementName>Imei</elementName>
<asnElementName>imei</asnElementName>
<elementTypeName>IMEI</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- InitialDPSMSArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>InitialDPSMSArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    serviceKey [0] IMPLICIT ServiceKey -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    destinationSubscriberNumber [1] IMPLICIT CalledPartyBCDNumber -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callingPartyNumber [2] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    eventTypeSMS [3] IMPLICIT EventTypeSMS -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    iMSI [4] IMPLICIT IMSI -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    locationInformationMSC [5] IMPLICIT LocationInformation -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    locationInformationGPRS [6] IMPLICIT LocationInformationGPRS -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sMSCAddress [7] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    timeAndTimezone [8] IMPLICIT TimeAndTimezone -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tPShortMessageSubmissionSpecificInfo [9] IMPLICIT TPShortMessageSubmissionInfo -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tPProtocolIdentifier [10] IMPLICIT TPProtocolIdentifier -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tPDataCodingScheme [11] IMPLICIT TPDataCodingScheme -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tPValidityPeriod [12] IMPLICIT TPValidityPeriod -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [13] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    smsReferenceNumber [14] IMPLICIT CallReferenceNumber -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mscAddress [15] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sgsn-Number [16] IMPLICIT ISDN-AddressString -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    imei [17] IMPLICIT IMEI -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

