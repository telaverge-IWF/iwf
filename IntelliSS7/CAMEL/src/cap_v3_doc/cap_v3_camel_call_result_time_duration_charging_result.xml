<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>CAMEL_CallResult::TimeDurationChargingResult</className>
<asnTypeName>CAMEL-CallResult::timeDurationChargingResult</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetPartyToCharge</name>
<signature>void SetPartyToCharge(ReceivingSideID* element)</signature>
<elmentName>PartyToCharge</elmentName>
<asnElementName>partyToCharge</asnElementName>
<elementTypeName>ReceivingSideID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPartyToCharge</name>
<signature>void SetPartyToCharge(const ReceivingSideID&amp; element)</signature>
<elementName>PartyToCharge</elementName>
<asnElementName>partyToCharge</asnElementName>
<elementTypeName>ReceivingSideID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPartyToCharge</name>
<signature>const ReceivingSideID&amp; GetPartyToCharge() const</signature>
<elementName>PartyToCharge</elementName>
<asnElementName>partyToCharge</asnElementName>
<elementTypeName>ReceivingSideID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetTimeInformation</name>
<signature>void SetTimeInformation(TimeInformation* element)</signature>
<elmentName>TimeInformation</elmentName>
<asnElementName>timeInformation</asnElementName>
<elementTypeName>TimeInformation</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTimeInformation</name>
<signature>void SetTimeInformation(const TimeInformation&amp; element)</signature>
<elementName>TimeInformation</elementName>
<asnElementName>timeInformation</asnElementName>
<elementTypeName>TimeInformation</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTimeInformation</name>
<signature>const TimeInformation&amp; GetTimeInformation() const</signature>
<elementName>TimeInformation</elementName>
<asnElementName>timeInformation</asnElementName>
<elementTypeName>TimeInformation</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCallActive</name>
<signature>void SetCallActive(CallActive* element)</signature>
<elmentName>CallActive</elmentName>
<asnElementName>callActive</asnElementName>
<elementTypeName>CallActive</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallActive</name>
<signature>void SetCallActive(const CallActive&amp; element)</signature>
<elementName>CallActive</elementName>
<asnElementName>callActive</asnElementName>
<elementTypeName>CallActive</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallActive</name>
<signature>const CallActive&amp; GetCallActive() const</signature>
<elementName>CallActive</elementName>
<asnElementName>callActive</asnElementName>
<elementTypeName>CallActive</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCallReleasedAtTcpExpiry</name>
<signature>void SetCallReleasedAtTcpExpiry(CallReleasedAtTcpExpiry* element)</signature>
<elmentName>CallReleasedAtTcpExpiry</elmentName>
<asnElementName>callReleasedAtTcpExpiry</asnElementName>
<elementTypeName>CallReleasedAtTcpExpiry</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallReleasedAtTcpExpiry</name>
<signature>void SetCallReleasedAtTcpExpiry(const CallReleasedAtTcpExpiry&amp; element)</signature>
<elementName>CallReleasedAtTcpExpiry</elementName>
<asnElementName>callReleasedAtTcpExpiry</asnElementName>
<elementTypeName>CallReleasedAtTcpExpiry</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallReleasedAtTcpExpiry</name>
<signature>const CallReleasedAtTcpExpiry&amp; GetCallReleasedAtTcpExpiry() const</signature>
<elementName>CallReleasedAtTcpExpiry</elementName>
<asnElementName>callReleasedAtTcpExpiry</asnElementName>
<elementTypeName>CallReleasedAtTcpExpiry</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCallReleasedAtTcpExpiry</name>
<signature>bool OptionCallReleasedAtTcpExpiry() const</signature>
<elementName>CallReleasedAtTcpExpiry</elementName>
<asnElementName>callReleasedAtTcpExpiry</asnElementName>
<elementTypeName>CallReleasedAtTcpExpiry</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CAMEL-CallResult information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CAMEL-CallResult ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    timeDurationChargingResult [0] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        partyToCharge [0] IMPLICIT ReceivingSideID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        timeInformation [1] IMPLICIT TimeInformation -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        callActive [2] IMPLICIT BOOLEAN DEFAULT TRUE,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        callReleasedAtTcpExpiry [3] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        extensions [4] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

