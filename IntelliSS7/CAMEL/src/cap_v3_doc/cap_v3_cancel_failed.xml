<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>CancelFailed</className>
<asnTypeName>CancelFailed</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetProblem</name>
<signature>void SetProblem(Problem* element)</signature>
<elmentName>Problem</elmentName>
<asnElementName>problem</asnElementName>
<elementTypeName>Problem</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetProblem</name>
<signature>void SetProblem(const Problem&amp; element)</signature>
<elementName>Problem</elementName>
<asnElementName>problem</asnElementName>
<elementTypeName>Problem</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetProblem</name>
<signature>const Problem&amp; GetProblem() const</signature>
<elementName>Problem</elementName>
<asnElementName>problem</asnElementName>
<elementTypeName>Problem</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetOperation</name>
<signature>void SetOperation(InvokeID* element)</signature>
<elmentName>Operation</elmentName>
<asnElementName>operation</asnElementName>
<elementTypeName>InvokeID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOperation</name>
<signature>void SetOperation(const InvokeID&amp; element)</signature>
<elementName>Operation</elementName>
<asnElementName>operation</asnElementName>
<elementTypeName>InvokeID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOperation</name>
<signature>const InvokeID&amp; GetOperation() const</signature>
<elementName>Operation</elementName>
<asnElementName>operation</asnElementName>
<elementTypeName>InvokeID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CancelFailed information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CancelFailed ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    problem [0] IMPLICIT ENUMERATED</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        unknownOperation(0),</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        tooLate(1),</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        operationNotCancellable(2)</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    operation [1] IMPLICIT InvokeID -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

