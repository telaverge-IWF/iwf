<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ConnectArgExtension</className>
<asnTypeName>ConnectArgExtension</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCug_Interlock</name>
<signature>void SetCug_Interlock(CUG_Interlock* element)</signature>
<elmentName>Cug_Interlock</elmentName>
<asnElementName>cug-Interlock</asnElementName>
<elementTypeName>CUG_Interlock</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCug_Interlock</name>
<signature>void SetCug_Interlock(const CUG_Interlock&amp; element)</signature>
<elementName>Cug_Interlock</elementName>
<asnElementName>cug-Interlock</asnElementName>
<elementTypeName>CUG_Interlock</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCug_Interlock</name>
<signature>const CUG_Interlock&amp; GetCug_Interlock() const</signature>
<elementName>Cug_Interlock</elementName>
<asnElementName>cug-Interlock</asnElementName>
<elementTypeName>CUG_Interlock</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCug_Interlock</name>
<signature>bool OptionCug_Interlock() const</signature>
<elementName>Cug_Interlock</elementName>
<asnElementName>cug-Interlock</asnElementName>
<elementTypeName>CUG_Interlock</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCug_OutgoingAccess</name>
<signature>void SetCug_OutgoingAccess(Cug_OutgoingAccess* element)</signature>
<elmentName>Cug_OutgoingAccess</elmentName>
<asnElementName>cug-OutgoingAccess</asnElementName>
<elementTypeName>Cug_OutgoingAccess</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCug_OutgoingAccess</name>
<signature>void SetCug_OutgoingAccess(const Cug_OutgoingAccess&amp; element)</signature>
<elementName>Cug_OutgoingAccess</elementName>
<asnElementName>cug-OutgoingAccess</asnElementName>
<elementTypeName>Cug_OutgoingAccess</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCug_OutgoingAccess</name>
<signature>const Cug_OutgoingAccess&amp; GetCug_OutgoingAccess() const</signature>
<elementName>Cug_OutgoingAccess</elementName>
<asnElementName>cug-OutgoingAccess</asnElementName>
<elementTypeName>Cug_OutgoingAccess</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCug_OutgoingAccess</name>
<signature>bool OptionCug_OutgoingAccess() const</signature>
<elementName>Cug_OutgoingAccess</elementName>
<asnElementName>cug-OutgoingAccess</asnElementName>
<elementTypeName>Cug_OutgoingAccess</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetNonCug_Call</name>
<signature>void SetNonCug_Call(NonCug_Call* element)</signature>
<elmentName>NonCug_Call</elmentName>
<asnElementName>nonCug-Call</asnElementName>
<elementTypeName>NonCug_Call</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNonCug_Call</name>
<signature>void SetNonCug_Call(const NonCug_Call&amp; element)</signature>
<elementName>NonCug_Call</elementName>
<asnElementName>nonCug-Call</asnElementName>
<elementTypeName>NonCug_Call</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNonCug_Call</name>
<signature>const NonCug_Call&amp; GetNonCug_Call() const</signature>
<elementName>NonCug_Call</elementName>
<asnElementName>nonCug-Call</asnElementName>
<elementTypeName>NonCug_Call</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNonCug_Call</name>
<signature>bool OptionNonCug_Call() const</signature>
<elementName>NonCug_Call</elementName>
<asnElementName>nonCug-Call</asnElementName>
<elementTypeName>NonCug_Call</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ConnectArgExtension information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ConnectArgExtension ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    cug-Interlock [0] IMPLICIT CUG-Interlock -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cug-OutgoingAccess [1] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    nonCug-Call [2] IMPLICIT NULL OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

