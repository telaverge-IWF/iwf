<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ServiceInteractionIndicatorsTwo</className>
<asnTypeName>ServiceInteractionIndicatorsTwo</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetForwardServiceInteractionInd</name>
<signature>void SetForwardServiceInteractionInd(ForwardServiceInteractionInd* element)</signature>
<elmentName>ForwardServiceInteractionInd</elmentName>
<asnElementName>forwardServiceInteractionInd</asnElementName>
<elementTypeName>ForwardServiceInteractionInd</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetForwardServiceInteractionInd</name>
<signature>void SetForwardServiceInteractionInd(const ForwardServiceInteractionInd&amp; element)</signature>
<elementName>ForwardServiceInteractionInd</elementName>
<asnElementName>forwardServiceInteractionInd</asnElementName>
<elementTypeName>ForwardServiceInteractionInd</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetForwardServiceInteractionInd</name>
<signature>const ForwardServiceInteractionInd&amp; GetForwardServiceInteractionInd() const</signature>
<elementName>ForwardServiceInteractionInd</elementName>
<asnElementName>forwardServiceInteractionInd</asnElementName>
<elementTypeName>ForwardServiceInteractionInd</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionForwardServiceInteractionInd</name>
<signature>bool OptionForwardServiceInteractionInd() const</signature>
<elementName>ForwardServiceInteractionInd</elementName>
<asnElementName>forwardServiceInteractionInd</asnElementName>
<elementTypeName>ForwardServiceInteractionInd</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBackwardServiceInteractionsInd</name>
<signature>void SetBackwardServiceInteractionsInd(BackwardServiceInteractionInd* element)</signature>
<elmentName>BackwardServiceInteractionsInd</elmentName>
<asnElementName>backwardServiceInteractionsInd</asnElementName>
<elementTypeName>BackwardServiceInteractionInd</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBackwardServiceInteractionsInd</name>
<signature>void SetBackwardServiceInteractionsInd(const BackwardServiceInteractionInd&amp; element)</signature>
<elementName>BackwardServiceInteractionsInd</elementName>
<asnElementName>backwardServiceInteractionsInd</asnElementName>
<elementTypeName>BackwardServiceInteractionInd</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBackwardServiceInteractionsInd</name>
<signature>const BackwardServiceInteractionInd&amp; GetBackwardServiceInteractionsInd() const</signature>
<elementName>BackwardServiceInteractionsInd</elementName>
<asnElementName>backwardServiceInteractionsInd</asnElementName>
<elementTypeName>BackwardServiceInteractionInd</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBackwardServiceInteractionsInd</name>
<signature>bool OptionBackwardServiceInteractionsInd() const</signature>
<elementName>BackwardServiceInteractionsInd</elementName>
<asnElementName>backwardServiceInteractionsInd</asnElementName>
<elementTypeName>BackwardServiceInteractionInd</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetBothwayThroughConnectionInd</name>
<signature>void SetBothwayThroughConnectionInd(BothwayThroughConnectionInd* element)</signature>
<elmentName>BothwayThroughConnectionInd</elmentName>
<asnElementName>bothwayThroughConnectionInd</asnElementName>
<elementTypeName>BothwayThroughConnectionInd</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBothwayThroughConnectionInd</name>
<signature>void SetBothwayThroughConnectionInd(const BothwayThroughConnectionInd&amp; element)</signature>
<elementName>BothwayThroughConnectionInd</elementName>
<asnElementName>bothwayThroughConnectionInd</asnElementName>
<elementTypeName>BothwayThroughConnectionInd</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBothwayThroughConnectionInd</name>
<signature>const BothwayThroughConnectionInd&amp; GetBothwayThroughConnectionInd() const</signature>
<elementName>BothwayThroughConnectionInd</elementName>
<asnElementName>bothwayThroughConnectionInd</asnElementName>
<elementTypeName>BothwayThroughConnectionInd</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBothwayThroughConnectionInd</name>
<signature>bool OptionBothwayThroughConnectionInd() const</signature>
<elementName>BothwayThroughConnectionInd</elementName>
<asnElementName>bothwayThroughConnectionInd</asnElementName>
<elementTypeName>BothwayThroughConnectionInd</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetConnectedNumberTreatmentInd</name>
<signature>void SetConnectedNumberTreatmentInd(ConnectedNumberTreatmentInd* element)</signature>
<elmentName>ConnectedNumberTreatmentInd</elmentName>
<asnElementName>connectedNumberTreatmentInd</asnElementName>
<elementTypeName>ConnectedNumberTreatmentInd</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetConnectedNumberTreatmentInd</name>
<signature>void SetConnectedNumberTreatmentInd(const ConnectedNumberTreatmentInd&amp; element)</signature>
<elementName>ConnectedNumberTreatmentInd</elementName>
<asnElementName>connectedNumberTreatmentInd</asnElementName>
<elementTypeName>ConnectedNumberTreatmentInd</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetConnectedNumberTreatmentInd</name>
<signature>const ConnectedNumberTreatmentInd&amp; GetConnectedNumberTreatmentInd() const</signature>
<elementName>ConnectedNumberTreatmentInd</elementName>
<asnElementName>connectedNumberTreatmentInd</asnElementName>
<elementTypeName>ConnectedNumberTreatmentInd</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetNonCUGCall</name>
<signature>void SetNonCUGCall(NonCUGCall* element)</signature>
<elmentName>NonCUGCall</elmentName>
<asnElementName>nonCUGCall</asnElementName>
<elementTypeName>NonCUGCall</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNonCUGCall</name>
<signature>void SetNonCUGCall(const NonCUGCall&amp; element)</signature>
<elementName>NonCUGCall</elementName>
<asnElementName>nonCUGCall</asnElementName>
<elementTypeName>NonCUGCall</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNonCUGCall</name>
<signature>const NonCUGCall&amp; GetNonCUGCall() const</signature>
<elementName>NonCUGCall</elementName>
<asnElementName>nonCUGCall</asnElementName>
<elementTypeName>NonCUGCall</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNonCUGCall</name>
<signature>bool OptionNonCUGCall() const</signature>
<elementName>NonCUGCall</elementName>
<asnElementName>nonCUGCall</asnElementName>
<elementTypeName>NonCUGCall</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetHoldTreatmentIndicator</name>
<signature>void SetHoldTreatmentIndicator(HoldTreatmentIndicator* element)</signature>
<elmentName>HoldTreatmentIndicator</elmentName>
<asnElementName>holdTreatmentIndicator</asnElementName>
<elementTypeName>HoldTreatmentIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetHoldTreatmentIndicator</name>
<signature>void SetHoldTreatmentIndicator(const HoldTreatmentIndicator&amp; element)</signature>
<elementName>HoldTreatmentIndicator</elementName>
<asnElementName>holdTreatmentIndicator</asnElementName>
<elementTypeName>HoldTreatmentIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetHoldTreatmentIndicator</name>
<signature>const HoldTreatmentIndicator&amp; GetHoldTreatmentIndicator() const</signature>
<elementName>HoldTreatmentIndicator</elementName>
<asnElementName>holdTreatmentIndicator</asnElementName>
<elementTypeName>HoldTreatmentIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionHoldTreatmentIndicator</name>
<signature>bool OptionHoldTreatmentIndicator() const</signature>
<elementName>HoldTreatmentIndicator</elementName>
<asnElementName>holdTreatmentIndicator</asnElementName>
<elementTypeName>HoldTreatmentIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCwTreatmentIndicator</name>
<signature>void SetCwTreatmentIndicator(CwTreatmentIndicator* element)</signature>
<elmentName>CwTreatmentIndicator</elmentName>
<asnElementName>cwTreatmentIndicator</asnElementName>
<elementTypeName>CwTreatmentIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCwTreatmentIndicator</name>
<signature>void SetCwTreatmentIndicator(const CwTreatmentIndicator&amp; element)</signature>
<elementName>CwTreatmentIndicator</elementName>
<asnElementName>cwTreatmentIndicator</asnElementName>
<elementTypeName>CwTreatmentIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCwTreatmentIndicator</name>
<signature>const CwTreatmentIndicator&amp; GetCwTreatmentIndicator() const</signature>
<elementName>CwTreatmentIndicator</elementName>
<asnElementName>cwTreatmentIndicator</asnElementName>
<elementTypeName>CwTreatmentIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCwTreatmentIndicator</name>
<signature>bool OptionCwTreatmentIndicator() const</signature>
<elementName>CwTreatmentIndicator</elementName>
<asnElementName>cwTreatmentIndicator</asnElementName>
<elementTypeName>CwTreatmentIndicator</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetEctTreatmentIndicator</name>
<signature>void SetEctTreatmentIndicator(EctTreatmentIndicator* element)</signature>
<elmentName>EctTreatmentIndicator</elmentName>
<asnElementName>ectTreatmentIndicator</asnElementName>
<elementTypeName>EctTreatmentIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEctTreatmentIndicator</name>
<signature>void SetEctTreatmentIndicator(const EctTreatmentIndicator&amp; element)</signature>
<elementName>EctTreatmentIndicator</elementName>
<asnElementName>ectTreatmentIndicator</asnElementName>
<elementTypeName>EctTreatmentIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEctTreatmentIndicator</name>
<signature>const EctTreatmentIndicator&amp; GetEctTreatmentIndicator() const</signature>
<elementName>EctTreatmentIndicator</elementName>
<asnElementName>ectTreatmentIndicator</asnElementName>
<elementTypeName>EctTreatmentIndicator</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionEctTreatmentIndicator</name>
<signature>bool OptionEctTreatmentIndicator() const</signature>
<elementName>EctTreatmentIndicator</elementName>
<asnElementName>ectTreatmentIndicator</asnElementName>
<elementTypeName>EctTreatmentIndicator</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ServiceInteractionIndicatorsTwo information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 5]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ServiceInteractionIndicatorsTwo ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    forwardServiceInteractionInd [0] IMPLICIT ForwardServiceInteractionInd -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    backwardServiceInteractionsInd [1] IMPLICIT BackwardServiceInteractionInd -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    bothwayThroughConnectionInd [2] IMPLICIT BothwayThroughConnectionInd -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    connectedNumberTreatmentInd [4] IMPLICIT ConnectedNumberTreatmentInd -- [linked] -- DEFAULT presentCalledINNumber -- [enum value] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    nonCUGCall [13] IMPLICIT NULL OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    holdTreatmentIndicator [50] IMPLICIT OCTET STRING (SIZE(1))  OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    cwTreatmentIndicator [51] IMPLICIT OCTET STRING (SIZE(1))  OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ectTreatmentIndicator [52] IMPLICIT OCTET STRING (SIZE(1))  OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

