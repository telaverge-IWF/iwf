<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ApplyChargingReportGPRSArg</className>
<asnTypeName>ApplyChargingReportGPRSArg</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetGPRS_ReferenceNumber</name>
<signature>void SetGPRS_ReferenceNumber(GPRS_ReferenceNumber* element)</signature>
<elmentName>GPRS_ReferenceNumber</elmentName>
<asnElementName>gPRS-ReferenceNumber</asnElementName>
<elementTypeName>GPRS_ReferenceNumber</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGPRS_ReferenceNumber</name>
<signature>void SetGPRS_ReferenceNumber(const GPRS_ReferenceNumber&amp; element)</signature>
<elementName>GPRS_ReferenceNumber</elementName>
<asnElementName>gPRS-ReferenceNumber</asnElementName>
<elementTypeName>GPRS_ReferenceNumber</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGPRS_ReferenceNumber</name>
<signature>const GPRS_ReferenceNumber&amp; GetGPRS_ReferenceNumber() const</signature>
<elementName>GPRS_ReferenceNumber</elementName>
<asnElementName>gPRS-ReferenceNumber</asnElementName>
<elementTypeName>GPRS_ReferenceNumber</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetChargingResult</name>
<signature>void SetChargingResult(ChargingResult* element)</signature>
<elmentName>ChargingResult</elmentName>
<asnElementName>chargingResult</asnElementName>
<elementTypeName>ChargingResult</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChargingResult</name>
<signature>void SetChargingResult(const ChargingResult&amp; element)</signature>
<elementName>ChargingResult</elementName>
<asnElementName>chargingResult</asnElementName>
<elementTypeName>ChargingResult</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChargingResult</name>
<signature>const ChargingResult&amp; GetChargingResult() const</signature>
<elementName>ChargingResult</elementName>
<asnElementName>chargingResult</asnElementName>
<elementTypeName>ChargingResult</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetQualityOfService</name>
<signature>void SetQualityOfService(QualityOfService* element)</signature>
<elmentName>QualityOfService</elmentName>
<asnElementName>qualityOfService</asnElementName>
<elementTypeName>QualityOfService</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetQualityOfService</name>
<signature>void SetQualityOfService(const QualityOfService&amp; element)</signature>
<elementName>QualityOfService</elementName>
<asnElementName>qualityOfService</asnElementName>
<elementTypeName>QualityOfService</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetQualityOfService</name>
<signature>const QualityOfService&amp; GetQualityOfService() const</signature>
<elementName>QualityOfService</elementName>
<asnElementName>qualityOfService</asnElementName>
<elementTypeName>QualityOfService</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionQualityOfService</name>
<signature>bool OptionQualityOfService() const</signature>
<elementName>QualityOfService</elementName>
<asnElementName>qualityOfService</asnElementName>
<elementTypeName>QualityOfService</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetActive</name>
<signature>void SetActive(Active* element)</signature>
<elmentName>Active</elmentName>
<asnElementName>active</asnElementName>
<elementTypeName>Active</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetActive</name>
<signature>void SetActive(const Active&amp; element)</signature>
<elementName>Active</elementName>
<asnElementName>active</asnElementName>
<elementTypeName>Active</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetActive</name>
<signature>const Active&amp; GetActive() const</signature>
<elementName>Active</elementName>
<asnElementName>active</asnElementName>
<elementTypeName>Active</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetPDPID</name>
<signature>void SetPDPID(PDPID* element)</signature>
<elmentName>PDPID</elmentName>
<asnElementName>pDPID</asnElementName>
<elementTypeName>PDPID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPDPID</name>
<signature>void SetPDPID(const PDPID&amp; element)</signature>
<elementName>PDPID</elementName>
<asnElementName>pDPID</asnElementName>
<elementTypeName>PDPID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPDPID</name>
<signature>const PDPID&amp; GetPDPID() const</signature>
<elementName>PDPID</elementName>
<asnElementName>pDPID</asnElementName>
<elementTypeName>PDPID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPDPID</name>
<signature>bool OptionPDPID() const</signature>
<elementName>PDPID</elementName>
<asnElementName>pDPID</asnElementName>
<elementTypeName>PDPID</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ApplyChargingReportGPRSArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ApplyChargingReportGPRSArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    gPRS-ReferenceNumber [0] IMPLICIT GPRS-ReferenceNumber -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    chargingResult [1] IMPLICIT ChargingResult -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    qualityOfService [2] IMPLICIT QualityOfService -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    active [3] IMPLICIT BOOLEAN DEFAULT TRUE,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pDPID [4] IMPLICIT PDPID -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

