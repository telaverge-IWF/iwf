<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>InitialDPGPRSArg</className>
<asnTypeName>InitialDPGPRSArg</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetGPRS_ReferenceNumber</name>
<signature>void SetGPRS_ReferenceNumber(GPRS_ReferenceNumber* element)</signature>
<elmentName>GPRS_ReferenceNumber</elmentName>
<asnElementName>gPRS-ReferenceNumber</asnElementName>
<elementTypeName>GPRS_ReferenceNumber</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGPRS_ReferenceNumber</name>
<signature>void SetGPRS_ReferenceNumber(const GPRS_ReferenceNumber&amp; element)</signature>
<elementName>GPRS_ReferenceNumber</elementName>
<asnElementName>gPRS-ReferenceNumber</asnElementName>
<elementTypeName>GPRS_ReferenceNumber</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGPRS_ReferenceNumber</name>
<signature>const GPRS_ReferenceNumber&amp; GetGPRS_ReferenceNumber() const</signature>
<elementName>GPRS_ReferenceNumber</elementName>
<asnElementName>gPRS-ReferenceNumber</asnElementName>
<elementTypeName>GPRS_ReferenceNumber</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetServiceKey</name>
<signature>void SetServiceKey(ServiceKey* element)</signature>
<elmentName>ServiceKey</elmentName>
<asnElementName>serviceKey</asnElementName>
<elementTypeName>ServiceKey</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServiceKey</name>
<signature>void SetServiceKey(const ServiceKey&amp; element)</signature>
<elementName>ServiceKey</elementName>
<asnElementName>serviceKey</asnElementName>
<elementTypeName>ServiceKey</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServiceKey</name>
<signature>const ServiceKey&amp; GetServiceKey() const</signature>
<elementName>ServiceKey</elementName>
<asnElementName>serviceKey</asnElementName>
<elementTypeName>ServiceKey</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetGPRSEventType</name>
<signature>void SetGPRSEventType(GPRSEventType* element)</signature>
<elmentName>GPRSEventType</elmentName>
<asnElementName>gPRSEventType</asnElementName>
<elementTypeName>GPRSEventType</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGPRSEventType</name>
<signature>void SetGPRSEventType(const GPRSEventType&amp; element)</signature>
<elementName>GPRSEventType</elementName>
<asnElementName>gPRSEventType</asnElementName>
<elementTypeName>GPRSEventType</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGPRSEventType</name>
<signature>const GPRSEventType&amp; GetGPRSEventType() const</signature>
<elementName>GPRSEventType</elementName>
<asnElementName>gPRSEventType</asnElementName>
<elementTypeName>GPRSEventType</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetMSISDN</name>
<signature>void SetMSISDN(ISDN_AddressString* element)</signature>
<elmentName>MSISDN</elmentName>
<asnElementName>mSISDN</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMSISDN</name>
<signature>void SetMSISDN(const ISDN_AddressString&amp; element)</signature>
<elementName>MSISDN</elementName>
<asnElementName>mSISDN</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMSISDN</name>
<signature>const ISDN_AddressString&amp; GetMSISDN() const</signature>
<elementName>MSISDN</elementName>
<asnElementName>mSISDN</asnElementName>
<elementTypeName>ISDN_AddressString</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetIMSI</name>
<signature>void SetIMSI(IMSI* element)</signature>
<elmentName>IMSI</elmentName>
<asnElementName>iMSI</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetIMSI</name>
<signature>void SetIMSI(const IMSI&amp; element)</signature>
<elementName>IMSI</elementName>
<asnElementName>iMSI</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetIMSI</name>
<signature>const IMSI&amp; GetIMSI() const</signature>
<elementName>IMSI</elementName>
<asnElementName>iMSI</asnElementName>
<elementTypeName>IMSI</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetTimeAndTimeZone</name>
<signature>void SetTimeAndTimeZone(TimeAndTimezone* element)</signature>
<elmentName>TimeAndTimeZone</elmentName>
<asnElementName>timeAndTimeZone</asnElementName>
<elementTypeName>TimeAndTimezone</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTimeAndTimeZone</name>
<signature>void SetTimeAndTimeZone(const TimeAndTimezone&amp; element)</signature>
<elementName>TimeAndTimeZone</elementName>
<asnElementName>timeAndTimeZone</asnElementName>
<elementTypeName>TimeAndTimezone</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTimeAndTimeZone</name>
<signature>const TimeAndTimezone&amp; GetTimeAndTimeZone() const</signature>
<elementName>TimeAndTimeZone</elementName>
<asnElementName>timeAndTimeZone</asnElementName>
<elementTypeName>TimeAndTimezone</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetGPRSMSClass</name>
<signature>void SetGPRSMSClass(GPRSMSClass* element)</signature>
<elmentName>GPRSMSClass</elmentName>
<asnElementName>gPRSMSClass</asnElementName>
<elementTypeName>GPRSMSClass</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetGPRSMSClass</name>
<signature>void SetGPRSMSClass(const GPRSMSClass&amp; element)</signature>
<elementName>GPRSMSClass</elementName>
<asnElementName>gPRSMSClass</asnElementName>
<elementTypeName>GPRSMSClass</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetGPRSMSClass</name>
<signature>const GPRSMSClass&amp; GetGPRSMSClass() const</signature>
<elementName>GPRSMSClass</elementName>
<asnElementName>gPRSMSClass</asnElementName>
<elementTypeName>GPRSMSClass</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionGPRSMSClass</name>
<signature>bool OptionGPRSMSClass() const</signature>
<elementName>GPRSMSClass</elementName>
<asnElementName>gPRSMSClass</asnElementName>
<elementTypeName>GPRSMSClass</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetPDPType</name>
<signature>void SetPDPType(PDPType* element)</signature>
<elmentName>PDPType</elmentName>
<asnElementName>pDPType</asnElementName>
<elementTypeName>PDPType</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetPDPType</name>
<signature>void SetPDPType(const PDPType&amp; element)</signature>
<elementName>PDPType</elementName>
<asnElementName>pDPType</asnElementName>
<elementTypeName>PDPType</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetPDPType</name>
<signature>const PDPType&amp; GetPDPType() const</signature>
<elementName>PDPType</elementName>
<asnElementName>pDPType</asnElementName>
<elementTypeName>PDPType</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionPDPType</name>
<signature>bool OptionPDPType() const</signature>
<elementName>PDPType</elementName>
<asnElementName>pDPType</asnElementName>
<elementTypeName>PDPType</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetQualityOfService</name>
<signature>void SetQualityOfService(QualityOfService* element)</signature>
<elmentName>QualityOfService</elmentName>
<asnElementName>qualityOfService</asnElementName>
<elementTypeName>QualityOfService</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetQualityOfService</name>
<signature>void SetQualityOfService(const QualityOfService&amp; element)</signature>
<elementName>QualityOfService</elementName>
<asnElementName>qualityOfService</asnElementName>
<elementTypeName>QualityOfService</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetQualityOfService</name>
<signature>const QualityOfService&amp; GetQualityOfService() const</signature>
<elementName>QualityOfService</elementName>
<asnElementName>qualityOfService</asnElementName>
<elementTypeName>QualityOfService</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionQualityOfService</name>
<signature>bool OptionQualityOfService() const</signature>
<elementName>QualityOfService</elementName>
<asnElementName>qualityOfService</asnElementName>
<elementTypeName>QualityOfService</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetAccessPointName</name>
<signature>void SetAccessPointName(AccessPointName* element)</signature>
<elmentName>AccessPointName</elmentName>
<asnElementName>accessPointName</asnElementName>
<elementTypeName>AccessPointName</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAccessPointName</name>
<signature>void SetAccessPointName(const AccessPointName&amp; element)</signature>
<elementName>AccessPointName</elementName>
<asnElementName>accessPointName</asnElementName>
<elementTypeName>AccessPointName</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAccessPointName</name>
<signature>const AccessPointName&amp; GetAccessPointName() const</signature>
<elementName>AccessPointName</elementName>
<asnElementName>accessPointName</asnElementName>
<elementTypeName>AccessPointName</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionAccessPointName</name>
<signature>bool OptionAccessPointName() const</signature>
<elementName>AccessPointName</elementName>
<asnElementName>accessPointName</asnElementName>
<elementTypeName>AccessPointName</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRouteingAreaIdentity</name>
<signature>void SetRouteingAreaIdentity(RAIdentity* element)</signature>
<elmentName>RouteingAreaIdentity</elmentName>
<asnElementName>routeingAreaIdentity</asnElementName>
<elementTypeName>RAIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRouteingAreaIdentity</name>
<signature>void SetRouteingAreaIdentity(const RAIdentity&amp; element)</signature>
<elementName>RouteingAreaIdentity</elementName>
<asnElementName>routeingAreaIdentity</asnElementName>
<elementTypeName>RAIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRouteingAreaIdentity</name>
<signature>const RAIdentity&amp; GetRouteingAreaIdentity() const</signature>
<elementName>RouteingAreaIdentity</elementName>
<asnElementName>routeingAreaIdentity</asnElementName>
<elementTypeName>RAIdentity</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRouteingAreaIdentity</name>
<signature>bool OptionRouteingAreaIdentity() const</signature>
<elementName>RouteingAreaIdentity</elementName>
<asnElementName>routeingAreaIdentity</asnElementName>
<elementTypeName>RAIdentity</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetChargingID</name>
<signature>void SetChargingID(GPRSChargingID* element)</signature>
<elmentName>ChargingID</elmentName>
<asnElementName>chargingID</asnElementName>
<elementTypeName>GPRSChargingID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChargingID</name>
<signature>void SetChargingID(const GPRSChargingID&amp; element)</signature>
<elementName>ChargingID</elementName>
<asnElementName>chargingID</asnElementName>
<elementTypeName>GPRSChargingID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChargingID</name>
<signature>const GPRSChargingID&amp; GetChargingID() const</signature>
<elementName>ChargingID</elementName>
<asnElementName>chargingID</asnElementName>
<elementTypeName>GPRSChargingID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionChargingID</name>
<signature>bool OptionChargingID() const</signature>
<elementName>ChargingID</elementName>
<asnElementName>chargingID</asnElementName>
<elementTypeName>GPRSChargingID</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSGSNCapabilities</name>
<signature>void SetSGSNCapabilities(SGSNCapabilities* element)</signature>
<elmentName>SGSNCapabilities</elmentName>
<asnElementName>sGSNCapabilities</asnElementName>
<elementTypeName>SGSNCapabilities</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSGSNCapabilities</name>
<signature>void SetSGSNCapabilities(const SGSNCapabilities&amp; element)</signature>
<elementName>SGSNCapabilities</elementName>
<asnElementName>sGSNCapabilities</asnElementName>
<elementTypeName>SGSNCapabilities</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSGSNCapabilities</name>
<signature>const SGSNCapabilities&amp; GetSGSNCapabilities() const</signature>
<elementName>SGSNCapabilities</elementName>
<asnElementName>sGSNCapabilities</asnElementName>
<elementTypeName>SGSNCapabilities</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSGSNCapabilities</name>
<signature>bool OptionSGSNCapabilities() const</signature>
<elementName>SGSNCapabilities</elementName>
<asnElementName>sGSNCapabilities</asnElementName>
<elementTypeName>SGSNCapabilities</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- InitialDPGPRSArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>InitialDPGPRSArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    gPRS-ReferenceNumber [0] IMPLICIT GPRS-ReferenceNumber -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    serviceKey [1] IMPLICIT ServiceKey -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gPRSEventType [2] IMPLICIT GPRSEventType -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    mSISDN [3] IMPLICIT ISDN-AddressString -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    iMSI [4] IMPLICIT IMSI -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    timeAndTimeZone [5] IMPLICIT TimeAndTimezone -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    gPRSMSClass [6] IMPLICIT GPRSMSClass -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    pDPType [7] IMPLICIT PDPType -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    qualityOfService [8] IMPLICIT QualityOfService -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    accessPointName [9] IMPLICIT AccessPointName -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    routeingAreaIdentity [10] IMPLICIT RAIdentity -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    chargingID [11] IMPLICIT GPRSChargingID -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    sGSNCapabilities [12] IMPLICIT SGSNCapabilities -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [13] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

