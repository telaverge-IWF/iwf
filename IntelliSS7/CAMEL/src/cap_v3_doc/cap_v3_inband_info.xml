<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>InbandInfo</className>
<asnTypeName>InbandInfo</asnTypeName>
<moduleName>CAP_V3</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetMessageID</name>
<signature>void SetMessageID(MessageID* element)</signature>
<elmentName>MessageID</elmentName>
<asnElementName>messageID</asnElementName>
<elementTypeName>MessageID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMessageID</name>
<signature>void SetMessageID(const MessageID&amp; element)</signature>
<elementName>MessageID</elementName>
<asnElementName>messageID</asnElementName>
<elementTypeName>MessageID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMessageID</name>
<signature>const MessageID&amp; GetMessageID() const</signature>
<elementName>MessageID</elementName>
<asnElementName>messageID</asnElementName>
<elementTypeName>MessageID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetNumberOfRepetitions</name>
<signature>void SetNumberOfRepetitions(NumberOfRepetitions* element)</signature>
<elmentName>NumberOfRepetitions</elmentName>
<asnElementName>numberOfRepetitions</asnElementName>
<elementTypeName>NumberOfRepetitions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNumberOfRepetitions</name>
<signature>void SetNumberOfRepetitions(const NumberOfRepetitions&amp; element)</signature>
<elementName>NumberOfRepetitions</elementName>
<asnElementName>numberOfRepetitions</asnElementName>
<elementTypeName>NumberOfRepetitions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNumberOfRepetitions</name>
<signature>const NumberOfRepetitions&amp; GetNumberOfRepetitions() const</signature>
<elementName>NumberOfRepetitions</elementName>
<asnElementName>numberOfRepetitions</asnElementName>
<elementTypeName>NumberOfRepetitions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionNumberOfRepetitions</name>
<signature>bool OptionNumberOfRepetitions() const</signature>
<elementName>NumberOfRepetitions</elementName>
<asnElementName>numberOfRepetitions</asnElementName>
<elementTypeName>NumberOfRepetitions</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetDuration</name>
<signature>void SetDuration(Duration* element)</signature>
<elmentName>Duration</elmentName>
<asnElementName>duration</asnElementName>
<elementTypeName>Duration</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDuration</name>
<signature>void SetDuration(const Duration&amp; element)</signature>
<elementName>Duration</elementName>
<asnElementName>duration</asnElementName>
<elementTypeName>Duration</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDuration</name>
<signature>const Duration&amp; GetDuration() const</signature>
<elementName>Duration</elementName>
<asnElementName>duration</asnElementName>
<elementTypeName>Duration</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDuration</name>
<signature>bool OptionDuration() const</signature>
<elementName>Duration</elementName>
<asnElementName>duration</asnElementName>
<elementTypeName>Duration</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetInterval</name>
<signature>void SetInterval(Interval* element)</signature>
<elmentName>Interval</elmentName>
<asnElementName>interval</asnElementName>
<elementTypeName>Interval</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetInterval</name>
<signature>void SetInterval(const Interval&amp; element)</signature>
<elementName>Interval</elementName>
<asnElementName>interval</asnElementName>
<elementTypeName>Interval</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetInterval</name>
<signature>const Interval&amp; GetInterval() const</signature>
<elementName>Interval</elementName>
<asnElementName>interval</asnElementName>
<elementTypeName>Interval</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionInterval</name>
<signature>bool OptionInterval() const</signature>
<elementName>Interval</elementName>
<asnElementName>interval</asnElementName>
<elementTypeName>Interval</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- InbandInfo information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>InbandInfo ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    messageID [0] IMPLICIT MessageID -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    numberOfRepetitions [1] IMPLICIT INTEGER   OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    duration [2] IMPLICIT INTEGER   OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    interval [3] IMPLICIT INTEGER   OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

