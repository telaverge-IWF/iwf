//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_CAP_V3_GPRS_EVENT_TYPE_H_)
#define _CAP_V3_GPRS_EVENT_TYPE_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnEnumerated.h>



namespace cap_v3 {



class GPRSEventType : public its::AsnEnumerated
{
public:

    GPRSEventType() : its::AsnEnumerated(false)
    {
        Initialize();
    }

    GPRSEventType(long value) : its::AsnEnumerated(value, false)
    {
        Initialize();
    }

    GPRSEventType(its::Octets& octets) : its::AsnEnumerated(false)
    {
        Initialize();
        Decode(octets);
    }

    GPRSEventType(const GPRSEventType& rhs) : its::AsnEnumerated(rhs)
    {
        // Nothing to do.
    }

    GPRSEventType(its::AsnDescObject* description) : its::AsnEnumerated(description)
    {
        // Nothing to do.
    }

    GPRSEventType(its::AsnDescObject* description, long value) : its::AsnEnumerated(description, value)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

public:

    virtual ~GPRSEventType()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new GPRSEventType(*this);
    }

    virtual std::string GetName() const
    { return "GPRSEventType"; }

    virtual long Get(const std::string& valueName) const;

    virtual std::string Get(long value) const;

    virtual std::string GetExt(long value) const;

    enum {
        GPRS_EVENT_TYPE_ATTACH = 1,
        GPRS_EVENT_TYPE_ATTACH_CHANGE_OF_POSITION = 2,
        GPRS_EVENT_TYPE_DETACHED = 3,
        GPRS_EVENT_TYPE_PDP_CONTEXT_ESTABLISHMENT = 11,
        GPRS_EVENT_TYPE_PDP_CONTEXT_ESTABLISHMENT_ACKNOWLEDGEMENT = 12,
        GPRS_EVENT_TYPE_DISONNECT = 13,
        GPRS_EVENT_TYPE_PDP_CONTEXT_CHANGE_OF_POSITION = 14

    };

    void SetAttach()
    { _value = 1; }

    bool IsAttach() const
    { return _value == 1; }

    void SetAttachChangeOfPosition()
    { _value = 2; }

    bool IsAttachChangeOfPosition() const
    { return _value == 2; }

    void SetDetached()
    { _value = 3; }

    bool IsDetached() const
    { return _value == 3; }

    void SetPdp_ContextEstablishment()
    { _value = 11; }

    bool IsPdp_ContextEstablishment() const
    { return _value == 11; }

    void SetPdp_ContextEstablishmentAcknowledgement()
    { _value = 12; }

    bool IsPdp_ContextEstablishmentAcknowledgement() const
    { return _value == 12; }

    void SetDisonnect()
    { _value = 13; }

    bool IsDisonnect() const
    { return _value == 13; }

    void SetPdp_ContextChangeOfPosition()
    { _value = 14; }

    bool IsPdp_ContextChangeOfPosition() const
    { return _value == 14; }

};



} // namespace.

#endif    // !defined(_CAP_V3_GPRS_EVENT_TYPE_H_)

