//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_CAP_V3_ENTITY_RELEASED_GPRS_ARG_H_)
#define _CAP_V3_ENTITY_RELEASED_GPRS_ARG_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnSequence.h>
#include <AsnOctetString.h>

#include <cap_v3_gprs_cause.h>
#include <cap_v3_pdpid.h>



namespace cap_v3 {



class EntityReleasedGPRSArg : public its::AsnSequence
{
public:


////////// Begin Nested Class(es) //////////


        typedef cap_v3::GPRSCause GPRSCause;


        typedef cap_v3::PDPID PDPID;


////////// End Nested Class(es) //////////

    EntityReleasedGPRSArg() : its::AsnSequence(2, false)
    {
        Initialize();
    }

    EntityReleasedGPRSArg(its::Octets& octets) : its::AsnSequence(2, false)
    {
        Initialize();
        Decode(octets);
    }

    EntityReleasedGPRSArg(const EntityReleasedGPRSArg& rhs) : its::AsnSequence(rhs)
    {
        // Nothing to do.
    }

    EntityReleasedGPRSArg(its::AsnDescObject* description) : its::AsnSequence(2, description)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

    static its::AsnDescObject* GetGPRSCauseStaticDescription();
    static its::AsnDescObject* GetPDPIDStaticDescription();

public:

    virtual ~EntityReleasedGPRSArg()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new EntityReleasedGPRSArg(*this);
    }

    virtual std::string GetName() const
    { return "EntityReleasedGPRSArg"; }

    void SetGPRSCause(GPRSCause* element)
    {
        ITS_REQUIRE(element != NULL);
        element->AsnObject::SetDescription(GetGPRSCauseStaticDescription());
        AddElement(0, element);
    }

    void SetGPRSCause(const GPRSCause& element)
    {
        its::AsnObject& asnObject = const_cast<GPRSCause&>(element);
        asnObject.SetDescription(GetGPRSCauseStaticDescription());
        AddElement(0, element);
    }

    const GPRSCause& GetGPRSCause() const
    {
        return static_cast<const GPRSCause&> (ElementAt(0));
    }

    void SetPDPID(PDPID* element)
    {
        ITS_REQUIRE(element != NULL);
        element->AsnObject::SetDescription(GetPDPIDStaticDescription());
        AddElement(1, element);
    }

    void SetPDPID(const PDPID& element)
    {
        its::AsnObject& asnObject = const_cast<PDPID&>(element);
        asnObject.SetDescription(GetPDPIDStaticDescription());
        AddElement(1, element);
    }

    const PDPID& GetPDPID() const
    {
        return static_cast<const PDPID&> (ElementAt(1));
    }

};



} // namespace.

#endif    // !defined(_CAP_V3_ENTITY_RELEASED_GPRS_ARG_H_)

