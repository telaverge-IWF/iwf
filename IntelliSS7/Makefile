############################################################################
#                                                                          #
#     Copyright 1997 IntelliNet Technologies, Inc. All Rights Reserved.    #
#             Manufactured in the United States of America.                #
#       1990 W. New Haven Ste. 312, Melbourne, Florida, 32904 U.S.A.       #
#                                                                          #
#   This product and related documentation is protected by copyright and   #
#   distributed under licenses restricting its use, copying, distribution  #
#   and decompilation.  No part of this product or related documentation   #
#   may be reproduced in any form by any means without prior written       #
#   authorization of IntelliNet Technologies and its licensors, if any.    #
#                                                                          #
#   RESTRICTED RIGHTS LEGEND:  Use, duplication, or disclosure by the      #
#   government is subject to restrictions as set forth in subparagraph     #
#   (c)(1)(ii) of the Rights in Technical Data and Computer Software       #
#   clause at DFARS 252.227-7013 and FAR 52.227-19.                        #
#                                                                          #
############################################################################
#                                                                          #
# CONTRACT: INTERNAL                                                       #
#                                                                          #
############################################################################
#
#  ID: $Id: Makefile,v 9.4.10.1 2009/09/28 18:54:14 ssingh Exp $
#
# LOG: $Log: Makefile,v $
# LOG: Revision 9.4.10.1  2009/09/28 18:54:14  ssingh
# LOG: commented unwanted compilation for SMLC
# LOG:
# LOG: Revision 9.4  2008/06/19 12:55:51  ssodhi
# LOG: Makefine error: Removing a space after \
# LOG:
# LOG: Revision 9.3  2008/06/17 07:04:12  ssingh
# LOG: added CPOT(CCITT prime - 16bit PC) compilation
# LOG:
# LOG: Revision 9.2  2005/04/08 10:27:05  snagesh
# LOG: Fix for top level "make all" compilation
# LOG:
# LOG: Revision 9.1  2005/03/23 12:51:00  cvsadmin
# LOG: Begin PR6.5
# LOG:
# LOG: Revision 8.2  2005/03/21 13:49:06  cvsadmin
# LOG: PR6.4.2 Source Propagated to Current
# LOG:
# LOG: Revision 7.2.40.1  2004/12/16 03:36:14  randresol
# LOG: Add JAPAN variant
# LOG:
# LOG: Revision 7.2.36.1  2004/10/25 20:58:55  randresol
# LOG: Add SS7 Japan
# LOG:
# LOG: Revision 7.2  2003/01/02 16:16:05  pmandal
# LOG: fix to start building release libraries for engine
# LOG:
# LOG: Revision 7.1  2002/08/26 22:08:30  mmiers
# LOG: Begin PR6.2
# LOG:
# LOG: Revision 6.8  2002/08/20 15:53:04  mmiers
# LOG: Update the clean target for china
# LOG:
# LOG: Revision 6.7  2002/07/03 19:56:00  mmiers
# LOG: China support
# LOG:
# LOG: Revision 6.6  2002/07/01 19:48:36  mmiers
# LOG: Testing
# LOG:
# LOG: Revision 6.5  2002/07/01 19:37:13  mmiers
# LOG: Testing
# LOG:
# LOG: Revision 6.4  2002/07/01 19:32:43  mmiers
# LOG: Testing again
# LOG:
# LOG: Revision 6.3  2002/07/01 19:25:11  mmiers
# LOG: Testing
# LOG:
# LOG: Revision 6.2  2002/06/28 15:32:34  hbalimid
# LOG: corrected syntax error for enginedirs:
# LOG:
# LOG: Revision 6.1  2002/02/28 16:13:16  mmiers
# LOG: Begin PR7.
# LOG:
# LOG: Revision 5.1  2001/08/16 20:45:05  mmiers
# LOG: Start PR6.
# LOG:
# LOG: Revision 4.1  2001/05/01 00:52:59  mmiers
# LOG: Begin PR5
# LOG:
# LOG: Revision 3.7  2001/04/29 00:07:00  mmiers
# LOG: Make ENGINE follow the standard.
# LOG:
# LOG: Revision 3.6  2001/04/24 23:13:38  mmiers
# LOG: Warning removal.
# LOG:
# LOG: Revision 3.5  2001/04/12 19:58:55  salaoui
# LOG: changed for ENGINE directory move
# LOG:
# LOG: Revision 3.4  2001/03/28 23:37:29  mmiers
# LOG: Add enginedirs
# LOG:
# LOG: Revision 3.3  2001/01/16 22:02:41  hdivoux
# LOG: Conditional compile of TCAP
# LOG:
# LOG: Revision 3.2  2001/01/03 22:48:02  hdivoux
# LOG: Set up a source build system for partial builds
# LOG:
# LOG: Revision 3.1  2000/08/15 23:55:33  mmiers
# LOG:
# LOG: Begin round 4.
# LOG:
# LOG: Revision 2.1  2000/04/24 20:44:13  mmiers
# LOG:
# LOG:
# LOG: Add SLTM and SNMM to build.
# LOG:
# LOG: Revision 2.0  1999/12/03 23:18:06  mmiers
# LOG:
# LOG: Begin third iteration.
# LOG:
# LOG: Revision 1.26  1999/10/16 20:00:42  labuser
# LOG:
# LOG:
# LOG: Forgot commonsubs in make clean.
# LOG:
# LOG: Revision 1.25  1999/09/20 17:00:24  labuser
# LOG:
# LOG:
# LOG: Change "make" to dollar-make
# LOG:
# LOG: Revision 1.24  1999/09/17 18:44:27  labuser
# LOG:
# LOG:
# LOG: Update this with corrected info
# LOG:
# LOG: Revision 1.23  1999/08/20 22:14:22  labuser
# LOG:
# LOG:
# LOG: Split up tools and common
# LOG:
# LOG: Revision 1.22  1999/08/12 20:20:59  mmiers
# LOG:
# LOG:
# LOG: Add in the MTP2 codec.
# LOG:
# LOG: Revision 1.21  1999/08/05 15:10:26  labuser
# LOG:
# LOG:
# LOG: Sanitize build.
# LOG:
# LOG: Revision 1.20  1999/08/02 20:24:17  mmiers
# LOG:
# LOG:
# LOG: Fix some cross-platform issues.
# LOG:
# LOG: Revision 1.19  1999/07/16 21:50:46  mmiers
# LOG:
# LOG:
# LOG: Add other intermediate targets for convenience
# LOG:
# LOG: Revision 1.18  1999/07/01 16:15:48  mmiers
# LOG:
# LOG:
# LOG: Build everything we know how to
# LOG:
# LOG: Revision 1.17  1999/06/30 19:44:26  mmiers
# LOG:
# LOG:
# LOG: Portability, complete build procedure
# LOG:
# LOG: Revision 1.16  1999/05/27 23:42:30  labuser
# LOG: Get command syntax right.
# LOG:
# LOG: Revision 1.15  1999/03/03 15:50:58  mmiers
# LOG:
# LOG:
# LOG: Add doc generation to Makefiles.
# LOG:
# LOG: Revision 1.14  1999/03/02 23:00:00  mmiers
# LOG:
# LOG:
# LOG: Sanitize the build.
# LOG:
# LOG: Revision 1.13  1999/01/05 16:46:49  jrao
# LOG: Moved the declaration part to the beginning of SOCK_ReadyToRead()
# LOG:
# LOG: Revision 1.12  1998/11/18 01:01:37  jrao
# LOG: Wrong file in previous version.
# LOG:
# LOG: Revision 1.10  1998/11/17 16:51:43  jrao
# LOG: Oops, got checked in though I didn't want to.
# LOG:
# LOG: Revision 1.9  1998/11/17 16:47:00  jrao
# LOG: *** empty log message ***
# LOG:
# LOG: Revision 1.8  1998/10/30 20:05:19  jrao
# LOG: gcc complains without explicit typecast to (void **).
# LOG:
# LOG: Revision 1.7  1998/10/01 01:26:59  mmiers
# LOG: Cleanup the targets list.
# LOG:
# LOG: Revision 1.6  1998/05/20 01:54:33  mmiers
# LOG: General tree cleanup.
# LOG:
# LOG: Revision 1.5  1998/05/05 02:16:54  mmiers
# LOG: Cleanup the IS634 Makefile.
# LOG:
# LOG: Revision 1.4  1998/05/05 02:00:48  mmiers
# LOG: Add a test target.
# LOG:
# LOG: Revision 1.3  1998/05/05 01:58:58  mmiers
# LOG: Sanitize the build environment a bit.  This gets the Solaris
# LOG: environment to build cleanly.
# LOG:
# LOG: Revision 1.2  1998/04/24 01:41:27  mmiers
# LOG: General cleanup of the build system.  Need to verify on Digital Unix
# LOG: to make sure this is ok.
# LOG:
# LOG: Revision 1.1  1998/01/24 22:36:54  mmiers
# LOG: Tree cleanup.
# LOG:
# LOG: Revision 1.1  1998/01/24 22:33:43  mmiers
# LOG: Top level makefile
# LOG:
# LOG: Revision 1.2  1998/01/24 21:30:53  mmiers
# LOG: Add DK code from DIN project
# LOG:
# LOG: Revision 1.1  1998/01/24 21:01:44  mmiers
# LOG: add build rules for vendor specific stuff.
# LOG:
#
############################################################################

#
# files hold directory names, expand them
#
COMMONSUBS=`cat csubs`
ENGINESUBS=`cat esubs`
TOOLSUBS=`cat tsubs`
STACKSUBS=`cat ssubs`
ANSIPROTSUBS=`cat asubs`
CCITTPROTSUBS=`cat isubs`

all:
	for dir in $(TOOLSUBS);			\
	do					\
		(cd $$dir/src && $(MAKE) all);	\
	done
	for dir in $(COMMONSUBS);		\
	do					\
		(cd $$dir/src && $(MAKE) all);	\
	done
	for dir in $(STACKSUBS);					       \
	do								       \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes clean); \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes all);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no all);    \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes clean);\
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes all);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no clean); \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no all);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=yes clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=yes all);    \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=no clean);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=no all);     \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=yes clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=yes all);    \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=no clean);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=no all);     \
	done
#	for dir in $(STACKSUBS);					       \
#	do								       \
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes clean);\
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes all);  \
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes clean); \
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes all);   \
#	done
	(cd TCAP/src && ./makeall)
	for dir in $(ENGINESUBS);					\
	do								\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=yes clean);	\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=yes all);		\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=no clean);		\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=no);		\
	done
	(cd VFRAME/src && . ./makeall);
#	for dir in $(ANSIPROTSUBS);					       \
#	do								       \
#		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes clean); \
#		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes all);   \
#		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no clean);  \
#		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no all);    \
#	done
	for dir in $(CCITTPROTSUBS);					       \
	do								       \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes clean);\
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes all);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no clean); \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no all);   \
	done

enginedirs:
	for dir in $(ENGINESUBS);					\
	do								\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=yes clean);	\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=yes);		\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=no clean);		\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=no);		\
	done
	(cd VFRAME/src && . ./makeall);

tooldirs:
	for dir in $(TOOLSUBS);			\
	do					\
		(cd $$dir/src && $(MAKE) all);	\
	done

commondirs:
	for dir in $(COMMONSUBS);		\
	do					\
		(cd $$dir/src && $(MAKE) all);	\
	done

stackdirs:
	for dir in $(STACKSUBS);					       \
	do								       \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes clean); \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes all);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no all);    \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes clean);\
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes all);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no clean); \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no all);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=yes clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=yes all);    \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=no clean);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=no all);     \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=yes clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=yes all);    \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=no clean);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=no all);     \
	done
#	for dir in $(STACKSUBS);					       \
#	do								       \
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes clean);\
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes all);  \
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes clean); \
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes all);   \
#	done
	(cd TCAP/src && ./makeall)

ansidirs:
	for dir in $(ANSIPROTSUBS);					       \
	do								       \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes clean); \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes all);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no all);    \
	done

ccittdirs:
	for dir in $(CCITTPROTSUBS);					       \
	do								       \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes clean);\
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes all);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no clean); \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no all);   \
	done

depend:
	for dir in $(TOOLDIRS) $(COMMONDIRS) $(STACKDIRS) 	\
		  $(ANSIPROTSUBS) $(CCITTPROTSUBS);		\
	do							\
		(cd $$dir/src && $(MAKE) depend);		\
	done

clean:
	for dir in $(TOOLSUBS);				\
	do						\
		(cd $$dir/src && $(MAKE) clean);	\
	done
	for dir in $(COMMONSUBS);			\
	do						\
		(cd $$dir/src && $(MAKE) clean);	\
	done
	for dir in $(STACKSUBS);					       \
	do								       \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes clean); \
		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes clean);\
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no clean); \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=yes clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=PRC DEBUG_BUILD=no clean);   \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=yes clean);  \
		(cd $$dir/src && $(MAKE) PROTOCOL=TTC DEBUG_BUILD=no clean);   \
	done
#	for dir in $(STACKSUBS);					       \
#	do								       \
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes clean);\
#		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no CCITT_USE_16_BIT_PC=yes USE_CPOT_STACK=yes clean); \
#	done
	(cd TCAP/src && ./makeallclean)
	for dir in $(ENGINESUBS);					\
	do								\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=yes clean);	\
		(cd $$dir/src && $(MAKE) DEBUG_BUILD=no clean);		\
	done
	(cd VFRAME/src && $(MAKE) clean);
	
#	for dir in $(ANSIPROTSUBS);					       \
#	do								       \
#		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=yes clean); \
#		(cd $$dir/src && $(MAKE) PROTOCOL=ANSI DEBUG_BUILD=no clean);  \
#	done
	for dir in $(CCITTPROTSUBS);					       \
	do								       \
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=yes clean);\
		(cd $$dir/src && $(MAKE) PROTOCOL=CCITT DEBUG_BUILD=no clean); \
	done

test:
	for dir in $(SUBDIRS);			\
	do					\
		(cd $$dir/src && $(MAKE) test);	\
	done

