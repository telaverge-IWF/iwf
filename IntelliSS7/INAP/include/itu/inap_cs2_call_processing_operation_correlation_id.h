//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_INAP_CS2_CALL_PROCESSING_OPERATION_CORRELATION_ID_H_)
#define _INAP_CS2_CALL_PROCESSING_OPERATION_CORRELATION_ID_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnEnumerated.h>



namespace inap_cs2 {



class CallProcessingOperationCorrelationID : public its::AsnEnumerated
{
public:

    CallProcessingOperationCorrelationID() : its::AsnEnumerated(false)
    {
        Initialize();
    }

    CallProcessingOperationCorrelationID(long value) : its::AsnEnumerated(value, false)
    {
        Initialize();
    }

    CallProcessingOperationCorrelationID(its::Octets& octets) : its::AsnEnumerated(false)
    {
        Initialize();
        Decode(octets);
    }

    CallProcessingOperationCorrelationID(const CallProcessingOperationCorrelationID& rhs) : its::AsnEnumerated(rhs)
    {
        // Nothing to do.
    }

    CallProcessingOperationCorrelationID(its::AsnDescObject* description) : its::AsnEnumerated(description)
    {
        // Nothing to do.
    }

    CallProcessingOperationCorrelationID(its::AsnDescObject* description, long value) : its::AsnEnumerated(description, value)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

public:

    virtual ~CallProcessingOperationCorrelationID()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new CallProcessingOperationCorrelationID(*this);
    }

    virtual std::string GetName() const
    { return "CallProcessingOperationCorrelationID"; }

    virtual long Get(const std::string& valueName) const;

    virtual std::string Get(long value) const;

    virtual std::string GetExt(long value) const;

    enum {
        CALL_PROCESSING_OPERATION_CORRELATION_ID_ALER_TING = 1,
        CALL_PROCESSING_OPERATION_CORRELATION_ID_SETUP = 5,
        CALL_PROCESSING_OPERATION_CORRELATION_ID_CON_NECT = 7,
        CALL_PROCESSING_OPERATION_CORRELATION_ID_DIS_CONNECT = 69,
        CALL_PROCESSING_OPERATION_CORRELATION_ID_RE_LEASE = 77,
        CALL_PROCESSING_OPERATION_CORRELATION_ID_RE_LEASE_COM_PLETE = 90,
        CALL_PROCESSING_OPERATION_CORRELATION_ID_FA_CILITY = 98

    };

    void SetALERTing()
    { _value = 1; }

    bool IsALERTing() const
    { return _value == 1; }

    void SetSETUP()
    { _value = 5; }

    bool IsSETUP() const
    { return _value == 5; }

    void SetCONNect()
    { _value = 7; }

    bool IsCONNect() const
    { return _value == 7; }

    void SetDISConnect()
    { _value = 69; }

    bool IsDISConnect() const
    { return _value == 69; }

    void SetRELease()
    { _value = 77; }

    bool IsRELease() const
    { return _value == 77; }

    void SetRELeaseCOMPlete()
    { _value = 90; }

    bool IsRELeaseCOMPlete() const
    { return _value == 90; }

    void SetFACility()
    { _value = 98; }

    bool IsFACility() const
    { return _value == 98; }

};



} // namespace.

#endif    // !defined(_INAP_CS2_CALL_PROCESSING_OPERATION_CORRELATION_ID_H_)

