//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_INAP_CS2_CALL_RECORD_H_)
#define _INAP_CS2_CALL_RECORD_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnSequence.h>
#include <AsnInteger.h>
#include <AsnOctetString.h>

#include <inap_cs2_duration.h>
#include <inap_cs2_calling_party_number.h>
#include <inap_cs2_called_party_number.h>



namespace inap_cs2 {



class CallRecord : public its::AsnSequence
{
public:


////////// Begin Nested Class(es) //////////


        typedef inap_cs2::Duration Duration;


        typedef inap_cs2::CallingPartyNumber CallingPartyNumber;


        typedef inap_cs2::CalledPartyNumber CalledPartyNumber;


////////// End Nested Class(es) //////////

    CallRecord() : its::AsnSequence(3, false)
    {
        Initialize();
    }

    CallRecord(its::Octets& octets) : its::AsnSequence(3, false)
    {
        Initialize();
        Decode(octets);
    }

    CallRecord(const CallRecord& rhs) : its::AsnSequence(rhs)
    {
        // Nothing to do.
    }

    CallRecord(its::AsnDescObject* description) : its::AsnSequence(3, description)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

    static its::AsnDescObject* GetCallDurationStaticDescription();
    static its::AsnDescObject* GetCallingPartyNumberStaticDescription();
    static its::AsnDescObject* GetCalledPartyNumberStaticDescription();

public:

    virtual ~CallRecord()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new CallRecord(*this);
    }

    virtual std::string GetName() const
    { return "CallRecord"; }

    void SetCallDuration(Duration* element)
    {
        ITS_REQUIRE(element != NULL);
        element->AsnObject::SetDescription(GetCallDurationStaticDescription());
        AddElement(0, element);
    }

    void SetCallDuration(const Duration& element)
    {
        its::AsnObject& asnObject = const_cast<Duration&>(element);
        asnObject.SetDescription(GetCallDurationStaticDescription());
        AddElement(0, element);
    }

    const Duration& GetCallDuration() const
    {
        return static_cast<const Duration&> (ElementAt(0));
    }

    void SetCallingPartyNumber(CallingPartyNumber* element)
    {
        ITS_REQUIRE(element != NULL);
        element->AsnObject::SetDescription(GetCallingPartyNumberStaticDescription());
        AddElement(1, element);
    }

    void SetCallingPartyNumber(const CallingPartyNumber& element)
    {
        its::AsnObject& asnObject = const_cast<CallingPartyNumber&>(element);
        asnObject.SetDescription(GetCallingPartyNumberStaticDescription());
        AddElement(1, element);
    }

    const CallingPartyNumber& GetCallingPartyNumber() const
    {
        return static_cast<const CallingPartyNumber&> (ElementAt(1));
    }

    void SetCalledPartyNumber(CalledPartyNumber* element)
    {
        ITS_REQUIRE(element != NULL);
        element->AsnObject::SetDescription(GetCalledPartyNumberStaticDescription());
        AddElement(2, element);
    }

    void SetCalledPartyNumber(const CalledPartyNumber& element)
    {
        its::AsnObject& asnObject = const_cast<CalledPartyNumber&>(element);
        asnObject.SetDescription(GetCalledPartyNumberStaticDescription());
        AddElement(2, element);
    }

    const CalledPartyNumber& GetCalledPartyNumber() const
    {
        return static_cast<const CalledPartyNumber&> (ElementAt(2));
    }

};



} // namespace.

#endif    // !defined(_INAP_CS2_CALL_RECORD_H_)

