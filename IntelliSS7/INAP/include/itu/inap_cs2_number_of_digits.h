//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_INAP_CS2_NUMBER_OF_DIGITS_H_)
#define _INAP_CS2_NUMBER_OF_DIGITS_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnInteger.h>



namespace inap_cs2 {



class NumberOfDigits : public its::AsnInteger
{
public:

    NumberOfDigits() : its::AsnInteger(false)
    {
        Initialize();
    }

    NumberOfDigits(long value) : its::AsnInteger(value, false)
    {
        Initialize();
    }

    NumberOfDigits(its::Octets& octets) : its::AsnInteger(false)
    {
        Initialize();
        Decode(octets);
    }

    NumberOfDigits(const NumberOfDigits& rhs) : its::AsnInteger(rhs)
    {
        // Nothing to do.
    }

    NumberOfDigits(its::AsnDescObject* description) : its::AsnInteger(description)
    {
        // Nothing to do.
    }

    NumberOfDigits(its::AsnDescObject* description, long value) : its::AsnInteger(description, value)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

public:

    virtual ~NumberOfDigits()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new NumberOfDigits(*this);
    }

    virtual std::string GetName() const
    { return "NumberOfDigits"; }

};



} // namespace.

#endif    // !defined(_INAP_CS2_NUMBER_OF_DIGITS_H_)

