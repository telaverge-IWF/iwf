//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_INAP_CS2_GRANTS_AND_DENIALS_H_)
#define _INAP_CS2_GRANTS_AND_DENIALS_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnBitString.h>



namespace inap_cs2 {



class GrantsAndDenials : public its::AsnBitString
{
public:

    GrantsAndDenials() : its::AsnBitString(false)
    {
        Initialize();
    }

    GrantsAndDenials(const std::vector<bool>& array) : its::AsnBitString(array, false)
    {
        Initialize();
    }

    GrantsAndDenials(its::Octets& octets) : its::AsnBitString(false)
    {
        Initialize();
        Decode(octets);
    }

    GrantsAndDenials(const GrantsAndDenials& rhs) : its::AsnBitString(rhs)
    {
        // Nothing to do.
    }

    GrantsAndDenials(its::AsnDescObject* description) : its::AsnBitString(description)
    {
        // Nothing to do.
    }

    GrantsAndDenials(its::AsnDescObject* description, const std::vector<bool>& array) : its::AsnBitString(description, array)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

public:

    virtual ~GrantsAndDenials()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new GrantsAndDenials(*this);
    }

    virtual std::string GetName() const
    { return "GrantsAndDenials"; }

    void SetDenyExecuteMethod()
    { Set(31); }

    void ResetDenyExecuteMethod()
    { Reset(31); }

    bool IsDenyExecuteMethodSet() const
    { return IsSet(31); }

    bool IsDenyExecuteMethodDefined() const
    { return 31 < GetSize(); }

    void SetGrantExecuteMethod()
    { Set(30); }

    void ResetGrantExecuteMethod()
    { Reset(30); }

    bool IsGrantExecuteMethodSet() const
    { return IsSet(30); }

    bool IsGrantExecuteMethodDefined() const
    { return 30 < GetSize(); }

    void SetDenyFilterMatch()
    { Set(23); }

    void ResetDenyFilterMatch()
    { Reset(23); }

    bool IsDenyFilterMatchSet() const
    { return IsSet(23); }

    bool IsDenyFilterMatchDefined() const
    { return 23 < GetSize(); }

    void SetGrantFilterMatch()
    { Set(22); }

    void ResetGrantFilterMatch()
    { Reset(22); }

    bool IsGrantFilterMatchSet() const
    { return IsSet(22); }

    bool IsGrantFilterMatchDefined() const
    { return 22 < GetSize(); }

    void SetDenyCompare()
    { Set(21); }

    void ResetDenyCompare()
    { Reset(21); }

    bool IsDenyCompareSet() const
    { return IsSet(21); }

    bool IsDenyCompareDefined() const
    { return 21 < GetSize(); }

    void SetGrantCompare()
    { Set(20); }

    void ResetGrantCompare()
    { Reset(20); }

    bool IsGrantCompareSet() const
    { return IsSet(20); }

    bool IsGrantCompareDefined() const
    { return 20 < GetSize(); }

    void SetDenyReturnDN()
    { Set(19); }

    void ResetDenyReturnDN()
    { Reset(19); }

    bool IsDenyReturnDNSet() const
    { return IsSet(19); }

    bool IsDenyReturnDNDefined() const
    { return 19 < GetSize(); }

    void SetGrantReturnDN()
    { Set(18); }

    void ResetGrantReturnDN()
    { Reset(18); }

    bool IsGrantReturnDNSet() const
    { return IsSet(18); }

    bool IsGrantReturnDNDefined() const
    { return 18 < GetSize(); }

    void SetDenyRename()
    { Set(17); }

    void ResetDenyRename()
    { Reset(17); }

    bool IsDenyRenameSet() const
    { return IsSet(17); }

    bool IsDenyRenameDefined() const
    { return 17 < GetSize(); }

    void SetGrantRename()
    { Set(16); }

    void ResetGrantRename()
    { Reset(16); }

    bool IsGrantRenameSet() const
    { return IsSet(16); }

    bool IsGrantRenameDefined() const
    { return 16 < GetSize(); }

    void SetDenyModify()
    { Set(15); }

    void ResetDenyModify()
    { Reset(15); }

    bool IsDenyModifySet() const
    { return IsSet(15); }

    bool IsDenyModifyDefined() const
    { return 15 < GetSize(); }

    void SetGrantModify()
    { Set(14); }

    void ResetGrantModify()
    { Reset(14); }

    bool IsGrantModifySet() const
    { return IsSet(14); }

    bool IsGrantModifyDefined() const
    { return 14 < GetSize(); }

    void SetDenyImport()
    { Set(13); }

    void ResetDenyImport()
    { Reset(13); }

    bool IsDenyImportSet() const
    { return IsSet(13); }

    bool IsDenyImportDefined() const
    { return 13 < GetSize(); }

    void SetGrantImport()
    { Set(12); }

    void ResetGrantImport()
    { Reset(12); }

    bool IsGrantImportSet() const
    { return IsSet(12); }

    bool IsGrantImportDefined() const
    { return 12 < GetSize(); }

    void SetDenyExport()
    { Set(11); }

    void ResetDenyExport()
    { Reset(11); }

    bool IsDenyExportSet() const
    { return IsSet(11); }

    bool IsDenyExportDefined() const
    { return 11 < GetSize(); }

    void SetGrantExport()
    { Set(10); }

    void ResetGrantExport()
    { Reset(10); }

    bool IsGrantExportSet() const
    { return IsSet(10); }

    bool IsGrantExportDefined() const
    { return 10 < GetSize(); }

    void SetDenyBrowse()
    { Set(9); }

    void ResetDenyBrowse()
    { Reset(9); }

    bool IsDenyBrowseSet() const
    { return IsSet(9); }

    bool IsDenyBrowseDefined() const
    { return 9 < GetSize(); }

    void SetGrantBrowse()
    { Set(8); }

    void ResetGrantBrowse()
    { Reset(8); }

    bool IsGrantBrowseSet() const
    { return IsSet(8); }

    bool IsGrantBrowseDefined() const
    { return 8 < GetSize(); }

    void SetDenyRemove()
    { Set(7); }

    void ResetDenyRemove()
    { Reset(7); }

    bool IsDenyRemoveSet() const
    { return IsSet(7); }

    bool IsDenyRemoveDefined() const
    { return 7 < GetSize(); }

    void SetGrantRemove()
    { Set(6); }

    void ResetGrantRemove()
    { Reset(6); }

    bool IsGrantRemoveSet() const
    { return IsSet(6); }

    bool IsGrantRemoveDefined() const
    { return 6 < GetSize(); }

    void SetDenyRead()
    { Set(5); }

    void ResetDenyRead()
    { Reset(5); }

    bool IsDenyReadSet() const
    { return IsSet(5); }

    bool IsDenyReadDefined() const
    { return 5 < GetSize(); }

    void SetGrantRead()
    { Set(4); }

    void ResetGrantRead()
    { Reset(4); }

    bool IsGrantReadSet() const
    { return IsSet(4); }

    bool IsGrantReadDefined() const
    { return 4 < GetSize(); }

    void SetDenyDiscloseOnError()
    { Set(3); }

    void ResetDenyDiscloseOnError()
    { Reset(3); }

    bool IsDenyDiscloseOnErrorSet() const
    { return IsSet(3); }

    bool IsDenyDiscloseOnErrorDefined() const
    { return 3 < GetSize(); }

    void SetGrantDiscloseOnError()
    { Set(2); }

    void ResetGrantDiscloseOnError()
    { Reset(2); }

    bool IsGrantDiscloseOnErrorSet() const
    { return IsSet(2); }

    bool IsGrantDiscloseOnErrorDefined() const
    { return 2 < GetSize(); }

    void SetDenyAdd()
    { Set(1); }

    void ResetDenyAdd()
    { Reset(1); }

    bool IsDenyAddSet() const
    { return IsSet(1); }

    bool IsDenyAddDefined() const
    { return 1 < GetSize(); }

    void SetGrantAdd()
    { Set(0); }

    void ResetGrantAdd()
    { Reset(0); }

    bool IsGrantAddSet() const
    { return IsSet(0); }

    bool IsGrantAddDefined() const
    { return 0 < GetSize(); }

};



} // namespace.

#endif    // !defined(_INAP_CS2_GRANTS_AND_DENIALS_H_)

