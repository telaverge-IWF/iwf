//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_INAP_CS2_HIGH_LAYER_COMPATIBILITIES_H_)
#define _INAP_CS2_HIGH_LAYER_COMPATIBILITIES_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnBitString.h>



namespace inap_cs2 {



class HighLayerCompatibilities : public its::AsnBitString
{
public:

    HighLayerCompatibilities() : its::AsnBitString(false)
    {
        Initialize();
    }

    HighLayerCompatibilities(const std::vector<bool>& array) : its::AsnBitString(array, false)
    {
        Initialize();
    }

    HighLayerCompatibilities(its::Octets& octets) : its::AsnBitString(false)
    {
        Initialize();
        Decode(octets);
    }

    HighLayerCompatibilities(const HighLayerCompatibilities& rhs) : its::AsnBitString(rhs)
    {
        // Nothing to do.
    }

    HighLayerCompatibilities(its::AsnDescObject* description) : its::AsnBitString(description)
    {
        // Nothing to do.
    }

    HighLayerCompatibilities(its::AsnDescObject* description, const std::vector<bool>& array) : its::AsnBitString(description, array)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

public:

    virtual ~HighLayerCompatibilities()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new HighLayerCompatibilities(*this);
    }

    virtual std::string GetName() const
    { return "HighLayerCompatibilities"; }

    void SetAudioVisual()
    { Set(11); }

    void ResetAudioVisual()
    { Reset(11); }

    bool IsAudioVisualSet() const
    { return IsSet(11); }

    bool IsAudioVisualDefined() const
    { return 11 < GetSize(); }

    void SetOsiApplication()
    { Set(10); }

    void ResetOsiApplication()
    { Reset(10); }

    bool IsOsiApplicationSet() const
    { return IsSet(10); }

    bool IsOsiApplicationDefined() const
    { return 10 < GetSize(); }

    void SetMessageHandlingSystem()
    { Set(9); }

    void ResetMessageHandlingSystem()
    { Reset(9); }

    bool IsMessageHandlingSystemSet() const
    { return IsSet(9); }

    bool IsMessageHandlingSystemDefined() const
    { return 9 < GetSize(); }

    void SetTelexService()
    { Set(8); }

    void ResetTelexService()
    { Reset(8); }

    bool IsTelexServiceSet() const
    { return IsSet(8); }

    bool IsTelexServiceDefined() const
    { return 8 < GetSize(); }

    void SetInternationalVideotex()
    { Set(7); }

    void ResetInternationalVideotex()
    { Reset(7); }

    bool IsInternationalVideotexSet() const
    { return IsSet(7); }

    bool IsInternationalVideotexDefined() const
    { return 7 < GetSize(); }

    void SetSyntaxBasedVideotex()
    { Set(6); }

    void ResetSyntaxBasedVideotex()
    { Reset(6); }

    bool IsSyntaxBasedVideotexSet() const
    { return IsSet(6); }

    bool IsSyntaxBasedVideotexDefined() const
    { return 6 < GetSize(); }

    void SetTeletexBasicMode()
    { Set(5); }

    void ResetTeletexBasicMode()
    { Reset(5); }

    bool IsTeletexBasicModeSet() const
    { return IsSet(5); }

    bool IsTeletexBasicModeDefined() const
    { return 5 < GetSize(); }

    void SetTeletexProcessableMode()
    { Set(4); }

    void ResetTeletexProcessableMode()
    { Reset(4); }

    bool IsTeletexProcessableModeSet() const
    { return IsSet(4); }

    bool IsTeletexProcessableModeDefined() const
    { return 4 < GetSize(); }

    void SetTeletexMixedMode()
    { Set(3); }

    void ResetTeletexMixedMode()
    { Reset(3); }

    bool IsTeletexMixedModeSet() const
    { return IsSet(3); }

    bool IsTeletexMixedModeDefined() const
    { return 3 < GetSize(); }

    void SetFacsimileGroup4classeI()
    { Set(2); }

    void ResetFacsimileGroup4classeI()
    { Reset(2); }

    bool IsFacsimileGroup4classeISet() const
    { return IsSet(2); }

    bool IsFacsimileGroup4classeIDefined() const
    { return 2 < GetSize(); }

    void SetFacsimileGroup2_3()
    { Set(1); }

    void ResetFacsimileGroup2_3()
    { Reset(1); }

    bool IsFacsimileGroup2_3Set() const
    { return IsSet(1); }

    bool IsFacsimileGroup2_3Defined() const
    { return 1 < GetSize(); }

    void SetTelephony()
    { Set(0); }

    void ResetTelephony()
    { Reset(0); }

    bool IsTelephonySet() const
    { return IsSet(0); }

    bool IsTelephonyDefined() const
    { return 0 < GetSize(); }

};



} // namespace.

#endif    // !defined(_INAP_CS2_HIGH_LAYER_COMPATIBILITIES_H_)

