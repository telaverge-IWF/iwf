//
// Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).
//
// Do not edit!
//
//
//
// (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.
//
//


#if !defined(_INAP_CS2_OPERATION_CODE_H_)
#define _INAP_CS2_OPERATION_CODE_H_

#if _MSC_VER >= 1000
#pragma once
#endif // _MSC_VER >= 1000

#include <Asn.h>
#include <AsnObject.h>
#include <AsnDescObject.h>
#include <AsnError.h>

#include <AsnChoice.h>
#include <AsnObjectIdentifier.h>
#include <AsnInteger.h>



namespace inap_cs2 {



class OperationCode : public its::AsnChoice
{
public:


////////// Begin Nested Class(es) //////////



    class GlobalCode : public its::AsnObjectIdentifier
    {
    public:

        GlobalCode() : its::AsnObjectIdentifier(false)
        {
            Initialize();
        }

        GlobalCode(const std::vector<long>& array) : its::AsnObjectIdentifier(array, false)
        {
            Initialize();
        }

        GlobalCode(its::Octets& octets) : its::AsnObjectIdentifier(false)
        {
            Initialize();
            Decode(octets);
        }

        GlobalCode(const GlobalCode& rhs) : its::AsnObjectIdentifier(rhs)
        {
            // Nothing to do.
        }

        GlobalCode(its::AsnDescObject* description) : its::AsnObjectIdentifier(description)
        {
            // Nothing to do.
        }

        GlobalCode(its::AsnDescObject* description, const std::vector<long>& array) : its::AsnObjectIdentifier(description, array)
        {
            // Nothing to do.
        }

    protected:

        void Initialize()
        {
            _description = GetStaticDescription();
        }

    public:

        static its::AsnDescObject* GetStaticDescription();

    public:

        virtual ~GlobalCode()
        {
            // Nothing to do.
        }

        virtual its::AsnObject* Clone() const
        {
            return new GlobalCode(*this);
        }

        virtual std::string GetName() const
        { return "GlobalCode"; }

    };



    class Local : public its::AsnInteger
    {
    public:

        Local() : its::AsnInteger(false)
        {
            Initialize();
        }

        Local(long value) : its::AsnInteger(value, false)
        {
            Initialize();
        }

        Local(its::Octets& octets) : its::AsnInteger(false)
        {
            Initialize();
            Decode(octets);
        }

        Local(const Local& rhs) : its::AsnInteger(rhs)
        {
            // Nothing to do.
        }

        Local(its::AsnDescObject* description) : its::AsnInteger(description)
        {
            // Nothing to do.
        }

        Local(its::AsnDescObject* description, long value) : its::AsnInteger(description, value)
        {
            // Nothing to do.
        }

    protected:

        void Initialize()
        {
            _description = GetStaticDescription();
        }

    public:

        static its::AsnDescObject* GetStaticDescription();

    public:

        virtual ~Local()
        {
            // Nothing to do.
        }

        virtual its::AsnObject* Clone() const
        {
            return new Local(*this);
        }

        virtual std::string GetName() const
        { return "Local"; }

    };


////////// End Nested Class(es) //////////

    OperationCode() : its::AsnChoice(false)
    {
        Initialize();
    }

    OperationCode(its::Octets& octets) : its::AsnChoice(false)
    {
        Initialize();
        Decode(octets);
    }

    OperationCode(const OperationCode& rhs) : its::AsnChoice(rhs)
    {
        // Nothing to do.
    }

    OperationCode(its::AsnDescObject* description) : its::AsnChoice(description)
    {
        // Nothing to do.
    }

    OperationCode(its::AsnDescObject* description, its::AsnObject* choice) : its::AsnChoice(description, choice)
    {
        // Nothing to do.
    }

protected:

    void Initialize()
    {
        _description = GetStaticDescription();
    }

public:

    static its::AsnDescObject* GetStaticDescription();

    static its::AsnDescObject* GetGlobalCodeStaticDescription();
    static its::AsnDescObject* GetLocalStaticDescription();

public:

    virtual ~OperationCode()
    {
        // Nothing to do.
    }

    virtual its::AsnObject* Clone() const
    {
        return new OperationCode(*this);
    }

    virtual std::string GetName() const
    { return "OperationCode"; }

    void SetChoiceGlobalCode(GlobalCode* choice)
    {
        ITS_REQUIRE(choice != NULL);
        choice->AsnObject::SetDescription(GetGlobalCodeStaticDescription());
        SetChoice(choice);
    }

    void SetChoiceGlobalCode(const GlobalCode& choice)
    {
        its::AsnObject& asnObject = const_cast<GlobalCode&>(choice);
        asnObject.SetDescription(GetGlobalCodeStaticDescription());
        SetChoice(choice);
    }

    bool ChoiceGlobalCode() const
    {
        return Contains(GetGlobalCodeStaticDescription()->TagIdentity());
    }

    const GlobalCode& GetChoiceGlobalCode() const
    {
        ITS_REQUIRE(ChoiceGlobalCode());
        return static_cast<const GlobalCode&> (GetChoice());
    }

    void SetChoiceLocal(Local* choice)
    {
        ITS_REQUIRE(choice != NULL);
        choice->AsnObject::SetDescription(GetLocalStaticDescription());
        SetChoice(choice);
    }

    void SetChoiceLocal(const Local& choice)
    {
        its::AsnObject& asnObject = const_cast<Local&>(choice);
        asnObject.SetDescription(GetLocalStaticDescription());
        SetChoice(choice);
    }

    bool ChoiceLocal() const
    {
        return Contains(GetLocalStaticDescription()->TagIdentity());
    }

    const Local& GetChoiceLocal() const
    {
        ITS_REQUIRE(ChoiceLocal());
        return static_cast<const Local&> (GetChoice());
    }

};



} // namespace.

#endif    // !defined(_INAP_CS2_OPERATION_CODE_H_)

