<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>CallConditions</className>
<asnTypeName>CallConditions</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceUserAbandon</name>
<signature>void SetChoiceUserAbandon(UserAbandon* choice)</signature>
<choiceName>UserAbandon</choiceName>
<asnChoiceName>userAbandon</asnChoiceName>
<choiceTypeName>UserAbandon</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceUserAbandon</name>
<signature>void SetChoiceUserAbandon(const UserAbandon&amp; choice)</signature>
<choiceName>UserAbandon</choiceName>
<asnChoiceName>userAbandon</asnChoiceName>
<choiceTypeName>UserAbandon</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceUserAbandon</name>
<signature>const UserAbandon&amp; GetChoiceUserAbandon() const</signature>
<choiceName>UserAbandon</choiceName>
<asnChoiceName>userAbandon</asnChoiceName>
<choiceTypeName>UserAbandon</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceUserAbandon</name>
<signature>bool ChoiceUserAbandon() const</signature>
<choiceName>UserAbandon</choiceName>
<asnChoiceName>userAbandon</asnChoiceName>
<choiceTypeName>UserAbandon</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCallFailure</name>
<signature>void SetChoiceCallFailure(CauseValue* choice)</signature>
<choiceName>CallFailure</choiceName>
<asnChoiceName>callFailure</asnChoiceName>
<choiceTypeName>CauseValue</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCallFailure</name>
<signature>void SetChoiceCallFailure(const CauseValue&amp; choice)</signature>
<choiceName>CallFailure</choiceName>
<asnChoiceName>callFailure</asnChoiceName>
<choiceTypeName>CauseValue</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCallFailure</name>
<signature>const CauseValue&amp; GetChoiceCallFailure() const</signature>
<choiceName>CallFailure</choiceName>
<asnChoiceName>callFailure</asnChoiceName>
<choiceTypeName>CauseValue</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCallFailure</name>
<signature>bool ChoiceCallFailure() const</signature>
<choiceName>CallFailure</choiceName>
<asnChoiceName>callFailure</asnChoiceName>
<choiceTypeName>CauseValue</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceNoReply</name>
<signature>void SetChoiceNoReply(NoReply* choice)</signature>
<choiceName>NoReply</choiceName>
<asnChoiceName>noReply</asnChoiceName>
<choiceTypeName>NoReply</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceNoReply</name>
<signature>void SetChoiceNoReply(const NoReply&amp; choice)</signature>
<choiceName>NoReply</choiceName>
<asnChoiceName>noReply</asnChoiceName>
<choiceTypeName>NoReply</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceNoReply</name>
<signature>const NoReply&amp; GetChoiceNoReply() const</signature>
<choiceName>NoReply</choiceName>
<asnChoiceName>noReply</asnChoiceName>
<choiceTypeName>NoReply</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceNoReply</name>
<signature>bool ChoiceNoReply() const</signature>
<choiceName>NoReply</choiceName>
<asnChoiceName>noReply</asnChoiceName>
<choiceTypeName>NoReply</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCallRelease</name>
<signature>void SetChoiceCallRelease(CallRelease* choice)</signature>
<choiceName>CallRelease</choiceName>
<asnChoiceName>callRelease</asnChoiceName>
<choiceTypeName>CallRelease</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCallRelease</name>
<signature>void SetChoiceCallRelease(const CallRelease&amp; choice)</signature>
<choiceName>CallRelease</choiceName>
<asnChoiceName>callRelease</asnChoiceName>
<choiceTypeName>CallRelease</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCallRelease</name>
<signature>const CallRelease&amp; GetChoiceCallRelease() const</signature>
<choiceName>CallRelease</choiceName>
<asnChoiceName>callRelease</asnChoiceName>
<choiceTypeName>CallRelease</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCallRelease</name>
<signature>bool ChoiceCallRelease() const</signature>
<choiceName>CallRelease</choiceName>
<asnChoiceName>callRelease</asnChoiceName>
<choiceTypeName>CallRelease</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceSs_invocation</name>
<signature>void SetChoiceSs_invocation(InvokableService* choice)</signature>
<choiceName>Ss_invocation</choiceName>
<asnChoiceName>ss-invocation</asnChoiceName>
<choiceTypeName>InvokableService</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceSs_invocation</name>
<signature>void SetChoiceSs_invocation(const InvokableService&amp; choice)</signature>
<choiceName>Ss_invocation</choiceName>
<asnChoiceName>ss-invocation</asnChoiceName>
<choiceTypeName>InvokableService</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceSs_invocation</name>
<signature>const InvokableService&amp; GetChoiceSs_invocation() const</signature>
<choiceName>Ss_invocation</choiceName>
<asnChoiceName>ss-invocation</asnChoiceName>
<choiceTypeName>InvokableService</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceSs_invocation</name>
<signature>bool ChoiceSs_invocation() const</signature>
<choiceName>Ss_invocation</choiceName>
<asnChoiceName>ss-invocation</asnChoiceName>
<choiceTypeName>InvokableService</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCreditLimitReached</name>
<signature>void SetChoiceCreditLimitReached(CreditLimitReached* choice)</signature>
<choiceName>CreditLimitReached</choiceName>
<asnChoiceName>creditLimitReached</asnChoiceName>
<choiceTypeName>CreditLimitReached</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCreditLimitReached</name>
<signature>void SetChoiceCreditLimitReached(const CreditLimitReached&amp; choice)</signature>
<choiceName>CreditLimitReached</choiceName>
<asnChoiceName>creditLimitReached</asnChoiceName>
<choiceTypeName>CreditLimitReached</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCreditLimitReached</name>
<signature>const CreditLimitReached&amp; GetChoiceCreditLimitReached() const</signature>
<choiceName>CreditLimitReached</choiceName>
<asnChoiceName>creditLimitReached</asnChoiceName>
<choiceTypeName>CreditLimitReached</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCreditLimitReached</name>
<signature>bool ChoiceCreditLimitReached() const</signature>
<choiceName>CreditLimitReached</choiceName>
<asnChoiceName>creditLimitReached</asnChoiceName>
<choiceTypeName>CreditLimitReached</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCallDuration</name>
<signature>void SetChoiceCallDuration(CallDuration* choice)</signature>
<choiceName>CallDuration</choiceName>
<asnChoiceName>callDuration</asnChoiceName>
<choiceTypeName>CallDuration</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCallDuration</name>
<signature>void SetChoiceCallDuration(const CallDuration&amp; choice)</signature>
<choiceName>CallDuration</choiceName>
<asnChoiceName>callDuration</asnChoiceName>
<choiceTypeName>CallDuration</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCallDuration</name>
<signature>const CallDuration&amp; GetChoiceCallDuration() const</signature>
<choiceName>CallDuration</choiceName>
<asnChoiceName>callDuration</asnChoiceName>
<choiceTypeName>CallDuration</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCallDuration</name>
<signature>bool ChoiceCallDuration() const</signature>
<choiceName>CallDuration</choiceName>
<asnChoiceName>callDuration</asnChoiceName>
<choiceTypeName>CallDuration</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCalledNumber</name>
<signature>void SetChoiceCalledNumber(NumberMatch* choice)</signature>
<choiceName>CalledNumber</choiceName>
<asnChoiceName>calledNumber</asnChoiceName>
<choiceTypeName>NumberMatch</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCalledNumber</name>
<signature>void SetChoiceCalledNumber(const NumberMatch&amp; choice)</signature>
<choiceName>CalledNumber</choiceName>
<asnChoiceName>calledNumber</asnChoiceName>
<choiceTypeName>NumberMatch</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCalledNumber</name>
<signature>const NumberMatch&amp; GetChoiceCalledNumber() const</signature>
<choiceName>CalledNumber</choiceName>
<asnChoiceName>calledNumber</asnChoiceName>
<choiceTypeName>NumberMatch</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCalledNumber</name>
<signature>bool ChoiceCalledNumber() const</signature>
<choiceName>CalledNumber</choiceName>
<asnChoiceName>calledNumber</asnChoiceName>
<choiceTypeName>NumberMatch</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceAnsweredCall</name>
<signature>void SetChoiceAnsweredCall(AnsweredCall* choice)</signature>
<choiceName>AnsweredCall</choiceName>
<asnChoiceName>answeredCall</asnChoiceName>
<choiceTypeName>AnsweredCall</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceAnsweredCall</name>
<signature>void SetChoiceAnsweredCall(const AnsweredCall&amp; choice)</signature>
<choiceName>AnsweredCall</choiceName>
<asnChoiceName>answeredCall</asnChoiceName>
<choiceTypeName>AnsweredCall</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceAnsweredCall</name>
<signature>const AnsweredCall&amp; GetChoiceAnsweredCall() const</signature>
<choiceName>AnsweredCall</choiceName>
<asnChoiceName>answeredCall</asnChoiceName>
<choiceTypeName>AnsweredCall</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceAnsweredCall</name>
<signature>bool ChoiceAnsweredCall() const</signature>
<choiceName>AnsweredCall</choiceName>
<asnChoiceName>answeredCall</asnChoiceName>
<choiceTypeName>AnsweredCall</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CallConditions information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CallConditions ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    userAbandon [0] IMPLICIT NULL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callFailure [1] IMPLICIT CauseValue -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    noReply [2] IMPLICIT INTEGER,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callRelease [3] IMPLICIT NULL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    ss-invocation [4] IMPLICIT InvokableService -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    creditLimitReached [5] IMPLICIT INTEGER,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callDuration [6] IMPLICIT INTEGER,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    calledNumber [7] IMPLICIT NumberMatch -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    answeredCall [8] IMPLICIT NULL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

