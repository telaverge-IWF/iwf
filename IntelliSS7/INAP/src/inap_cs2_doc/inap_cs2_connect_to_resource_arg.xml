<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ConnectToResourceArg</className>
<asnTypeName>ConnectToResourceArg</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetResourceAddress</name>
<signature>void SetResourceAddress(ResourceAddress* element)</signature>
<elmentName>ResourceAddress</elmentName>
<asnElementName>resourceAddress</asnElementName>
<elementTypeName>ResourceAddress</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetResourceAddress</name>
<signature>void SetResourceAddress(const ResourceAddress&amp; element)</signature>
<elementName>ResourceAddress</elementName>
<asnElementName>resourceAddress</asnElementName>
<elementTypeName>ResourceAddress</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetResourceAddress</name>
<signature>const ResourceAddress&amp; GetResourceAddress() const</signature>
<elementName>ResourceAddress</elementName>
<asnElementName>resourceAddress</asnElementName>
<elementTypeName>ResourceAddress</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetServiceInteractionIndicators</name>
<signature>void SetServiceInteractionIndicators(ServiceInteractionIndicators* element)</signature>
<elmentName>ServiceInteractionIndicators</elmentName>
<asnElementName>serviceInteractionIndicators</asnElementName>
<elementTypeName>ServiceInteractionIndicators</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServiceInteractionIndicators</name>
<signature>void SetServiceInteractionIndicators(const ServiceInteractionIndicators&amp; element)</signature>
<elementName>ServiceInteractionIndicators</elementName>
<asnElementName>serviceInteractionIndicators</asnElementName>
<elementTypeName>ServiceInteractionIndicators</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServiceInteractionIndicators</name>
<signature>const ServiceInteractionIndicators&amp; GetServiceInteractionIndicators() const</signature>
<elementName>ServiceInteractionIndicators</elementName>
<asnElementName>serviceInteractionIndicators</asnElementName>
<elementTypeName>ServiceInteractionIndicators</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionServiceInteractionIndicators</name>
<signature>bool OptionServiceInteractionIndicators() const</signature>
<elementName>ServiceInteractionIndicators</elementName>
<asnElementName>serviceInteractionIndicators</asnElementName>
<elementTypeName>ServiceInteractionIndicators</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetServiceInteractionIndicatorsTwo</name>
<signature>void SetServiceInteractionIndicatorsTwo(ServiceInteractionIndicatorsTwo* element)</signature>
<elmentName>ServiceInteractionIndicatorsTwo</elmentName>
<asnElementName>serviceInteractionIndicatorsTwo</asnElementName>
<elementTypeName>ServiceInteractionIndicatorsTwo</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServiceInteractionIndicatorsTwo</name>
<signature>void SetServiceInteractionIndicatorsTwo(const ServiceInteractionIndicatorsTwo&amp; element)</signature>
<elementName>ServiceInteractionIndicatorsTwo</elementName>
<asnElementName>serviceInteractionIndicatorsTwo</asnElementName>
<elementTypeName>ServiceInteractionIndicatorsTwo</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServiceInteractionIndicatorsTwo</name>
<signature>const ServiceInteractionIndicatorsTwo&amp; GetServiceInteractionIndicatorsTwo() const</signature>
<elementName>ServiceInteractionIndicatorsTwo</elementName>
<asnElementName>serviceInteractionIndicatorsTwo</asnElementName>
<elementTypeName>ServiceInteractionIndicatorsTwo</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionServiceInteractionIndicatorsTwo</name>
<signature>bool OptionServiceInteractionIndicatorsTwo() const</signature>
<elementName>ServiceInteractionIndicatorsTwo</elementName>
<asnElementName>serviceInteractionIndicatorsTwo</asnElementName>
<elementTypeName>ServiceInteractionIndicatorsTwo</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ConnectToResourceArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ConnectToResourceArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    resourceAddress CHOICE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        ipRoutingAddress [0] IMPLICIT IPRoutingAddress -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        legID [1] IMPLICIT LegID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        ipAddressAndLegID [2] IMPLICIT SEQUENCE</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        {</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>            ipRoutingAddress [0] IMPLICIT IPRoutingAddress -- [linked] --,</text>
<shift></shift>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>            legID [1] IMPLICIT LegID -- [linked] --</text>
<shift></shift>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        },</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        none [3] IMPLICIT NULL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        callSegmentID [5] IMPLICIT CallSegmentID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        ipAddressAndCallSegment [6] IMPLICIT SEQUENCE</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        {</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>            ipRoutingAddress [0] IMPLICIT IPRoutingAddress -- [linked] --,</text>
<shift></shift>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>            callSegmentID [1] IMPLICIT CallSegmentID -- [linked] --</text>
<shift></shift>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        }</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [4] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    serviceInteractionIndicators [30] IMPLICIT ServiceInteractionIndicators -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    serviceInteractionIndicatorsTwo [7] IMPLICIT ServiceInteractionIndicatorsTwo -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

