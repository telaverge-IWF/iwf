<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ControlConditionByCallParty</className>
<asnTypeName>ControlConditionByCallParty</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetEndOfMessageSendingDigit</name>
<signature>void SetEndOfMessageSendingDigit(EndOfMessageSendingDigit* element)</signature>
<elmentName>EndOfMessageSendingDigit</elmentName>
<asnElementName>endOfMessageSendingDigit</asnElementName>
<elementTypeName>EndOfMessageSendingDigit</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEndOfMessageSendingDigit</name>
<signature>void SetEndOfMessageSendingDigit(const EndOfMessageSendingDigit&amp; element)</signature>
<elementName>EndOfMessageSendingDigit</elementName>
<asnElementName>endOfMessageSendingDigit</asnElementName>
<elementTypeName>EndOfMessageSendingDigit</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEndOfMessageSendingDigit</name>
<signature>const EndOfMessageSendingDigit&amp; GetEndOfMessageSendingDigit() const</signature>
<elementName>EndOfMessageSendingDigit</elementName>
<asnElementName>endOfMessageSendingDigit</asnElementName>
<elementTypeName>EndOfMessageSendingDigit</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionEndOfMessageSendingDigit</name>
<signature>bool OptionEndOfMessageSendingDigit() const</signature>
<elementName>EndOfMessageSendingDigit</elementName>
<asnElementName>endOfMessageSendingDigit</asnElementName>
<elementTypeName>EndOfMessageSendingDigit</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetReplayDigit</name>
<signature>void SetReplayDigit(ReplayDigit* element)</signature>
<elmentName>ReplayDigit</elmentName>
<asnElementName>replayDigit</asnElementName>
<elementTypeName>ReplayDigit</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetReplayDigit</name>
<signature>void SetReplayDigit(const ReplayDigit&amp; element)</signature>
<elementName>ReplayDigit</elementName>
<asnElementName>replayDigit</asnElementName>
<elementTypeName>ReplayDigit</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetReplayDigit</name>
<signature>const ReplayDigit&amp; GetReplayDigit() const</signature>
<elementName>ReplayDigit</elementName>
<asnElementName>replayDigit</asnElementName>
<elementTypeName>ReplayDigit</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionReplayDigit</name>
<signature>bool OptionReplayDigit() const</signature>
<elementName>ReplayDigit</elementName>
<asnElementName>replayDigit</asnElementName>
<elementTypeName>ReplayDigit</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ControlConditionByCallParty information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ControlConditionByCallParty ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    endOfMessageSendingDigit [0] IMPLICIT OCTET STRING (SIZE(1..2))  OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    replayDigit [1] IMPLICIT OCTET STRING (SIZE(1..2))  OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

