<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>CounterAndValue</className>
<asnTypeName>CounterAndValue</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCounterID</name>
<signature>void SetCounterID(CounterID* element)</signature>
<elmentName>CounterID</elmentName>
<asnElementName>counterID</asnElementName>
<elementTypeName>CounterID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCounterID</name>
<signature>void SetCounterID(const CounterID&amp; element)</signature>
<elementName>CounterID</elementName>
<asnElementName>counterID</asnElementName>
<elementTypeName>CounterID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCounterID</name>
<signature>const CounterID&amp; GetCounterID() const</signature>
<elementName>CounterID</elementName>
<asnElementName>counterID</asnElementName>
<elementTypeName>CounterID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCounterValue</name>
<signature>void SetCounterValue(Integer4* element)</signature>
<elmentName>CounterValue</elmentName>
<asnElementName>counterValue</asnElementName>
<elementTypeName>Integer4</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCounterValue</name>
<signature>void SetCounterValue(const Integer4&amp; element)</signature>
<elementName>CounterValue</elementName>
<asnElementName>counterValue</asnElementName>
<elementTypeName>Integer4</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCounterValue</name>
<signature>const Integer4&amp; GetCounterValue() const</signature>
<elementName>CounterValue</elementName>
<asnElementName>counterValue</asnElementName>
<elementTypeName>Integer4</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CounterAndValue information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CounterAndValue ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    counterID [0] IMPLICIT CounterID -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    counterValue [1] IMPLICIT Integer4 -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

