<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSet>

<className>ExecuteArgument</className>
<asnTypeName>ExecuteArgument</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetObject</name>
<signature>void SetObject(Name* element)</signature>
<elmentName>Object</elmentName>
<asnElementName>object</asnElementName>
<elementTypeName>Name</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetObject</name>
<signature>void SetObject(const Name&amp; element)</signature>
<elementName>Object</elementName>
<asnElementName>object</asnElementName>
<elementTypeName>Name</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetObject</name>
<signature>const Name&amp; GetObject() const</signature>
<elementName>Object</elementName>
<asnElementName>object</asnElementName>
<elementTypeName>Name</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetMethod_id</name>
<signature>void SetMethod_id(Method_id* element)</signature>
<elmentName>Method_id</elmentName>
<asnElementName>method-id</asnElementName>
<elementTypeName>Method_id</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMethod_id</name>
<signature>void SetMethod_id(const Method_id&amp; element)</signature>
<elementName>Method_id</elementName>
<asnElementName>method-id</asnElementName>
<elementTypeName>Method_id</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMethod_id</name>
<signature>const Method_id&amp; GetMethod_id() const</signature>
<elementName>Method_id</elementName>
<asnElementName>method-id</asnElementName>
<elementTypeName>Method_id</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetInput_assertions</name>
<signature>void SetInput_assertions(Input_assertions* element)</signature>
<elmentName>Input_assertions</elmentName>
<asnElementName>input-assertions</asnElementName>
<elementTypeName>Input_assertions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetInput_assertions</name>
<signature>void SetInput_assertions(const Input_assertions&amp; element)</signature>
<elementName>Input_assertions</elementName>
<asnElementName>input-assertions</asnElementName>
<elementTypeName>Input_assertions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetInput_assertions</name>
<signature>const Input_assertions&amp; GetInput_assertions() const</signature>
<elementName>Input_assertions</elementName>
<asnElementName>input-assertions</asnElementName>
<elementTypeName>Input_assertions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionInput_assertions</name>
<signature>bool OptionInput_assertions() const</signature>
<elementName>Input_assertions</elementName>
<asnElementName>input-assertions</asnElementName>
<elementTypeName>Input_assertions</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSpecific_input</name>
<signature>void SetSpecific_input(SpecificInput* element)</signature>
<elmentName>Specific_input</elmentName>
<asnElementName>specific-input</asnElementName>
<elementTypeName>SpecificInput</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSpecific_input</name>
<signature>void SetSpecific_input(const SpecificInput&amp; element)</signature>
<elementName>Specific_input</elementName>
<asnElementName>specific-input</asnElementName>
<elementTypeName>SpecificInput</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSpecific_input</name>
<signature>const SpecificInput&amp; GetSpecific_input() const</signature>
<elementName>Specific_input</elementName>
<asnElementName>specific-input</asnElementName>
<elementTypeName>SpecificInput</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSpecific_input</name>
<signature>bool OptionSpecific_input() const</signature>
<elementName>Specific_input</elementName>
<asnElementName>specific-input</asnElementName>
<elementTypeName>SpecificInput</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ExecuteArgument information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ExecuteArgument ::= SET</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    object [0] IMPLICIT Name -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    method-id [1] IMPLICIT OBJECT IDENTIFIER,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    input-assertions [2] IMPLICIT SEQUENCE OF AttributeTypeAndValue -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    specific-input [3] IMPLICIT SpecificInput -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSet>

</asnType>

