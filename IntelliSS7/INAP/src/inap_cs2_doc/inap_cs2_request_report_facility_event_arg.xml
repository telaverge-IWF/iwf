<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>RequestReportFacilityEventArg</className>
<asnTypeName>RequestReportFacilityEventArg</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetComponentTypes</name>
<signature>void SetComponentTypes(ComponentTypes* element)</signature>
<elmentName>ComponentTypes</elmentName>
<asnElementName>componentTypes</asnElementName>
<elementTypeName>ComponentTypes</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetComponentTypes</name>
<signature>void SetComponentTypes(const ComponentTypes&amp; element)</signature>
<elementName>ComponentTypes</elementName>
<asnElementName>componentTypes</asnElementName>
<elementTypeName>ComponentTypes</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetComponentTypes</name>
<signature>const ComponentTypes&amp; GetComponentTypes() const</signature>
<elementName>ComponentTypes</elementName>
<asnElementName>componentTypes</asnElementName>
<elementTypeName>ComponentTypes</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetLegID</name>
<signature>void SetLegID(LegID* element)</signature>
<elmentName>LegID</elmentName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLegID</name>
<signature>void SetLegID(const LegID&amp; element)</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLegID</name>
<signature>const LegID&amp; GetLegID() const</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLegID</name>
<signature>bool OptionLegID() const</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetComponentCorrelationID</name>
<signature>void SetComponentCorrelationID(ComponentCorrelationID* element)</signature>
<elmentName>ComponentCorrelationID</elmentName>
<asnElementName>componentCorrelationID</asnElementName>
<elementTypeName>ComponentCorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetComponentCorrelationID</name>
<signature>void SetComponentCorrelationID(const ComponentCorrelationID&amp; element)</signature>
<elementName>ComponentCorrelationID</elementName>
<asnElementName>componentCorrelationID</asnElementName>
<elementTypeName>ComponentCorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetComponentCorrelationID</name>
<signature>const ComponentCorrelationID&amp; GetComponentCorrelationID() const</signature>
<elementName>ComponentCorrelationID</elementName>
<asnElementName>componentCorrelationID</asnElementName>
<elementTypeName>ComponentCorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionComponentCorrelationID</name>
<signature>bool OptionComponentCorrelationID() const</signature>
<elementName>ComponentCorrelationID</elementName>
<asnElementName>componentCorrelationID</asnElementName>
<elementTypeName>ComponentCorrelationID</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMonitorDuration</name>
<signature>void SetMonitorDuration(Duration* element)</signature>
<elmentName>MonitorDuration</elmentName>
<asnElementName>monitorDuration</asnElementName>
<elementTypeName>Duration</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMonitorDuration</name>
<signature>void SetMonitorDuration(const Duration&amp; element)</signature>
<elementName>MonitorDuration</elementName>
<asnElementName>monitorDuration</asnElementName>
<elementTypeName>Duration</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMonitorDuration</name>
<signature>const Duration&amp; GetMonitorDuration() const</signature>
<elementName>MonitorDuration</elementName>
<asnElementName>monitorDuration</asnElementName>
<elementTypeName>Duration</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- RequestReportFacilityEventArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>RequestReportFacilityEventArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    componentTypes [0] IMPLICIT SEQUENCE (SIZE(1..3)) OF ComponentType -- [linked] -- DEFAULT ,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    legID [1] IMPLICIT LegID -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    componentCorrelationID [2] IMPLICIT ComponentCorrelationID -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    monitorDuration [3] IMPLICIT Duration -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [4] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

