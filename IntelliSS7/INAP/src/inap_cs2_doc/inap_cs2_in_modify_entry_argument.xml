<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSet>

<className>InModifyEntryArgument</className>
<asnTypeName>InModifyEntryArgument</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetObject</name>
<signature>void SetObject(DistinguishedName* element)</signature>
<elmentName>Object</elmentName>
<asnElementName>object</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetObject</name>
<signature>void SetObject(const DistinguishedName&amp; element)</signature>
<elementName>Object</elementName>
<asnElementName>object</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetObject</name>
<signature>const DistinguishedName&amp; GetObject() const</signature>
<elementName>Object</elementName>
<asnElementName>object</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetChanges</name>
<signature>void SetChanges(Changes* element)</signature>
<elmentName>Changes</elmentName>
<asnElementName>changes</asnElementName>
<elementTypeName>Changes</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetChanges</name>
<signature>void SetChanges(const Changes&amp; element)</signature>
<elementName>Changes</elementName>
<asnElementName>changes</asnElementName>
<elementTypeName>Changes</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetChanges</name>
<signature>const Changes&amp; GetChanges() const</signature>
<elementName>Changes</elementName>
<asnElementName>changes</asnElementName>
<elementTypeName>Changes</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetSelection</name>
<signature>void SetSelection(InEntryInformationSelection* element)</signature>
<elmentName>Selection</elmentName>
<asnElementName>selection</asnElementName>
<elementTypeName>InEntryInformationSelection</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSelection</name>
<signature>void SetSelection(const InEntryInformationSelection&amp; element)</signature>
<elementName>Selection</elementName>
<asnElementName>selection</asnElementName>
<elementTypeName>InEntryInformationSelection</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSelection</name>
<signature>const InEntryInformationSelection&amp; GetSelection() const</signature>
<elementName>Selection</elementName>
<asnElementName>selection</asnElementName>
<elementTypeName>InEntryInformationSelection</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSelection</name>
<signature>bool OptionSelection() const</signature>
<elementName>Selection</elementName>
<asnElementName>selection</asnElementName>
<elementTypeName>InEntryInformationSelection</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetServiceControls</name>
<signature>void SetServiceControls(InServiceControls* element)</signature>
<elmentName>ServiceControls</elmentName>
<asnElementName>serviceControls</asnElementName>
<elementTypeName>InServiceControls</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetServiceControls</name>
<signature>void SetServiceControls(const InServiceControls&amp; element)</signature>
<elementName>ServiceControls</elementName>
<asnElementName>serviceControls</asnElementName>
<elementTypeName>InServiceControls</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetServiceControls</name>
<signature>const InServiceControls&amp; GetServiceControls() const</signature>
<elementName>ServiceControls</elementName>
<asnElementName>serviceControls</asnElementName>
<elementTypeName>InServiceControls</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionServiceControls</name>
<signature>bool OptionServiceControls() const</signature>
<elementName>ServiceControls</elementName>
<asnElementName>serviceControls</asnElementName>
<elementTypeName>InServiceControls</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetSecurityParameters</name>
<signature>void SetSecurityParameters(SecurityParameters* element)</signature>
<elmentName>SecurityParameters</elmentName>
<asnElementName>securityParameters</asnElementName>
<elementTypeName>SecurityParameters</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSecurityParameters</name>
<signature>void SetSecurityParameters(const SecurityParameters&amp; element)</signature>
<elementName>SecurityParameters</elementName>
<asnElementName>securityParameters</asnElementName>
<elementTypeName>SecurityParameters</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSecurityParameters</name>
<signature>const SecurityParameters&amp; GetSecurityParameters() const</signature>
<elementName>SecurityParameters</elementName>
<asnElementName>securityParameters</asnElementName>
<elementTypeName>SecurityParameters</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionSecurityParameters</name>
<signature>bool OptionSecurityParameters() const</signature>
<elementName>SecurityParameters</elementName>
<asnElementName>securityParameters</asnElementName>
<elementTypeName>SecurityParameters</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRequestor</name>
<signature>void SetRequestor(DistinguishedName* element)</signature>
<elmentName>Requestor</elmentName>
<asnElementName>requestor</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRequestor</name>
<signature>void SetRequestor(const DistinguishedName&amp; element)</signature>
<elementName>Requestor</elementName>
<asnElementName>requestor</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRequestor</name>
<signature>const DistinguishedName&amp; GetRequestor() const</signature>
<elementName>Requestor</elementName>
<asnElementName>requestor</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRequestor</name>
<signature>bool OptionRequestor() const</signature>
<elementName>Requestor</elementName>
<asnElementName>requestor</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetOperationProgress</name>
<signature>void SetOperationProgress(OperationProgress* element)</signature>
<elmentName>OperationProgress</elmentName>
<asnElementName>operationProgress</asnElementName>
<elementTypeName>OperationProgress</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetOperationProgress</name>
<signature>void SetOperationProgress(const OperationProgress&amp; element)</signature>
<elementName>OperationProgress</elementName>
<asnElementName>operationProgress</asnElementName>
<elementTypeName>OperationProgress</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetOperationProgress</name>
<signature>const OperationProgress&amp; GetOperationProgress() const</signature>
<elementName>OperationProgress</elementName>
<asnElementName>operationProgress</asnElementName>
<elementTypeName>OperationProgress</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionOperationProgress</name>
<signature>bool OptionOperationProgress() const</signature>
<elementName>OperationProgress</elementName>
<asnElementName>operationProgress</asnElementName>
<elementTypeName>OperationProgress</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- InModifyEntryArgument information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>InModifyEntryArgument ::= SET</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    object [0] IMPLICIT DistinguishedName -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    changes [1] IMPLICIT SEQUENCE OF EntryModification -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    selection [2] IMPLICIT InEntryInformationSelection -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    serviceControls [30] IMPLICIT InServiceControls -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    securityParameters [29] IMPLICIT SecurityParameters -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    requestor [28] IMPLICIT DistinguishedName -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    operationProgress [27] IMPLICIT OperationProgress -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [25] IMPLICIT SET OF Extension -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSet>

</asnType>

