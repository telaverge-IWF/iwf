<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>DpSpecificCriteria</className>
<asnTypeName>DpSpecificCriteria</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceNumberOfDigits</name>
<signature>void SetChoiceNumberOfDigits(NumberOfDigits* choice)</signature>
<choiceName>NumberOfDigits</choiceName>
<asnChoiceName>numberOfDigits</asnChoiceName>
<choiceTypeName>NumberOfDigits</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceNumberOfDigits</name>
<signature>void SetChoiceNumberOfDigits(const NumberOfDigits&amp; choice)</signature>
<choiceName>NumberOfDigits</choiceName>
<asnChoiceName>numberOfDigits</asnChoiceName>
<choiceTypeName>NumberOfDigits</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceNumberOfDigits</name>
<signature>const NumberOfDigits&amp; GetChoiceNumberOfDigits() const</signature>
<choiceName>NumberOfDigits</choiceName>
<asnChoiceName>numberOfDigits</asnChoiceName>
<choiceTypeName>NumberOfDigits</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceNumberOfDigits</name>
<signature>bool ChoiceNumberOfDigits() const</signature>
<choiceName>NumberOfDigits</choiceName>
<asnChoiceName>numberOfDigits</asnChoiceName>
<choiceTypeName>NumberOfDigits</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceApplicationTimer</name>
<signature>void SetChoiceApplicationTimer(ApplicationTimer* choice)</signature>
<choiceName>ApplicationTimer</choiceName>
<asnChoiceName>applicationTimer</asnChoiceName>
<choiceTypeName>ApplicationTimer</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceApplicationTimer</name>
<signature>void SetChoiceApplicationTimer(const ApplicationTimer&amp; choice)</signature>
<choiceName>ApplicationTimer</choiceName>
<asnChoiceName>applicationTimer</asnChoiceName>
<choiceTypeName>ApplicationTimer</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceApplicationTimer</name>
<signature>const ApplicationTimer&amp; GetChoiceApplicationTimer() const</signature>
<choiceName>ApplicationTimer</choiceName>
<asnChoiceName>applicationTimer</asnChoiceName>
<choiceTypeName>ApplicationTimer</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceApplicationTimer</name>
<signature>bool ChoiceApplicationTimer() const</signature>
<choiceName>ApplicationTimer</choiceName>
<asnChoiceName>applicationTimer</asnChoiceName>
<choiceTypeName>ApplicationTimer</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceMidCallControlInfo</name>
<signature>void SetChoiceMidCallControlInfo(MidCallControlInfo* choice)</signature>
<choiceName>MidCallControlInfo</choiceName>
<asnChoiceName>midCallControlInfo</asnChoiceName>
<choiceTypeName>MidCallControlInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceMidCallControlInfo</name>
<signature>void SetChoiceMidCallControlInfo(const MidCallControlInfo&amp; choice)</signature>
<choiceName>MidCallControlInfo</choiceName>
<asnChoiceName>midCallControlInfo</asnChoiceName>
<choiceTypeName>MidCallControlInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceMidCallControlInfo</name>
<signature>const MidCallControlInfo&amp; GetChoiceMidCallControlInfo() const</signature>
<choiceName>MidCallControlInfo</choiceName>
<asnChoiceName>midCallControlInfo</asnChoiceName>
<choiceTypeName>MidCallControlInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceMidCallControlInfo</name>
<signature>bool ChoiceMidCallControlInfo() const</signature>
<choiceName>MidCallControlInfo</choiceName>
<asnChoiceName>midCallControlInfo</asnChoiceName>
<choiceTypeName>MidCallControlInfo</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- DpSpecificCriteria information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>DpSpecificCriteria ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    numberOfDigits [0] IMPLICIT NumberOfDigits -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    applicationTimer [1] IMPLICIT ApplicationTimer -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    midCallControlInfo [2] IMPLICIT MidCallControlInfo -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

