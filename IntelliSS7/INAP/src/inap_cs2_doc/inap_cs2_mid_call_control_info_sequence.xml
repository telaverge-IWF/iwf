<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>MidCallControlInfo::SEQUENCE</className>
<asnTypeName>MidCallControlInfo::SEQUENCE</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetMidCallInfoType</name>
<signature>void SetMidCallInfoType(MidCallInfoType* element)</signature>
<elmentName>MidCallInfoType</elmentName>
<asnElementName>midCallInfoType</asnElementName>
<elementTypeName>MidCallInfoType</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMidCallInfoType</name>
<signature>void SetMidCallInfoType(const MidCallInfoType&amp; element)</signature>
<elementName>MidCallInfoType</elementName>
<asnElementName>midCallInfoType</asnElementName>
<elementTypeName>MidCallInfoType</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMidCallInfoType</name>
<signature>const MidCallInfoType&amp; GetMidCallInfoType() const</signature>
<elementName>MidCallInfoType</elementName>
<asnElementName>midCallInfoType</asnElementName>
<elementTypeName>MidCallInfoType</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetMidCallReportType</name>
<signature>void SetMidCallReportType(MidCallReportType* element)</signature>
<elmentName>MidCallReportType</elmentName>
<asnElementName>midCallReportType</asnElementName>
<elementTypeName>MidCallReportType</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMidCallReportType</name>
<signature>void SetMidCallReportType(const MidCallReportType&amp; element)</signature>
<elementName>MidCallReportType</elementName>
<asnElementName>midCallReportType</asnElementName>
<elementTypeName>MidCallReportType</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMidCallReportType</name>
<signature>const MidCallReportType&amp; GetMidCallReportType() const</signature>
<elementName>MidCallReportType</elementName>
<asnElementName>midCallReportType</asnElementName>
<elementTypeName>MidCallReportType</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- MidCallControlInfo information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>MidCallControlInfo ::= SEQUENCE (SIZE(minMidCallControlInfoNum -- [linked] --..maxMidCallControlInfoNum -- [linked] --)) OF SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    midCallInfoType [0] IMPLICIT MidCallInfoType -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    midCallReportType [1] IMPLICIT ENUMERATED</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        inMonitoringState(0),</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>        inAnyState(1)</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    } DEFAULT inMonitoringState -- [enum value] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

