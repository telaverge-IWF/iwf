<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>EventReportBCSMArg</className>
<asnTypeName>EventReportBCSMArg</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetEventTypeBCSM</name>
<signature>void SetEventTypeBCSM(EventTypeBCSM* element)</signature>
<elmentName>EventTypeBCSM</elmentName>
<asnElementName>eventTypeBCSM</asnElementName>
<elementTypeName>EventTypeBCSM</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEventTypeBCSM</name>
<signature>void SetEventTypeBCSM(const EventTypeBCSM&amp; element)</signature>
<elementName>EventTypeBCSM</elementName>
<asnElementName>eventTypeBCSM</asnElementName>
<elementTypeName>EventTypeBCSM</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEventTypeBCSM</name>
<signature>const EventTypeBCSM&amp; GetEventTypeBCSM() const</signature>
<elementName>EventTypeBCSM</elementName>
<asnElementName>eventTypeBCSM</asnElementName>
<elementTypeName>EventTypeBCSM</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetBcsmEventCorrelationID</name>
<signature>void SetBcsmEventCorrelationID(CorrelationID* element)</signature>
<elmentName>BcsmEventCorrelationID</elmentName>
<asnElementName>bcsmEventCorrelationID</asnElementName>
<elementTypeName>CorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetBcsmEventCorrelationID</name>
<signature>void SetBcsmEventCorrelationID(const CorrelationID&amp; element)</signature>
<elementName>BcsmEventCorrelationID</elementName>
<asnElementName>bcsmEventCorrelationID</asnElementName>
<elementTypeName>CorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetBcsmEventCorrelationID</name>
<signature>const CorrelationID&amp; GetBcsmEventCorrelationID() const</signature>
<elementName>BcsmEventCorrelationID</elementName>
<asnElementName>bcsmEventCorrelationID</asnElementName>
<elementTypeName>CorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionBcsmEventCorrelationID</name>
<signature>bool OptionBcsmEventCorrelationID() const</signature>
<elementName>BcsmEventCorrelationID</elementName>
<asnElementName>bcsmEventCorrelationID</asnElementName>
<elementTypeName>CorrelationID</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetEventSpecificInformationBCSM</name>
<signature>void SetEventSpecificInformationBCSM(EventSpecificInformationBCSM* element)</signature>
<elmentName>EventSpecificInformationBCSM</elmentName>
<asnElementName>eventSpecificInformationBCSM</asnElementName>
<elementTypeName>EventSpecificInformationBCSM</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEventSpecificInformationBCSM</name>
<signature>void SetEventSpecificInformationBCSM(const EventSpecificInformationBCSM&amp; element)</signature>
<elementName>EventSpecificInformationBCSM</elementName>
<asnElementName>eventSpecificInformationBCSM</asnElementName>
<elementTypeName>EventSpecificInformationBCSM</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEventSpecificInformationBCSM</name>
<signature>const EventSpecificInformationBCSM&amp; GetEventSpecificInformationBCSM() const</signature>
<elementName>EventSpecificInformationBCSM</elementName>
<asnElementName>eventSpecificInformationBCSM</asnElementName>
<elementTypeName>EventSpecificInformationBCSM</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionEventSpecificInformationBCSM</name>
<signature>bool OptionEventSpecificInformationBCSM() const</signature>
<elementName>EventSpecificInformationBCSM</elementName>
<asnElementName>eventSpecificInformationBCSM</asnElementName>
<elementTypeName>EventSpecificInformationBCSM</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLegID</name>
<signature>void SetLegID(LegID* element)</signature>
<elmentName>LegID</elmentName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLegID</name>
<signature>void SetLegID(const LegID&amp; element)</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLegID</name>
<signature>const LegID&amp; GetLegID() const</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLegID</name>
<signature>bool OptionLegID() const</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetMiscCallInfo</name>
<signature>void SetMiscCallInfo(MiscCallInfo* element)</signature>
<elmentName>MiscCallInfo</elmentName>
<asnElementName>miscCallInfo</asnElementName>
<elementTypeName>MiscCallInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetMiscCallInfo</name>
<signature>void SetMiscCallInfo(const MiscCallInfo&amp; element)</signature>
<elementName>MiscCallInfo</elementName>
<asnElementName>miscCallInfo</asnElementName>
<elementTypeName>MiscCallInfo</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetMiscCallInfo</name>
<signature>const MiscCallInfo&amp; GetMiscCallInfo() const</signature>
<elementName>MiscCallInfo</elementName>
<asnElementName>miscCallInfo</asnElementName>
<elementTypeName>MiscCallInfo</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetComponentType</name>
<signature>void SetComponentType(ComponentType* element)</signature>
<elmentName>ComponentType</elmentName>
<asnElementName>componentType</asnElementName>
<elementTypeName>ComponentType</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetComponentType</name>
<signature>void SetComponentType(const ComponentType&amp; element)</signature>
<elementName>ComponentType</elementName>
<asnElementName>componentType</asnElementName>
<elementTypeName>ComponentType</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetComponentType</name>
<signature>const ComponentType&amp; GetComponentType() const</signature>
<elementName>ComponentType</elementName>
<asnElementName>componentType</asnElementName>
<elementTypeName>ComponentType</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionComponentType</name>
<signature>bool OptionComponentType() const</signature>
<elementName>ComponentType</elementName>
<asnElementName>componentType</asnElementName>
<elementTypeName>ComponentType</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetComponentCorrelationID</name>
<signature>void SetComponentCorrelationID(ComponentCorrelationID* element)</signature>
<elmentName>ComponentCorrelationID</elmentName>
<asnElementName>componentCorrelationID</asnElementName>
<elementTypeName>ComponentCorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetComponentCorrelationID</name>
<signature>void SetComponentCorrelationID(const ComponentCorrelationID&amp; element)</signature>
<elementName>ComponentCorrelationID</elementName>
<asnElementName>componentCorrelationID</asnElementName>
<elementTypeName>ComponentCorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetComponentCorrelationID</name>
<signature>const ComponentCorrelationID&amp; GetComponentCorrelationID() const</signature>
<elementName>ComponentCorrelationID</elementName>
<asnElementName>componentCorrelationID</asnElementName>
<elementTypeName>ComponentCorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionComponentCorrelationID</name>
<signature>bool OptionComponentCorrelationID() const</signature>
<elementName>ComponentCorrelationID</elementName>
<asnElementName>componentCorrelationID</asnElementName>
<elementTypeName>ComponentCorrelationID</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- EventReportBCSMArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>EventReportBCSMArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    eventTypeBCSM [0] IMPLICIT EventTypeBCSM -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    bcsmEventCorrelationID [1] IMPLICIT CorrelationID -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    eventSpecificInformationBCSM [2] IMPLICIT EventSpecificInformationBCSM -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    legID [3] IMPLICIT LegID -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    miscCallInfo [4] IMPLICIT MiscCallInfo -- [linked] -- DEFAULT ,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [5] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    componentType [6] IMPLICIT ComponentType -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    componentCorrelationID [8] IMPLICIT ComponentCorrelationID -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

