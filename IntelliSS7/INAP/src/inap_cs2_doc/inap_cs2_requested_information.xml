<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>RequestedInformation</className>
<asnTypeName>RequestedInformation</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetRequestedInformationType</name>
<signature>void SetRequestedInformationType(RequestedInformationType* element)</signature>
<elmentName>RequestedInformationType</elmentName>
<asnElementName>requestedInformationType</asnElementName>
<elementTypeName>RequestedInformationType</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRequestedInformationType</name>
<signature>void SetRequestedInformationType(const RequestedInformationType&amp; element)</signature>
<elementName>RequestedInformationType</elementName>
<asnElementName>requestedInformationType</asnElementName>
<elementTypeName>RequestedInformationType</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRequestedInformationType</name>
<signature>const RequestedInformationType&amp; GetRequestedInformationType() const</signature>
<elementName>RequestedInformationType</elementName>
<asnElementName>requestedInformationType</asnElementName>
<elementTypeName>RequestedInformationType</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetRequestedInformationValue</name>
<signature>void SetRequestedInformationValue(RequestedInformationValue* element)</signature>
<elmentName>RequestedInformationValue</elmentName>
<asnElementName>requestedInformationValue</asnElementName>
<elementTypeName>RequestedInformationValue</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRequestedInformationValue</name>
<signature>void SetRequestedInformationValue(const RequestedInformationValue&amp; element)</signature>
<elementName>RequestedInformationValue</elementName>
<asnElementName>requestedInformationValue</asnElementName>
<elementTypeName>RequestedInformationValue</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRequestedInformationValue</name>
<signature>const RequestedInformationValue&amp; GetRequestedInformationValue() const</signature>
<elementName>RequestedInformationValue</elementName>
<asnElementName>requestedInformationValue</asnElementName>
<elementTypeName>RequestedInformationValue</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- RequestedInformation information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>RequestedInformation ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    requestedInformationType [0] IMPLICIT RequestedInformationType -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    requestedInformationValue [1] IMPLICIT RequestedInformationValue -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

