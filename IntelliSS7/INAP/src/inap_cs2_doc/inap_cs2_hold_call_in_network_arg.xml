<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>HoldCallInNetworkArg</className>
<asnTypeName>HoldCallInNetworkArg</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceHoldcause</name>
<signature>void SetChoiceHoldcause(HoldCause* choice)</signature>
<choiceName>Holdcause</choiceName>
<asnChoiceName>holdcause</asnChoiceName>
<choiceTypeName>HoldCause</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceHoldcause</name>
<signature>void SetChoiceHoldcause(const HoldCause&amp; choice)</signature>
<choiceName>Holdcause</choiceName>
<asnChoiceName>holdcause</asnChoiceName>
<choiceTypeName>HoldCause</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceHoldcause</name>
<signature>const HoldCause&amp; GetChoiceHoldcause() const</signature>
<choiceName>Holdcause</choiceName>
<asnChoiceName>holdcause</asnChoiceName>
<choiceTypeName>HoldCause</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceHoldcause</name>
<signature>bool ChoiceHoldcause() const</signature>
<choiceName>Holdcause</choiceName>
<asnChoiceName>holdcause</asnChoiceName>
<choiceTypeName>HoldCause</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceEmpty</name>
<signature>void SetChoiceEmpty(Empty* choice)</signature>
<choiceName>Empty</choiceName>
<asnChoiceName>empty</asnChoiceName>
<choiceTypeName>Empty</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceEmpty</name>
<signature>void SetChoiceEmpty(const Empty&amp; choice)</signature>
<choiceName>Empty</choiceName>
<asnChoiceName>empty</asnChoiceName>
<choiceTypeName>Empty</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceEmpty</name>
<signature>const Empty&amp; GetChoiceEmpty() const</signature>
<choiceName>Empty</choiceName>
<asnChoiceName>empty</asnChoiceName>
<choiceTypeName>Empty</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceEmpty</name>
<signature>bool ChoiceEmpty() const</signature>
<choiceName>Empty</choiceName>
<asnChoiceName>empty</asnChoiceName>
<choiceTypeName>Empty</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- HoldCallInNetworkArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>HoldCallInNetworkArg ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    holdcause [0] IMPLICIT HoldCause -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    empty [1] IMPLICIT NULL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

