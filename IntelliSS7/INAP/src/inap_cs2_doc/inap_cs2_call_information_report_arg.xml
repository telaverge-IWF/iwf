<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>CallInformationReportArg</className>
<asnTypeName>CallInformationReportArg</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetRequestedInformationList</name>
<signature>void SetRequestedInformationList(RequestedInformationList* element)</signature>
<elmentName>RequestedInformationList</elmentName>
<asnElementName>requestedInformationList</asnElementName>
<elementTypeName>RequestedInformationList</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRequestedInformationList</name>
<signature>void SetRequestedInformationList(const RequestedInformationList&amp; element)</signature>
<elementName>RequestedInformationList</elementName>
<asnElementName>requestedInformationList</asnElementName>
<elementTypeName>RequestedInformationList</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRequestedInformationList</name>
<signature>const RequestedInformationList&amp; GetRequestedInformationList() const</signature>
<elementName>RequestedInformationList</elementName>
<asnElementName>requestedInformationList</asnElementName>
<elementTypeName>RequestedInformationList</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCorrelationID</name>
<signature>void SetCorrelationID(CorrelationID* element)</signature>
<elmentName>CorrelationID</elmentName>
<asnElementName>correlationID</asnElementName>
<elementTypeName>CorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCorrelationID</name>
<signature>void SetCorrelationID(const CorrelationID&amp; element)</signature>
<elementName>CorrelationID</elementName>
<asnElementName>correlationID</asnElementName>
<elementTypeName>CorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCorrelationID</name>
<signature>const CorrelationID&amp; GetCorrelationID() const</signature>
<elementName>CorrelationID</elementName>
<asnElementName>correlationID</asnElementName>
<elementTypeName>CorrelationID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCorrelationID</name>
<signature>bool OptionCorrelationID() const</signature>
<elementName>CorrelationID</elementName>
<asnElementName>correlationID</asnElementName>
<elementTypeName>CorrelationID</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLegID</name>
<signature>void SetLegID(LegID* element)</signature>
<elmentName>LegID</elmentName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLegID</name>
<signature>void SetLegID(const LegID&amp; element)</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLegID</name>
<signature>const LegID&amp; GetLegID() const</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionLegID</name>
<signature>bool OptionLegID() const</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetLastEventIndicator</name>
<signature>void SetLastEventIndicator(LastEventIndicator* element)</signature>
<elmentName>LastEventIndicator</elmentName>
<asnElementName>lastEventIndicator</asnElementName>
<elementTypeName>LastEventIndicator</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLastEventIndicator</name>
<signature>void SetLastEventIndicator(const LastEventIndicator&amp; element)</signature>
<elementName>LastEventIndicator</elementName>
<asnElementName>lastEventIndicator</asnElementName>
<elementTypeName>LastEventIndicator</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLastEventIndicator</name>
<signature>const LastEventIndicator&amp; GetLastEventIndicator() const</signature>
<elementName>LastEventIndicator</elementName>
<asnElementName>lastEventIndicator</asnElementName>
<elementTypeName>LastEventIndicator</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CallInformationReportArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CallInformationReportArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    requestedInformationList [0] IMPLICIT RequestedInformationList -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    correlationID [1] IMPLICIT CorrelationID -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [2] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    legID [3] IMPLICIT LegID -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    lastEventIndicator [4] IMPLICIT BOOLEAN DEFAULT FALSE</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

