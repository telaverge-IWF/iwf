<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>NumberMatch</className>
<asnTypeName>NumberMatch</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceInitialMatch</name>
<signature>void SetChoiceInitialMatch(CalledPartyNumber* choice)</signature>
<choiceName>InitialMatch</choiceName>
<asnChoiceName>initialMatch</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceInitialMatch</name>
<signature>void SetChoiceInitialMatch(const CalledPartyNumber&amp; choice)</signature>
<choiceName>InitialMatch</choiceName>
<asnChoiceName>initialMatch</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceInitialMatch</name>
<signature>const CalledPartyNumber&amp; GetChoiceInitialMatch() const</signature>
<choiceName>InitialMatch</choiceName>
<asnChoiceName>initialMatch</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceInitialMatch</name>
<signature>bool ChoiceInitialMatch() const</signature>
<choiceName>InitialMatch</choiceName>
<asnChoiceName>initialMatch</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTotalMatch</name>
<signature>void SetChoiceTotalMatch(CalledPartyNumber* choice)</signature>
<choiceName>TotalMatch</choiceName>
<asnChoiceName>totalMatch</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTotalMatch</name>
<signature>void SetChoiceTotalMatch(const CalledPartyNumber&amp; choice)</signature>
<choiceName>TotalMatch</choiceName>
<asnChoiceName>totalMatch</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTotalMatch</name>
<signature>const CalledPartyNumber&amp; GetChoiceTotalMatch() const</signature>
<choiceName>TotalMatch</choiceName>
<asnChoiceName>totalMatch</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTotalMatch</name>
<signature>bool ChoiceTotalMatch() const</signature>
<choiceName>TotalMatch</choiceName>
<asnChoiceName>totalMatch</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- NumberMatch information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>NumberMatch ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    initialMatch [0] IMPLICIT CalledPartyNumber -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    totalMatch [1] IMPLICIT CalledPartyNumber -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

