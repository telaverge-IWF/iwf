<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>MoveCallSegmentsArg::Legs::SEQUENCE</className>
<asnTypeName>MoveCallSegmentsArg::legs::SEQUENCE</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetSourceLeg</name>
<signature>void SetSourceLeg(LegID* element)</signature>
<elmentName>SourceLeg</elmentName>
<asnElementName>sourceLeg</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetSourceLeg</name>
<signature>void SetSourceLeg(const LegID&amp; element)</signature>
<elementName>SourceLeg</elementName>
<asnElementName>sourceLeg</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetSourceLeg</name>
<signature>const LegID&amp; GetSourceLeg() const</signature>
<elementName>SourceLeg</elementName>
<asnElementName>sourceLeg</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetNewLeg</name>
<signature>void SetNewLeg(LegID* element)</signature>
<elmentName>NewLeg</elmentName>
<asnElementName>newLeg</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetNewLeg</name>
<signature>void SetNewLeg(const LegID&amp; element)</signature>
<elementName>NewLeg</elementName>
<asnElementName>newLeg</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetNewLeg</name>
<signature>const LegID&amp; GetNewLeg() const</signature>
<elementName>NewLeg</elementName>
<asnElementName>newLeg</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text>-- Note: the ASN.1 type definition containing the inner type is showed.</text>
</line>
<line>
<text></text>
</line>
<line>
<text>-- MoveCallSegmentsArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>MoveCallSegmentsArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    targetCallSegmentAssociation [0] IMPLICIT CSAID -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callSegments [1] IMPLICIT SEQUENCE (SIZE(1..numOfCSs -- [linked] --)) OF SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        sourceCallSegment [0] IMPLICIT CallSegmentID -- [linked] -- DEFAULT initialCallSegment -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        newCallSegment [1] IMPLICIT CallSegmentID -- [linked] --</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    legs [2] IMPLICIT SEQUENCE (SIZE(1..numOfLegs -- [linked] --)) OF SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        sourceLeg [0] IMPLICIT LegID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        newLeg [1] IMPLICIT LegID -- [linked] --</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [2] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

