<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnEnumerated>

<className>EventTypeBCSM</className>
<asnTypeName>EventTypeBCSM</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetOrigAttemptAuthorized</name>
<signature>void SetOrigAttemptAuthorized()</signature>
<enumItemName>origAttemptAuthorized</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsOrigAttemptAuthorized</name>
<signature>bool IsOrigAttemptAuthorized() const</signature>
<enumItemName>origAttemptAuthorized</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetCollectedInfo</name>
<signature>void SetCollectedInfo()</signature>
<enumItemName>collectedInfo</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsCollectedInfo</name>
<signature>bool IsCollectedInfo() const</signature>
<enumItemName>collectedInfo</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetAnalysedInformation</name>
<signature>void SetAnalysedInformation()</signature>
<enumItemName>analysedInformation</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsAnalysedInformation</name>
<signature>bool IsAnalysedInformation() const</signature>
<enumItemName>analysedInformation</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetRouteSelectFailure</name>
<signature>void SetRouteSelectFailure()</signature>
<enumItemName>routeSelectFailure</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsRouteSelectFailure</name>
<signature>bool IsRouteSelectFailure() const</signature>
<enumItemName>routeSelectFailure</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetOCalledPartyBusy</name>
<signature>void SetOCalledPartyBusy()</signature>
<enumItemName>oCalledPartyBusy</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsOCalledPartyBusy</name>
<signature>bool IsOCalledPartyBusy() const</signature>
<enumItemName>oCalledPartyBusy</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetONoAnswer</name>
<signature>void SetONoAnswer()</signature>
<enumItemName>oNoAnswer</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsONoAnswer</name>
<signature>bool IsONoAnswer() const</signature>
<enumItemName>oNoAnswer</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetOAnswer</name>
<signature>void SetOAnswer()</signature>
<enumItemName>oAnswer</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsOAnswer</name>
<signature>bool IsOAnswer() const</signature>
<enumItemName>oAnswer</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetOMidCall</name>
<signature>void SetOMidCall()</signature>
<enumItemName>oMidCall</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsOMidCall</name>
<signature>bool IsOMidCall() const</signature>
<enumItemName>oMidCall</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetODisconnect</name>
<signature>void SetODisconnect()</signature>
<enumItemName>oDisconnect</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsODisconnect</name>
<signature>bool IsODisconnect() const</signature>
<enumItemName>oDisconnect</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetOAbandon</name>
<signature>void SetOAbandon()</signature>
<enumItemName>oAbandon</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsOAbandon</name>
<signature>bool IsOAbandon() const</signature>
<enumItemName>oAbandon</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTermAttemptAuthorized</name>
<signature>void SetTermAttemptAuthorized()</signature>
<enumItemName>termAttemptAuthorized</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTermAttemptAuthorized</name>
<signature>bool IsTermAttemptAuthorized() const</signature>
<enumItemName>termAttemptAuthorized</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTBusy</name>
<signature>void SetTBusy()</signature>
<enumItemName>tBusy</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTBusy</name>
<signature>bool IsTBusy() const</signature>
<enumItemName>tBusy</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTNoAnswer</name>
<signature>void SetTNoAnswer()</signature>
<enumItemName>tNoAnswer</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTNoAnswer</name>
<signature>bool IsTNoAnswer() const</signature>
<enumItemName>tNoAnswer</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTAnswer</name>
<signature>void SetTAnswer()</signature>
<enumItemName>tAnswer</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTAnswer</name>
<signature>bool IsTAnswer() const</signature>
<enumItemName>tAnswer</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTMidCall</name>
<signature>void SetTMidCall()</signature>
<enumItemName>tMidCall</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTMidCall</name>
<signature>bool IsTMidCall() const</signature>
<enumItemName>tMidCall</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTDisconnect</name>
<signature>void SetTDisconnect()</signature>
<enumItemName>tDisconnect</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTDisconnect</name>
<signature>bool IsTDisconnect() const</signature>
<enumItemName>tDisconnect</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTAbandon</name>
<signature>void SetTAbandon()</signature>
<enumItemName>tAbandon</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTAbandon</name>
<signature>bool IsTAbandon() const</signature>
<enumItemName>tAbandon</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetOTermSeized</name>
<signature>void SetOTermSeized()</signature>
<enumItemName>oTermSeized</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsOTermSeized</name>
<signature>bool IsOTermSeized() const</signature>
<enumItemName>oTermSeized</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetOSuspended</name>
<signature>void SetOSuspended()</signature>
<enumItemName>oSuspended</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsOSuspended</name>
<signature>bool IsOSuspended() const</signature>
<enumItemName>oSuspended</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTSuspended</name>
<signature>void SetTSuspended()</signature>
<enumItemName>tSuspended</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTSuspended</name>
<signature>bool IsTSuspended() const</signature>
<enumItemName>tSuspended</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetOrigAttempt</name>
<signature>void SetOrigAttempt()</signature>
<enumItemName>origAttempt</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsOrigAttempt</name>
<signature>bool IsOrigAttempt() const</signature>
<enumItemName>origAttempt</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTermAttempt</name>
<signature>void SetTermAttempt()</signature>
<enumItemName>termAttempt</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTermAttempt</name>
<signature>bool IsTermAttempt() const</signature>
<enumItemName>termAttempt</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetOReAnswer</name>
<signature>void SetOReAnswer()</signature>
<enumItemName>oReAnswer</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsOReAnswer</name>
<signature>bool IsOReAnswer() const</signature>
<enumItemName>oReAnswer</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetTReAnswer</name>
<signature>void SetTReAnswer()</signature>
<enumItemName>tReAnswer</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsTReAnswer</name>
<signature>bool IsTReAnswer() const</signature>
<enumItemName>tReAnswer</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetFacilitySelectedAndAvailable</name>
<signature>void SetFacilitySelectedAndAvailable()</signature>
<enumItemName>facilitySelectedAndAvailable</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsFacilitySelectedAndAvailable</name>
<signature>bool IsFacilitySelectedAndAvailable() const</signature>
<enumItemName>facilitySelectedAndAvailable</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetCallAccepted</name>
<signature>void SetCallAccepted()</signature>
<enumItemName>callAccepted</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsCallAccepted</name>
<signature>bool IsCallAccepted() const</signature>
<enumItemName>callAccepted</enumItemName>
</memberFunctionIs>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- EventTypeBCSM information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 5]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>EventTypeBCSM ::= ENUMERATED</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    origAttemptAuthorized(1),</text>
<shift></shift>
</line>
<line>
<text>    collectedInfo(2),</text>
<shift></shift>
</line>
<line>
<text>    analysedInformation(3),</text>
<shift></shift>
</line>
<line>
<text>    routeSelectFailure(4),</text>
<shift></shift>
</line>
<line>
<text>    oCalledPartyBusy(5),</text>
<shift></shift>
</line>
<line>
<text>    oNoAnswer(6),</text>
<shift></shift>
</line>
<line>
<text>    oAnswer(7),</text>
<shift></shift>
</line>
<line>
<text>    oMidCall(8),</text>
<shift></shift>
</line>
<line>
<text>    oDisconnect(9),</text>
<shift></shift>
</line>
<line>
<text>    oAbandon(10),</text>
<shift></shift>
</line>
<line>
<text>    termAttemptAuthorized(12),</text>
<shift></shift>
</line>
<line>
<text>    tBusy(13),</text>
<shift></shift>
</line>
<line>
<text>    tNoAnswer(14),</text>
<shift></shift>
</line>
<line>
<text>    tAnswer(15),</text>
<shift></shift>
</line>
<line>
<text>    tMidCall(16),</text>
<shift></shift>
</line>
<line>
<text>    tDisconnect(17),</text>
<shift></shift>
</line>
<line>
<text>    tAbandon(18),</text>
<shift></shift>
</line>
<line>
<text>    oTermSeized(19),</text>
<shift></shift>
</line>
<line>
<text>    oSuspended(20),</text>
<shift></shift>
</line>
<line>
<text>    tSuspended(21),</text>
<shift></shift>
</line>
<line>
<text>    origAttempt(22),</text>
<shift></shift>
</line>
<line>
<text>    termAttempt(23),</text>
<shift></shift>
</line>
<line>
<text>    oReAnswer(24),</text>
<shift></shift>
</line>
<line>
<text>    tReAnswer(25),</text>
<shift></shift>
</line>
<line>
<text>    facilitySelectedAndAvailable(26),</text>
<shift></shift>
</line>
<line>
<text>    callAccepted(27)</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnEnumerated>

</asnType>

