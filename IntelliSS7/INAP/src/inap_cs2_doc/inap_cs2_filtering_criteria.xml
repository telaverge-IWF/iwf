<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>FilteringCriteria</className>
<asnTypeName>FilteringCriteria</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceDialledNumber</name>
<signature>void SetChoiceDialledNumber(Digits* choice)</signature>
<choiceName>DialledNumber</choiceName>
<asnChoiceName>dialledNumber</asnChoiceName>
<choiceTypeName>Digits</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceDialledNumber</name>
<signature>void SetChoiceDialledNumber(const Digits&amp; choice)</signature>
<choiceName>DialledNumber</choiceName>
<asnChoiceName>dialledNumber</asnChoiceName>
<choiceTypeName>Digits</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceDialledNumber</name>
<signature>const Digits&amp; GetChoiceDialledNumber() const</signature>
<choiceName>DialledNumber</choiceName>
<asnChoiceName>dialledNumber</asnChoiceName>
<choiceTypeName>Digits</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceDialledNumber</name>
<signature>bool ChoiceDialledNumber() const</signature>
<choiceName>DialledNumber</choiceName>
<asnChoiceName>dialledNumber</asnChoiceName>
<choiceTypeName>Digits</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCallingLineID</name>
<signature>void SetChoiceCallingLineID(Digits* choice)</signature>
<choiceName>CallingLineID</choiceName>
<asnChoiceName>callingLineID</asnChoiceName>
<choiceTypeName>Digits</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCallingLineID</name>
<signature>void SetChoiceCallingLineID(const Digits&amp; choice)</signature>
<choiceName>CallingLineID</choiceName>
<asnChoiceName>callingLineID</asnChoiceName>
<choiceTypeName>Digits</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCallingLineID</name>
<signature>const Digits&amp; GetChoiceCallingLineID() const</signature>
<choiceName>CallingLineID</choiceName>
<asnChoiceName>callingLineID</asnChoiceName>
<choiceTypeName>Digits</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCallingLineID</name>
<signature>bool ChoiceCallingLineID() const</signature>
<choiceName>CallingLineID</choiceName>
<asnChoiceName>callingLineID</asnChoiceName>
<choiceTypeName>Digits</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceServiceKey</name>
<signature>void SetChoiceServiceKey(ServiceKey* choice)</signature>
<choiceName>ServiceKey</choiceName>
<asnChoiceName>serviceKey</asnChoiceName>
<choiceTypeName>ServiceKey</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceServiceKey</name>
<signature>void SetChoiceServiceKey(const ServiceKey&amp; choice)</signature>
<choiceName>ServiceKey</choiceName>
<asnChoiceName>serviceKey</asnChoiceName>
<choiceTypeName>ServiceKey</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceServiceKey</name>
<signature>const ServiceKey&amp; GetChoiceServiceKey() const</signature>
<choiceName>ServiceKey</choiceName>
<asnChoiceName>serviceKey</asnChoiceName>
<choiceTypeName>ServiceKey</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceServiceKey</name>
<signature>bool ChoiceServiceKey() const</signature>
<choiceName>ServiceKey</choiceName>
<asnChoiceName>serviceKey</asnChoiceName>
<choiceTypeName>ServiceKey</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceAddressAndService</name>
<signature>void SetChoiceAddressAndService(AddressAndService* choice)</signature>
<choiceName>AddressAndService</choiceName>
<asnChoiceName>addressAndService</asnChoiceName>
<choiceTypeName>AddressAndService</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceAddressAndService</name>
<signature>void SetChoiceAddressAndService(const AddressAndService&amp; choice)</signature>
<choiceName>AddressAndService</choiceName>
<asnChoiceName>addressAndService</asnChoiceName>
<choiceTypeName>AddressAndService</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceAddressAndService</name>
<signature>const AddressAndService&amp; GetChoiceAddressAndService() const</signature>
<choiceName>AddressAndService</choiceName>
<asnChoiceName>addressAndService</asnChoiceName>
<choiceTypeName>AddressAndService</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceAddressAndService</name>
<signature>bool ChoiceAddressAndService() const</signature>
<choiceName>AddressAndService</choiceName>
<asnChoiceName>addressAndService</asnChoiceName>
<choiceTypeName>AddressAndService</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- FilteringCriteria information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>FilteringCriteria ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    dialledNumber [0] IMPLICIT Digits -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callingLineID [1] IMPLICIT Digits -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    serviceKey [2] IMPLICIT ServiceKey -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    addressAndService [30] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        calledAddressValue [0] IMPLICIT Digits -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        serviceKey [1] IMPLICIT ServiceKey -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        callingAddressValue [2] IMPLICIT Digits -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        locationNumber [3] IMPLICIT LocationNumber -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

