<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>ManageTriggerDataArg</className>
<asnTypeName>ManageTriggerDataArg</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetActionIndicator</name>
<signature>void SetActionIndicator(ActionIndicator* element)</signature>
<elmentName>ActionIndicator</elmentName>
<asnElementName>actionIndicator</asnElementName>
<elementTypeName>ActionIndicator</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetActionIndicator</name>
<signature>void SetActionIndicator(const ActionIndicator&amp; element)</signature>
<elementName>ActionIndicator</elementName>
<asnElementName>actionIndicator</asnElementName>
<elementTypeName>ActionIndicator</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetActionIndicator</name>
<signature>const ActionIndicator&amp; GetActionIndicator() const</signature>
<elementName>ActionIndicator</elementName>
<asnElementName>actionIndicator</asnElementName>
<elementTypeName>ActionIndicator</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetTriggerDataIdentifier</name>
<signature>void SetTriggerDataIdentifier(TriggerDataIdentifier* element)</signature>
<elmentName>TriggerDataIdentifier</elmentName>
<asnElementName>triggerDataIdentifier</asnElementName>
<elementTypeName>TriggerDataIdentifier</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTriggerDataIdentifier</name>
<signature>void SetTriggerDataIdentifier(const TriggerDataIdentifier&amp; element)</signature>
<elementName>TriggerDataIdentifier</elementName>
<asnElementName>triggerDataIdentifier</asnElementName>
<elementTypeName>TriggerDataIdentifier</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTriggerDataIdentifier</name>
<signature>const TriggerDataIdentifier&amp; GetTriggerDataIdentifier() const</signature>
<elementName>TriggerDataIdentifier</elementName>
<asnElementName>triggerDataIdentifier</asnElementName>
<elementTypeName>TriggerDataIdentifier</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetRegistratorIdentifier</name>
<signature>void SetRegistratorIdentifier(RegistratorIdentifier* element)</signature>
<elmentName>RegistratorIdentifier</elmentName>
<asnElementName>registratorIdentifier</asnElementName>
<elementTypeName>RegistratorIdentifier</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRegistratorIdentifier</name>
<signature>void SetRegistratorIdentifier(const RegistratorIdentifier&amp; element)</signature>
<elementName>RegistratorIdentifier</elementName>
<asnElementName>registratorIdentifier</asnElementName>
<elementTypeName>RegistratorIdentifier</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRegistratorIdentifier</name>
<signature>const RegistratorIdentifier&amp; GetRegistratorIdentifier() const</signature>
<elementName>RegistratorIdentifier</elementName>
<asnElementName>registratorIdentifier</asnElementName>
<elementTypeName>RegistratorIdentifier</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRegistratorIdentifier</name>
<signature>bool OptionRegistratorIdentifier() const</signature>
<elementName>RegistratorIdentifier</elementName>
<asnElementName>registratorIdentifier</asnElementName>
<elementTypeName>RegistratorIdentifier</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ManageTriggerDataArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ManageTriggerDataArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    actionIndicator [0] IMPLICIT ActionIndicator -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    triggerDataIdentifier [1] IMPLICIT TriggerDataIdentifier -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    registratorIdentifier [2] IMPLICIT RegistratorIdentifier -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [3] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

