<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>CertificationPath</className>
<asnTypeName>CertificationPath</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetUserCertificate</name>
<signature>void SetUserCertificate(Certificate* element)</signature>
<elmentName>UserCertificate</elmentName>
<asnElementName>userCertificate</asnElementName>
<elementTypeName>Certificate</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetUserCertificate</name>
<signature>void SetUserCertificate(const Certificate&amp; element)</signature>
<elementName>UserCertificate</elementName>
<asnElementName>userCertificate</asnElementName>
<elementTypeName>Certificate</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetUserCertificate</name>
<signature>const Certificate&amp; GetUserCertificate() const</signature>
<elementName>UserCertificate</elementName>
<asnElementName>userCertificate</asnElementName>
<elementTypeName>Certificate</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetTheCACertificates</name>
<signature>void SetTheCACertificates(TheCACertificates* element)</signature>
<elmentName>TheCACertificates</elmentName>
<asnElementName>theCACertificates</asnElementName>
<elementTypeName>TheCACertificates</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTheCACertificates</name>
<signature>void SetTheCACertificates(const TheCACertificates&amp; element)</signature>
<elementName>TheCACertificates</elementName>
<asnElementName>theCACertificates</asnElementName>
<elementTypeName>TheCACertificates</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTheCACertificates</name>
<signature>const TheCACertificates&amp; GetTheCACertificates() const</signature>
<elementName>TheCACertificates</elementName>
<asnElementName>theCACertificates</asnElementName>
<elementTypeName>TheCACertificates</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTheCACertificates</name>
<signature>bool OptionTheCACertificates() const</signature>
<elementName>TheCACertificates</elementName>
<asnElementName>theCACertificates</asnElementName>
<elementTypeName>TheCACertificates</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CertificationPath information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CertificationPath ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    userCertificate Certificate -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    theCACertificates SEQUENCE OF CertificatePair -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

