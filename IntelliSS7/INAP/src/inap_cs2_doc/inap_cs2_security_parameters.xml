<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSet>

<className>SecurityParameters</className>
<asnTypeName>SecurityParameters</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCertification_path</name>
<signature>void SetCertification_path(CertificationPath* element)</signature>
<elmentName>Certification_path</elmentName>
<asnElementName>certification-path</asnElementName>
<elementTypeName>CertificationPath</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCertification_path</name>
<signature>void SetCertification_path(const CertificationPath&amp; element)</signature>
<elementName>Certification_path</elementName>
<asnElementName>certification-path</asnElementName>
<elementTypeName>CertificationPath</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCertification_path</name>
<signature>const CertificationPath&amp; GetCertification_path() const</signature>
<elementName>Certification_path</elementName>
<asnElementName>certification-path</asnElementName>
<elementTypeName>CertificationPath</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCertification_path</name>
<signature>bool OptionCertification_path() const</signature>
<elementName>Certification_path</elementName>
<asnElementName>certification-path</asnElementName>
<elementTypeName>CertificationPath</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetDistinguishedName</name>
<signature>void SetDistinguishedName(DistinguishedName* element)</signature>
<elmentName>DistinguishedName</elmentName>
<asnElementName>distinguishedName</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetDistinguishedName</name>
<signature>void SetDistinguishedName(const DistinguishedName&amp; element)</signature>
<elementName>DistinguishedName</elementName>
<asnElementName>distinguishedName</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetDistinguishedName</name>
<signature>const DistinguishedName&amp; GetDistinguishedName() const</signature>
<elementName>DistinguishedName</elementName>
<asnElementName>distinguishedName</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionDistinguishedName</name>
<signature>bool OptionDistinguishedName() const</signature>
<elementName>DistinguishedName</elementName>
<asnElementName>distinguishedName</asnElementName>
<elementTypeName>DistinguishedName</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTime</name>
<signature>void SetTime(Time* element)</signature>
<elmentName>Time</elmentName>
<asnElementName>time</asnElementName>
<elementTypeName>Time</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTime</name>
<signature>void SetTime(const Time&amp; element)</signature>
<elementName>Time</elementName>
<asnElementName>time</asnElementName>
<elementTypeName>Time</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTime</name>
<signature>const Time&amp; GetTime() const</signature>
<elementName>Time</elementName>
<asnElementName>time</asnElementName>
<elementTypeName>Time</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTime</name>
<signature>bool OptionTime() const</signature>
<elementName>Time</elementName>
<asnElementName>time</asnElementName>
<elementTypeName>Time</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetRandom</name>
<signature>void SetRandom(Random* element)</signature>
<elmentName>Random</elmentName>
<asnElementName>random</asnElementName>
<elementTypeName>Random</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetRandom</name>
<signature>void SetRandom(const Random&amp; element)</signature>
<elementName>Random</elementName>
<asnElementName>random</asnElementName>
<elementTypeName>Random</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetRandom</name>
<signature>const Random&amp; GetRandom() const</signature>
<elementName>Random</elementName>
<asnElementName>random</asnElementName>
<elementTypeName>Random</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionRandom</name>
<signature>bool OptionRandom() const</signature>
<elementName>Random</elementName>
<asnElementName>random</asnElementName>
<elementTypeName>Random</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetTarget</name>
<signature>void SetTarget(ProtectionRequest* element)</signature>
<elmentName>Target</elmentName>
<asnElementName>target</asnElementName>
<elementTypeName>ProtectionRequest</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetTarget</name>
<signature>void SetTarget(const ProtectionRequest&amp; element)</signature>
<elementName>Target</elementName>
<asnElementName>target</asnElementName>
<elementTypeName>ProtectionRequest</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetTarget</name>
<signature>const ProtectionRequest&amp; GetTarget() const</signature>
<elementName>Target</elementName>
<asnElementName>target</asnElementName>
<elementTypeName>ProtectionRequest</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionTarget</name>
<signature>bool OptionTarget() const</signature>
<elementName>Target</elementName>
<asnElementName>target</asnElementName>
<elementTypeName>ProtectionRequest</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SecurityParameters information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 5]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SecurityParameters ::= SET</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    certification-path [0] IMPLICIT CertificationPath -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    distinguishedName [1] IMPLICIT DistinguishedName -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    time [2] IMPLICIT Time -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    random [3] IMPLICIT BIT STRING OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    target [4] IMPLICIT ProtectionRequest -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSet>

</asnType>

