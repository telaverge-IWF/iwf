<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>ReleaseCallArg</className>
<asnTypeName>ReleaseCallArg</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceInitialCallSegment</name>
<signature>void SetChoiceInitialCallSegment(Cause* choice)</signature>
<choiceName>InitialCallSegment</choiceName>
<asnChoiceName>initialCallSegment</asnChoiceName>
<choiceTypeName>Cause</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceInitialCallSegment</name>
<signature>void SetChoiceInitialCallSegment(const Cause&amp; choice)</signature>
<choiceName>InitialCallSegment</choiceName>
<asnChoiceName>initialCallSegment</asnChoiceName>
<choiceTypeName>Cause</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceInitialCallSegment</name>
<signature>const Cause&amp; GetChoiceInitialCallSegment() const</signature>
<choiceName>InitialCallSegment</choiceName>
<asnChoiceName>initialCallSegment</asnChoiceName>
<choiceTypeName>Cause</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceInitialCallSegment</name>
<signature>bool ChoiceInitialCallSegment() const</signature>
<choiceName>InitialCallSegment</choiceName>
<asnChoiceName>initialCallSegment</asnChoiceName>
<choiceTypeName>Cause</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceAssociatedCallSegment</name>
<signature>void SetChoiceAssociatedCallSegment(AssociatedCallSegment* choice)</signature>
<choiceName>AssociatedCallSegment</choiceName>
<asnChoiceName>associatedCallSegment</asnChoiceName>
<choiceTypeName>AssociatedCallSegment</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceAssociatedCallSegment</name>
<signature>void SetChoiceAssociatedCallSegment(const AssociatedCallSegment&amp; choice)</signature>
<choiceName>AssociatedCallSegment</choiceName>
<asnChoiceName>associatedCallSegment</asnChoiceName>
<choiceTypeName>AssociatedCallSegment</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceAssociatedCallSegment</name>
<signature>const AssociatedCallSegment&amp; GetChoiceAssociatedCallSegment() const</signature>
<choiceName>AssociatedCallSegment</choiceName>
<asnChoiceName>associatedCallSegment</asnChoiceName>
<choiceTypeName>AssociatedCallSegment</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceAssociatedCallSegment</name>
<signature>bool ChoiceAssociatedCallSegment() const</signature>
<choiceName>AssociatedCallSegment</choiceName>
<asnChoiceName>associatedCallSegment</asnChoiceName>
<choiceTypeName>AssociatedCallSegment</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceAllCallSegments</name>
<signature>void SetChoiceAllCallSegments(AllCallSegments* choice)</signature>
<choiceName>AllCallSegments</choiceName>
<asnChoiceName>allCallSegments</asnChoiceName>
<choiceTypeName>AllCallSegments</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceAllCallSegments</name>
<signature>void SetChoiceAllCallSegments(const AllCallSegments&amp; choice)</signature>
<choiceName>AllCallSegments</choiceName>
<asnChoiceName>allCallSegments</asnChoiceName>
<choiceTypeName>AllCallSegments</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceAllCallSegments</name>
<signature>const AllCallSegments&amp; GetChoiceAllCallSegments() const</signature>
<choiceName>AllCallSegments</choiceName>
<asnChoiceName>allCallSegments</asnChoiceName>
<choiceTypeName>AllCallSegments</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceAllCallSegments</name>
<signature>bool ChoiceAllCallSegments() const</signature>
<choiceName>AllCallSegments</choiceName>
<asnChoiceName>allCallSegments</asnChoiceName>
<choiceTypeName>AllCallSegments</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ReleaseCallArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ReleaseCallArg ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    initialCallSegment Cause -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    associatedCallSegment [1] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        callSegment [0] IMPLICIT INTEGER  ,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        releaseCause [1] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    allCallSegments [2] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        releaseCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

