<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>CancelArg::CallSegmentToCancel</className>
<asnTypeName>CancelArg::callSegmentToCancel</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetInvokeID</name>
<signature>void SetInvokeID(InvokeID* element)</signature>
<elmentName>InvokeID</elmentName>
<asnElementName>invokeID</asnElementName>
<elementTypeName>InvokeID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetInvokeID</name>
<signature>void SetInvokeID(const InvokeID&amp; element)</signature>
<elementName>InvokeID</elementName>
<asnElementName>invokeID</asnElementName>
<elementTypeName>InvokeID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetInvokeID</name>
<signature>const InvokeID&amp; GetInvokeID() const</signature>
<elementName>InvokeID</elementName>
<asnElementName>invokeID</asnElementName>
<elementTypeName>InvokeID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetCallSegmentID</name>
<signature>void SetCallSegmentID(CallSegmentID* element)</signature>
<elmentName>CallSegmentID</elmentName>
<asnElementName>callSegmentID</asnElementName>
<elementTypeName>CallSegmentID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCallSegmentID</name>
<signature>void SetCallSegmentID(const CallSegmentID&amp; element)</signature>
<elementName>CallSegmentID</elementName>
<asnElementName>callSegmentID</asnElementName>
<elementTypeName>CallSegmentID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCallSegmentID</name>
<signature>const CallSegmentID&amp; GetCallSegmentID() const</signature>
<elementName>CallSegmentID</elementName>
<asnElementName>callSegmentID</asnElementName>
<elementTypeName>CallSegmentID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- CancelArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>CancelArg ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    invokeID [0] IMPLICIT InvokeID -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    allRequests [1] IMPLICIT NULL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callSegmentToCancel [2] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        invokeID [0] IMPLICIT InvokeID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        callSegmentID [1] IMPLICIT CallSegmentID -- [linked] --</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

