<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>EntityReleasedArg</className>
<asnTypeName>EntityReleasedArg</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceCSFailure</name>
<signature>void SetChoiceCSFailure(CSFailure* choice)</signature>
<choiceName>CSFailure</choiceName>
<asnChoiceName>cSFailure</asnChoiceName>
<choiceTypeName>CSFailure</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCSFailure</name>
<signature>void SetChoiceCSFailure(const CSFailure&amp; choice)</signature>
<choiceName>CSFailure</choiceName>
<asnChoiceName>cSFailure</asnChoiceName>
<choiceTypeName>CSFailure</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCSFailure</name>
<signature>const CSFailure&amp; GetChoiceCSFailure() const</signature>
<choiceName>CSFailure</choiceName>
<asnChoiceName>cSFailure</asnChoiceName>
<choiceTypeName>CSFailure</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCSFailure</name>
<signature>bool ChoiceCSFailure() const</signature>
<choiceName>CSFailure</choiceName>
<asnChoiceName>cSFailure</asnChoiceName>
<choiceTypeName>CSFailure</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceBCSMFailure</name>
<signature>void SetChoiceBCSMFailure(BCSMFailure* choice)</signature>
<choiceName>BCSMFailure</choiceName>
<asnChoiceName>bCSMFailure</asnChoiceName>
<choiceTypeName>BCSMFailure</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceBCSMFailure</name>
<signature>void SetChoiceBCSMFailure(const BCSMFailure&amp; choice)</signature>
<choiceName>BCSMFailure</choiceName>
<asnChoiceName>bCSMFailure</asnChoiceName>
<choiceTypeName>BCSMFailure</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceBCSMFailure</name>
<signature>const BCSMFailure&amp; GetChoiceBCSMFailure() const</signature>
<choiceName>BCSMFailure</choiceName>
<asnChoiceName>bCSMFailure</asnChoiceName>
<choiceTypeName>BCSMFailure</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceBCSMFailure</name>
<signature>bool ChoiceBCSMFailure() const</signature>
<choiceName>BCSMFailure</choiceName>
<asnChoiceName>bCSMFailure</asnChoiceName>
<choiceTypeName>BCSMFailure</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- EntityReleasedArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>EntityReleasedArg ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    cSFailure [0] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        callSegmentID [0] IMPLICIT CallSegmentID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        reason [1] IMPLICIT Reason -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        cause [2] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    bCSMFailure [1] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        legID [0] IMPLICIT LegID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        reason [1] IMPLICIT Reason -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        cause [2] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

