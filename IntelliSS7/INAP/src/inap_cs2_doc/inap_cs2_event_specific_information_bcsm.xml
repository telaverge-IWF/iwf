<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>EventSpecificInformationBCSM</className>
<asnTypeName>EventSpecificInformationBCSM</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceCollectedInfoSpecificInfo</name>
<signature>void SetChoiceCollectedInfoSpecificInfo(CollectedInfoSpecificInfo* choice)</signature>
<choiceName>CollectedInfoSpecificInfo</choiceName>
<asnChoiceName>collectedInfoSpecificInfo</asnChoiceName>
<choiceTypeName>CollectedInfoSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCollectedInfoSpecificInfo</name>
<signature>void SetChoiceCollectedInfoSpecificInfo(const CollectedInfoSpecificInfo&amp; choice)</signature>
<choiceName>CollectedInfoSpecificInfo</choiceName>
<asnChoiceName>collectedInfoSpecificInfo</asnChoiceName>
<choiceTypeName>CollectedInfoSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCollectedInfoSpecificInfo</name>
<signature>const CollectedInfoSpecificInfo&amp; GetChoiceCollectedInfoSpecificInfo() const</signature>
<choiceName>CollectedInfoSpecificInfo</choiceName>
<asnChoiceName>collectedInfoSpecificInfo</asnChoiceName>
<choiceTypeName>CollectedInfoSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCollectedInfoSpecificInfo</name>
<signature>bool ChoiceCollectedInfoSpecificInfo() const</signature>
<choiceName>CollectedInfoSpecificInfo</choiceName>
<asnChoiceName>collectedInfoSpecificInfo</asnChoiceName>
<choiceTypeName>CollectedInfoSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceAnalysedInfoSpecificInfo</name>
<signature>void SetChoiceAnalysedInfoSpecificInfo(AnalysedInfoSpecificInfo* choice)</signature>
<choiceName>AnalysedInfoSpecificInfo</choiceName>
<asnChoiceName>analysedInfoSpecificInfo</asnChoiceName>
<choiceTypeName>AnalysedInfoSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceAnalysedInfoSpecificInfo</name>
<signature>void SetChoiceAnalysedInfoSpecificInfo(const AnalysedInfoSpecificInfo&amp; choice)</signature>
<choiceName>AnalysedInfoSpecificInfo</choiceName>
<asnChoiceName>analysedInfoSpecificInfo</asnChoiceName>
<choiceTypeName>AnalysedInfoSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceAnalysedInfoSpecificInfo</name>
<signature>const AnalysedInfoSpecificInfo&amp; GetChoiceAnalysedInfoSpecificInfo() const</signature>
<choiceName>AnalysedInfoSpecificInfo</choiceName>
<asnChoiceName>analysedInfoSpecificInfo</asnChoiceName>
<choiceTypeName>AnalysedInfoSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceAnalysedInfoSpecificInfo</name>
<signature>bool ChoiceAnalysedInfoSpecificInfo() const</signature>
<choiceName>AnalysedInfoSpecificInfo</choiceName>
<asnChoiceName>analysedInfoSpecificInfo</asnChoiceName>
<choiceTypeName>AnalysedInfoSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceRouteSelectFailureSpecificInfo</name>
<signature>void SetChoiceRouteSelectFailureSpecificInfo(RouteSelectFailureSpecificInfo* choice)</signature>
<choiceName>RouteSelectFailureSpecificInfo</choiceName>
<asnChoiceName>routeSelectFailureSpecificInfo</asnChoiceName>
<choiceTypeName>RouteSelectFailureSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceRouteSelectFailureSpecificInfo</name>
<signature>void SetChoiceRouteSelectFailureSpecificInfo(const RouteSelectFailureSpecificInfo&amp; choice)</signature>
<choiceName>RouteSelectFailureSpecificInfo</choiceName>
<asnChoiceName>routeSelectFailureSpecificInfo</asnChoiceName>
<choiceTypeName>RouteSelectFailureSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceRouteSelectFailureSpecificInfo</name>
<signature>const RouteSelectFailureSpecificInfo&amp; GetChoiceRouteSelectFailureSpecificInfo() const</signature>
<choiceName>RouteSelectFailureSpecificInfo</choiceName>
<asnChoiceName>routeSelectFailureSpecificInfo</asnChoiceName>
<choiceTypeName>RouteSelectFailureSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceRouteSelectFailureSpecificInfo</name>
<signature>bool ChoiceRouteSelectFailureSpecificInfo() const</signature>
<choiceName>RouteSelectFailureSpecificInfo</choiceName>
<asnChoiceName>routeSelectFailureSpecificInfo</asnChoiceName>
<choiceTypeName>RouteSelectFailureSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOCalledPartyBusySpecificInfo</name>
<signature>void SetChoiceOCalledPartyBusySpecificInfo(OCalledPartyBusySpecificInfo* choice)</signature>
<choiceName>OCalledPartyBusySpecificInfo</choiceName>
<asnChoiceName>oCalledPartyBusySpecificInfo</asnChoiceName>
<choiceTypeName>OCalledPartyBusySpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOCalledPartyBusySpecificInfo</name>
<signature>void SetChoiceOCalledPartyBusySpecificInfo(const OCalledPartyBusySpecificInfo&amp; choice)</signature>
<choiceName>OCalledPartyBusySpecificInfo</choiceName>
<asnChoiceName>oCalledPartyBusySpecificInfo</asnChoiceName>
<choiceTypeName>OCalledPartyBusySpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOCalledPartyBusySpecificInfo</name>
<signature>const OCalledPartyBusySpecificInfo&amp; GetChoiceOCalledPartyBusySpecificInfo() const</signature>
<choiceName>OCalledPartyBusySpecificInfo</choiceName>
<asnChoiceName>oCalledPartyBusySpecificInfo</asnChoiceName>
<choiceTypeName>OCalledPartyBusySpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOCalledPartyBusySpecificInfo</name>
<signature>bool ChoiceOCalledPartyBusySpecificInfo() const</signature>
<choiceName>OCalledPartyBusySpecificInfo</choiceName>
<asnChoiceName>oCalledPartyBusySpecificInfo</asnChoiceName>
<choiceTypeName>OCalledPartyBusySpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceONoAnswerSpecificInfo</name>
<signature>void SetChoiceONoAnswerSpecificInfo(ONoAnswerSpecificInfo* choice)</signature>
<choiceName>ONoAnswerSpecificInfo</choiceName>
<asnChoiceName>oNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>ONoAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceONoAnswerSpecificInfo</name>
<signature>void SetChoiceONoAnswerSpecificInfo(const ONoAnswerSpecificInfo&amp; choice)</signature>
<choiceName>ONoAnswerSpecificInfo</choiceName>
<asnChoiceName>oNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>ONoAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceONoAnswerSpecificInfo</name>
<signature>const ONoAnswerSpecificInfo&amp; GetChoiceONoAnswerSpecificInfo() const</signature>
<choiceName>ONoAnswerSpecificInfo</choiceName>
<asnChoiceName>oNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>ONoAnswerSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceONoAnswerSpecificInfo</name>
<signature>bool ChoiceONoAnswerSpecificInfo() const</signature>
<choiceName>ONoAnswerSpecificInfo</choiceName>
<asnChoiceName>oNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>ONoAnswerSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOAnswerSpecificInfo</name>
<signature>void SetChoiceOAnswerSpecificInfo(OAnswerSpecificInfo* choice)</signature>
<choiceName>OAnswerSpecificInfo</choiceName>
<asnChoiceName>oAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>OAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOAnswerSpecificInfo</name>
<signature>void SetChoiceOAnswerSpecificInfo(const OAnswerSpecificInfo&amp; choice)</signature>
<choiceName>OAnswerSpecificInfo</choiceName>
<asnChoiceName>oAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>OAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOAnswerSpecificInfo</name>
<signature>const OAnswerSpecificInfo&amp; GetChoiceOAnswerSpecificInfo() const</signature>
<choiceName>OAnswerSpecificInfo</choiceName>
<asnChoiceName>oAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>OAnswerSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOAnswerSpecificInfo</name>
<signature>bool ChoiceOAnswerSpecificInfo() const</signature>
<choiceName>OAnswerSpecificInfo</choiceName>
<asnChoiceName>oAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>OAnswerSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOMidCallSpecificInfo</name>
<signature>void SetChoiceOMidCallSpecificInfo(OMidCallSpecificInfo* choice)</signature>
<choiceName>OMidCallSpecificInfo</choiceName>
<asnChoiceName>oMidCallSpecificInfo</asnChoiceName>
<choiceTypeName>OMidCallSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOMidCallSpecificInfo</name>
<signature>void SetChoiceOMidCallSpecificInfo(const OMidCallSpecificInfo&amp; choice)</signature>
<choiceName>OMidCallSpecificInfo</choiceName>
<asnChoiceName>oMidCallSpecificInfo</asnChoiceName>
<choiceTypeName>OMidCallSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOMidCallSpecificInfo</name>
<signature>const OMidCallSpecificInfo&amp; GetChoiceOMidCallSpecificInfo() const</signature>
<choiceName>OMidCallSpecificInfo</choiceName>
<asnChoiceName>oMidCallSpecificInfo</asnChoiceName>
<choiceTypeName>OMidCallSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOMidCallSpecificInfo</name>
<signature>bool ChoiceOMidCallSpecificInfo() const</signature>
<choiceName>OMidCallSpecificInfo</choiceName>
<asnChoiceName>oMidCallSpecificInfo</asnChoiceName>
<choiceTypeName>OMidCallSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceODisconnectSpecificInfo</name>
<signature>void SetChoiceODisconnectSpecificInfo(ODisconnectSpecificInfo* choice)</signature>
<choiceName>ODisconnectSpecificInfo</choiceName>
<asnChoiceName>oDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>ODisconnectSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceODisconnectSpecificInfo</name>
<signature>void SetChoiceODisconnectSpecificInfo(const ODisconnectSpecificInfo&amp; choice)</signature>
<choiceName>ODisconnectSpecificInfo</choiceName>
<asnChoiceName>oDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>ODisconnectSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceODisconnectSpecificInfo</name>
<signature>const ODisconnectSpecificInfo&amp; GetChoiceODisconnectSpecificInfo() const</signature>
<choiceName>ODisconnectSpecificInfo</choiceName>
<asnChoiceName>oDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>ODisconnectSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceODisconnectSpecificInfo</name>
<signature>bool ChoiceODisconnectSpecificInfo() const</signature>
<choiceName>ODisconnectSpecificInfo</choiceName>
<asnChoiceName>oDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>ODisconnectSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTBusySpecificInfo</name>
<signature>void SetChoiceTBusySpecificInfo(TBusySpecificInfo* choice)</signature>
<choiceName>TBusySpecificInfo</choiceName>
<asnChoiceName>tBusySpecificInfo</asnChoiceName>
<choiceTypeName>TBusySpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTBusySpecificInfo</name>
<signature>void SetChoiceTBusySpecificInfo(const TBusySpecificInfo&amp; choice)</signature>
<choiceName>TBusySpecificInfo</choiceName>
<asnChoiceName>tBusySpecificInfo</asnChoiceName>
<choiceTypeName>TBusySpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTBusySpecificInfo</name>
<signature>const TBusySpecificInfo&amp; GetChoiceTBusySpecificInfo() const</signature>
<choiceName>TBusySpecificInfo</choiceName>
<asnChoiceName>tBusySpecificInfo</asnChoiceName>
<choiceTypeName>TBusySpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTBusySpecificInfo</name>
<signature>bool ChoiceTBusySpecificInfo() const</signature>
<choiceName>TBusySpecificInfo</choiceName>
<asnChoiceName>tBusySpecificInfo</asnChoiceName>
<choiceTypeName>TBusySpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTNoAnswerSpecificInfo</name>
<signature>void SetChoiceTNoAnswerSpecificInfo(TNoAnswerSpecificInfo* choice)</signature>
<choiceName>TNoAnswerSpecificInfo</choiceName>
<asnChoiceName>tNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TNoAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTNoAnswerSpecificInfo</name>
<signature>void SetChoiceTNoAnswerSpecificInfo(const TNoAnswerSpecificInfo&amp; choice)</signature>
<choiceName>TNoAnswerSpecificInfo</choiceName>
<asnChoiceName>tNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TNoAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTNoAnswerSpecificInfo</name>
<signature>const TNoAnswerSpecificInfo&amp; GetChoiceTNoAnswerSpecificInfo() const</signature>
<choiceName>TNoAnswerSpecificInfo</choiceName>
<asnChoiceName>tNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TNoAnswerSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTNoAnswerSpecificInfo</name>
<signature>bool ChoiceTNoAnswerSpecificInfo() const</signature>
<choiceName>TNoAnswerSpecificInfo</choiceName>
<asnChoiceName>tNoAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TNoAnswerSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTAnswerSpecificInfo</name>
<signature>void SetChoiceTAnswerSpecificInfo(TAnswerSpecificInfo* choice)</signature>
<choiceName>TAnswerSpecificInfo</choiceName>
<asnChoiceName>tAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTAnswerSpecificInfo</name>
<signature>void SetChoiceTAnswerSpecificInfo(const TAnswerSpecificInfo&amp; choice)</signature>
<choiceName>TAnswerSpecificInfo</choiceName>
<asnChoiceName>tAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TAnswerSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTAnswerSpecificInfo</name>
<signature>const TAnswerSpecificInfo&amp; GetChoiceTAnswerSpecificInfo() const</signature>
<choiceName>TAnswerSpecificInfo</choiceName>
<asnChoiceName>tAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TAnswerSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTAnswerSpecificInfo</name>
<signature>bool ChoiceTAnswerSpecificInfo() const</signature>
<choiceName>TAnswerSpecificInfo</choiceName>
<asnChoiceName>tAnswerSpecificInfo</asnChoiceName>
<choiceTypeName>TAnswerSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTMidCallSpecificInfo</name>
<signature>void SetChoiceTMidCallSpecificInfo(TMidCallSpecificInfo* choice)</signature>
<choiceName>TMidCallSpecificInfo</choiceName>
<asnChoiceName>tMidCallSpecificInfo</asnChoiceName>
<choiceTypeName>TMidCallSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTMidCallSpecificInfo</name>
<signature>void SetChoiceTMidCallSpecificInfo(const TMidCallSpecificInfo&amp; choice)</signature>
<choiceName>TMidCallSpecificInfo</choiceName>
<asnChoiceName>tMidCallSpecificInfo</asnChoiceName>
<choiceTypeName>TMidCallSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTMidCallSpecificInfo</name>
<signature>const TMidCallSpecificInfo&amp; GetChoiceTMidCallSpecificInfo() const</signature>
<choiceName>TMidCallSpecificInfo</choiceName>
<asnChoiceName>tMidCallSpecificInfo</asnChoiceName>
<choiceTypeName>TMidCallSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTMidCallSpecificInfo</name>
<signature>bool ChoiceTMidCallSpecificInfo() const</signature>
<choiceName>TMidCallSpecificInfo</choiceName>
<asnChoiceName>tMidCallSpecificInfo</asnChoiceName>
<choiceTypeName>TMidCallSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTDisconnectSpecificInfo</name>
<signature>void SetChoiceTDisconnectSpecificInfo(TDisconnectSpecificInfo* choice)</signature>
<choiceName>TDisconnectSpecificInfo</choiceName>
<asnChoiceName>tDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>TDisconnectSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTDisconnectSpecificInfo</name>
<signature>void SetChoiceTDisconnectSpecificInfo(const TDisconnectSpecificInfo&amp; choice)</signature>
<choiceName>TDisconnectSpecificInfo</choiceName>
<asnChoiceName>tDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>TDisconnectSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTDisconnectSpecificInfo</name>
<signature>const TDisconnectSpecificInfo&amp; GetChoiceTDisconnectSpecificInfo() const</signature>
<choiceName>TDisconnectSpecificInfo</choiceName>
<asnChoiceName>tDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>TDisconnectSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTDisconnectSpecificInfo</name>
<signature>bool ChoiceTDisconnectSpecificInfo() const</signature>
<choiceName>TDisconnectSpecificInfo</choiceName>
<asnChoiceName>tDisconnectSpecificInfo</asnChoiceName>
<choiceTypeName>TDisconnectSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOTermSeizedSpecificInfo</name>
<signature>void SetChoiceOTermSeizedSpecificInfo(OTermSeizedSpecificInfo* choice)</signature>
<choiceName>OTermSeizedSpecificInfo</choiceName>
<asnChoiceName>oTermSeizedSpecificInfo</asnChoiceName>
<choiceTypeName>OTermSeizedSpecificInfo</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOTermSeizedSpecificInfo</name>
<signature>void SetChoiceOTermSeizedSpecificInfo(const OTermSeizedSpecificInfo&amp; choice)</signature>
<choiceName>OTermSeizedSpecificInfo</choiceName>
<asnChoiceName>oTermSeizedSpecificInfo</asnChoiceName>
<choiceTypeName>OTermSeizedSpecificInfo</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOTermSeizedSpecificInfo</name>
<signature>const OTermSeizedSpecificInfo&amp; GetChoiceOTermSeizedSpecificInfo() const</signature>
<choiceName>OTermSeizedSpecificInfo</choiceName>
<asnChoiceName>oTermSeizedSpecificInfo</asnChoiceName>
<choiceTypeName>OTermSeizedSpecificInfo</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOTermSeizedSpecificInfo</name>
<signature>bool ChoiceOTermSeizedSpecificInfo() const</signature>
<choiceName>OTermSeizedSpecificInfo</choiceName>
<asnChoiceName>oTermSeizedSpecificInfo</asnChoiceName>
<choiceTypeName>OTermSeizedSpecificInfo</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOSuspended</name>
<signature>void SetChoiceOSuspended(OSuspended* choice)</signature>
<choiceName>OSuspended</choiceName>
<asnChoiceName>oSuspended</asnChoiceName>
<choiceTypeName>OSuspended</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOSuspended</name>
<signature>void SetChoiceOSuspended(const OSuspended&amp; choice)</signature>
<choiceName>OSuspended</choiceName>
<asnChoiceName>oSuspended</asnChoiceName>
<choiceTypeName>OSuspended</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOSuspended</name>
<signature>const OSuspended&amp; GetChoiceOSuspended() const</signature>
<choiceName>OSuspended</choiceName>
<asnChoiceName>oSuspended</asnChoiceName>
<choiceTypeName>OSuspended</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOSuspended</name>
<signature>bool ChoiceOSuspended() const</signature>
<choiceName>OSuspended</choiceName>
<asnChoiceName>oSuspended</asnChoiceName>
<choiceTypeName>OSuspended</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTSuspended</name>
<signature>void SetChoiceTSuspended(TSuspended* choice)</signature>
<choiceName>TSuspended</choiceName>
<asnChoiceName>tSuspended</asnChoiceName>
<choiceTypeName>TSuspended</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTSuspended</name>
<signature>void SetChoiceTSuspended(const TSuspended&amp; choice)</signature>
<choiceName>TSuspended</choiceName>
<asnChoiceName>tSuspended</asnChoiceName>
<choiceTypeName>TSuspended</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTSuspended</name>
<signature>const TSuspended&amp; GetChoiceTSuspended() const</signature>
<choiceName>TSuspended</choiceName>
<asnChoiceName>tSuspended</asnChoiceName>
<choiceTypeName>TSuspended</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTSuspended</name>
<signature>bool ChoiceTSuspended() const</signature>
<choiceName>TSuspended</choiceName>
<asnChoiceName>tSuspended</asnChoiceName>
<choiceTypeName>TSuspended</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOrigAttemptAuthorized</name>
<signature>void SetChoiceOrigAttemptAuthorized(OrigAttemptAuthorized* choice)</signature>
<choiceName>OrigAttemptAuthorized</choiceName>
<asnChoiceName>origAttemptAuthorized</asnChoiceName>
<choiceTypeName>OrigAttemptAuthorized</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOrigAttemptAuthorized</name>
<signature>void SetChoiceOrigAttemptAuthorized(const OrigAttemptAuthorized&amp; choice)</signature>
<choiceName>OrigAttemptAuthorized</choiceName>
<asnChoiceName>origAttemptAuthorized</asnChoiceName>
<choiceTypeName>OrigAttemptAuthorized</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOrigAttemptAuthorized</name>
<signature>const OrigAttemptAuthorized&amp; GetChoiceOrigAttemptAuthorized() const</signature>
<choiceName>OrigAttemptAuthorized</choiceName>
<asnChoiceName>origAttemptAuthorized</asnChoiceName>
<choiceTypeName>OrigAttemptAuthorized</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOrigAttemptAuthorized</name>
<signature>bool ChoiceOrigAttemptAuthorized() const</signature>
<choiceName>OrigAttemptAuthorized</choiceName>
<asnChoiceName>origAttemptAuthorized</asnChoiceName>
<choiceTypeName>OrigAttemptAuthorized</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOReAnswer</name>
<signature>void SetChoiceOReAnswer(OReAnswer* choice)</signature>
<choiceName>OReAnswer</choiceName>
<asnChoiceName>oReAnswer</asnChoiceName>
<choiceTypeName>OReAnswer</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOReAnswer</name>
<signature>void SetChoiceOReAnswer(const OReAnswer&amp; choice)</signature>
<choiceName>OReAnswer</choiceName>
<asnChoiceName>oReAnswer</asnChoiceName>
<choiceTypeName>OReAnswer</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOReAnswer</name>
<signature>const OReAnswer&amp; GetChoiceOReAnswer() const</signature>
<choiceName>OReAnswer</choiceName>
<asnChoiceName>oReAnswer</asnChoiceName>
<choiceTypeName>OReAnswer</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOReAnswer</name>
<signature>bool ChoiceOReAnswer() const</signature>
<choiceName>OReAnswer</choiceName>
<asnChoiceName>oReAnswer</asnChoiceName>
<choiceTypeName>OReAnswer</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTReAnswer</name>
<signature>void SetChoiceTReAnswer(TReAnswer* choice)</signature>
<choiceName>TReAnswer</choiceName>
<asnChoiceName>tReAnswer</asnChoiceName>
<choiceTypeName>TReAnswer</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTReAnswer</name>
<signature>void SetChoiceTReAnswer(const TReAnswer&amp; choice)</signature>
<choiceName>TReAnswer</choiceName>
<asnChoiceName>tReAnswer</asnChoiceName>
<choiceTypeName>TReAnswer</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTReAnswer</name>
<signature>const TReAnswer&amp; GetChoiceTReAnswer() const</signature>
<choiceName>TReAnswer</choiceName>
<asnChoiceName>tReAnswer</asnChoiceName>
<choiceTypeName>TReAnswer</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTReAnswer</name>
<signature>bool ChoiceTReAnswer() const</signature>
<choiceName>TReAnswer</choiceName>
<asnChoiceName>tReAnswer</asnChoiceName>
<choiceTypeName>TReAnswer</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceFacilitySelectedAndAvailable</name>
<signature>void SetChoiceFacilitySelectedAndAvailable(FacilitySelectedAndAvailable* choice)</signature>
<choiceName>FacilitySelectedAndAvailable</choiceName>
<asnChoiceName>facilitySelectedAndAvailable</asnChoiceName>
<choiceTypeName>FacilitySelectedAndAvailable</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceFacilitySelectedAndAvailable</name>
<signature>void SetChoiceFacilitySelectedAndAvailable(const FacilitySelectedAndAvailable&amp; choice)</signature>
<choiceName>FacilitySelectedAndAvailable</choiceName>
<asnChoiceName>facilitySelectedAndAvailable</asnChoiceName>
<choiceTypeName>FacilitySelectedAndAvailable</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceFacilitySelectedAndAvailable</name>
<signature>const FacilitySelectedAndAvailable&amp; GetChoiceFacilitySelectedAndAvailable() const</signature>
<choiceName>FacilitySelectedAndAvailable</choiceName>
<asnChoiceName>facilitySelectedAndAvailable</asnChoiceName>
<choiceTypeName>FacilitySelectedAndAvailable</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceFacilitySelectedAndAvailable</name>
<signature>bool ChoiceFacilitySelectedAndAvailable() const</signature>
<choiceName>FacilitySelectedAndAvailable</choiceName>
<asnChoiceName>facilitySelectedAndAvailable</asnChoiceName>
<choiceTypeName>FacilitySelectedAndAvailable</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCallAccepted</name>
<signature>void SetChoiceCallAccepted(CallAccepted* choice)</signature>
<choiceName>CallAccepted</choiceName>
<asnChoiceName>callAccepted</asnChoiceName>
<choiceTypeName>CallAccepted</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCallAccepted</name>
<signature>void SetChoiceCallAccepted(const CallAccepted&amp; choice)</signature>
<choiceName>CallAccepted</choiceName>
<asnChoiceName>callAccepted</asnChoiceName>
<choiceTypeName>CallAccepted</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCallAccepted</name>
<signature>const CallAccepted&amp; GetChoiceCallAccepted() const</signature>
<choiceName>CallAccepted</choiceName>
<asnChoiceName>callAccepted</asnChoiceName>
<choiceTypeName>CallAccepted</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCallAccepted</name>
<signature>bool ChoiceCallAccepted() const</signature>
<choiceName>CallAccepted</choiceName>
<asnChoiceName>callAccepted</asnChoiceName>
<choiceTypeName>CallAccepted</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceOAbandon</name>
<signature>void SetChoiceOAbandon(OAbandon* choice)</signature>
<choiceName>OAbandon</choiceName>
<asnChoiceName>oAbandon</asnChoiceName>
<choiceTypeName>OAbandon</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceOAbandon</name>
<signature>void SetChoiceOAbandon(const OAbandon&amp; choice)</signature>
<choiceName>OAbandon</choiceName>
<asnChoiceName>oAbandon</asnChoiceName>
<choiceTypeName>OAbandon</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceOAbandon</name>
<signature>const OAbandon&amp; GetChoiceOAbandon() const</signature>
<choiceName>OAbandon</choiceName>
<asnChoiceName>oAbandon</asnChoiceName>
<choiceTypeName>OAbandon</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceOAbandon</name>
<signature>bool ChoiceOAbandon() const</signature>
<choiceName>OAbandon</choiceName>
<asnChoiceName>oAbandon</asnChoiceName>
<choiceTypeName>OAbandon</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceTAbandon</name>
<signature>void SetChoiceTAbandon(TAbandon* choice)</signature>
<choiceName>TAbandon</choiceName>
<asnChoiceName>tAbandon</asnChoiceName>
<choiceTypeName>TAbandon</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTAbandon</name>
<signature>void SetChoiceTAbandon(const TAbandon&amp; choice)</signature>
<choiceName>TAbandon</choiceName>
<asnChoiceName>tAbandon</asnChoiceName>
<choiceTypeName>TAbandon</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTAbandon</name>
<signature>const TAbandon&amp; GetChoiceTAbandon() const</signature>
<choiceName>TAbandon</choiceName>
<asnChoiceName>tAbandon</asnChoiceName>
<choiceTypeName>TAbandon</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTAbandon</name>
<signature>bool ChoiceTAbandon() const</signature>
<choiceName>TAbandon</choiceName>
<asnChoiceName>tAbandon</asnChoiceName>
<choiceTypeName>TAbandon</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- EventSpecificInformationBCSM information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>EventSpecificInformationBCSM ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    collectedInfoSpecificInfo [0] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        calledPartynumber [0] IMPLICIT CalledPartyNumber -- [linked] --</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    analysedInfoSpecificInfo [1] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        calledPartynumber [0] IMPLICIT CalledPartyNumber -- [linked] --</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    routeSelectFailureSpecificInfo [2] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        failureCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oCalledPartyBusySpecificInfo [3] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        busyCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oNoAnswerSpecificInfo [4] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oAnswerSpecificInfo [5] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        backwardGVNS [0] IMPLICIT BackwardGVNS -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oMidCallSpecificInfo [6] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        connectTime [0] IMPLICIT Integer4 -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        oMidCallInfo [1] IMPLICIT MidCallInfo -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oDisconnectSpecificInfo [7] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        releaseCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        connectTime [1] IMPLICIT Integer4 -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tBusySpecificInfo [8] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        busyCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tNoAnswerSpecificInfo [9] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tAnswerSpecificInfo [10] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tMidCallSpecificInfo [11] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        connectTime [0] IMPLICIT Integer4 -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        tMidCallInfo [1] IMPLICIT MidCallInfo -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tDisconnectSpecificInfo [12] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        releaseCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        connectTime [1] IMPLICIT Integer4 -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oTermSeizedSpecificInfo [13] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oSuspended [14] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tSuspended [15] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    origAttemptAuthorized [16] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oReAnswer [17] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tReAnswer [18] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    facilitySelectedAndAvailable [19] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    callAccepted [20] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    oAbandon [21] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        abandonCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    tAbandon [22] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        abandonCause [0] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

