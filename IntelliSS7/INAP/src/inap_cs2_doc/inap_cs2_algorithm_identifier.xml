<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>AlgorithmIdentifier</className>
<asnTypeName>AlgorithmIdentifier</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetAlgorithm</name>
<signature>void SetAlgorithm(Algorithm* element)</signature>
<elmentName>Algorithm</elmentName>
<asnElementName>algorithm</asnElementName>
<elementTypeName>Algorithm</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetAlgorithm</name>
<signature>void SetAlgorithm(const Algorithm&amp; element)</signature>
<elementName>Algorithm</elementName>
<asnElementName>algorithm</asnElementName>
<elementTypeName>Algorithm</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetAlgorithm</name>
<signature>const Algorithm&amp; GetAlgorithm() const</signature>
<elementName>Algorithm</elementName>
<asnElementName>algorithm</asnElementName>
<elementTypeName>Algorithm</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetParameters</name>
<signature>void SetParameters(Parameters* element)</signature>
<elmentName>Parameters</elmentName>
<asnElementName>parameters</asnElementName>
<elementTypeName>Parameters</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetParameters</name>
<signature>void SetParameters(const Parameters&amp; element)</signature>
<elementName>Parameters</elementName>
<asnElementName>parameters</asnElementName>
<elementTypeName>Parameters</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetParameters</name>
<signature>const Parameters&amp; GetParameters() const</signature>
<elementName>Parameters</elementName>
<asnElementName>parameters</asnElementName>
<elementTypeName>Parameters</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionParameters</name>
<signature>bool OptionParameters() const</signature>
<elementName>Parameters</elementName>
<asnElementName>parameters</asnElementName>
<elementTypeName>Parameters</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- AlgorithmIdentifier information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 3]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>AlgorithmIdentifier ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    algorithm OBJECT IDENTIFIER,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    parameters ANY DEFINED BY algorithm OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

