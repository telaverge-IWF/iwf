<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>InEntryInformation</className>
<asnTypeName>InEntryInformation</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetEntryName</name>
<signature>void SetEntryName(Name* element)</signature>
<elmentName>EntryName</elmentName>
<asnElementName>entryName</asnElementName>
<elementTypeName>Name</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetEntryName</name>
<signature>void SetEntryName(const Name&amp; element)</signature>
<elementName>EntryName</elementName>
<asnElementName>entryName</asnElementName>
<elementTypeName>Name</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetEntryName</name>
<signature>const Name&amp; GetEntryName() const</signature>
<elementName>EntryName</elementName>
<asnElementName>entryName</asnElementName>
<elementTypeName>Name</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetFromEntry</name>
<signature>void SetFromEntry(FromEntry* element)</signature>
<elmentName>FromEntry</elmentName>
<asnElementName>fromEntry</asnElementName>
<elementTypeName>FromEntry</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetFromEntry</name>
<signature>void SetFromEntry(const FromEntry&amp; element)</signature>
<elementName>FromEntry</elementName>
<asnElementName>fromEntry</asnElementName>
<elementTypeName>FromEntry</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetFromEntry</name>
<signature>const FromEntry&amp; GetFromEntry() const</signature>
<elementName>FromEntry</elementName>
<asnElementName>fromEntry</asnElementName>
<elementTypeName>FromEntry</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionFromEntry</name>
<signature>bool OptionFromEntry() const</signature>
<elementName>FromEntry</elementName>
<asnElementName>fromEntry</asnElementName>
<elementTypeName>FromEntry</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetInformation</name>
<signature>void SetInformation(Informations* element)</signature>
<elmentName>Information</elmentName>
<asnElementName>information</asnElementName>
<elementTypeName>Informations</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetInformation</name>
<signature>void SetInformation(const Informations&amp; element)</signature>
<elementName>Information</elementName>
<asnElementName>information</asnElementName>
<elementTypeName>Informations</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetInformation</name>
<signature>const Informations&amp; GetInformation() const</signature>
<elementName>Information</elementName>
<asnElementName>information</asnElementName>
<elementTypeName>Informations</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionInformation</name>
<signature>bool OptionInformation() const</signature>
<elementName>Information</elementName>
<asnElementName>information</asnElementName>
<elementTypeName>Informations</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- InEntryInformation information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>InEntryInformation ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    entryName Name -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    fromEntry BOOLEAN OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    information Informations -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

