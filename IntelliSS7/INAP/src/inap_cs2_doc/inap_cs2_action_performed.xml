<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnEnumerated>

<className>ActionPerformed</className>
<asnTypeName>ActionPerformed</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetActivated</name>
<signature>void SetActivated()</signature>
<enumItemName>activated</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsActivated</name>
<signature>bool IsActivated() const</signature>
<enumItemName>activated</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetDeactivated</name>
<signature>void SetDeactivated()</signature>
<enumItemName>deactivated</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsDeactivated</name>
<signature>bool IsDeactivated() const</signature>
<enumItemName>deactivated</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetAlreadyActive</name>
<signature>void SetAlreadyActive()</signature>
<enumItemName>alreadyActive</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsAlreadyActive</name>
<signature>bool IsAlreadyActive() const</signature>
<enumItemName>alreadyActive</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetAlreadyInactive</name>
<signature>void SetAlreadyInactive()</signature>
<enumItemName>alreadyInactive</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsAlreadyInactive</name>
<signature>bool IsAlreadyInactive() const</signature>
<enumItemName>alreadyInactive</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetIsActive</name>
<signature>void SetIsActive()</signature>
<enumItemName>isActive</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsIsActive</name>
<signature>bool IsIsActive() const</signature>
<enumItemName>isActive</enumItemName>
</memberFunctionIs>

<memberFunctionSet>
<name>SetIsInactive</name>
<signature>void SetIsInactive()</signature>
<enumItemName>isInactive</enumItemName>
</memberFunctionSet>

<memberFunctionIs>
<name>IsIsInactive</name>
<signature>bool IsIsInactive() const</signature>
<enumItemName>isInactive</enumItemName>
</memberFunctionIs>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ActionPerformed information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ActionPerformed ::= ENUMERATED</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    activated(1),</text>
<shift></shift>
</line>
<line>
<text>    deactivated(2),</text>
<shift></shift>
</line>
<line>
<text>    alreadyActive(3),</text>
<shift></shift>
</line>
<line>
<text>    alreadyInactive(4),</text>
<shift></shift>
</line>
<line>
<text>    isActive(5),</text>
<shift></shift>
</line>
<line>
<text>    isInactive(6)</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnEnumerated>

</asnType>

