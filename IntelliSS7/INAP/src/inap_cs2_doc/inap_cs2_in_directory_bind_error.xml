<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSet>

<className>InDirectoryBindError</className>
<asnTypeName>InDirectoryBindError</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetVersions</name>
<signature>void SetVersions(Versions* element)</signature>
<elmentName>Versions</elmentName>
<asnElementName>versions</asnElementName>
<elementTypeName>Versions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetVersions</name>
<signature>void SetVersions(const Versions&amp; element)</signature>
<elementName>Versions</elementName>
<asnElementName>versions</asnElementName>
<elementTypeName>Versions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetVersions</name>
<signature>const Versions&amp; GetVersions() const</signature>
<elementName>Versions</elementName>
<asnElementName>versions</asnElementName>
<elementTypeName>Versions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionVersions</name>
<signature>bool OptionVersions() const</signature>
<elementName>Versions</elementName>
<asnElementName>versions</asnElementName>
<elementTypeName>Versions</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetError</name>
<signature>void SetError(BindError* element)</signature>
<elmentName>Error</elmentName>
<asnElementName>error</asnElementName>
<elementTypeName>BindError</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetError</name>
<signature>void SetError(const BindError&amp; element)</signature>
<elementName>Error</elementName>
<asnElementName>error</asnElementName>
<elementTypeName>BindError</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetError</name>
<signature>const BindError&amp; GetError() const</signature>
<elementName>Error</elementName>
<asnElementName>error</asnElementName>
<elementTypeName>BindError</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- InDirectoryBindError information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>InDirectoryBindError ::= SET</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    versions [0] IMPLICIT Versions -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    error BindError -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSet>

</asnType>

