<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>AttributeErrorProblem</className>
<asnTypeName>AttributeErrorProblem</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetProblem</name>
<signature>void SetProblem(AttributeProblem* element)</signature>
<elmentName>Problem</elmentName>
<asnElementName>problem</asnElementName>
<elementTypeName>AttributeProblem</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetProblem</name>
<signature>void SetProblem(const AttributeProblem&amp; element)</signature>
<elementName>Problem</elementName>
<asnElementName>problem</asnElementName>
<elementTypeName>AttributeProblem</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetProblem</name>
<signature>const AttributeProblem&amp; GetProblem() const</signature>
<elementName>Problem</elementName>
<asnElementName>problem</asnElementName>
<elementTypeName>AttributeProblem</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetType</name>
<signature>void SetType(AttributeType* element)</signature>
<elmentName>Type</elmentName>
<asnElementName>type</asnElementName>
<elementTypeName>AttributeType</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetType</name>
<signature>void SetType(const AttributeType&amp; element)</signature>
<elementName>Type</elementName>
<asnElementName>type</asnElementName>
<elementTypeName>AttributeType</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetType</name>
<signature>const AttributeType&amp; GetType() const</signature>
<elementName>Type</elementName>
<asnElementName>type</asnElementName>
<elementTypeName>AttributeType</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetValue</name>
<signature>void SetValue(AttributeValue* element)</signature>
<elmentName>Value</elmentName>
<asnElementName>value</asnElementName>
<elementTypeName>AttributeValue</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetValue</name>
<signature>void SetValue(const AttributeValue&amp; element)</signature>
<elementName>Value</elementName>
<asnElementName>value</asnElementName>
<elementTypeName>AttributeValue</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetValue</name>
<signature>const AttributeValue&amp; GetValue() const</signature>
<elementName>Value</elementName>
<asnElementName>value</asnElementName>
<elementTypeName>AttributeValue</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionValue</name>
<signature>bool OptionValue() const</signature>
<elementName>Value</elementName>
<asnElementName>value</asnElementName>
<elementTypeName>AttributeValue</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- AttributeErrorProblem information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>AttributeErrorProblem ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    problem [0] IMPLICIT AttributeProblem -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    type [1] IMPLICIT AttributeType -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    value [2] IMPLICIT AttributeValue -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

