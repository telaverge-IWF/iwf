<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>TargetLineIdentifier</className>
<asnTypeName>TargetLineIdentifier</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceIndividual</name>
<signature>void SetChoiceIndividual(CalledPartyNumber* choice)</signature>
<choiceName>Individual</choiceName>
<asnChoiceName>individual</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceIndividual</name>
<signature>void SetChoiceIndividual(const CalledPartyNumber&amp; choice)</signature>
<choiceName>Individual</choiceName>
<asnChoiceName>individual</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceIndividual</name>
<signature>const CalledPartyNumber&amp; GetChoiceIndividual() const</signature>
<choiceName>Individual</choiceName>
<asnChoiceName>individual</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceIndividual</name>
<signature>bool ChoiceIndividual() const</signature>
<choiceName>Individual</choiceName>
<asnChoiceName>individual</asnChoiceName>
<choiceTypeName>CalledPartyNumber</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceGroup</name>
<signature>void SetChoiceGroup(FacilityGroup* choice)</signature>
<choiceName>Group</choiceName>
<asnChoiceName>group</asnChoiceName>
<choiceTypeName>FacilityGroup</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceGroup</name>
<signature>void SetChoiceGroup(const FacilityGroup&amp; choice)</signature>
<choiceName>Group</choiceName>
<asnChoiceName>group</asnChoiceName>
<choiceTypeName>FacilityGroup</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceGroup</name>
<signature>const FacilityGroup&amp; GetChoiceGroup() const</signature>
<choiceName>Group</choiceName>
<asnChoiceName>group</asnChoiceName>
<choiceTypeName>FacilityGroup</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceGroup</name>
<signature>bool ChoiceGroup() const</signature>
<choiceName>Group</choiceName>
<asnChoiceName>group</asnChoiceName>
<choiceTypeName>FacilityGroup</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- TargetLineIdentifier information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>TargetLineIdentifier ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    individual [0] IMPLICIT CalledPartyNumber -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    group [1] IMPLICIT FacilityGroup -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

