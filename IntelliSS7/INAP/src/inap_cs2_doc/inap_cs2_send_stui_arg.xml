<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>SendSTUIArg</className>
<asnTypeName>SendSTUIArg</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetUSIServiceIndicator</name>
<signature>void SetUSIServiceIndicator(USIServiceIndicator* element)</signature>
<elmentName>USIServiceIndicator</elmentName>
<asnElementName>uSIServiceIndicator</asnElementName>
<elementTypeName>USIServiceIndicator</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetUSIServiceIndicator</name>
<signature>void SetUSIServiceIndicator(const USIServiceIndicator&amp; element)</signature>
<elementName>USIServiceIndicator</elementName>
<asnElementName>uSIServiceIndicator</asnElementName>
<elementTypeName>USIServiceIndicator</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetUSIServiceIndicator</name>
<signature>const USIServiceIndicator&amp; GetUSIServiceIndicator() const</signature>
<elementName>USIServiceIndicator</elementName>
<asnElementName>uSIServiceIndicator</asnElementName>
<elementTypeName>USIServiceIndicator</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetLegID</name>
<signature>void SetLegID(LegID* element)</signature>
<elmentName>LegID</elmentName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLegID</name>
<signature>void SetLegID(const LegID&amp; element)</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLegID</name>
<signature>const LegID&amp; GetLegID() const</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetUSIInformation</name>
<signature>void SetUSIInformation(USIInformation* element)</signature>
<elmentName>USIInformation</elmentName>
<asnElementName>uSIInformation</asnElementName>
<elementTypeName>USIInformation</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetUSIInformation</name>
<signature>void SetUSIInformation(const USIInformation&amp; element)</signature>
<elementName>USIInformation</elementName>
<asnElementName>uSIInformation</asnElementName>
<elementTypeName>USIInformation</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetUSIInformation</name>
<signature>const USIInformation&amp; GetUSIInformation() const</signature>
<elementName>USIInformation</elementName>
<asnElementName>uSIInformation</asnElementName>
<elementTypeName>USIInformation</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetExtensions</name>
<signature>void SetExtensions(Extensions* element)</signature>
<elmentName>Extensions</elmentName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetExtensions</name>
<signature>void SetExtensions(const Extensions&amp; element)</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetExtensions</name>
<signature>const Extensions&amp; GetExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionExtensions</name>
<signature>bool OptionExtensions() const</signature>
<elementName>Extensions</elementName>
<asnElementName>extensions</asnElementName>
<elementTypeName>Extensions</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- SendSTUIArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>SendSTUIArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    uSIServiceIndicator [0] IMPLICIT USIServiceIndicator -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    legID [1] IMPLICIT LegID -- [linked] -- DEFAULT ,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    uSIInformation [2] IMPLICIT USIInformation -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [3] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

