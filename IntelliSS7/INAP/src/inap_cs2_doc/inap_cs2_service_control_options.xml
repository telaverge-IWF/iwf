<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnBitString>

<className>ServiceControlOptions</className>
<asnTypeName>ServiceControlOptions</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetCountFamily</name>
<signature>void SetCountFamily()</signature>
<bitName>CountFamily</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetCountFamily</name>
<signature>void ResetCountFamily()</signature>
<bitName>CountFamily</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsCountFamilySet</name>
<signature>bool IsCountFamilySet() const</signature>
<bitName>CountFamily</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsCountFamilyDefined</name>
<signature>bool IsCountFamilyDefined() const</signature>
<bitName>CountFamily</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetNoSubtypeSelection</name>
<signature>void SetNoSubtypeSelection()</signature>
<bitName>NoSubtypeSelection</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetNoSubtypeSelection</name>
<signature>void ResetNoSubtypeSelection()</signature>
<bitName>NoSubtypeSelection</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsNoSubtypeSelectionSet</name>
<signature>bool IsNoSubtypeSelectionSet() const</signature>
<bitName>NoSubtypeSelection</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsNoSubtypeSelectionDefined</name>
<signature>bool IsNoSubtypeSelectionDefined() const</signature>
<bitName>NoSubtypeSelection</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetNoSubtypeMatch</name>
<signature>void SetNoSubtypeMatch()</signature>
<bitName>NoSubtypeMatch</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetNoSubtypeMatch</name>
<signature>void ResetNoSubtypeMatch()</signature>
<bitName>NoSubtypeMatch</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsNoSubtypeMatchSet</name>
<signature>bool IsNoSubtypeMatchSet() const</signature>
<bitName>NoSubtypeMatch</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsNoSubtypeMatchDefined</name>
<signature>bool IsNoSubtypeMatchDefined() const</signature>
<bitName>NoSubtypeMatch</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetManageDSAIT</name>
<signature>void SetManageDSAIT()</signature>
<bitName>ManageDSAIT</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetManageDSAIT</name>
<signature>void ResetManageDSAIT()</signature>
<bitName>ManageDSAIT</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsManageDSAITSet</name>
<signature>bool IsManageDSAITSet() const</signature>
<bitName>ManageDSAIT</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsManageDSAITDefined</name>
<signature>bool IsManageDSAITDefined() const</signature>
<bitName>ManageDSAIT</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetPartialNameResolution</name>
<signature>void SetPartialNameResolution()</signature>
<bitName>PartialNameResolution</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetPartialNameResolution</name>
<signature>void ResetPartialNameResolution()</signature>
<bitName>PartialNameResolution</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsPartialNameResolutionSet</name>
<signature>bool IsPartialNameResolutionSet() const</signature>
<bitName>PartialNameResolution</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsPartialNameResolutionDefined</name>
<signature>bool IsPartialNameResolutionDefined() const</signature>
<bitName>PartialNameResolution</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetCopyShallDo</name>
<signature>void SetCopyShallDo()</signature>
<bitName>CopyShallDo</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetCopyShallDo</name>
<signature>void ResetCopyShallDo()</signature>
<bitName>CopyShallDo</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsCopyShallDoSet</name>
<signature>bool IsCopyShallDoSet() const</signature>
<bitName>CopyShallDo</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsCopyShallDoDefined</name>
<signature>bool IsCopyShallDoDefined() const</signature>
<bitName>CopyShallDo</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetSubentries</name>
<signature>void SetSubentries()</signature>
<bitName>Subentries</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetSubentries</name>
<signature>void ResetSubentries()</signature>
<bitName>Subentries</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsSubentriesSet</name>
<signature>bool IsSubentriesSet() const</signature>
<bitName>Subentries</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsSubentriesDefined</name>
<signature>bool IsSubentriesDefined() const</signature>
<bitName>Subentries</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetDontDereferenceAliases</name>
<signature>void SetDontDereferenceAliases()</signature>
<bitName>DontDereferenceAliases</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetDontDereferenceAliases</name>
<signature>void ResetDontDereferenceAliases()</signature>
<bitName>DontDereferenceAliases</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsDontDereferenceAliasesSet</name>
<signature>bool IsDontDereferenceAliasesSet() const</signature>
<bitName>DontDereferenceAliases</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsDontDereferenceAliasesDefined</name>
<signature>bool IsDontDereferenceAliasesDefined() const</signature>
<bitName>DontDereferenceAliases</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetDontUseCopy</name>
<signature>void SetDontUseCopy()</signature>
<bitName>DontUseCopy</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetDontUseCopy</name>
<signature>void ResetDontUseCopy()</signature>
<bitName>DontUseCopy</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsDontUseCopySet</name>
<signature>bool IsDontUseCopySet() const</signature>
<bitName>DontUseCopy</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsDontUseCopyDefined</name>
<signature>bool IsDontUseCopyDefined() const</signature>
<bitName>DontUseCopy</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetLocalScope</name>
<signature>void SetLocalScope()</signature>
<bitName>LocalScope</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetLocalScope</name>
<signature>void ResetLocalScope()</signature>
<bitName>LocalScope</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsLocalScopeSet</name>
<signature>bool IsLocalScopeSet() const</signature>
<bitName>LocalScope</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsLocalScopeDefined</name>
<signature>bool IsLocalScopeDefined() const</signature>
<bitName>LocalScope</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetChainingProhibited</name>
<signature>void SetChainingProhibited()</signature>
<bitName>ChainingProhibited</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetChainingProhibited</name>
<signature>void ResetChainingProhibited()</signature>
<bitName>ChainingProhibited</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsChainingProhibitedSet</name>
<signature>bool IsChainingProhibitedSet() const</signature>
<bitName>ChainingProhibited</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsChainingProhibitedDefined</name>
<signature>bool IsChainingProhibitedDefined() const</signature>
<bitName>ChainingProhibited</bitName>
</memberFunctionIsDefined>

<memberFunctionSet>
<name>SetPreferChaining</name>
<signature>void SetPreferChaining()</signature>
<bitName>PreferChaining</bitName>
</memberFunctionSet>

<memberFunctionReset>
<name>ResetPreferChaining</name>
<signature>void ResetPreferChaining()</signature>
<bitName>PreferChaining</bitName>
</memberFunctionReset>

<memberFunctionIsSet>
<name>IsPreferChainingSet</name>
<signature>bool IsPreferChainingSet() const</signature>
<bitName>PreferChaining</bitName>
</memberFunctionIsSet>

<memberFunctionIsDefined>
<name>IsPreferChainingDefined</name>
<signature>bool IsPreferChainingDefined() const</signature>
<bitName>PreferChaining</bitName>
</memberFunctionIsDefined>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- ServiceControlOptions information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>ServiceControlOptions ::= BIT STRING</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    countFamily(11),</text>
<shift></shift>
</line>
<line>
<text>    noSubtypeSelection(10),</text>
<shift></shift>
</line>
<line>
<text>    noSubtypeMatch(9),</text>
<shift></shift>
</line>
<line>
<text>    manageDSAIT(8),</text>
<shift></shift>
</line>
<line>
<text>    partialNameResolution(7),</text>
<shift></shift>
</line>
<line>
<text>    copyShallDo(6),</text>
<shift></shift>
</line>
<line>
<text>    subentries(5),</text>
<shift></shift>
</line>
<line>
<text>    dontDereferenceAliases(4),</text>
<shift></shift>
</line>
<line>
<text>    dontUseCopy(3),</text>
<shift></shift>
</line>
<line>
<text>    localScope(2),</text>
<shift></shift>
</line>
<line>
<text>    chainingProhibited(1),</text>
<shift></shift>
</line>
<line>
<text>    preferChaining(0)</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnBitString>

</asnType>

