<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>Entry</className>
<asnTypeName>Entry</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceAgreements</name>
<signature>void SetChoiceAgreements(Agreements* choice)</signature>
<choiceName>Agreements</choiceName>
<asnChoiceName>agreements</asnChoiceName>
<choiceTypeName>Agreements</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceAgreements</name>
<signature>void SetChoiceAgreements(const Agreements&amp; choice)</signature>
<choiceName>Agreements</choiceName>
<asnChoiceName>agreements</asnChoiceName>
<choiceTypeName>Agreements</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceAgreements</name>
<signature>const Agreements&amp; GetChoiceAgreements() const</signature>
<choiceName>Agreements</choiceName>
<asnChoiceName>agreements</asnChoiceName>
<choiceTypeName>Agreements</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceAgreements</name>
<signature>bool ChoiceAgreements() const</signature>
<choiceName>Agreements</choiceName>
<asnChoiceName>agreements</asnChoiceName>
<choiceTypeName>Agreements</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceNetworkSpecific</name>
<signature>void SetChoiceNetworkSpecific(Integer4* choice)</signature>
<choiceName>NetworkSpecific</choiceName>
<asnChoiceName>networkSpecific</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceNetworkSpecific</name>
<signature>void SetChoiceNetworkSpecific(const Integer4&amp; choice)</signature>
<choiceName>NetworkSpecific</choiceName>
<asnChoiceName>networkSpecific</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceNetworkSpecific</name>
<signature>const Integer4&amp; GetChoiceNetworkSpecific() const</signature>
<choiceName>NetworkSpecific</choiceName>
<asnChoiceName>networkSpecific</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceNetworkSpecific</name>
<signature>bool ChoiceNetworkSpecific() const</signature>
<choiceName>NetworkSpecific</choiceName>
<asnChoiceName>networkSpecific</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- Entry information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>Entry ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    agreements [0] IMPLICIT OBJECT IDENTIFIER,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    networkSpecific [1] IMPLICIT Integer4 -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

