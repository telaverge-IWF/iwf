<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnSequence>

<className>EntityReleasedArg::BCSMFailure</className>
<asnTypeName>EntityReleasedArg::bCSMFailure</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSet>
<name>SetLegID</name>
<signature>void SetLegID(LegID* element)</signature>
<elmentName>LegID</elmentName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetLegID</name>
<signature>void SetLegID(const LegID&amp; element)</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetLegID</name>
<signature>const LegID&amp; GetLegID() const</signature>
<elementName>LegID</elementName>
<asnElementName>legID</asnElementName>
<elementTypeName>LegID</elementTypeName>
<optional>no</optional>
</memberFunctionGet>

<memberFunctionSet>
<name>SetReason</name>
<signature>void SetReason(Reason* element)</signature>
<elmentName>Reason</elmentName>
<asnElementName>reason</asnElementName>
<elementTypeName>Reason</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetReason</name>
<signature>void SetReason(const Reason&amp; element)</signature>
<elementName>Reason</elementName>
<asnElementName>reason</asnElementName>
<elementTypeName>Reason</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetReason</name>
<signature>const Reason&amp; GetReason() const</signature>
<elementName>Reason</elementName>
<asnElementName>reason</asnElementName>
<elementTypeName>Reason</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionReason</name>
<signature>bool OptionReason() const</signature>
<elementName>Reason</elementName>
<asnElementName>reason</asnElementName>
<elementTypeName>Reason</elementTypeName>
</memberFunctionOption>

<memberFunctionSet>
<name>SetCause</name>
<signature>void SetCause(Cause* element)</signature>
<elmentName>Cause</elmentName>
<asnElementName>cause</asnElementName>
<elementTypeName>Cause</elementTypeName>
<optional>yes</optional>
</memberFunctionSet>

<memberFunctionSetWithRef>
<name>SetCause</name>
<signature>void SetCause(const Cause&amp; element)</signature>
<elementName>Cause</elementName>
<asnElementName>cause</asnElementName>
<elementTypeName>Cause</elementTypeName>
<optional>yes</optional>
</memberFunctionSetWithRef>

<memberFunctionGet>
<name>GetCause</name>
<signature>const Cause&amp; GetCause() const</signature>
<elementName>Cause</elementName>
<asnElementName>cause</asnElementName>
<elementTypeName>Cause</elementTypeName>
<optional>yes</optional>
</memberFunctionGet>

<memberFunctionOption>
<name>OptionCause</name>
<signature>bool OptionCause() const</signature>
<elementName>Cause</elementName>
<asnElementName>cause</asnElementName>
<elementTypeName>Cause</elementTypeName>
</memberFunctionOption>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- EntityReleasedArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>EntityReleasedArg ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    cSFailure [0] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        callSegmentID [0] IMPLICIT CallSegmentID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        reason [1] IMPLICIT Reason -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        cause [2] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    bCSMFailure [1] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        legID [0] IMPLICIT LegID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        reason [1] IMPLICIT Reason -- [linked] -- OPTIONAL,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        cause [2] IMPLICIT Cause -- [linked] -- OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnSequence>

</asnType>

