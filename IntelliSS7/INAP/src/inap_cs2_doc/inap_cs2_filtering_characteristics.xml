<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>FilteringCharacteristics</className>
<asnTypeName>FilteringCharacteristics</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceInterval</name>
<signature>void SetChoiceInterval(Interval* choice)</signature>
<choiceName>Interval</choiceName>
<asnChoiceName>interval</asnChoiceName>
<choiceTypeName>Interval</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceInterval</name>
<signature>void SetChoiceInterval(const Interval&amp; choice)</signature>
<choiceName>Interval</choiceName>
<asnChoiceName>interval</asnChoiceName>
<choiceTypeName>Interval</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceInterval</name>
<signature>const Interval&amp; GetChoiceInterval() const</signature>
<choiceName>Interval</choiceName>
<asnChoiceName>interval</asnChoiceName>
<choiceTypeName>Interval</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceInterval</name>
<signature>bool ChoiceInterval() const</signature>
<choiceName>Interval</choiceName>
<asnChoiceName>interval</asnChoiceName>
<choiceTypeName>Interval</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceNumberOfCalls</name>
<signature>void SetChoiceNumberOfCalls(Integer4* choice)</signature>
<choiceName>NumberOfCalls</choiceName>
<asnChoiceName>numberOfCalls</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceNumberOfCalls</name>
<signature>void SetChoiceNumberOfCalls(const Integer4&amp; choice)</signature>
<choiceName>NumberOfCalls</choiceName>
<asnChoiceName>numberOfCalls</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceNumberOfCalls</name>
<signature>const Integer4&amp; GetChoiceNumberOfCalls() const</signature>
<choiceName>NumberOfCalls</choiceName>
<asnChoiceName>numberOfCalls</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceNumberOfCalls</name>
<signature>bool ChoiceNumberOfCalls() const</signature>
<choiceName>NumberOfCalls</choiceName>
<asnChoiceName>numberOfCalls</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- FilteringCharacteristics information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 1]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>FilteringCharacteristics ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    interval [0] IMPLICIT INTEGER  ,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    numberOfCalls [1] IMPLICIT Integer4 -- [linked] --</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

