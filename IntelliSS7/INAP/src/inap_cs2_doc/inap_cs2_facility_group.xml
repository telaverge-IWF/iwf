<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>FacilityGroup</className>
<asnTypeName>FacilityGroup</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceTrunkGroupID</name>
<signature>void SetChoiceTrunkGroupID(TrunkGroupID* choice)</signature>
<choiceName>TrunkGroupID</choiceName>
<asnChoiceName>trunkGroupID</asnChoiceName>
<choiceTypeName>TrunkGroupID</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceTrunkGroupID</name>
<signature>void SetChoiceTrunkGroupID(const TrunkGroupID&amp; choice)</signature>
<choiceName>TrunkGroupID</choiceName>
<asnChoiceName>trunkGroupID</asnChoiceName>
<choiceTypeName>TrunkGroupID</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceTrunkGroupID</name>
<signature>const TrunkGroupID&amp; GetChoiceTrunkGroupID() const</signature>
<choiceName>TrunkGroupID</choiceName>
<asnChoiceName>trunkGroupID</asnChoiceName>
<choiceTypeName>TrunkGroupID</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceTrunkGroupID</name>
<signature>bool ChoiceTrunkGroupID() const</signature>
<choiceName>TrunkGroupID</choiceName>
<asnChoiceName>trunkGroupID</asnChoiceName>
<choiceTypeName>TrunkGroupID</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoicePrivateFacilityID</name>
<signature>void SetChoicePrivateFacilityID(PrivateFacilityID* choice)</signature>
<choiceName>PrivateFacilityID</choiceName>
<asnChoiceName>privateFacilityID</asnChoiceName>
<choiceTypeName>PrivateFacilityID</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoicePrivateFacilityID</name>
<signature>void SetChoicePrivateFacilityID(const PrivateFacilityID&amp; choice)</signature>
<choiceName>PrivateFacilityID</choiceName>
<asnChoiceName>privateFacilityID</asnChoiceName>
<choiceTypeName>PrivateFacilityID</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoicePrivateFacilityID</name>
<signature>const PrivateFacilityID&amp; GetChoicePrivateFacilityID() const</signature>
<choiceName>PrivateFacilityID</choiceName>
<asnChoiceName>privateFacilityID</asnChoiceName>
<choiceTypeName>PrivateFacilityID</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoicePrivateFacilityID</name>
<signature>bool ChoicePrivateFacilityID() const</signature>
<choiceName>PrivateFacilityID</choiceName>
<asnChoiceName>privateFacilityID</asnChoiceName>
<choiceTypeName>PrivateFacilityID</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceHuntGroup</name>
<signature>void SetChoiceHuntGroup(HuntGroup* choice)</signature>
<choiceName>HuntGroup</choiceName>
<asnChoiceName>huntGroup</asnChoiceName>
<choiceTypeName>HuntGroup</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceHuntGroup</name>
<signature>void SetChoiceHuntGroup(const HuntGroup&amp; choice)</signature>
<choiceName>HuntGroup</choiceName>
<asnChoiceName>huntGroup</asnChoiceName>
<choiceTypeName>HuntGroup</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceHuntGroup</name>
<signature>const HuntGroup&amp; GetChoiceHuntGroup() const</signature>
<choiceName>HuntGroup</choiceName>
<asnChoiceName>huntGroup</asnChoiceName>
<choiceTypeName>HuntGroup</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceHuntGroup</name>
<signature>bool ChoiceHuntGroup() const</signature>
<choiceName>HuntGroup</choiceName>
<asnChoiceName>huntGroup</asnChoiceName>
<choiceTypeName>HuntGroup</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceRouteIndex</name>
<signature>void SetChoiceRouteIndex(RouteIndex* choice)</signature>
<choiceName>RouteIndex</choiceName>
<asnChoiceName>routeIndex</asnChoiceName>
<choiceTypeName>RouteIndex</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceRouteIndex</name>
<signature>void SetChoiceRouteIndex(const RouteIndex&amp; choice)</signature>
<choiceName>RouteIndex</choiceName>
<asnChoiceName>routeIndex</asnChoiceName>
<choiceTypeName>RouteIndex</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceRouteIndex</name>
<signature>const RouteIndex&amp; GetChoiceRouteIndex() const</signature>
<choiceName>RouteIndex</choiceName>
<asnChoiceName>routeIndex</asnChoiceName>
<choiceTypeName>RouteIndex</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceRouteIndex</name>
<signature>bool ChoiceRouteIndex() const</signature>
<choiceName>RouteIndex</choiceName>
<asnChoiceName>routeIndex</asnChoiceName>
<choiceTypeName>RouteIndex</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- FacilityGroup information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 16]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>FacilityGroup ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    trunkGroupID [0] IMPLICIT INTEGER,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    privateFacilityID [1] IMPLICIT INTEGER,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    huntGroup [2] IMPLICIT OCTET STRING,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    routeIndex [3] IMPLICIT OCTET STRING</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

