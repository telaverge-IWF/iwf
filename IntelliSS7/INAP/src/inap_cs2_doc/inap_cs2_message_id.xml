<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>MessageID</className>
<asnTypeName>MessageID</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceElementaryMessageID</name>
<signature>void SetChoiceElementaryMessageID(Integer4* choice)</signature>
<choiceName>ElementaryMessageID</choiceName>
<asnChoiceName>elementaryMessageID</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceElementaryMessageID</name>
<signature>void SetChoiceElementaryMessageID(const Integer4&amp; choice)</signature>
<choiceName>ElementaryMessageID</choiceName>
<asnChoiceName>elementaryMessageID</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceElementaryMessageID</name>
<signature>const Integer4&amp; GetChoiceElementaryMessageID() const</signature>
<choiceName>ElementaryMessageID</choiceName>
<asnChoiceName>elementaryMessageID</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceElementaryMessageID</name>
<signature>bool ChoiceElementaryMessageID() const</signature>
<choiceName>ElementaryMessageID</choiceName>
<asnChoiceName>elementaryMessageID</asnChoiceName>
<choiceTypeName>Integer4</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceText</name>
<signature>void SetChoiceText(Text* choice)</signature>
<choiceName>Text</choiceName>
<asnChoiceName>text</asnChoiceName>
<choiceTypeName>Text</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceText</name>
<signature>void SetChoiceText(const Text&amp; choice)</signature>
<choiceName>Text</choiceName>
<asnChoiceName>text</asnChoiceName>
<choiceTypeName>Text</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceText</name>
<signature>const Text&amp; GetChoiceText() const</signature>
<choiceName>Text</choiceName>
<asnChoiceName>text</asnChoiceName>
<choiceTypeName>Text</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceText</name>
<signature>bool ChoiceText() const</signature>
<choiceName>Text</choiceName>
<asnChoiceName>text</asnChoiceName>
<choiceTypeName>Text</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceElementaryMessageIDs</name>
<signature>void SetChoiceElementaryMessageIDs(ElementaryMessageIDs* choice)</signature>
<choiceName>ElementaryMessageIDs</choiceName>
<asnChoiceName>elementaryMessageIDs</asnChoiceName>
<choiceTypeName>ElementaryMessageIDs</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceElementaryMessageIDs</name>
<signature>void SetChoiceElementaryMessageIDs(const ElementaryMessageIDs&amp; choice)</signature>
<choiceName>ElementaryMessageIDs</choiceName>
<asnChoiceName>elementaryMessageIDs</asnChoiceName>
<choiceTypeName>ElementaryMessageIDs</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceElementaryMessageIDs</name>
<signature>const ElementaryMessageIDs&amp; GetChoiceElementaryMessageIDs() const</signature>
<choiceName>ElementaryMessageIDs</choiceName>
<asnChoiceName>elementaryMessageIDs</asnChoiceName>
<choiceTypeName>ElementaryMessageIDs</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceElementaryMessageIDs</name>
<signature>bool ChoiceElementaryMessageIDs() const</signature>
<choiceName>ElementaryMessageIDs</choiceName>
<asnChoiceName>elementaryMessageIDs</asnChoiceName>
<choiceTypeName>ElementaryMessageIDs</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceVariableMessage</name>
<signature>void SetChoiceVariableMessage(VariableMessage* choice)</signature>
<choiceName>VariableMessage</choiceName>
<asnChoiceName>variableMessage</asnChoiceName>
<choiceTypeName>VariableMessage</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceVariableMessage</name>
<signature>void SetChoiceVariableMessage(const VariableMessage&amp; choice)</signature>
<choiceName>VariableMessage</choiceName>
<asnChoiceName>variableMessage</asnChoiceName>
<choiceTypeName>VariableMessage</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceVariableMessage</name>
<signature>const VariableMessage&amp; GetChoiceVariableMessage() const</signature>
<choiceName>VariableMessage</choiceName>
<asnChoiceName>variableMessage</asnChoiceName>
<choiceTypeName>VariableMessage</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceVariableMessage</name>
<signature>bool ChoiceVariableMessage() const</signature>
<choiceName>VariableMessage</choiceName>
<asnChoiceName>variableMessage</asnChoiceName>
<choiceTypeName>VariableMessage</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- MessageID information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 2]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>MessageID ::= CHOICE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    elementaryMessageID [0] IMPLICIT Integer4 -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    text [1] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        messageContent [0] IMPLICIT IA5String -- [linked] -- (SIZE(minMessageContentLength -- [linked] --..maxMessageContentLength -- [linked] --)) ,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        attributes [1] IMPLICIT OCTET STRING (SIZE(minAttributesLength -- [linked] --..maxAttributesLength -- [linked] --))  OPTIONAL</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    },</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    elementaryMessageIDs [29] IMPLICIT SEQUENCE (SIZE(1..numOfMessageIDs -- [linked] --)) OF Integer4 -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    variableMessage [30] IMPLICIT SEQUENCE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        elementaryMessageID [0] IMPLICIT Integer4 -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        variableParts [1] IMPLICIT SEQUENCE (SIZE(1..5)) OF VariablePart -- [linked] --</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    }</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

