<?xml version="1.0"?>


<!--                                                                         -->
<!-- Generated by IntelliAsnCC ASN.1 compiler (C, C++, Java).                -->
<!--                                                                         -->
<!-- Do not edit!                                                            -->
<!--                                                                         -->
<!--                                                                         -->
<!-- (C) 2000, 2001 IntelliNet Technologies Inc. All Rights Reserved.        -->
<!--                                                                         -->
<!--                                                                         -->


<asnType>

<asnChoice>

<className>PlayAnnouncementArg::ConnectedParty</className>
<asnTypeName>PlayAnnouncementArg::connectedParty</asnTypeName>
<moduleName>INAP_CS2</moduleName>


<memberFunctions>

<memberFunctionSetChoice>
<name>SetChoiceLegID</name>
<signature>void SetChoiceLegID(LegID* choice)</signature>
<choiceName>LegID</choiceName>
<asnChoiceName>legID</asnChoiceName>
<choiceTypeName>LegID</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceLegID</name>
<signature>void SetChoiceLegID(const LegID&amp; choice)</signature>
<choiceName>LegID</choiceName>
<asnChoiceName>legID</asnChoiceName>
<choiceTypeName>LegID</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceLegID</name>
<signature>const LegID&amp; GetChoiceLegID() const</signature>
<choiceName>LegID</choiceName>
<asnChoiceName>legID</asnChoiceName>
<choiceTypeName>LegID</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceLegID</name>
<signature>bool ChoiceLegID() const</signature>
<choiceName>LegID</choiceName>
<asnChoiceName>legID</asnChoiceName>
<choiceTypeName>LegID</choiceTypeName>
</memberFunctionChoice>

<memberFunctionSetChoice>
<name>SetChoiceCallSegmentID</name>
<signature>void SetChoiceCallSegmentID(CallSegmentID* choice)</signature>
<choiceName>CallSegmentID</choiceName>
<asnChoiceName>callSegmentID</asnChoiceName>
<choiceTypeName>CallSegmentID</choiceTypeName>
</memberFunctionSetChoice>

<memberFunctionSetChoiceWithRef>
<name>SetChoiceCallSegmentID</name>
<signature>void SetChoiceCallSegmentID(const CallSegmentID&amp; choice)</signature>
<choiceName>CallSegmentID</choiceName>
<asnChoiceName>callSegmentID</asnChoiceName>
<choiceTypeName>CallSegmentID</choiceTypeName>
</memberFunctionSetChoiceWithRef>

<memberFunctionGetChoice>
<name>GetChoiceCallSegmentID</name>
<signature>const CallSegmentID&amp; GetChoiceCallSegmentID() const</signature>
<choiceName>CallSegmentID</choiceName>
<asnChoiceName>callSegmentID</asnChoiceName>
<choiceTypeName>CallSegmentID</choiceTypeName>
</memberFunctionGetChoice>

<memberFunctionChoice>
<name>ChoiceCallSegmentID</name>
<signature>bool ChoiceCallSegmentID() const</signature>
<choiceName>CallSegmentID</choiceName>
<asnChoiceName>callSegmentID</asnChoiceName>
<choiceTypeName>CallSegmentID</choiceTypeName>
</memberFunctionChoice>

</memberFunctions>



<asnDefinition>

<line>
<text></text>
</line>
<line>
<text>-- PlayAnnouncementArg information: </text>
</line>
<line>
<text>-- [not recursive]</text>
</line>
<line>
<text>-- [not exported]</text>
</line>
<line>
<text>-- [local reference counter = 0]</text>
</line>
<line>
<text>-- [import reference counter = 0]</text>
</line>
<line>
<text></text>
</line>
<line>
<text>PlayAnnouncementArg ::= SEQUENCE</text>
</line>
<line>
<text>{</text>
</line>
<line>
<text>    informationToSend [0] IMPLICIT InformationToSend -- [linked] --,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    disconnectFromIPForbidden [1] IMPLICIT BOOLEAN DEFAULT TRUE,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    requestAnnouncementComplete [2] IMPLICIT BOOLEAN DEFAULT TRUE,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    extensions [3] IMPLICIT SEQUENCE (SIZE(1..numOfExtensions -- [linked] --)) OF ExtensionField -- [linked] -- OPTIONAL,</text>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>    connectedParty CHOICE</text>
<shift></shift>
</line>
<line>
<text>    {</text>
<shift></shift>
</line>
<line>
<text>        legID [4] IMPLICIT LegID -- [linked] --,</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text></text>
</line>
<line>
<text>        callSegmentID [5] IMPLICIT CallSegmentID -- [linked] --</text>
<shift></shift>
<shift></shift>
</line>
<line>
<text>    } OPTIONAL</text>
<shift></shift>
</line>
<line>
<text>}</text>
</line>
<line>
<text></text>
</line>
<line>
<text></text>
</line>

</asnDefinition>



</asnChoice>

</asnType>

