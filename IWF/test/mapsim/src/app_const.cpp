/*********************************-*-C-*-************************************
 *                                                                          *
 *     Copyright 2011 IntelliNet Technologies, Inc. All Rights Reserved.    *
 *             Manufactured in the United States of America.                *
 *       1990 W. New Haven Ste. 312, Melbourne, Florida, 32904 U.S.A.       *
 *                                                                          *
 *   This product and related documentation is protected by copyright and   *
 *   distributed under licenses restricting its use, copying, distribution  *
 *   and decompilation.  No part of this product or related documentation   *
 *   may be reproduced in any form by any means without prior written       *
 *   authorization of IntelliNet Technologies and its licensors, if any.    *
 *                                                                          *
 *   RESTRICTED RIGHTS LEGEND:  Use, duplication, or disclosure by the      *
 *   government is subject to restrictions as set forth in subparagraph     *
 *   (c)(1)(ii) of the Rights in Technical Data and Computer Software       *
 *   clause at DFARS 252.227-7013 and FAR 52.227-19.                        *
 *                                                                          *
 ****************************************************************************
 *                                                                          *
 * CONTRACT: INTERNAL                                                       *
 *                                                                          *
 ****************************************************************************
 *
 * LOG: $Log: app_const.cpp,v $
 * LOG: Revision 1.1.2.2  2013/03/18 09:43:53  jvikas
 * LOG: mapsim changes.
 * LOG:
 * LOG: Revision 1.1.2.1  2013/02/12 14:09:19  jvikas
 * LOG: Map Simulator Changes for IWF
 * LOG:
 * LOG: Revision 1.1.1.1  2013/01/09 16:41:37  brajappa
 * LOG: Initial import
 * LOG:
 * LOG: Revision 1.1.2.1  2012/12/28 13:45:14  lakshman
 * LOG: checkin first version of MAP test along with CAP.
 * LOG:
 * LOG: Revision 1.1.1.1  2011/04/13 08:12:31  nvijikumar
 * LOG: Initial Draft for SSG
 * LOG:
 * LOG:
 *
 ****************************************************************************/
#ident "$Id: app_const.cpp,v 1.1.2.2 2013/03/18 09:43:53 jvikas Exp $"

#include <app_const.h>
#include <string.h>
#include <iostream>
#include <app_trace.h>


using namespace std;

ITS_UINT itstest::opc      = 1;

ITS_UINT itstest::dpc      = 2;

ITS_UINT itstest::apc      = 0;

ITS_USHORT itstest::ossn   = 5;

ITS_USHORT itstest::dssn   = 5;

char* itstest::oE164 = "1234567890";

char* itstest::dE164 = "9876543210";

ITS_UINT itstest::borderMask = 0;

ITS_INT itstest::isSender = 0;

ITS_INT itstest::numThreads = 1;

bool itstest::noISD = false;

ITS_INT itstest::numMsgs = 0;

ITS_INT itstest::oE164_len   = 10;

ITS_INT itstest::dE164_len   = 10;

ITS_BOOLEAN itstest::routeType = ITS_TRUE;

ITS_BOOLEAN itstest::interactive = ITS_TRUE;

time_t itstest::startTime;

time_t itstest::stopTime;

int itstest::msgCount = 0;

bool itstest::enableTrace = 0;

ITS_OCTET itstest::AC_NAME[] = {0x01,0x02,0x03,0x04,0x05,0x06,0x07};

ITS_OCTET itstest::USER_INFO[] =
                         {0x28,0x17,0x06,0x07,0x04,0x00,0x00,0x01,0x01,0x01,0x01,
                          0xa0,0x0c,0xa0,0x0a,0x80,0x03,0x12,0x34,0x56,0x81,0x03,
                          0x78,0x90,0x55};

//GSMMAP encoded bytes for Location ARG,
//Subscriber Arg messages.
ITS_OCTET itstest::LocationArg[] = { 0x30,0x1c,0x04,0x08,0x62,0x08,0x61,0x09,
                                     0x00,0x00,0x20,0xf8,0x81,0x07,0x91,0x53,
                                     0x91,0x11,0x53,0x29,0x00,0x04,0x07,0x91,
                                     0x53,0x91,0x11,0x53,0x29,0x00 };

ITS_OCTET itstest::SubscribeArg[] =
                         { 0x30,0x80,0x81,0x07,0x91,0x51,0x41,0x99,0x56,0x45,0xf3,0x82,
                           0x01,0x02,0x83,0x01,0x01,0xa6,0x06,0x04,0x01,0x11,0x04,0x01,
                           0x21,0xa7,0x80,0xa0,0x80,0x04,0x01,0x21,0x30,0x80,0x30,0x06,
                           0x83,0x01,0x10,0x84,0x01,0x04,0x00,0x00,0x00,0x00,0xa0,0x80,
                           0x04,0x01,0x29,0x30,0x80,0x30,0x12,0x83,0x01,0x10,0x84,0x01,
                           0x07,0x85,0x07,0x91,0x51,0x41,0x99,0x12,0x21,0xf3,0x86,0x01,
                           0x04,0x00,0x00,0x00,0x00,0xa0,0x80,0x04,0x01,0x2a,0x30,0x80,
                           0x30,0x15,0x83,0x01,0x10,0x84,0x01,0x07,0x85,0x07,0x91,0x51,
                           0x41,0x99,0x12,0x21,0xf3,0x86,0x01,0x08,0x87,0x01,0x0f,0x00,
                           0x00,0x00,0x00,0xa0,0x80,0x04,0x01,0x2b,0x30,0x80,0x30,0x12,
                           0x83,0x01,0x10,0x84,0x01,0x07,0x85,0x07,0x91,0x51,0x41,0x99,
                           0x12,0x21,0xf3,0x86,0x01,0x00,0x00,0x00,0x00,0x00,0x00,0x00 };

ITS_OCTET itstest::octs185[] =
        {0x30,0x81,0xB4,0x30,0x22,0x04,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
         0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x04,0x04,0xFF,0xFE,0xFD,0xFC,0x04,0x08,0xFB,
         0xFA,0xF9,0xF8,0xF7,0xF6,0xF5,0xF4,0x30,0x22,0x04,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,
         0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x04,0x04,0xFF,0xFE,0xFD,
         0xFC,0x04,0x08,0xFB,0xFA,0xF9,0xF8,0xF7,0xF6,0xF5,0xF4,0x30,0x22,0x04,0x10,0xFF,
         0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x04,
         0x04,0xFF,0xFE,0xFD,0xFC,0x04,0x08,0xFB,0xFA,0xF9,0xF8,0xF7,0xF6,0xF5,0xF4,0x30,
         0x22,0x04,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
         0xFF,0xFF,0xFF,0x04,0x04,0xFF,0xFE,0xFD,0xFC,0x04,0x08,0xFB,0xFA,0xF9,0xF8,0xF7,
         0xF6,0xF5,0xF4,0x30,0x22,0x04,0x10,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,
         0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0xFF,0x04,0x04,0xFF,0xFE,0xFD,0xFC,0x04,0x08,0xFB,
         0xFA,0xF9,0xF8,0xF7,0xF6,0xF5,0xF4};

ApplicationMode itstest::appMode = UNIT_TEST;


ITS_INT
itstest::PrintMenu()
{
   ITS_INT val=0;

   if ( itstest::appMode == UNIT_TEST)
   {
       while(val < 1 || val >7 )
       {
           cout << endl;
           cout << "===> 1 - Initiate Transaction - TC_Uni.    <===\n";
           cout << "===> 2 - Initiate Transaction - TC_Begin.    <===\n";
           cout << "===> 3 - Close Transaction - TC_End.         <===\n";
           cout << "===> 4 - Continue Transaction - TC_Continue. <===\n";
           cout << "===> 5 - Abort Transaction - TC_Abort.       <===\n";
           cout << "===> 6 - Dump RT                             <===\n";
           cout << "===> 7 - Pre Arranged End                    <===\n";
           cout << "===> 99 - Exit                              <===\n";
           cin >> val;

           if ( val == 99)
           {
               exit(0);
           }
       }
   }
   else if ( itstest::appMode == LOAD_TEST)
   {
        val = SEND_LOOP;
   }
   return val;

}
